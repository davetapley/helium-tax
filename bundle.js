(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
const tax = require('./tax')

const form = document.querySelector("form");
const progress = document.querySelector("#progress");
const warning = document.querySelector("#warning");

form.addEventListener("submit", event => {
  event.preventDefault();

  gtag('event', 'submit')

  const hotspots = new Set()
  const validators = new Set()
  let transactionCount = 0
  let hntSum = 0
  let usdSum = 0
  const progressCB = ({ address, hnt, usd, isValidator }) => {
    if (isValidator) {
      validators.add(address)
    } else {
      hotspots.add(address)
    }
    transactionCount += 1
    hntSum += hnt
    usdSum += usd
    const hotspotCount = (hotspots.size > 1) ? `${hotspots.size} hotspots / ` : ""
    const validatorsCount = (validators.size > 1) ? `${validators.size} validators / ` : ""
    progress.innerHTML = hotspotCount + validatorsCount + `${transactionCount} transactions / ${hntSum.toFixed(0)} HNT / $${usdSum.toFixed(2)} income`
  }

  const warningCB = (kind, message) => {
    const li = document.createElement("li");
    li.innerHTML = message
    gtag('event', kind)
    warning.appendChild(li)
  }

  const address = form.elements.address.value;

  if(!/^\w+$/.test(address)) {
    warningCB('bad_address', 'Use address and not name <a target="_blank" href="https://gist.github.com/davetapley/723f2d266f17561c9b2fbc70993fb6ba">More info here.</a>')
    return
  }

  const year = form.elements.year.value;
  tax(address, year, progressCB, warningCB).then((rows) => {
    if(rows.length === 0) {
        warningCB('no_rows', `No rewards during ${year}`)
        return
    }

    gtag('event', 'success')
    progress.innerHTML += ' ✅'

    const header = `${Object.keys(rows[0]).join(',')}\n`
    const values = rows.reverse().map((row) => `${Object.values(row).join(',')}\n`)
    const csv = [header].concat(values)
    var a = window.document.createElement('a');
    a.style.display = 'none';
    a.href = window.URL.createObjectURL(new Blob(csv, { type: 'text/csv' }));
    a.download = `${address}.csv`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
  }).finally(() => {
    progress.classList.add('done')
  })
  progress.classList.add('active')
})


},{"./tax":128}],2:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("./utils");
const KeyTypes_1 = require("./KeyTypes");
const NetTypes_1 = require("./NetTypes");
class Address {
    constructor(version, netType, keyType, publicKey) {
        if (version !== 0) {
            throw new Error('unsupported version');
        }
        if (!NetTypes_1.SUPPORTED_NET_TYPES.includes(netType)) {
            throw new Error('unsupported net type');
        }
        if (!KeyTypes_1.SUPPORTED_KEY_TYPES.includes(keyType)) {
            throw new Error('unsupported key type');
        }
        this.version = version;
        this.netType = netType;
        this.keyType = keyType;
        this.publicKey = publicKey;
    }
    get bin() {
        return Buffer.concat([
            // eslint-disable-next-line no-bitwise
            Buffer.from([this.netType | this.keyType]),
            Buffer.from(this.publicKey),
        ]);
    }
    get b58() {
        return utils_1.bs58CheckEncode(this.version, this.bin);
    }
    static fromB58(b58) {
        const version = utils_1.bs58Version(b58);
        const netType = utils_1.bs58NetType(b58);
        const keyType = utils_1.bs58KeyType(b58);
        const publicKey = utils_1.bs58PublicKey(b58);
        return new Address(version, netType, keyType, publicKey);
    }
    static fromBin(bin) {
        const version = 0;
        const byte = bin[0];
        const netType = utils_1.byteToNetType(byte);
        const keyType = utils_1.byteToKeyType(byte);
        const publicKey = bin.slice(1, bin.length);
        return new Address(version, netType, keyType, publicKey);
    }
    static isValid(b58) {
        try {
            Address.fromB58(b58);
            return true;
        }
        catch (error) {
            return false;
        }
    }
}
exports.default = Address;

}).call(this)}).call(this,require("buffer").Buffer)
},{"./KeyTypes":3,"./NetTypes":4,"./utils":6,"buffer":91}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SUPPORTED_KEY_TYPES = exports.ED25519_KEY_TYPE = exports.ECC_COMPACT_KEY_TYPE = void 0;
exports.ECC_COMPACT_KEY_TYPE = 0;
exports.ED25519_KEY_TYPE = 1;
exports.SUPPORTED_KEY_TYPES = [
    exports.ECC_COMPACT_KEY_TYPE,
    exports.ED25519_KEY_TYPE,
];

},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SUPPORTED_NET_TYPES = exports.TESTNET = exports.MAINNET = void 0;
exports.MAINNET = 0x00;
exports.TESTNET = 0x10;
exports.SUPPORTED_NET_TYPES = [
    exports.MAINNET,
    exports.TESTNET,
];

},{}],5:[function(require,module,exports){
"use strict";
/**
 * [[include:address/README.md]]
 * @packageDocumentation
 * @module address
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.utils = exports.KeyTypes = exports.NetTypes = exports.default = void 0;
var Address_1 = require("./Address");
Object.defineProperty(exports, "default", { enumerable: true, get: function () { return __importDefault(Address_1).default; } });
exports.NetTypes = __importStar(require("./NetTypes"));
exports.KeyTypes = __importStar(require("./KeyTypes"));
exports.utils = __importStar(require("./utils"));

},{"./Address":2,"./KeyTypes":3,"./NetTypes":4,"./utils":6}],6:[function(require,module,exports){
(function (Buffer){(function (){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.bs58PublicKey = exports.bs58Version = exports.bs58KeyType = exports.bs58NetType = exports.byteToKeyType = exports.byteToNetType = exports.bs58ToBin = exports.bs58CheckEncode = void 0;
/* eslint-disable no-bitwise */
const js_sha256_1 = require("js-sha256");
const bs58_1 = __importDefault(require("bs58"));
const bs58CheckEncode = (version, binary) => {
    const vPayload = Buffer.concat([
        Buffer.from([version]),
        binary,
    ]);
    const checksum = js_sha256_1.sha256(Buffer.from(js_sha256_1.sha256(vPayload), 'hex'));
    const checksumBytes = Buffer.alloc(4, checksum, 'hex');
    const result = Buffer.concat([
        vPayload,
        checksumBytes,
    ]);
    return bs58_1.default.encode(result);
};
exports.bs58CheckEncode = bs58CheckEncode;
const bs58ToBin = (bs58Address) => {
    const bin = bs58_1.default.decode(bs58Address);
    const vPayload = bin.slice(0, -4);
    const payload = bin.slice(1, -4);
    const checksum = bin.slice(-4);
    const checksumVerify = js_sha256_1.sha256(Buffer.from(js_sha256_1.sha256(vPayload), 'hex'));
    const checksumVerifyBytes = Buffer.alloc(4, checksumVerify, 'hex');
    if (!checksumVerifyBytes.equals(checksum)) {
        throw new Error('invalid checksum');
    }
    return Buffer.from(payload);
};
exports.bs58ToBin = bs58ToBin;
const byteToNetType = (byte) => byte & 0xf0;
exports.byteToNetType = byteToNetType;
const byteToKeyType = (byte) => byte & 0x0f;
exports.byteToKeyType = byteToKeyType;
const bs58NetType = (bs58Address) => {
    const bin = exports.bs58ToBin(bs58Address);
    const byte = Buffer.from(bin).slice(0, 1)[0];
    return exports.byteToNetType(byte);
};
exports.bs58NetType = bs58NetType;
const bs58KeyType = (bs58Address) => {
    const bin = exports.bs58ToBin(bs58Address);
    const byte = Buffer.from(bin).slice(0, 1)[0];
    return exports.byteToKeyType(byte);
};
exports.bs58KeyType = bs58KeyType;
const bs58Version = (bs58Address) => {
    const bin = bs58_1.default.decode(bs58Address);
    const version = bin.slice(0, 1)[0];
    return version;
};
exports.bs58Version = bs58Version;
const bs58PublicKey = (bs58Address) => {
    const bin = exports.bs58ToBin(bs58Address);
    const publicKey = Buffer.from(bin).slice(1);
    return publicKey;
};
exports.bs58PublicKey = bs58PublicKey;

}).call(this)}).call(this,require("buffer").Buffer)
},{"bs58":90,"buffer":91,"js-sha256":104}],7:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const bignumber_js_1 = __importDefault(require("bignumber.js"));
const CurrencyType_1 = __importDefault(require("./CurrencyType"));
const currency_types_1 = require("./currency_types");
const Errors_1 = require("./Errors");
const FORMAT = {
    decimalSeparator: '.',
    groupSeparator: ',',
    groupSize: 3,
    secondaryGroupSize: 0,
    fractionGroupSeparator: ' ',
    fractionGroupSize: 0,
};
bignumber_js_1.default.config({
    EXPONENTIAL_AT: [-10, 20],
    FORMAT,
});
const DC_TO_USD_MULTIPLIER = 0.00001;
class Balance {
    constructor(integerBalance, type) {
        this.type = type;
        this.integerBalance = integerBalance || 0;
        this.bigInteger = new bignumber_js_1.default(this.integerBalance);
        this.bigBalance = this.bigInteger.times(type.coefficient);
        this.floatBalance = this.bigBalance.toNumber();
    }
    static fromFloat(float, currencyType) {
        const bigFloat = new bignumber_js_1.default(float);
        const integerBalance = bigFloat.dividedBy(currencyType.coefficient).toNumber();
        return new Balance(integerBalance, currencyType);
    }
    toString(maxDecimalPlaces, options) {
        const decimalSeparator = (options === null || options === void 0 ? void 0 : options.decimalSeparator) || '.';
        const groupSeparator = (options === null || options === void 0 ? void 0 : options.groupSeparator) || ',';
        const showTicker = (options === null || options === void 0 ? void 0 : options.showTicker) === undefined ? true : options.showTicker;
        let numberString = maxDecimalPlaces !== undefined && maxDecimalPlaces !== null
            ? this.bigBalance.toFormat(maxDecimalPlaces, { decimalSeparator, groupSeparator, groupSize: 3 })
            : this.bigBalance.toFormat({ decimalSeparator, groupSeparator, groupSize: 3 });
        // if it's an integer, just show the integer
        if (parseInt(numberString.split(decimalSeparator)[1], 10) === 0) {
            [numberString] = numberString.split(decimalSeparator);
        }
        // if the rounded amount is 0, then show the full amount
        if (numberString === '0') {
            numberString = this.bigBalance.toFormat({ decimalSeparator, groupSeparator });
        }
        return showTicker ? [numberString, this.type.ticker].join(' ') : numberString;
    }
    plus(balance) {
        if (this.type.ticker !== balance.type.ticker)
            throw Errors_1.MixedCurrencyTypeError;
        return new Balance(this.bigInteger.plus(balance.bigInteger).toNumber(), this.type);
    }
    minus(balance) {
        if (this.type.ticker !== balance.type.ticker)
            throw Errors_1.MixedCurrencyTypeError;
        return new Balance(this.bigInteger.minus(balance.bigInteger).toNumber(), this.type);
    }
    times(n) {
        return new Balance(this.bigInteger.times(n).toNumber(), this.type);
    }
    dividedBy(n) {
        return new Balance(this.bigInteger.dividedBy(n).toNumber(), this.type);
    }
    toNetworkTokens(oraclePrice) {
        if (this.type instanceof currency_types_1.NetworkTokens)
            return this;
        if (!oraclePrice)
            throw Errors_1.OraclePriceRequiredError;
        return new Balance(this.toUsd()
            .bigBalance.dividedBy(oraclePrice.bigBalance)
            .dividedBy(CurrencyType_1.default.networkToken.coefficient)
            .toNumber(), CurrencyType_1.default.networkToken);
    }
    toTestNetworkTokens(oraclePrice) {
        if (this.type instanceof currency_types_1.TestNetworkTokens)
            return this;
        if (!oraclePrice)
            throw Errors_1.OraclePriceRequiredError;
        return new Balance(this.toUsd()
            .bigBalance.dividedBy(oraclePrice.bigBalance)
            .dividedBy(CurrencyType_1.default.testNetworkToken.coefficient)
            .toNumber(), CurrencyType_1.default.testNetworkToken);
    }
    toUsd(oraclePrice) {
        if (this.type instanceof currency_types_1.USDollars)
            return this;
        if (this.type instanceof currency_types_1.DataCredits) {
            return new Balance(this.bigBalance
                .times(DC_TO_USD_MULTIPLIER)
                .dividedBy(CurrencyType_1.default.usd.coefficient)
                .toNumber(), CurrencyType_1.default.usd);
        }
        if (this.type instanceof currency_types_1.NetworkTokens) {
            if (!oraclePrice)
                throw Errors_1.OraclePriceRequiredError;
            return new Balance(this.bigBalance
                .times(oraclePrice.bigBalance)
                .dividedBy(CurrencyType_1.default.usd.coefficient)
                .toNumber(), CurrencyType_1.default.usd);
        }
        throw Errors_1.UnsupportedCurrencyConversionError;
    }
    toDataCredits(oraclePrice) {
        if (this.type instanceof currency_types_1.DataCredits)
            return this;
        if (this.type instanceof currency_types_1.USDollars) {
            return new Balance(this.bigBalance.dividedBy(DC_TO_USD_MULTIPLIER).toNumber(), CurrencyType_1.default.dataCredit);
        }
        if (this.type instanceof currency_types_1.NetworkTokens) {
            if (!oraclePrice)
                throw Errors_1.OraclePriceRequiredError;
            return this.toUsd(oraclePrice).toDataCredits();
        }
        throw Errors_1.UnsupportedCurrencyConversionError;
    }
}
exports.default = Balance;

},{"./CurrencyType":8,"./Errors":9,"./currency_types":16,"bignumber.js":88}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const currency_types_1 = require("./currency_types");
class CurrencyType {
    static get default() {
        return new currency_types_1.NetworkTokens();
    }
    static get networkToken() {
        return new currency_types_1.NetworkTokens();
    }
    static get testNetworkToken() {
        return new currency_types_1.TestNetworkTokens();
    }
    static get dataCredit() {
        return new currency_types_1.DataCredits();
    }
    static get security() {
        return new currency_types_1.SecurityTokens();
    }
    static get usd() {
        return new currency_types_1.USDollars();
    }
}
exports.default = CurrencyType;

},{"./currency_types":16}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OraclePriceRequiredError = exports.UnsupportedCurrencyConversionError = exports.MixedCurrencyTypeError = void 0;
exports.MixedCurrencyTypeError = new Error('Arguments provided to arithmetic functions must be of the same currency type.');
exports.UnsupportedCurrencyConversionError = new Error('This currency does not support this type of conversion');
exports.OraclePriceRequiredError = new Error('This conversion requires an oracle price to compute.');

},{}],10:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const bignumber_js_1 = __importDefault(require("bignumber.js"));
function makeCoefficient(decimalPlaces) {
    const one = new bignumber_js_1.default(1);
    const ten = new bignumber_js_1.default(10);
    return one.dividedBy(ten.exponentiatedBy(decimalPlaces));
}
class BaseCurrencyType {
    constructor(ticker, decimalPlaces) {
        this.ticker = ticker;
        this.decimalPlaces = new bignumber_js_1.default(decimalPlaces);
        this.coefficient = makeCoefficient(this.decimalPlaces);
    }
}
exports.default = BaseCurrencyType;

},{"bignumber.js":88}],11:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const BaseCurrencyType_1 = __importDefault(require("./BaseCurrencyType"));
const TICKER = 'DC';
class DataCredits extends BaseCurrencyType_1.default {
    constructor() {
        super(TICKER, 0);
    }
}
exports.default = DataCredits;

},{"./BaseCurrencyType":10}],12:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const BaseCurrencyType_1 = __importDefault(require("./BaseCurrencyType"));
const TICKER = 'HNT';
class NetworkTokens extends BaseCurrencyType_1.default {
    constructor() {
        super(TICKER, 8);
    }
}
exports.default = NetworkTokens;

},{"./BaseCurrencyType":10}],13:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const BaseCurrencyType_1 = __importDefault(require("./BaseCurrencyType"));
const TICKER = 'HST';
class SecurityTokens extends BaseCurrencyType_1.default {
    constructor() {
        super(TICKER, 8);
    }
}
exports.default = SecurityTokens;

},{"./BaseCurrencyType":10}],14:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const BaseCurrencyType_1 = __importDefault(require("./BaseCurrencyType"));
const TICKER = 'TNT';
class TestNetworkTokens extends BaseCurrencyType_1.default {
    constructor() {
        super(TICKER, 8);
    }
}
exports.default = TestNetworkTokens;

},{"./BaseCurrencyType":10}],15:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const BaseCurrencyType_1 = __importDefault(require("./BaseCurrencyType"));
const TICKER = 'USD';
class USDollars extends BaseCurrencyType_1.default {
    // N.B. on the Helium blockchain, USD is represented
    // with 8 decimal places
    constructor() {
        super(TICKER, 8);
    }
}
exports.default = USDollars;

},{"./BaseCurrencyType":10}],16:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseCurrencyType = exports.USDollars = exports.DataCredits = exports.SecurityTokens = exports.TestNetworkTokens = exports.NetworkTokens = void 0;
var NetworkTokens_1 = require("./NetworkTokens");
Object.defineProperty(exports, "NetworkTokens", { enumerable: true, get: function () { return __importDefault(NetworkTokens_1).default; } });
var TestNetworkTokens_1 = require("./TestNetworkTokens");
Object.defineProperty(exports, "TestNetworkTokens", { enumerable: true, get: function () { return __importDefault(TestNetworkTokens_1).default; } });
var SecurityTokens_1 = require("./SecurityTokens");
Object.defineProperty(exports, "SecurityTokens", { enumerable: true, get: function () { return __importDefault(SecurityTokens_1).default; } });
var DataCredits_1 = require("./DataCredits");
Object.defineProperty(exports, "DataCredits", { enumerable: true, get: function () { return __importDefault(DataCredits_1).default; } });
var USDollars_1 = require("./USDollars");
Object.defineProperty(exports, "USDollars", { enumerable: true, get: function () { return __importDefault(USDollars_1).default; } });
var BaseCurrencyType_1 = require("./BaseCurrencyType");
Object.defineProperty(exports, "BaseCurrencyType", { enumerable: true, get: function () { return __importDefault(BaseCurrencyType_1).default; } });

},{"./BaseCurrencyType":10,"./DataCredits":11,"./NetworkTokens":12,"./SecurityTokens":13,"./TestNetworkTokens":14,"./USDollars":15}],17:[function(require,module,exports){
"use strict";
/**
 * [[include:currency/README.md]]
 * @packageDocumentation
 * @module currency
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = exports.USDollars = exports.SecurityTokens = exports.DataCredits = exports.TestNetworkTokens = exports.NetworkTokens = exports.CurrencyType = exports.Balance = void 0;
var Balance_1 = require("./Balance");
Object.defineProperty(exports, "Balance", { enumerable: true, get: function () { return __importDefault(Balance_1).default; } });
var CurrencyType_1 = require("./CurrencyType");
Object.defineProperty(exports, "CurrencyType", { enumerable: true, get: function () { return __importDefault(CurrencyType_1).default; } });
var currency_types_1 = require("./currency_types");
Object.defineProperty(exports, "NetworkTokens", { enumerable: true, get: function () { return currency_types_1.NetworkTokens; } });
Object.defineProperty(exports, "TestNetworkTokens", { enumerable: true, get: function () { return currency_types_1.TestNetworkTokens; } });
Object.defineProperty(exports, "DataCredits", { enumerable: true, get: function () { return currency_types_1.DataCredits; } });
Object.defineProperty(exports, "SecurityTokens", { enumerable: true, get: function () { return currency_types_1.SecurityTokens; } });
Object.defineProperty(exports, "USDollars", { enumerable: true, get: function () { return currency_types_1.USDollars; } });
var Balance_2 = require("./Balance");
Object.defineProperty(exports, "default", { enumerable: true, get: function () { return __importDefault(Balance_2).default; } });

},{"./Balance":7,"./CurrencyType":8,"./currency_types":16}],18:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
const rax = __importStar(require("retry-axios"));
const qs_1 = __importDefault(require("qs"));
const Network_1 = __importDefault(require("./Network"));
const Transactions_1 = __importDefault(require("./resources/Transactions"));
const Blocks_1 = __importDefault(require("./resources/Blocks"));
const Accounts_1 = __importDefault(require("./resources/Accounts"));
const Hotspots_1 = __importDefault(require("./resources/Hotspots"));
const Challenges_1 = __importDefault(require("./resources/Challenges"));
const Stats_1 = __importDefault(require("./resources/Stats"));
const Vars_1 = __importDefault(require("./resources/Vars"));
const Oracle_1 = __importDefault(require("./resources/Oracle"));
const PendingTransactions_1 = __importDefault(require("./resources/PendingTransactions"));
const Elections_1 = __importDefault(require("./resources/Elections"));
const Cities_1 = __importDefault(require("./resources/Cities"));
const Validators_1 = __importDefault(require("./resources/Validators"));
const StateChannels_1 = __importDefault(require("./resources/StateChannels"));
const Rewards_1 = __importDefault(require("./resources/Rewards"));
const Locations_1 = __importDefault(require("./resources/Locations"));
class Client {
    constructor(network = Network_1.default.production, options) {
        this.network = network;
        this.axios = axios_1.default.create({
            baseURL: this.network.endpoint,
            headers: options === null || options === void 0 ? void 0 : options.headers,
        });
        this.name = options === null || options === void 0 ? void 0 : options.name;
        this.userAgent = options === null || options === void 0 ? void 0 : options.userAgent;
        this.retry = (options === null || options === void 0 ? void 0 : options.retry) === undefined ? 5 : options === null || options === void 0 ? void 0 : options.retry;
        if (this.retry > 0) {
            this.axios.defaults.raxConfig = {
                instance: this.axios,
                retry: this.retry,
                noResponseRetries: this.retry,
            };
            rax.attach(this.axios);
        }
    }
    get accounts() {
        return new Accounts_1.default(this);
    }
    get account() {
        return this.accounts.fromAddress.bind(this.accounts);
    }
    get blocks() {
        return new Blocks_1.default(this);
    }
    get block() {
        return this.blocks.fromHeightOrHash.bind(this.blocks);
    }
    get transactions() {
        return new Transactions_1.default(this);
    }
    get hotspots() {
        return new Hotspots_1.default(this);
    }
    get validators() {
        return new Validators_1.default(this);
    }
    get elections() {
        return new Elections_1.default(this);
    }
    get hotspot() {
        return this.hotspots.fromAddress.bind(this.hotspots);
    }
    get validator() {
        return this.validators.fromAddress.bind(this.validators);
    }
    get challenges() {
        return new Challenges_1.default(this);
    }
    get stateChannels() {
        return new StateChannels_1.default(this);
    }
    get pendingTransactions() {
        return new PendingTransactions_1.default(this);
    }
    get stats() {
        return new Stats_1.default(this);
    }
    get vars() {
        return new Vars_1.default(this);
    }
    get oracle() {
        return new Oracle_1.default(this);
    }
    get cities() {
        return new Cities_1.default(this);
    }
    get city() {
        return this.cities.fromId.bind(this.cities);
    }
    get rewards() {
        return new Rewards_1.default(this);
    }
    get locations() {
        return new Locations_1.default(this);
    }
    get clientOptions() {
        const opts = { headers: {} };
        if (this.name) {
            opts.headers['x-client-name'] = this.name;
        }
        if (this.userAgent) {
            opts.headers['User-Agent'] = this.userAgent;
        }
        const hasHeaders = Object.keys(opts.headers).length > 0;
        return hasHeaders ? opts : undefined;
    }
    async get(path, params = {}) {
        const query = qs_1.default.stringify(params);
        const url = query.length > 0 ? [path, query].join('?') : path;
        return this.axios.get(url, this.clientOptions);
    }
    async post(path, params = {}) {
        return this.axios.post(path, params, this.clientOptions);
    }
}
exports.default = Client;

},{"./Network":19,"./resources/Accounts":38,"./resources/Blocks":39,"./resources/Challenges":40,"./resources/Cities":41,"./resources/Elections":42,"./resources/Hotspots":43,"./resources/Locations":44,"./resources/Oracle":45,"./resources/PendingTransactions":46,"./resources/Rewards":47,"./resources/StateChannels":49,"./resources/Stats":50,"./resources/Transactions":52,"./resources/Validators":53,"./resources/Vars":54,"axios":57,"qs":115,"retry-axios":120}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Network {
    constructor({ baseURL, version }) {
        this.baseURL = baseURL;
        this.version = version;
    }
    get endpoint() {
        return [this.baseURL, `v${this.version}`].join('/');
    }
}
exports.default = Network;
Network.production = new Network({
    baseURL: 'https://api.helium.io',
    version: 1,
});
Network.staging = new Network({
    baseURL: 'https://api.helium.wtf',
    version: 1,
});
Network.testnet = new Network({
    baseURL: 'https://testnet-api.helium.wtf',
    version: 1,
});
Network.stakejoy = new Network({
    baseURL: 'https://helium-api.stakejoy.com',
    version: 1,
});

},{}],20:[function(require,module,exports){
"use strict";
var __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }
var __asyncValues = (this && this.__asyncValues) || function (o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
};
var __asyncDelegator = (this && this.__asyncDelegator) || function (o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
};
var __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
};
Object.defineProperty(exports, "__esModule", { value: true });
class ResourceList {
    constructor(data, fetchMore, cursor) {
        this.data = data;
        this.fetchMore = fetchMore;
        this.cursor = cursor;
    }
    async nextPage() {
        if (!this.fetchMore) {
            throw new Error('fetchMore is undefined');
        }
        return this.fetchMore({ cursor: this.cursor });
    }
    get hasMore() {
        return !!this.cursor && !!this.fetchMore;
    }
    [Symbol.asyncIterator]() {
        return __asyncGenerator(this, arguments, function* _a() {
            for (const item of this.data) {
                yield yield __await(item);
            }
            if (!this.fetchMore || !this.cursor)
                return yield __await(void 0);
            yield __await(yield* __asyncDelegator(__asyncValues(yield __await(this.fetchMore({ cursor: this.cursor })))));
        });
    }
    async take(count) {
        if (!this.takeIterator) {
            this.takeIterator = this[Symbol.asyncIterator]();
        }
        const values = [];
        while (values.length < count) {
            const { value, done } = await this.takeIterator.next();
            if (value !== undefined)
                values.push(value);
            if (done)
                return values;
        }
        return values;
    }
    takeReset() {
        this.takeIterator = undefined;
    }
    async takeJSON(count) {
        const values = await this.take(count);
        return values.map((d) => d.data);
    }
}
exports.default = ResourceList;

},{}],21:[function(require,module,exports){
"use strict";
/**
 * [[include:http/README.md]]
 * @packageDocumentation
 * @module http
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenericDataModel = exports.UnknownTransaction = exports.TransferValidatorStakeV1 = exports.UnstakeValidatorV1 = exports.StakeValidatorV1 = exports.TokenBurnV1 = exports.TransferHotspotV2 = exports.TransferHotspotV1 = exports.AssertLocationV2 = exports.AssertLocationV1 = exports.AddGatewayV1 = exports.RewardsV2 = exports.RewardsV1 = exports.PaymentV2 = exports.PaymentV1 = exports.ResourceList = exports.Network = exports.default = exports.Client = void 0;
var Client_1 = require("./Client");
Object.defineProperty(exports, "Client", { enumerable: true, get: function () { return __importDefault(Client_1).default; } });
var Client_2 = require("./Client");
Object.defineProperty(exports, "default", { enumerable: true, get: function () { return __importDefault(Client_2).default; } });
var Network_1 = require("./Network");
Object.defineProperty(exports, "Network", { enumerable: true, get: function () { return __importDefault(Network_1).default; } });
var ResourceList_1 = require("./ResourceList");
Object.defineProperty(exports, "ResourceList", { enumerable: true, get: function () { return __importDefault(ResourceList_1).default; } });
var Transaction_1 = require("./models/Transaction");
Object.defineProperty(exports, "PaymentV1", { enumerable: true, get: function () { return Transaction_1.PaymentV1; } });
Object.defineProperty(exports, "PaymentV2", { enumerable: true, get: function () { return Transaction_1.PaymentV2; } });
Object.defineProperty(exports, "RewardsV1", { enumerable: true, get: function () { return Transaction_1.RewardsV1; } });
Object.defineProperty(exports, "RewardsV2", { enumerable: true, get: function () { return Transaction_1.RewardsV2; } });
Object.defineProperty(exports, "AddGatewayV1", { enumerable: true, get: function () { return Transaction_1.AddGatewayV1; } });
Object.defineProperty(exports, "AssertLocationV1", { enumerable: true, get: function () { return Transaction_1.AssertLocationV1; } });
Object.defineProperty(exports, "AssertLocationV2", { enumerable: true, get: function () { return Transaction_1.AssertLocationV2; } });
Object.defineProperty(exports, "TransferHotspotV1", { enumerable: true, get: function () { return Transaction_1.TransferHotspotV1; } });
Object.defineProperty(exports, "TransferHotspotV2", { enumerable: true, get: function () { return Transaction_1.TransferHotspotV2; } });
Object.defineProperty(exports, "TokenBurnV1", { enumerable: true, get: function () { return Transaction_1.TokenBurnV1; } });
Object.defineProperty(exports, "StakeValidatorV1", { enumerable: true, get: function () { return Transaction_1.StakeValidatorV1; } });
Object.defineProperty(exports, "UnstakeValidatorV1", { enumerable: true, get: function () { return Transaction_1.UnstakeValidatorV1; } });
Object.defineProperty(exports, "TransferValidatorStakeV1", { enumerable: true, get: function () { return Transaction_1.TransferValidatorStakeV1; } });
Object.defineProperty(exports, "UnknownTransaction", { enumerable: true, get: function () { return Transaction_1.UnknownTransaction; } });
var DataModel_1 = require("./models/DataModel");
Object.defineProperty(exports, "GenericDataModel", { enumerable: true, get: function () { return DataModel_1.GenericDataModel; } });

},{"./Client":18,"./Network":19,"./ResourceList":20,"./models/DataModel":26,"./models/Transaction":35}],22:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountStats = void 0;
/* eslint-disable max-classes-per-file */
const currency_1 = require("@helium/currency");
const address_1 = __importStar(require("@helium/address"));
const Transactions_1 = __importDefault(require("../resources/Transactions"));
const Roles_1 = __importDefault(require("../resources/Roles"));
const PendingTransactions_1 = __importDefault(require("../resources/PendingTransactions"));
const Hotspots_1 = __importDefault(require("../resources/Hotspots"));
const Challenges_1 = __importDefault(require("../resources/Challenges"));
const DataModel_1 = __importDefault(require("./DataModel"));
const Rewards_1 = __importDefault(require("../resources/Rewards"));
const Validators_1 = __importDefault(require("../resources/Validators"));
function toBalance(value, type) {
    if (value === undefined)
        return undefined;
    return new currency_1.Balance(value, type);
}
class AccountStats {
    constructor(data) {
        this.lastWeek = data.last_week.map((s) => ({
            timestamp: s.timestamp,
            balance: toBalance(s.balance, currency_1.CurrencyType.default),
        }));
        this.lastMonth = data.last_month.map((s) => ({
            timestamp: s.timestamp,
            balance: toBalance(s.balance, currency_1.CurrencyType.default),
        }));
        this.lastDay = data.last_day.map((s) => ({
            timestamp: s.timestamp,
            balance: toBalance(s.balance, currency_1.CurrencyType.default),
        }));
    }
}
exports.AccountStats = AccountStats;
class Account extends DataModel_1.default {
    constructor(client, account) {
        super();
        this.client = client;
        this.netType = address_1.default.fromB58(account.address).netType;
        const currencyType = this.netType === address_1.NetTypes.TESTNET
            ? currency_1.CurrencyType.testNetworkToken
            : currency_1.CurrencyType.default;
        this.speculativeNonce = account.speculative_nonce;
        this.stakedBalance = toBalance(account.staked_balance, currencyType);
        this.secNonce = account.sec_nonce;
        this.secBalance = toBalance(account.sec_balance, currency_1.CurrencyType.security);
        this.nonce = account.nonce;
        this.dcNonce = account.dc_nonce;
        this.dcBalance = toBalance(account.dc_balance, currency_1.CurrencyType.dataCredit);
        this.block = account.block;
        this.balance = toBalance(account.balance, currencyType);
        this.address = account.address;
        this.hotspotCount = account.hotspot_count;
        this.validatorCount = account.validator_count;
    }
    get activity() {
        return new Transactions_1.default(this.client, this);
    }
    get roles() {
        return new Roles_1.default(this.client, this);
    }
    get hotspots() {
        return new Hotspots_1.default(this.client, this);
    }
    get validators() {
        return new Validators_1.default(this.client, this);
    }
    get challenges() {
        return new Challenges_1.default(this.client, this);
    }
    get pendingTransactions() {
        return new PendingTransactions_1.default(this.client, this);
    }
    get rewards() {
        return new Rewards_1.default(this.client, this);
    }
    get data() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _a = this, { client } = _a, rest = __rest(_a, ["client"]);
        return Object.assign({}, rest);
    }
}
exports.default = Account;

},{"../resources/Challenges":40,"../resources/Hotspots":43,"../resources/PendingTransactions":46,"../resources/Rewards":47,"../resources/Roles":48,"../resources/Transactions":52,"../resources/Validators":53,"./DataModel":26,"@helium/address":5,"@helium/currency":17}],23:[function(require,module,exports){
"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Transactions_1 = __importDefault(require("../resources/Transactions"));
const DataModel_1 = __importDefault(require("./DataModel"));
class Block extends DataModel_1.default {
    constructor(client, block) {
        super();
        this.client = client;
        this.height = block.height;
        this.transactionCount = block.transaction_count;
        this.time = block.time;
        this.prevHash = block.prev_hash;
        this.hash = block.hash;
    }
    get transactions() {
        return new Transactions_1.default(this.client, this);
    }
    get data() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _a = this, { client } = _a, rest = __rest(_a, ["client"]);
        return Object.assign({}, rest);
    }
}
exports.default = Block;

},{"../resources/Transactions":52,"./DataModel":26}],24:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PathResult = void 0;
const DataModel_1 = __importDefault(require("./DataModel"));
var PathResult;
(function (PathResult) {
    PathResult["SUCCESS"] = "success";
    PathResult["FAILURE"] = "failure";
    PathResult["UNTESTED"] = "untested";
})(PathResult = exports.PathResult || (exports.PathResult = {}));
const isValidWitness = (w) => (w.is_valid === undefined ? true : w.is_valid);
const constructPath = (path) => {
    let hasFailedPath = false;
    const isBeacon = path.length === 1;
    return path.map((pathObject, i) => {
        const hasReceipt = pathObject.receipt;
        const hasGeocode = pathObject.geocode;
        const hasValidWitness = pathObject.witnesses.some(isValidWitness);
        const hasReceiptOrValidWitnesses = hasReceipt || hasValidWitness;
        const nextElement = path[i + 1];
        const nextElementHasReceiptOrValidWitness = nextElement && (nextElement.receipt || nextElement.witnesses.some(isValidWitness));
        const isFirstElement = i === 0;
        const isValidBeacon = isBeacon && hasValidWitness;
        const isValidChallenge = !isBeacon
            && (isFirstElement
                ? hasValidWitness || nextElementHasReceiptOrValidWitness
                : hasReceiptOrValidWitnesses || nextElementHasReceiptOrValidWitness);
        const isFailure = isFirstElement ? !hasValidWitness : !hasReceipt && !hasValidWitness;
        let result = PathResult.UNTESTED;
        if (!hasFailedPath && (isValidBeacon || isValidChallenge)) {
            result = PathResult.SUCCESS;
        }
        else if (!hasFailedPath && isFailure) {
            result = PathResult.FAILURE;
            hasFailedPath = true;
        }
        return {
            witnesses: pathObject.witnesses.map((witness) => (Object.assign(Object.assign({ timestamp: witness.timestamp, snr: witness.snr, signal: witness.signal, packetHash: witness.packet_hash, owner: witness.owner, location: witness.location, locationHex: witness.location_hex, isValid: isValidWitness(witness) }, (witness.hasOwnProperty('invalid_reason') && { invalidReason: witness.invalid_reason })), { gateway: witness.gateway, frequency: witness.frequency, datarate: witness.datarate, channel: witness.channel }))),
            receipt: hasReceipt
                ? {
                    timestamp: pathObject.receipt.timestamp,
                    snr: pathObject.receipt.snr,
                    signal: pathObject.receipt.signal,
                    origin: pathObject.receipt.origin,
                    gateway: pathObject.receipt.gateway,
                    frequency: pathObject.receipt.frequency,
                    datarate: pathObject.receipt.datarate,
                    data: pathObject.receipt.data,
                    channel: pathObject.receipt.channel,
                }
                : undefined,
            geocode: hasGeocode
                ? {
                    shortStreet: pathObject.geocode.short_street,
                    shortState: pathObject.geocode.short_state,
                    shortCountry: pathObject.geocode.short_country,
                    shortCity: pathObject.geocode.short_city,
                    longStreet: pathObject.geocode.long_street,
                    longState: pathObject.geocode.long_state,
                    longCountry: pathObject.geocode.long_country,
                    longCity: pathObject.geocode.long_city,
                    cityId: pathObject.geocode.city_id,
                }
                : undefined,
            challengeeOwner: pathObject.challengee_owner,
            challengeeLon: pathObject.challengee_lon,
            challengeeLocation: pathObject.challengee_location,
            challengeeLocationHex: pathObject.challengee_location_hex,
            challengeeLat: pathObject.challengee_lat,
            challengee: pathObject.challengee,
            result,
        };
    });
};
class Challenge extends DataModel_1.default {
    constructor(challenge) {
        super();
        this.type = challenge.type;
        this.time = challenge.time;
        this.secret = challenge.secret;
        this.requestBlockHash = challenge.request_block_hash;
        this.path = constructPath(challenge.path);
        this.onionKeyHash = challenge.onion_key_hash;
        this.height = challenge.height;
        this.hash = challenge.hash;
        this.fee = challenge.fee;
        this.challengerOwner = challenge.challenger_owner;
        this.challengerLon = challenge.challenger_lon;
        this.challengerLocation = challenge.challenger_location;
        this.challengerLocationHex = challenge.challenger_location_hex;
        this.challengerLat = challenge.challenger_lat;
        this.challenger = challenge.challenger;
    }
    get data() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        return this;
    }
}
exports.default = Challenge;

},{"./DataModel":26}],25:[function(require,module,exports){
"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Hotspots_1 = __importDefault(require("../resources/Hotspots"));
const DataModel_1 = __importDefault(require("./DataModel"));
class City extends DataModel_1.default {
    constructor(client, data) {
        super();
        this.client = client;
        this.shortState = data.short_state;
        this.shortCountry = data.short_country;
        this.shortCity = data.short_city;
        this.longState = data.long_state;
        this.longCountry = data.long_country;
        this.longCity = data.long_city;
        this.hotspotCount = data.hotspot_count;
        this.onlineCount = data.online_count;
        this.offlineCount = data.offline_count;
        this.cityId = data.city_id;
    }
    get hotspots() {
        return new Hotspots_1.default(this.client, this);
    }
    get data() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _a = this, { client } = _a, rest = __rest(_a, ["client"]);
        return Object.assign({}, rest);
    }
}
exports.default = City;

},{"../resources/Hotspots":43,"./DataModel":26}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenericDataModel = void 0;
/* eslint-disable max-classes-per-file */
class DataModel {
}
exports.default = DataModel;
class GenericDataModel extends DataModel {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.GenericDataModel = GenericDataModel;

},{}],27:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const DataModel_1 = __importDefault(require("./DataModel"));
class Election extends DataModel_1.default {
    constructor(data) {
        super();
        this.type = data.type;
        this.time = data.time;
        this.proof = data.proof;
        this.members = data.members;
        this.height = data.height;
        this.hash = data.hash;
        this.delay = data.delay;
    }
    get data() {
        return this;
    }
}
exports.default = Election;

},{"./DataModel":26}],28:[function(require,module,exports){
"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const camelcase_keys_1 = __importDefault(require("camelcase-keys"));
const Transactions_1 = __importDefault(require("../resources/Transactions"));
const DataModel_1 = __importDefault(require("./DataModel"));
const Witnesses_1 = __importDefault(require("../resources/Witnesses"));
const Rewards_1 = __importDefault(require("../resources/Rewards"));
const Challenges_1 = __importDefault(require("../resources/Challenges"));
const Roles_1 = __importDefault(require("../resources/Roles"));
class Hotspot extends DataModel_1.default {
    constructor(client, hotspot) {
        var _a, _b, _c, _d;
        super();
        this.client = client;
        this.scoreUpdateHeight = hotspot.score_update_height;
        this.score = hotspot.score;
        this.rewardScale = hotspot.reward_scale;
        this.owner = hotspot.owner;
        this.payer = hotspot.payer;
        this.name = hotspot.name;
        this.location = hotspot.location;
        this.locationHex = hotspot.location_hex;
        this.lng = hotspot.lng;
        this.lat = hotspot.lat;
        this.block = hotspot.block;
        this.status = {
            timestamp: (_a = hotspot.status) === null || _a === void 0 ? void 0 : _a.timestamp,
            height: ((_b = hotspot.status) === null || _b === void 0 ? void 0 : _b.height) || 0,
            online: ((_c = hotspot.status) === null || _c === void 0 ? void 0 : _c.online) || '',
            listenAddrs: ((_d = hotspot.status) === null || _d === void 0 ? void 0 : _d.listen_addrs) || [],
        };
        this.nonce = hotspot.nonce;
        this.speculativeNonce = hotspot.speculative_nonce;
        this.blockAdded = hotspot.block_added;
        this.timestampAdded = hotspot.timestamp_added;
        this.lastPocChallenge = hotspot.last_poc_challenge;
        this.lastChangeBlock = hotspot.last_change_block;
        this.gain = hotspot.gain;
        this.elevation = hotspot.elevation;
        this.mode = hotspot.mode;
        if (hotspot.geocode) {
            this.geocode = camelcase_keys_1.default(hotspot.geocode);
        }
        this.address = hotspot.address;
    }
    get activity() {
        return new Transactions_1.default(this.client, this);
    }
    get roles() {
        return new Roles_1.default(this.client, this);
    }
    get witnesses() {
        return new Witnesses_1.default(this.client, this, 'witnesses');
    }
    get witnessed() {
        return new Witnesses_1.default(this.client, this, 'witnessed');
    }
    get rewards() {
        return new Rewards_1.default(this.client, this);
    }
    get challenges() {
        return new Challenges_1.default(this.client, this);
    }
    get data() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _a = this, { client } = _a, rest = __rest(_a, ["client"]);
        return Object.assign({}, rest);
    }
}
exports.default = Hotspot;

},{"../resources/Challenges":40,"../resources/Rewards":47,"../resources/Roles":48,"../resources/Transactions":52,"../resources/Witnesses":55,"./DataModel":26,"camelcase-keys":94}],29:[function(require,module,exports){
"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const DataModel_1 = __importDefault(require("./DataModel"));
class Location extends DataModel_1.default {
    constructor(client, data) {
        super();
        this.client = client;
        this.shortStreet = data.short_street;
        this.shortState = data.short_state;
        this.shortCountry = data.short_country;
        this.shortCity = data.short_city;
        this.longStreet = data.long_street;
        this.longState = data.long_state;
        this.longCountry = data.long_country;
        this.longCity = data.long_city;
        this.location = data.location;
        this.cityId = data.city_id;
    }
    get data() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _a = this, { client } = _a, rest = __rest(_a, ["client"]);
        return Object.assign({}, rest);
    }
}
exports.default = Location;

},{"./DataModel":26}],30:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const build_1 = __importStar(require("../../../currency/build"));
const DataModel_1 = __importDefault(require("./DataModel"));
class OraclePrice extends DataModel_1.default {
    constructor(client, oraclePrice) {
        super();
        this.client = client;
        this.timestamp = oraclePrice.timestamp;
        this.height = oraclePrice.block;
        this.price = new build_1.default(oraclePrice.price, build_1.CurrencyType.usd);
    }
    get data() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _a = this, { client } = _a, rest = __rest(_a, ["client"]);
        return Object.assign({}, rest);
    }
}
exports.default = OraclePrice;

},{"../../../currency/build":17,"./DataModel":26}],31:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const build_1 = __importStar(require("../../../currency/build"));
const DataModel_1 = __importDefault(require("./DataModel"));
class OraclePricePrediction extends DataModel_1.default {
    constructor(client, oraclePrice) {
        super();
        this.client = client;
        this.time = oraclePrice.time;
        this.price = new build_1.default(oraclePrice.price, build_1.CurrencyType.usd);
    }
    get data() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _a = this, { client } = _a, rest = __rest(_a, ["client"]);
        return Object.assign({}, rest);
    }
}
exports.default = OraclePricePrediction;

},{"../../../currency/build":17,"./DataModel":26}],32:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const camelcase_keys_1 = __importDefault(require("camelcase-keys"));
const currency_1 = require("@helium/currency");
const DataModel_1 = __importDefault(require("./DataModel"));
function processTxn(transaction) {
    if (transaction.status === 'received')
        return null;
    const rawTxn = transaction.txn;
    const txn = camelcase_keys_1.default(rawTxn);
    switch (transaction.type) {
        case 'payment_v1':
            return Object.assign(Object.assign({}, txn), { amount: new currency_1.Balance(txn.amount, currency_1.CurrencyType.default) });
        case 'payment_v2':
            return Object.assign(Object.assign({}, txn), { payments: txn.payments.map((p) => (Object.assign(Object.assign({}, p), { amount: new currency_1.Balance(p.amount, currency_1.CurrencyType.default) }))), totalAmount: new currency_1.Balance(txn.payments.reduce((sum, { amount }) => sum + amount, 0), currency_1.CurrencyType.default) });
        default:
            return txn;
    }
}
class PendingTransaction extends DataModel_1.default {
    constructor(transaction) {
        super();
        this.type = transaction.type;
        this.txn = processTxn(transaction);
        this.status = transaction.status;
        this.failedReason = transaction.failed_reason;
        this.hash = transaction.hash;
        this.createdAt = transaction.created_at;
        this.updatedAt = transaction.updated_at;
    }
    get data() {
        return this;
    }
}
exports.default = PendingTransaction;

},{"./DataModel":26,"@helium/currency":17,"camelcase-keys":94}],33:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const currency_1 = __importStar(require("@helium/currency"));
const DataModel_1 = __importDefault(require("./DataModel"));
function integerToBalance(integerValue) {
    return new currency_1.default(integerValue, currency_1.CurrencyType.networkToken);
}
class Reward extends DataModel_1.default {
    constructor(client, rewards) {
        super();
        this.client = client;
        this.account = rewards.account;
        this.amount = integerToBalance(rewards.amount);
        this.block = rewards.block;
        this.gateway = rewards.gateway;
        this.hash = rewards.hash;
        this.timestamp = rewards.timestamp;
    }
    get data() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _a = this, { client } = _a, rest = __rest(_a, ["client"]);
        return Object.assign({}, rest);
    }
}
exports.default = Reward;

},{"./DataModel":26,"@helium/currency":17}],34:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const currency_1 = __importStar(require("@helium/currency"));
const DataModel_1 = __importDefault(require("./DataModel"));
function floatToBalance(floatValue) {
    return currency_1.default.fromFloat(floatValue, currency_1.CurrencyType.networkToken);
}
class Sum extends DataModel_1.default {
    constructor(client, data) {
        super();
        this.client = client;
        this.total = data.total;
        this.stddev = data.stddev;
        this.min = data.min;
        this.median = data.median;
        this.max = data.max;
        this.avg = data.avg;
        this.timestamp = data.timestamp;
        this.sum = typeof data.sum === 'string' ? parseFloat(data.sum) : data.sum;
    }
    get balanceTotal() {
        return floatToBalance(this.total);
    }
    get balanceStddev() {
        return floatToBalance(this.stddev);
    }
    get balanceMin() {
        return floatToBalance(this.min);
    }
    get balanceMedian() {
        return floatToBalance(this.median);
    }
    get balanceMax() {
        return floatToBalance(this.max);
    }
    get balanceAvg() {
        return floatToBalance(this.avg);
    }
    get balanceSum() {
        return new currency_1.default(this.sum, currency_1.CurrencyType.networkToken);
    }
    get data() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _a = this, { client } = _a, rest = __rest(_a, ["client"]);
        return Object.assign({}, rest);
    }
}
exports.default = Sum;

},{"./DataModel":26,"@helium/currency":17}],35:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferHotspotV2 = exports.TransferHotspotV1 = exports.RewardsV2 = exports.RewardsV1 = exports.UnknownTransaction = exports.SecurityExchangeV1 = exports.StateChannelCloseV1 = exports.TransferValidatorStakeV1 = exports.UnstakeValidatorV1 = exports.StakeValidatorV1 = exports.PaymentV2 = exports.PaymentV1 = exports.AssertLocationV2 = exports.AssertLocationV1 = exports.TokenBurnV1 = exports.AddGatewayV1 = void 0;
/* eslint-disable no-param-reassign */
/* eslint-disable max-classes-per-file */
const camelcase_keys_1 = __importDefault(require("camelcase-keys"));
const currency_1 = require("@helium/currency");
const Challenge_1 = __importDefault(require("./Challenge"));
const DataModel_1 = __importDefault(require("./DataModel"));
class AddGatewayV1 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.AddGatewayV1 = AddGatewayV1;
class TokenBurnV1 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.TokenBurnV1 = TokenBurnV1;
class AssertLocationV1 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.AssertLocationV1 = AssertLocationV1;
class AssertLocationV2 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.AssertLocationV2 = AssertLocationV2;
class PaymentV1 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.PaymentV1 = PaymentV1;
class PaymentV2 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.PaymentV2 = PaymentV2;
class StakeValidatorV1 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.StakeValidatorV1 = StakeValidatorV1;
class UnstakeValidatorV1 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.UnstakeValidatorV1 = UnstakeValidatorV1;
class TransferValidatorStakeV1 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.TransferValidatorStakeV1 = TransferValidatorStakeV1;
class StateChannelCloseV1 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.StateChannelCloseV1 = StateChannelCloseV1;
class SecurityExchangeV1 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.SecurityExchangeV1 = SecurityExchangeV1;
class UnknownTransaction extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.UnknownTransaction = UnknownTransaction;
class RewardsV1 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.RewardsV1 = RewardsV1;
class RewardsV2 extends RewardsV1 {
}
exports.RewardsV2 = RewardsV2;
function prepareTxn(txn, { deep } = { deep: false }) {
    const balanceConversions = [
        { key: 'fee', currencyType: currency_1.CurrencyType.dataCredit },
        { key: 'staking_fee', currencyType: currency_1.CurrencyType.dataCredit },
        { key: 'amount', currencyType: currency_1.CurrencyType.networkToken },
        { key: 'total_amount', currencyType: currency_1.CurrencyType.networkToken },
        { key: 'amount_to_seller', currencyType: currency_1.CurrencyType.networkToken },
        { key: 'stake', currencyType: currency_1.CurrencyType.networkToken },
        { key: 'payment_amount', currencyType: currency_1.CurrencyType.networkToken },
        { key: 'stake_amount', currencyType: currency_1.CurrencyType.networkToken },
    ];
    balanceConversions.forEach(({ key, currencyType }) => {
        if (txn[key] && typeof txn[key] === 'number') {
            txn[key] = new currency_1.Balance(txn[key], currencyType);
        }
    });
    return camelcase_keys_1.default(txn, { deep });
}
class TransferHotspotV1 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.TransferHotspotV1 = TransferHotspotV1;
class TransferHotspotV2 extends DataModel_1.default {
    constructor(data) {
        super();
        Object.assign(this, data);
    }
    get data() {
        return this;
    }
}
exports.TransferHotspotV2 = TransferHotspotV2;
class Transaction {
    static fromJsonObject(json) {
        switch (json.type) {
            case 'payment_v1':
                return this.toPaymentV1(json);
            case 'payment_v2':
                return this.toPaymentV2(json);
            case 'add_gateway_v1':
                return this.toAddGatewayV1(json);
            case 'rewards_v1':
                return this.toRewardsV1(json);
            case 'rewards_v2':
                return this.toRewardsV2(json);
            case 'poc_receipts_v1':
                return this.toPocReceiptsV1(json);
            case 'transfer_hotspot_v1':
                return this.toTransferHotspotV1(json);
            case 'transfer_hotspot_v2':
                return this.toTransferHotspotV2(json);
            case 'assert_location_v1':
                return this.toAssertLocationV1(json);
            case 'assert_location_v2':
                return this.toAssertLocationV2(json);
            case 'token_burn_v1':
                return this.toTokenBurnV1(json);
            case 'unstake_validator_v1':
                return this.toUnstakeValidatorV1(json);
            case 'stake_validator_v1':
                return this.toStakeValidatorV1(json);
            case 'transfer_validator_stake_v1':
                return this.toTransferValidatorStakeV1(json);
            case 'state_channel_close_v1':
                return this.toStateChannelCloseV1(json);
            case 'security_exchange_v1':
                return this.toSecurityExchangeV1(json);
            default:
                return this.toUnknownTransaction(json);
        }
    }
    static toPaymentV1(json) {
        return new PaymentV1(prepareTxn(json));
    }
    static toPaymentV2(json) {
        const payments = (json.payments || []).map((p) => (Object.assign(Object.assign({}, p), { amount: new currency_1.Balance(p.amount, currency_1.CurrencyType.default) })));
        const sumAmount = (json.payments || []).reduce((sum, { amount }) => sum + amount, 0);
        const totalAmount = new currency_1.Balance(sumAmount, currency_1.CurrencyType.default);
        return new PaymentV2(prepareTxn(Object.assign(Object.assign({}, json), { payments,
            totalAmount })));
    }
    static toAddGatewayV1(json) {
        return new AddGatewayV1(prepareTxn(json));
    }
    static toAssertLocationV1(json) {
        return new AssertLocationV1(prepareTxn(json));
    }
    static toAssertLocationV2(json) {
        return new AssertLocationV2(prepareTxn(json));
    }
    static toTokenBurnV1(json) {
        return new TokenBurnV1(prepareTxn(json));
    }
    static toUnstakeValidatorV1(json) {
        return new UnstakeValidatorV1(prepareTxn(json));
    }
    static toStakeValidatorV1(json) {
        return new StakeValidatorV1(prepareTxn(json));
    }
    static toTransferValidatorStakeV1(json) {
        return new TransferValidatorStakeV1(prepareTxn(json));
    }
    static toUnknownTransaction(json) {
        return new UnknownTransaction(prepareTxn(json));
    }
    static toPocReceiptsV1(json) {
        return new Challenge_1.default(json);
    }
    static toTransferHotspotV1(json) {
        return new TransferHotspotV1(prepareTxn(json));
    }
    static toTransferHotspotV2(json) {
        return new TransferHotspotV2(prepareTxn(json));
    }
    static toStateChannelCloseV1(json) {
        return new StateChannelCloseV1(prepareTxn(json, { deep: true }));
    }
    static toSecurityExchangeV1(json) {
        return new SecurityExchangeV1(prepareTxn(json));
    }
    static toRewardsV1(json) {
        const rewards = (json.rewards || []).map((r) => (Object.assign(Object.assign({}, r), { amount: new currency_1.Balance(r.amount, currency_1.CurrencyType.default) })));
        const sumAmount = (json.rewards || []).reduce((sum, { amount }) => sum + amount, 0);
        const totalAmount = new currency_1.Balance(sumAmount, currency_1.CurrencyType.default);
        return new RewardsV1(prepareTxn(Object.assign(Object.assign({}, json), { rewards,
            totalAmount })));
    }
    static toRewardsV2(json) {
        return this.toRewardsV1(json);
    }
}
exports.default = Transaction;

},{"./Challenge":24,"./DataModel":26,"@helium/currency":17,"camelcase-keys":94}],36:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const build_1 = __importStar(require("../../../currency/build"));
const DataModel_1 = __importDefault(require("./DataModel"));
const Transactions_1 = __importDefault(require("../resources/Transactions"));
const Rewards_1 = __importDefault(require("../resources/Rewards"));
const Roles_1 = __importDefault(require("../resources/Roles"));
class Validator extends DataModel_1.default {
    constructor(client, validator) {
        var _a, _b, _c;
        super();
        this.client = client;
        this.versionHeartbeat = validator.version_heartbeat;
        this.status = {
            height: ((_a = validator.status) === null || _a === void 0 ? void 0 : _a.height) || 0,
            online: ((_b = validator.status) === null || _b === void 0 ? void 0 : _b.online) || '',
            listenAddrs: ((_c = validator.status) === null || _c === void 0 ? void 0 : _c.listen_addrs) || [],
        };
        this.stakeStatus = validator.stake_status;
        this.stake = new build_1.default(validator.stake, build_1.CurrencyType.networkToken);
        this.penalty = validator.penalty;
        this.penalties = validator.penalties;
        this.owner = validator.owner;
        this.name = validator.name;
        this.lastHeartbeat = validator.last_heartbeat;
        this.consensusGroups = validator.consensus_groups;
        this.blockAdded = validator.block_added;
        this.block = validator.block;
        this.address = validator.address;
    }
    get activity() {
        return new Transactions_1.default(this.client, this);
    }
    get roles() {
        return new Roles_1.default(this.client, this);
    }
    get rewards() {
        return new Rewards_1.default(this.client, this);
    }
    get data() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _a = this, { client } = _a, rest = __rest(_a, ["client"]);
        return Object.assign({}, rest);
    }
}
exports.default = Validator;

},{"../../../currency/build":17,"../resources/Rewards":47,"../resources/Roles":48,"../resources/Transactions":52,"./DataModel":26}],37:[function(require,module,exports){
"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const camelcase_keys_1 = __importDefault(require("camelcase-keys"));
const DataModel_1 = __importDefault(require("./DataModel"));
class Witness extends DataModel_1.default {
    constructor(client, witness) {
        var _a, _b, _c, _d;
        super();
        this.client = client;
        this.scoreUpdateHeight = witness.score_update_height;
        this.score = witness.score;
        this.rewardScale = witness.reward_scale;
        this.owner = witness.owner;
        this.name = witness.name;
        this.location = witness.location;
        this.locationHex = witness.location_hex;
        this.lng = witness.lng;
        this.lat = witness.lat;
        this.block = witness.block;
        this.status = {
            timestamp: (_a = witness.status) === null || _a === void 0 ? void 0 : _a.timestamp,
            height: ((_b = witness.status) === null || _b === void 0 ? void 0 : _b.height) || 0,
            online: ((_c = witness.status) === null || _c === void 0 ? void 0 : _c.online) || '',
            listenAddrs: ((_d = witness.status) === null || _d === void 0 ? void 0 : _d.listen_addrs) || [],
        };
        this.nonce = witness.nonce;
        this.blockAdded = witness.block_added;
        this.timestampAdded = witness.timestamp_added;
        this.lastPocChallenge = witness.last_poc_challenge;
        this.lastChangeBlock = witness.last_change_block;
        this.gain = witness.gain;
        this.elevation = witness.elevation;
        if (witness.geocode) {
            this.geocode = camelcase_keys_1.default(witness.geocode);
        }
        this.address = witness.address;
        this.witnessFor = witness.witness_for;
        if (witness.witness_info) {
            this.witnessInfo = camelcase_keys_1.default(witness.witness_info);
        }
        this.mode = witness.mode;
    }
    get data() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _a = this, { client } = _a, rest = __rest(_a, ["client"]);
        return Object.assign({}, rest);
    }
}
exports.default = Witness;

},{"./DataModel":26,"camelcase-keys":94}],38:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const snakecase_keys_1 = __importDefault(require("snakecase-keys"));
const Account_1 = __importStar(require("../models/Account"));
const ResourceList_1 = __importDefault(require("../ResourceList"));
class Accounts {
    constructor(client) {
        this.client = client;
    }
    fromAddress(address) {
        return new Account_1.default(this.client, { address });
    }
    async list(params = {}) {
        const url = '/accounts';
        const response = await this.client.get(url, { cursor: params.cursor });
        const { data: { data: accounts, cursor } } = response;
        const data = accounts.map((d) => new Account_1.default(this.client, d));
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
    async listRich() {
        const url = '/accounts/rich';
        const response = await this.client.get(url);
        const { data: { data: accounts }, } = response;
        const data = accounts.map((d) => new Account_1.default(this.client, d));
        return new ResourceList_1.default(data, this.list.bind(this));
    }
    async get(address, params) {
        const path = `/accounts/${address}`;
        const { data: { data: account }, } = await this.client.get(path, snakecase_keys_1.default(params || {}));
        return new Account_1.default(this.client, account);
    }
    async getStats(address) {
        const url = `/accounts/${address}/stats`;
        const { data: { data: stats } } = await this.client.get(url);
        return new Account_1.AccountStats(stats);
    }
}
exports.default = Accounts;

},{"../ResourceList":20,"../models/Account":22,"snakecase-keys":124}],39:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const camelcase_keys_1 = __importDefault(require("camelcase-keys"));
const snakecase_keys_1 = __importDefault(require("snakecase-keys"));
const Block_1 = __importDefault(require("../models/Block"));
const ResourceList_1 = __importDefault(require("../ResourceList"));
function stringIsInt(str) {
    return !!str.match(/^\d+$/);
}
class Blocks {
    constructor(client) {
        this.client = client;
    }
    fromHeightOrHash(heightOrHash) {
        if (typeof heightOrHash === 'number') {
            return new Block_1.default(this.client, { height: heightOrHash });
        }
        if (typeof heightOrHash === 'string') {
            if (stringIsInt(heightOrHash)) {
                return new Block_1.default(this.client, { height: parseInt(heightOrHash) });
            }
            return new Block_1.default(this.client, { hash: heightOrHash });
        }
        throw new Error('heightOrHash must be a number or string');
    }
    async list(params = {}) {
        const { data: { data: blocks, cursor }, } = await this.client.get('/blocks', { cursor: params.cursor });
        const data = blocks.map((d) => new Block_1.default(this.client, d));
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
    async get(heightOrHash) {
        let url;
        if (typeof heightOrHash === 'number') {
            url = `/blocks/${heightOrHash}`;
        }
        else if (typeof heightOrHash === 'string') {
            if (stringIsInt(heightOrHash)) {
                url = `/blocks/${parseInt(heightOrHash)}`;
            }
            else {
                url = `/blocks/hash/${heightOrHash}`;
            }
        }
        if (!url)
            throw new Error('heightOrHash must be a number or string');
        const { data: { data: block }, } = await this.client.get(url);
        return new Block_1.default(this.client, block);
    }
    async getHeight(params) {
        const path = '/blocks/height';
        const { data: { data: { height } } } = await this.client.get(path, snakecase_keys_1.default(params || {}));
        return height;
    }
    async stats() {
        const { data: { data: stats } } = await this.client.get('/blocks/stats');
        return camelcase_keys_1.default(stats);
    }
}
exports.default = Blocks;

},{"../ResourceList":20,"../models/Block":23,"camelcase-keys":94,"snakecase-keys":124}],40:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Challenge_1 = __importDefault(require("../models/Challenge"));
const ResourceList_1 = __importDefault(require("../ResourceList"));
const Account_1 = __importDefault(require("../models/Account"));
const Hotspot_1 = __importDefault(require("../models/Hotspot"));
const Sums_1 = __importStar(require("./Sums"));
class Challenges {
    constructor(client, context) {
        this.client = client;
        this.context = context;
    }
    async list(params = {}) {
        let url = '/challenges';
        if (this.context instanceof Account_1.default) {
            const account = this.context;
            url = `/accounts/${account.address}/challenges`;
        }
        else if (this.context instanceof Hotspot_1.default) {
            const hotspot = this.context;
            url = `/hotspots/${hotspot.address}/challenges`;
        }
        const response = await this.client.get(url, { cursor: params.cursor });
        const { data: { data: challenges, cursor } } = response;
        const data = challenges.map((d) => new Challenge_1.default(d));
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
    async get(hash) {
        const url = `/challenges/${hash}`;
        const { data: { data: challenge } } = await this.client.get(url);
        return new Challenge_1.default(challenge);
    }
    get sum() {
        if (this.context instanceof Hotspot_1.default) {
            return new Sums_1.default(this.client, Sums_1.SumsType.challenges, this.context);
        }
        throw new Error('invalid context');
    }
}
exports.default = Challenges;

},{"../ResourceList":20,"../models/Account":22,"../models/Challenge":24,"../models/Hotspot":28,"./Sums":51}],41:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ResourceList_1 = __importDefault(require("../ResourceList"));
const City_1 = __importDefault(require("../models/City"));
const utils_1 = require("../utils");
class Cities {
    constructor(client) {
        this.client = client;
    }
    fromId(cityId) {
        return new City_1.default(this.client, { city_id: cityId });
    }
    async list(params = {}) {
        const url = encodeURI('/cities');
        const result = await this.client.get(url, {
            search: params.query,
            cursor: params.cursor,
            order: utils_1.toSnakeCase(params.order),
        });
        const { data: { data: cities, cursor }, } = result;
        const data = cities.map((city) => new City_1.default(this.client, city));
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
    async get(cityid) {
        const url = `/cities/${cityid}`;
        const { data: { data: city }, } = await this.client.get(url);
        return new City_1.default(this.client, city);
    }
}
exports.default = Cities;

},{"../ResourceList":20,"../models/City":25,"../utils":56}],42:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ResourceList_1 = __importDefault(require("../ResourceList"));
const Election_1 = __importDefault(require("../models/Election"));
class Elections {
    constructor(client) {
        this.client = client;
    }
    async list(params = {}) {
        const url = '/elections';
        const response = await this.client.get(url, { cursor: params.cursor });
        const { data: { data: elections, cursor }, } = response;
        const data = elections.map((d) => new Election_1.default(d));
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
    async get(hash) {
        // using transactions api for lookup, there is no /elections/hash endpoint
        const url = `/transactions/${hash}`;
        const { data: { data: election }, } = await this.client.get(url);
        return election;
    }
}
exports.default = Elections;

},{"../ResourceList":20,"../models/Election":27}],43:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Hotspot_1 = __importDefault(require("../models/Hotspot"));
const ResourceList_1 = __importDefault(require("../ResourceList"));
const Account_1 = __importDefault(require("../models/Account"));
const City_1 = __importDefault(require("../models/City"));
class Hotspots {
    constructor(client, context) {
        this.client = client;
        this.context = context;
    }
    fromAddress(address) {
        return new Hotspot_1.default(this.client, { address });
    }
    async search(term) {
        const url = 'hotspots/name';
        const response = await this.client.get(url, { search: term });
        const { data: { data: hotspots }, } = response;
        const data = hotspots.map((d) => new Hotspot_1.default(this.client, d));
        return new ResourceList_1.default(data, this.list.bind(this));
    }
    async list(params = {}) {
        const { hotspots, cursor } = await this.fetchList(params);
        const data = hotspots.map((d) => new Hotspot_1.default(this.client, d));
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
    async fetchList(params = {}) {
        let url = '/hotspots';
        if (this.context instanceof Account_1.default) {
            const account = this.context;
            url = `/accounts/${account.address}/hotspots`;
        }
        if (this.context instanceof City_1.default) {
            const city = this.context;
            url = `/cities/${city.cityId}/hotspots`;
        }
        const response = await this.client.get(url, { cursor: params.cursor });
        const { data: { data: hotspots, cursor }, } = response;
        return { hotspots, cursor };
    }
    async get(address) {
        const url = `/hotspots/${address}`;
        const { data: { data: hotspot }, } = await this.client.get(url);
        return new Hotspot_1.default(this.client, hotspot);
    }
    async elected(block) {
        const url = block === undefined ? '/hotspots/elected' : `/hotspots/elected/${block}`;
        const response = await this.client.get(url);
        const { data: { data: hotspots }, } = response;
        const data = hotspots.map((h) => new Hotspot_1.default(this.client, h));
        return new ResourceList_1.default(data, this.list.bind(this));
    }
    async hex(index, params) {
        const response = await this.client.get(`/hotspots/hex/${index}`, { cursor: params === null || params === void 0 ? void 0 : params.cursor });
        const { data: { data: hotspots, cursor }, } = response;
        const data = hotspots.map((h) => new Hotspot_1.default(this.client, h));
        const fetchMore = (nextParams) => this.hex(index, nextParams);
        return new ResourceList_1.default(data, fetchMore, cursor);
    }
    async locationDistance(params) {
        const response = await this.client.get('/hotspots/location/distance', params);
        const { data: { data: hotspots, cursor }, } = response;
        const data = hotspots.map((h) => new Hotspot_1.default(this.client, h));
        return new ResourceList_1.default(data, this.locationDistance.bind(this), cursor);
    }
}
exports.default = Hotspots;

},{"../ResourceList":20,"../models/Account":22,"../models/City":25,"../models/Hotspot":28}],44:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Location_1 = __importDefault(require("../models/Location"));
class Locations {
    constructor(client) {
        this.client = client;
    }
    async get(h3Index) {
        const url = `/locations/${h3Index}`;
        const { data: { data: location } } = await this.client.get(url);
        return new Location_1.default(this.client, location);
    }
}
exports.default = Locations;

},{"../models/Location":29}],45:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const OraclePrice_1 = __importDefault(require("../models/OraclePrice"));
const OraclePricePrediction_1 = __importDefault(require("../models/OraclePricePrediction"));
const ResourceList_1 = __importDefault(require("../ResourceList"));
class Oracle {
    constructor(client) {
        this.client = client;
    }
    async getCurrentPrice() {
        const url = '/oracle/prices/current';
        const { data: { data }, } = await this.client.get(url);
        return new OraclePrice_1.default(this.client, data);
    }
    async listPrices(params = {}) {
        const { data: { data: prices, cursor }, } = await this.client.get('/oracle/prices', { cursor: params.cursor });
        const data = prices.map((d) => new OraclePrice_1.default(this.client, d));
        return new ResourceList_1.default(data, this.listPrices.bind(this), cursor);
    }
    async getPriceAtBlock(height) {
        const url = `/oracle/prices/${height}`;
        const { data: { data }, } = await this.client.get(url);
        return new OraclePrice_1.default(this.client, data);
    }
    async getPredictedPrice() {
        const url = '/oracle/predictions';
        const response = await this.client.get(url);
        if (!response.data.data || !response.data.data.length) {
            return [];
        }
        const { data: { data: predictions }, } = response;
        return predictions.map((prediction) => new OraclePricePrediction_1.default(this.client, prediction));
    }
}
exports.default = Oracle;

},{"../ResourceList":20,"../models/OraclePrice":30,"../models/OraclePricePrediction":31}],46:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Account_1 = __importDefault(require("../models/Account"));
const PendingTransaction_1 = __importDefault(require("../models/PendingTransaction"));
const ResourceList_1 = __importDefault(require("../ResourceList"));
class PendingTransactions {
    constructor(client, context) {
        this.client = client;
        this.context = context;
    }
    async get(hash) {
        const url = `/pending_transactions/${hash}`;
        const response = await this.client.get(url);
        const { data: { data: txns } } = response;
        const data = txns.map((d) => new PendingTransaction_1.default(d));
        return new ResourceList_1.default(data);
    }
    async list() {
        if (this.context instanceof Account_1.default) {
            return this.listFromAccount();
        }
        throw new Error('Must provide an account to list pending transactions from');
    }
    async listFromAccount() {
        const account = this.context;
        const url = `/accounts/${account.address}/pending_transactions`;
        const response = await this.client.get(url);
        const { data: { data: txns } } = response;
        const data = txns.map((d) => new PendingTransaction_1.default(d));
        return new ResourceList_1.default(data);
    }
}
exports.default = PendingTransactions;

},{"../ResourceList":20,"../models/Account":22,"../models/PendingTransaction":32}],47:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ResourceList_1 = __importDefault(require("../ResourceList"));
const Hotspot_1 = __importDefault(require("../models/Hotspot"));
const Account_1 = __importDefault(require("../models/Account"));
const Reward_1 = __importDefault(require("../models/Reward"));
const Sums_1 = __importStar(require("./Sums"));
const Validator_1 = __importDefault(require("../models/Validator"));
class Rewards {
    constructor(client, context) {
        this.client = client;
        this.context = context;
    }
    async list(params) {
        var _a, _b;
        const { data: { data: rewards, cursor }, } = await this.client.get(this.baseUrl, {
            cursor: params.cursor,
            min_time: params.minTime instanceof Date ? (_a = params.minTime) === null || _a === void 0 ? void 0 : _a.toISOString() : params.minTime,
            max_time: params.maxTime instanceof Date ? (_b = params.maxTime) === null || _b === void 0 ? void 0 : _b.toISOString() : params.maxTime,
            bucket: params.bucket,
        });
        const data = rewards.map((d) => new Reward_1.default(this.client, d));
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
    get sum() {
        return new Sums_1.default(this.client, Sums_1.SumsType.rewards, this.context);
    }
    get baseUrl() {
        let url = '';
        if (this.context instanceof Hotspot_1.default) {
            url = `/hotspots/${this.context.address}/rewards`;
        }
        else if (this.context instanceof Account_1.default) {
            url = `/accounts/${this.context.address}/rewards`;
        }
        else if (this.context instanceof Validator_1.default) {
            url = `/validators/${this.context.address}/rewards`;
        }
        else {
            throw new Error('invalid context');
        }
        return url;
    }
}
exports.default = Rewards;

},{"../ResourceList":20,"../models/Account":22,"../models/Hotspot":28,"../models/Reward":33,"../models/Validator":36,"./Sums":51}],48:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Account_1 = __importDefault(require("../models/Account"));
const ResourceList_1 = __importDefault(require("../ResourceList"));
const Hotspot_1 = __importDefault(require("../models/Hotspot"));
const Validator_1 = __importDefault(require("../models/Validator"));
class Roles {
    constructor(client, context) {
        this.client = client;
        this.context = context;
    }
    async list(params = {}) {
        var _a, _b;
        const { data: { data: roles, cursor }, } = await this.client.get(this.activityUrl, {
            cursor: params.cursor,
            filter_types: params.filterTypes ? params.filterTypes.join() : undefined,
            min_time: params.minTime instanceof Date ? (_a = params.minTime) === null || _a === void 0 ? void 0 : _a.toISOString() : params.minTime,
            max_time: params.maxTime instanceof Date ? (_b = params.maxTime) === null || _b === void 0 ? void 0 : _b.toISOString() : params.maxTime,
            limit: params.limit,
        });
        const data = roles.map((d) => d);
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
    get activityUrl() {
        let url;
        if (this.context instanceof Account_1.default) {
            const account = this.context;
            url = `/accounts/${account.address}/roles`;
        }
        else if (this.context instanceof Hotspot_1.default) {
            const hotspot = this.context;
            url = `/hotspots/${hotspot.address}/roles`;
        }
        else if (this.context instanceof Validator_1.default) {
            const validator = this.context;
            url = `/validators/${validator.address}/roles`;
        }
        else {
            throw new Error('Must provide a context to list roles from');
        }
        return url;
    }
}
exports.default = Roles;

},{"../ResourceList":20,"../models/Account":22,"../models/Hotspot":28,"../models/Validator":36}],49:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Transaction_1 = __importDefault(require("../models/Transaction"));
const ResourceList_1 = __importDefault(require("../ResourceList"));
class StateChannels {
    constructor(client) {
        this.client = client;
    }
    async list(params = {}) {
        const url = '/state_channels';
        const response = await this.client.get(url, { cursor: params.cursor });
        const { data: { data: stateChannels, cursor }, } = response;
        const data = stateChannels.map((d) => Transaction_1.default.fromJsonObject(d));
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
}
exports.default = StateChannels;

},{"../ResourceList":20,"../models/Transaction":35}],50:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const camelcase_keys_1 = __importDefault(require("camelcase-keys"));
class Stats {
    constructor(client, context) {
        this.client = client;
        this.context = context;
    }
    async get() {
        let url = '/stats';
        if (this.context === 'validators') {
            url = '/validators/stats';
        }
        const { data: { data: stats }, } = await this.client.get(url);
        return camelcase_keys_1.default(stats, { deep: true });
    }
    async counts() {
        const url = '/stats/counts';
        const { data: { data: stats }, } = await this.client.get(url);
        return camelcase_keys_1.default(stats);
    }
    async dcBurns() {
        const url = '/dc_burns/stats';
        const { data: { data: stats }, } = await this.client.get(url);
        return camelcase_keys_1.default(stats, { deep: true });
    }
}
exports.default = Stats;

},{"camelcase-keys":94}],51:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SumsType = void 0;
const Sum_1 = __importDefault(require("../models/Sum"));
const ResourceList_1 = __importDefault(require("../ResourceList"));
const Hotspot_1 = __importDefault(require("../models/Hotspot"));
const Account_1 = __importDefault(require("../models/Account"));
const Validator_1 = __importDefault(require("../models/Validator"));
var SumsType;
(function (SumsType) {
    SumsType["rewards"] = "rewards";
    SumsType["challenges"] = "challenges";
    SumsType["witnesses"] = "witnesses";
})(SumsType = exports.SumsType || (exports.SumsType = {}));
class Sums {
    constructor(client, type, context) {
        this.client = client;
        this.context = context;
        this.type = type;
    }
    async list(params) {
        var _a, _b;
        if (!params.bucket) {
            throw new Error('missing bucket param');
        }
        const { data: { data: rewards, cursor }, } = await this.client.get(this.baseUrl, {
            cursor: params.cursor,
            min_time: params.minTime instanceof Date ? (_a = params.minTime) === null || _a === void 0 ? void 0 : _a.toISOString() : params.minTime,
            max_time: params.maxTime instanceof Date ? (_b = params.maxTime) === null || _b === void 0 ? void 0 : _b.toISOString() : params.maxTime,
            bucket: params.bucket,
        });
        const data = rewards.map((d) => new Sum_1.default(this.client, d));
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
    async get(minTime, maxTime) {
        const { data: { data } } = await this.client.get(this.baseUrl, {
            min_time: minTime instanceof Date ? minTime === null || minTime === void 0 ? void 0 : minTime.toISOString() : minTime,
            max_time: maxTime === null || maxTime === void 0 ? void 0 : maxTime.toISOString(),
        });
        return new Sum_1.default(this.client, data);
    }
    get baseUrl() {
        let url = '';
        if (this.context === undefined) {
            url = `/${this.type}/sum`;
        }
        else if (this.context instanceof Hotspot_1.default) {
            url = `/hotspots/${this.context.address}/${this.type}/sum`;
        }
        else if (this.context instanceof Account_1.default) {
            url = `/accounts/${this.context.address}/${this.type}/sum`;
        }
        else if (this.context instanceof Validator_1.default) {
            url = `/validators/${this.context.address}/${this.type}/sum`;
        }
        else {
            throw new Error('invalid context');
        }
        return url;
    }
}
exports.default = Sums;

},{"../ResourceList":20,"../models/Account":22,"../models/Hotspot":28,"../models/Sum":34,"../models/Validator":36}],52:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Block_1 = __importDefault(require("../models/Block"));
const Account_1 = __importDefault(require("../models/Account"));
const Transaction_1 = __importDefault(require("../models/Transaction"));
const PendingTransaction_1 = __importDefault(require("../models/PendingTransaction"));
const ResourceList_1 = __importDefault(require("../ResourceList"));
const Hotspot_1 = __importDefault(require("../models/Hotspot"));
const Validator_1 = __importDefault(require("../models/Validator"));
const camelcase_keys_1 = __importDefault(require("camelcase-keys"));
const snakecase_keys_1 = __importDefault(require("snakecase-keys"));
class Transactions {
    constructor(client, context) {
        this.client = client;
        this.context = context;
    }
    async submit(txn) {
        const url = '/pending_transactions';
        const { data: { data }, } = await this.client.post(url, { txn });
        return new PendingTransaction_1.default(data);
    }
    async get(hash, params) {
        const url = `/transactions/${hash}`;
        const { data: { data }, } = await this.client.get(url, snakecase_keys_1.default(params || {}));
        return Transaction_1.default.fromJsonObject(data);
    }
    async list(params = {}) {
        var _a, _b;
        const { data: { data: txns, cursor }, } = await this.client.get(this.activityUrl, {
            cursor: params.cursor,
            filter_types: params.filterTypes ? params.filterTypes.join() : undefined,
            min_time: params.minTime instanceof Date ? (_a = params.minTime) === null || _a === void 0 ? void 0 : _a.toISOString() : params.minTime,
            max_time: params.maxTime instanceof Date ? (_b = params.maxTime) === null || _b === void 0 ? void 0 : _b.toISOString() : params.maxTime,
            limit: params.limit,
        });
        const data = txns.map((d) => Transaction_1.default.fromJsonObject(d));
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
    async count(params) {
        const url = `${this.activityUrl}/count`;
        const { data: { data }, } = await this.client.get(url, {
            filter_types: (params === null || params === void 0 ? void 0 : params.filterTypes) ? params.filterTypes.join() : undefined,
        });
        return camelcase_keys_1.default(data);
    }
    get activityUrl() {
        let url;
        if (this.context instanceof Block_1.default) {
            const block = this.context;
            if (block.height) {
                url = `/blocks/${block.height}/transactions`;
            }
            else if (block.hash) {
                url = `/blocks/hash/${block.hash}/transactions`;
            }
            else {
                throw new Error('Block must have either height or hash');
            }
        }
        else if (this.context instanceof Account_1.default) {
            const account = this.context;
            url = `/accounts/${account.address}/activity`;
        }
        else if (this.context instanceof Hotspot_1.default) {
            const hotspot = this.context;
            url = `/hotspots/${hotspot.address}/activity`;
        }
        else if (this.context instanceof Validator_1.default) {
            const validator = this.context;
            url = `/validators/${validator.address}/activity`;
        }
        else {
            throw new Error('Must provide a context to list transactions from');
        }
        return url;
    }
}
exports.default = Transactions;

},{"../ResourceList":20,"../models/Account":22,"../models/Block":23,"../models/Hotspot":28,"../models/PendingTransaction":32,"../models/Transaction":35,"../models/Validator":36,"camelcase-keys":94,"snakecase-keys":124}],53:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = __importDefault(require("../models/Validator"));
const ResourceList_1 = __importDefault(require("../ResourceList"));
const Account_1 = __importDefault(require("../models/Account"));
const Stats_1 = __importDefault(require("./Stats"));
class Validators {
    constructor(client, context) {
        this.client = client;
        this.context = context;
    }
    fromAddress(address) {
        return new Validator_1.default(this.client, { address });
    }
    async search(term) {
        const url = 'validators/name';
        const response = await this.client.get(url, { search: term });
        const { data: { data: validators }, } = response;
        const data = validators.map((d) => new Validator_1.default(this.client, d));
        return new ResourceList_1.default(data, this.list.bind(this));
    }
    async list(params = {}) {
        const { validators, cursor } = await this.fetchList(params);
        const data = validators.map((d) => new Validator_1.default(this.client, d));
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
    async fetchList(params = {}) {
        let url = '/validators';
        if (this.context instanceof Account_1.default) {
            const account = this.context;
            url = `/accounts/${account.address}/validators`;
        }
        const response = await this.client.get(url, { cursor: params.cursor });
        const { data: { data: validators, cursor }, } = response;
        return { validators, cursor };
    }
    async get(address) {
        const url = `/validators/${address}`;
        const { data: { data: validator }, } = await this.client.get(url);
        return new Validator_1.default(this.client, validator);
    }
    async elected(block) {
        const url = block === undefined ? '/validators/elected' : `/validators/elected/${block}`;
        const response = await this.client.get(url);
        const { data: { data: validators }, } = response;
        const data = validators.map((h) => new Validator_1.default(this.client, h));
        return new ResourceList_1.default(data, this.list.bind(this));
    }
    get stats() {
        return new Stats_1.default(this.client, 'validators');
    }
}
exports.default = Validators;

},{"../ResourceList":20,"../models/Account":22,"../models/Validator":36,"./Stats":50}],54:[function(require,module,exports){
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const camelcase_keys_1 = __importDefault(require("camelcase-keys"));
class Vars {
    constructor(client) {
        /**
         * The chain vars needed for transaction configuration.
         * @private
         */
        this.TXN_VARS = [
            'txn_fee_multiplier',
            'dc_payload_size',
            'staking_fee_txn_assert_location_v1',
            'staking_fee_txn_add_gateway_v1',
        ];
        this.baseUrl = '/vars';
        this.client = client;
    }
    /**
     * Fetches the chain vars required to configure helium-js for blockchain transactions.
     */
    async getTransactionVars() {
        const { data: { data: vars } } = await this.client.get(this.baseUrl, { keys: this.TXN_VARS.join(',') });
        return camelcase_keys_1.default(vars);
    }
    /**
     * Fetches the specific chain vars passed in keys. If called without keys it will fetch the
     * transaction vars returned by {@link getTransactionVars}.
     * @param keys array of chain vars to fetch eg 'poc_v4_prob_no_rssi'
     */
    async get(keys = []) {
        if (keys.length === 0) {
            return this.getTransactionVars();
        }
        const { data: { data: vars } } = await this.client.get(this.baseUrl, { keys: keys.join(',') });
        return camelcase_keys_1.default(vars);
    }
    /**
     * WARNING: This will be return over 10 MB of data.
     * Fetches all chain vars.
     */
    async getAll() {
        const { data: { data: vars } } = await this.client.get(this.baseUrl);
        return camelcase_keys_1.default(vars);
    }
}
exports.default = Vars;

},{"camelcase-keys":94}],55:[function(require,module,exports){
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ResourceList_1 = __importDefault(require("../ResourceList"));
const Sums_1 = __importStar(require("./Sums"));
const Witness_1 = __importDefault(require("../models/Witness"));
class Witnesses {
    constructor(client, hotspot, type = 'witnesses') {
        this.client = client;
        this.hotspot = hotspot;
        this.type = type;
    }
    async list(params = {}) {
        const url = `/hotspots/${this.hotspot.address}/${this.type}`;
        const { data: { data: witnesses, cursor }, } = await this.client.get(url, { cursor: params.cursor });
        const data = witnesses.map((witness) => new Witness_1.default(this.client, witness));
        return new ResourceList_1.default(data, this.list.bind(this), cursor);
    }
    get sum() {
        return new Sums_1.default(this.client, Sums_1.SumsType.witnesses, this.hotspot);
    }
}
exports.default = Witnesses;

},{"../ResourceList":20,"../models/Witness":37,"./Sums":51}],56:[function(require,module,exports){
"use strict";
/* eslint-disable import/prefer-default-export */
Object.defineProperty(exports, "__esModule", { value: true });
exports.toSnakeCase = void 0;
const toSnakeCase = (str) => {
    if (!str)
        return undefined;
    return (str.match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g) || [])
        .map((x) => x.toLowerCase())
        .join('_');
};
exports.toSnakeCase = toSnakeCase;

},{}],57:[function(require,module,exports){
module.exports = require('./lib/axios');
},{"./lib/axios":59}],58:[function(require,module,exports){
'use strict';

var utils = require('./../utils');
var settle = require('./../core/settle');
var cookies = require('./../helpers/cookies');
var buildURL = require('./../helpers/buildURL');
var buildFullPath = require('../core/buildFullPath');
var parseHeaders = require('./../helpers/parseHeaders');
var isURLSameOrigin = require('./../helpers/isURLSameOrigin');
var createError = require('../core/createError');

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;
    var responseType = config.responseType;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    function onloadend() {
      if (!request) {
        return;
      }
      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?
        request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    }

    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        }
        // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'
        setTimeout(onloadend);
      };
    }

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(
        timeoutErrorMessage,
        config,
        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (responseType && responseType !== 'json') {
      request.responseType = config.responseType;
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};

},{"../core/buildFullPath":65,"../core/createError":66,"./../core/settle":70,"./../helpers/buildURL":74,"./../helpers/cookies":76,"./../helpers/isURLSameOrigin":79,"./../helpers/parseHeaders":81,"./../utils":84}],59:[function(require,module,exports){
'use strict';

var utils = require('./utils');
var bind = require('./helpers/bind');
var Axios = require('./core/Axios');
var mergeConfig = require('./core/mergeConfig');
var defaults = require('./defaults');

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = require('./cancel/Cancel');
axios.CancelToken = require('./cancel/CancelToken');
axios.isCancel = require('./cancel/isCancel');

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = require('./helpers/spread');

// Expose isAxiosError
axios.isAxiosError = require('./helpers/isAxiosError');

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;

},{"./cancel/Cancel":60,"./cancel/CancelToken":61,"./cancel/isCancel":62,"./core/Axios":63,"./core/mergeConfig":69,"./defaults":72,"./helpers/bind":73,"./helpers/isAxiosError":78,"./helpers/spread":82,"./utils":84}],60:[function(require,module,exports){
'use strict';

/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;

},{}],61:[function(require,module,exports){
'use strict';

var Cancel = require('./Cancel');

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;

},{"./Cancel":60}],62:[function(require,module,exports){
'use strict';

module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};

},{}],63:[function(require,module,exports){
'use strict';

var utils = require('./../utils');
var buildURL = require('../helpers/buildURL');
var InterceptorManager = require('./InterceptorManager');
var dispatchRequest = require('./dispatchRequest');
var mergeConfig = require('./mergeConfig');
var validator = require('../helpers/validator');

var validators = validator.validators;
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  var transitional = config.transitional;

  if (transitional !== undefined) {
    validator.assertOptions(transitional, {
      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),
      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),
      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')
    }, false);
  }

  // filter out skipped interceptors
  var requestInterceptorChain = [];
  var synchronousRequestInterceptors = true;
  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
      return;
    }

    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;

    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  var responseInterceptorChain = [];
  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
  });

  var promise;

  if (!synchronousRequestInterceptors) {
    var chain = [dispatchRequest, undefined];

    Array.prototype.unshift.apply(chain, requestInterceptorChain);
    chain = chain.concat(responseInterceptorChain);

    promise = Promise.resolve(config);
    while (chain.length) {
      promise = promise.then(chain.shift(), chain.shift());
    }

    return promise;
  }


  var newConfig = config;
  while (requestInterceptorChain.length) {
    var onFulfilled = requestInterceptorChain.shift();
    var onRejected = requestInterceptorChain.shift();
    try {
      newConfig = onFulfilled(newConfig);
    } catch (error) {
      onRejected(error);
      break;
    }
  }

  try {
    promise = dispatchRequest(newConfig);
  } catch (error) {
    return Promise.reject(error);
  }

  while (responseInterceptorChain.length) {
    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;

},{"../helpers/buildURL":74,"../helpers/validator":83,"./../utils":84,"./InterceptorManager":64,"./dispatchRequest":67,"./mergeConfig":69}],64:[function(require,module,exports){
'use strict';

var utils = require('./../utils');

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected,
    synchronous: options ? options.synchronous : false,
    runWhen: options ? options.runWhen : null
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;

},{"./../utils":84}],65:[function(require,module,exports){
'use strict';

var isAbsoluteURL = require('../helpers/isAbsoluteURL');
var combineURLs = require('../helpers/combineURLs');

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};

},{"../helpers/combineURLs":75,"../helpers/isAbsoluteURL":77}],66:[function(require,module,exports){
'use strict';

var enhanceError = require('./enhanceError');

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};

},{"./enhanceError":68}],67:[function(require,module,exports){
'use strict';

var utils = require('./../utils');
var transformData = require('./transformData');
var isCancel = require('../cancel/isCancel');
var defaults = require('../defaults');

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData.call(
    config,
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData.call(
      config,
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config,
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};

},{"../cancel/isCancel":62,"../defaults":72,"./../utils":84,"./transformData":71}],68:[function(require,module,exports){
'use strict';

/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};

},{}],69:[function(require,module,exports){
'use strict';

var utils = require('../utils');

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = [
    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'
  ];
  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys)
    .concat(directMergeKeys);

  var otherKeys = Object
    .keys(config1)
    .concat(Object.keys(config2))
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, mergeDeepProperties);

  return config;
};

},{"../utils":84}],70:[function(require,module,exports){
'use strict';

var createError = require('./createError');

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};

},{"./createError":66}],71:[function(require,module,exports){
'use strict';

var utils = require('./../utils');
var defaults = require('./../defaults');

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  var context = this || defaults;
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn.call(context, data, headers);
  });

  return data;
};

},{"./../defaults":72,"./../utils":84}],72:[function(require,module,exports){
(function (process){(function (){
'use strict';

var utils = require('./utils');
var normalizeHeaderName = require('./helpers/normalizeHeaderName');
var enhanceError = require('./core/enhanceError');

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = require('./adapters/xhr');
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = require('./adapters/http');
  }
  return adapter;
}

function stringifySafely(rawValue, parser, encoder) {
  if (utils.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils.trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }

  return (encoder || JSON.stringify)(rawValue);
}

var defaults = {

  transitional: {
    silentJSONParsing: true,
    forcedJSONParsing: true,
    clarifyTimeoutError: false
  },

  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');

    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {
      setContentTypeIfUnset(headers, 'application/json');
      return stringifySafely(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    var transitional = this.transitional;
    var silentJSONParsing = transitional && transitional.silentJSONParsing;
    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';

    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw enhanceError(e, this, 'E_JSON_PARSE');
          }
          throw e;
        }
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

}).call(this)}).call(this,require('_process'))
},{"./adapters/http":58,"./adapters/xhr":58,"./core/enhanceError":68,"./helpers/normalizeHeaderName":80,"./utils":84,"_process":113}],73:[function(require,module,exports){
'use strict';

module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};

},{}],74:[function(require,module,exports){
'use strict';

var utils = require('./../utils');

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};

},{"./../utils":84}],75:[function(require,module,exports){
'use strict';

/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};

},{}],76:[function(require,module,exports){
'use strict';

var utils = require('./../utils');

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);

},{"./../utils":84}],77:[function(require,module,exports){
'use strict';

/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};

},{}],78:[function(require,module,exports){
'use strict';

/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return (typeof payload === 'object') && (payload.isAxiosError === true);
};

},{}],79:[function(require,module,exports){
'use strict';

var utils = require('./../utils');

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);

},{"./../utils":84}],80:[function(require,module,exports){
'use strict';

var utils = require('../utils');

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};

},{"../utils":84}],81:[function(require,module,exports){
'use strict';

var utils = require('./../utils');

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};

},{"./../utils":84}],82:[function(require,module,exports){
'use strict';

/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};

},{}],83:[function(require,module,exports){
'use strict';

var pkg = require('./../../package.json');

var validators = {};

// eslint-disable-next-line func-names
['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {
  validators[type] = function validator(thing) {
    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});

var deprecatedWarnings = {};
var currentVerArr = pkg.version.split('.');

/**
 * Compare package versions
 * @param {string} version
 * @param {string?} thanVersion
 * @returns {boolean}
 */
function isOlderVersion(version, thanVersion) {
  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;
  var destVer = version.split('.');
  for (var i = 0; i < 3; i++) {
    if (pkgVersionArr[i] > destVer[i]) {
      return true;
    } else if (pkgVersionArr[i] < destVer[i]) {
      return false;
    }
  }
  return false;
}

/**
 * Transitional option validator
 * @param {function|boolean?} validator
 * @param {string?} version
 * @param {string} message
 * @returns {function}
 */
validators.transitional = function transitional(validator, version, message) {
  var isDeprecated = version && isOlderVersion(version);

  function formatMessage(opt, desc) {
    return '[Axios v' + pkg.version + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  }

  // eslint-disable-next-line func-names
  return function(value, opt, opts) {
    if (validator === false) {
      throw new Error(formatMessage(opt, ' has been removed in ' + version));
    }

    if (isDeprecated && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      // eslint-disable-next-line no-console
      console.warn(
        formatMessage(
          opt,
          ' has been deprecated since v' + version + ' and will be removed in the near future'
        )
      );
    }

    return validator ? validator(value, opt, opts) : true;
  };
};

/**
 * Assert object's properties type
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 */

function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== 'object') {
    throw new TypeError('options must be an object');
  }
  var keys = Object.keys(options);
  var i = keys.length;
  while (i-- > 0) {
    var opt = keys[i];
    var validator = schema[opt];
    if (validator) {
      var value = options[opt];
      var result = value === undefined || validator(value, opt, options);
      if (result !== true) {
        throw new TypeError('option ' + opt + ' must be ' + result);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw Error('Unknown option ' + opt);
    }
  }
}

module.exports = {
  isOlderVersion: isOlderVersion,
  assertOptions: assertOptions,
  validators: validators
};

},{"./../../package.json":85}],84:[function(require,module,exports){
'use strict';

var bind = require('./helpers/bind');

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};

},{"./helpers/bind":73}],85:[function(require,module,exports){
module.exports={
  "name": "axios",
  "version": "0.21.4",
  "description": "Promise based HTTP client for the browser and node.js",
  "main": "index.js",
  "scripts": {
    "test": "grunt test",
    "start": "node ./sandbox/server.js",
    "build": "NODE_ENV=production grunt build",
    "preversion": "npm test",
    "version": "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
    "postversion": "git push && git push --tags",
    "examples": "node ./examples/server.js",
    "coveralls": "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
    "fix": "eslint --fix lib/**/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/axios/axios.git"
  },
  "keywords": [
    "xhr",
    "http",
    "ajax",
    "promise",
    "node"
  ],
  "author": "Matt Zabriskie",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/axios/axios/issues"
  },
  "homepage": "https://axios-http.com",
  "devDependencies": {
    "coveralls": "^3.0.0",
    "es6-promise": "^4.2.4",
    "grunt": "^1.3.0",
    "grunt-banner": "^0.6.0",
    "grunt-cli": "^1.2.0",
    "grunt-contrib-clean": "^1.1.0",
    "grunt-contrib-watch": "^1.0.0",
    "grunt-eslint": "^23.0.0",
    "grunt-karma": "^4.0.0",
    "grunt-mocha-test": "^0.13.3",
    "grunt-ts": "^6.0.0-beta.19",
    "grunt-webpack": "^4.0.2",
    "istanbul-instrumenter-loader": "^1.0.0",
    "jasmine-core": "^2.4.1",
    "karma": "^6.3.2",
    "karma-chrome-launcher": "^3.1.0",
    "karma-firefox-launcher": "^2.1.0",
    "karma-jasmine": "^1.1.1",
    "karma-jasmine-ajax": "^0.1.13",
    "karma-safari-launcher": "^1.0.0",
    "karma-sauce-launcher": "^4.3.6",
    "karma-sinon": "^1.0.5",
    "karma-sourcemap-loader": "^0.3.8",
    "karma-webpack": "^4.0.2",
    "load-grunt-tasks": "^3.5.2",
    "minimist": "^1.2.0",
    "mocha": "^8.2.1",
    "sinon": "^4.5.0",
    "terser-webpack-plugin": "^4.2.3",
    "typescript": "^4.0.5",
    "url-search-params": "^0.10.0",
    "webpack": "^4.44.2",
    "webpack-dev-server": "^3.11.0"
  },
  "browser": {
    "./lib/adapters/http.js": "./lib/adapters/xhr.js"
  },
  "jsdelivr": "dist/axios.min.js",
  "unpkg": "dist/axios.min.js",
  "typings": "./index.d.ts",
  "dependencies": {
    "follow-redirects": "^1.14.0"
  },
  "bundlesize": [
    {
      "path": "./dist/axios.min.js",
      "threshold": "5kB"
    }
  ]
}

},{}],86:[function(require,module,exports){
'use strict'
// base-x encoding / decoding
// Copyright (c) 2018 base-x contributors
// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)
// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.
// @ts-ignore
var _Buffer = require('safe-buffer').Buffer
function base (ALPHABET) {
  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }
  var BASE_MAP = new Uint8Array(256)
  for (var j = 0; j < BASE_MAP.length; j++) {
    BASE_MAP[j] = 255
  }
  for (var i = 0; i < ALPHABET.length; i++) {
    var x = ALPHABET.charAt(i)
    var xc = x.charCodeAt(0)
    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }
    BASE_MAP[xc] = i
  }
  var BASE = ALPHABET.length
  var LEADER = ALPHABET.charAt(0)
  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up
  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up
  function encode (source) {
    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }
    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }
    if (source.length === 0) { return '' }
        // Skip & count leading zeroes.
    var zeroes = 0
    var length = 0
    var pbegin = 0
    var pend = source.length
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++
      zeroes++
    }
        // Allocate enough space in big-endian base58 representation.
    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0
    var b58 = new Uint8Array(size)
        // Process the bytes.
    while (pbegin !== pend) {
      var carry = source[pbegin]
            // Apply "b58 = b58 * 256 + ch".
      var i = 0
      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {
        carry += (256 * b58[it1]) >>> 0
        b58[it1] = (carry % BASE) >>> 0
        carry = (carry / BASE) >>> 0
      }
      if (carry !== 0) { throw new Error('Non-zero carry') }
      length = i
      pbegin++
    }
        // Skip leading zeroes in base58 result.
    var it2 = size - length
    while (it2 !== size && b58[it2] === 0) {
      it2++
    }
        // Translate the result into a string.
    var str = LEADER.repeat(zeroes)
    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }
    return str
  }
  function decodeUnsafe (source) {
    if (typeof source !== 'string') { throw new TypeError('Expected String') }
    if (source.length === 0) { return _Buffer.alloc(0) }
    var psz = 0
        // Skip and count leading '1's.
    var zeroes = 0
    var length = 0
    while (source[psz] === LEADER) {
      zeroes++
      psz++
    }
        // Allocate enough space in big-endian base256 representation.
    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.
    var b256 = new Uint8Array(size)
        // Process the characters.
    while (source[psz]) {
            // Decode character
      var carry = BASE_MAP[source.charCodeAt(psz)]
            // Invalid character
      if (carry === 255) { return }
      var i = 0
      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {
        carry += (BASE * b256[it3]) >>> 0
        b256[it3] = (carry % 256) >>> 0
        carry = (carry / 256) >>> 0
      }
      if (carry !== 0) { throw new Error('Non-zero carry') }
      length = i
      psz++
    }
        // Skip leading zeroes in b256.
    var it4 = size - length
    while (it4 !== size && b256[it4] === 0) {
      it4++
    }
    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))
    vch.fill(0x00, 0, zeroes)
    var j = zeroes
    while (it4 !== size) {
      vch[j++] = b256[it4++]
    }
    return vch
  }
  function decode (string) {
    var buffer = decodeUnsafe(string)
    if (buffer) { return buffer }
    throw new Error('Non-base' + BASE + ' character')
  }
  return {
    encode: encode,
    decodeUnsafe: decodeUnsafe,
    decode: decode
  }
}
module.exports = base

},{"safe-buffer":121}],87:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],88:[function(require,module,exports){
;(function (globalObject) {
  'use strict';

/*
 *      bignumber.js v9.0.2
 *      A JavaScript library for arbitrary-precision arithmetic.
 *      https://github.com/MikeMcl/bignumber.js
 *      Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>
 *      MIT Licensed.
 *
 *      BigNumber.prototype methods     |  BigNumber methods
 *                                      |
 *      absoluteValue            abs    |  clone
 *      comparedTo                      |  config               set
 *      decimalPlaces            dp     |      DECIMAL_PLACES
 *      dividedBy                div    |      ROUNDING_MODE
 *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT
 *      exponentiatedBy          pow    |      RANGE
 *      integerValue                    |      CRYPTO
 *      isEqualTo                eq     |      MODULO_MODE
 *      isFinite                        |      POW_PRECISION
 *      isGreaterThan            gt     |      FORMAT
 *      isGreaterThanOrEqualTo   gte    |      ALPHABET
 *      isInteger                       |  isBigNumber
 *      isLessThan               lt     |  maximum              max
 *      isLessThanOrEqualTo      lte    |  minimum              min
 *      isNaN                           |  random
 *      isNegative                      |  sum
 *      isPositive                      |
 *      isZero                          |
 *      minus                           |
 *      modulo                   mod    |
 *      multipliedBy             times  |
 *      negated                         |
 *      plus                            |
 *      precision                sd     |
 *      shiftedBy                       |
 *      squareRoot               sqrt   |
 *      toExponential                   |
 *      toFixed                         |
 *      toFormat                        |
 *      toFraction                      |
 *      toJSON                          |
 *      toNumber                        |
 *      toPrecision                     |
 *      toString                        |
 *      valueOf                         |
 *
 */


  var BigNumber,
    isNumeric = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
    mathceil = Math.ceil,
    mathfloor = Math.floor,

    bignumberError = '[BigNumber Error] ',
    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',

    BASE = 1e14,
    LOG_BASE = 14,
    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1
    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1
    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],
    SQRT_BASE = 1e7,

    // EDITABLE
    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and
    // the arguments to toExponential, toFixed, toFormat, and toPrecision.
    MAX = 1E9;                                   // 0 to MAX_INT32


  /*
   * Create and return a BigNumber constructor.
   */
  function clone(configObject) {
    var div, convertBase, parseNumeric,
      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },
      ONE = new BigNumber(1),


      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------


      // The default values below must be integers within the inclusive ranges stated.
      // The values can also be changed at run-time using BigNumber.set.

      // The maximum number of decimal places for operations involving division.
      DECIMAL_PLACES = 20,                     // 0 to MAX

      // The rounding mode used when rounding to the above decimal places, and when using
      // toExponential, toFixed, toFormat and toPrecision, and round (default value).
      // UP         0 Away from zero.
      // DOWN       1 Towards zero.
      // CEIL       2 Towards +Infinity.
      // FLOOR      3 Towards -Infinity.
      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.
      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
      ROUNDING_MODE = 4,                       // 0 to 8

      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]

      // The exponent value at and beneath which toString returns exponential notation.
      // Number type: -7
      TO_EXP_NEG = -7,                         // 0 to -MAX

      // The exponent value at and above which toString returns exponential notation.
      // Number type: 21
      TO_EXP_POS = 21,                         // 0 to MAX

      // RANGE : [MIN_EXP, MAX_EXP]

      // The minimum exponent value, beneath which underflow to zero occurs.
      // Number type: -324  (5e-324)
      MIN_EXP = -1e7,                          // -1 to -MAX

      // The maximum exponent value, above which overflow to Infinity occurs.
      // Number type:  308  (1.7976931348623157e+308)
      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.
      MAX_EXP = 1e7,                           // 1 to MAX

      // Whether to use cryptographically-secure random number generation, if available.
      CRYPTO = false,                          // true or false

      // The modulo mode used when calculating the modulus: a mod n.
      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
      // The remainder (r) is calculated as: r = a - n * q.
      //
      // UP        0 The remainder is positive if the dividend is negative, else is negative.
      // DOWN      1 The remainder has the same sign as the dividend.
      //             This modulo mode is commonly known as 'truncated division' and is
      //             equivalent to (a % n) in JavaScript.
      // FLOOR     3 The remainder has the same sign as the divisor (Python %).
      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.
      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).
      //             The remainder is always positive.
      //
      // The truncated division, floored division, Euclidian division and IEEE 754 remainder
      // modes are commonly used for the modulus operation.
      // Although the other rounding modes can also be used, they may not give useful results.
      MODULO_MODE = 1,                         // 0 to 9

      // The maximum number of significant digits of the result of the exponentiatedBy operation.
      // If POW_PRECISION is 0, there will be unlimited significant digits.
      POW_PRECISION = 0,                       // 0 to MAX

      // The format specification used by the BigNumber.prototype.toFormat method.
      FORMAT = {
        prefix: '',
        groupSize: 3,
        secondaryGroupSize: 0,
        groupSeparator: ',',
        decimalSeparator: '.',
        fractionGroupSize: 0,
        fractionGroupSeparator: '\xA0',        // non-breaking space
        suffix: ''
      },

      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',
      // '-', '.', whitespace, or repeated character.
      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'
      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',
      alphabetHasNormalDecimalDigits = true;


    //------------------------------------------------------------------------------------------


    // CONSTRUCTOR


    /*
     * The BigNumber constructor and exported function.
     * Create and return a new instance of a BigNumber object.
     *
     * v {number|string|BigNumber} A numeric value.
     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.
     */
    function BigNumber(v, b) {
      var alphabet, c, caseChanged, e, i, isNum, len, str,
        x = this;

      // Enable constructor call without `new`.
      if (!(x instanceof BigNumber)) return new BigNumber(v, b);

      if (b == null) {

        if (v && v._isBigNumber === true) {
          x.s = v.s;

          if (!v.c || v.e > MAX_EXP) {
            x.c = x.e = null;
          } else if (v.e < MIN_EXP) {
            x.c = [x.e = 0];
          } else {
            x.e = v.e;
            x.c = v.c.slice();
          }

          return;
        }

        if ((isNum = typeof v == 'number') && v * 0 == 0) {

          // Use `1 / n` to handle minus zero also.
          x.s = 1 / v < 0 ? (v = -v, -1) : 1;

          // Fast path for integers, where n < 2147483648 (2**31).
          if (v === ~~v) {
            for (e = 0, i = v; i >= 10; i /= 10, e++);

            if (e > MAX_EXP) {
              x.c = x.e = null;
            } else {
              x.e = e;
              x.c = [v];
            }

            return;
          }

          str = String(v);
        } else {

          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);

          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;
        }

        // Decimal point?
        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');

        // Exponential form?
        if ((i = str.search(/e/i)) > 0) {

          // Determine exponent.
          if (e < 0) e = i;
          e += +str.slice(i + 1);
          str = str.substring(0, i);
        } else if (e < 0) {

          // Integer.
          e = str.length;
        }

      } else {

        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'
        intCheck(b, 2, ALPHABET.length, 'Base');

        // Allow exponential notation to be used with base 10 argument, while
        // also rounding to DECIMAL_PLACES as with other bases.
        if (b == 10 && alphabetHasNormalDecimalDigits) {
          x = new BigNumber(v);
          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);
        }

        str = String(v);

        if (isNum = typeof v == 'number') {

          // Avoid potential interpretation of Infinity and NaN as base 44+ values.
          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);

          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;

          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'
          if (BigNumber.DEBUG && str.replace(/^0\.0*|\./, '').length > 15) {
            throw Error
             (tooManyDigits + v);
          }
        } else {
          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;
        }

        alphabet = ALPHABET.slice(0, b);
        e = i = 0;

        // Check that str is a valid base b number.
        // Don't use RegExp, so alphabet can contain special characters.
        for (len = str.length; i < len; i++) {
          if (alphabet.indexOf(c = str.charAt(i)) < 0) {
            if (c == '.') {

              // If '.' is not the first character and it has not be found before.
              if (i > e) {
                e = len;
                continue;
              }
            } else if (!caseChanged) {

              // Allow e.g. hexadecimal 'FF' as well as 'ff'.
              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||
                  str == str.toLowerCase() && (str = str.toUpperCase())) {
                caseChanged = true;
                i = -1;
                e = 0;
                continue;
              }
            }

            return parseNumeric(x, String(v), isNum, b);
          }
        }

        // Prevent later check for length on converted number.
        isNum = false;
        str = convertBase(str, b, 10, x.s);

        // Decimal point?
        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');
        else e = str.length;
      }

      // Determine leading zeros.
      for (i = 0; str.charCodeAt(i) === 48; i++);

      // Determine trailing zeros.
      for (len = str.length; str.charCodeAt(--len) === 48;);

      if (str = str.slice(i, ++len)) {
        len -= i;

        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'
        if (isNum && BigNumber.DEBUG &&
          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {
            throw Error
             (tooManyDigits + (x.s * v));
        }

         // Overflow?
        if ((e = e - i - 1) > MAX_EXP) {

          // Infinity.
          x.c = x.e = null;

        // Underflow?
        } else if (e < MIN_EXP) {

          // Zero.
          x.c = [x.e = 0];
        } else {
          x.e = e;
          x.c = [];

          // Transform base

          // e is the base 10 exponent.
          // i is where to slice str to get the first element of the coefficient array.
          i = (e + 1) % LOG_BASE;
          if (e < 0) i += LOG_BASE;  // i < 1

          if (i < len) {
            if (i) x.c.push(+str.slice(0, i));

            for (len -= LOG_BASE; i < len;) {
              x.c.push(+str.slice(i, i += LOG_BASE));
            }

            i = LOG_BASE - (str = str.slice(i)).length;
          } else {
            i -= len;
          }

          for (; i--; str += '0');
          x.c.push(+str);
        }
      } else {

        // Zero.
        x.c = [x.e = 0];
      }
    }


    // CONSTRUCTOR PROPERTIES


    BigNumber.clone = clone;

    BigNumber.ROUND_UP = 0;
    BigNumber.ROUND_DOWN = 1;
    BigNumber.ROUND_CEIL = 2;
    BigNumber.ROUND_FLOOR = 3;
    BigNumber.ROUND_HALF_UP = 4;
    BigNumber.ROUND_HALF_DOWN = 5;
    BigNumber.ROUND_HALF_EVEN = 6;
    BigNumber.ROUND_HALF_CEIL = 7;
    BigNumber.ROUND_HALF_FLOOR = 8;
    BigNumber.EUCLID = 9;


    /*
     * Configure infrequently-changing library-wide settings.
     *
     * Accept an object with the following optional properties (if the value of a property is
     * a number, it must be an integer within the inclusive range stated):
     *
     *   DECIMAL_PLACES   {number}           0 to MAX
     *   ROUNDING_MODE    {number}           0 to 8
     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]
     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]
     *   CRYPTO           {boolean}          true or false
     *   MODULO_MODE      {number}           0 to 9
     *   POW_PRECISION       {number}           0 to MAX
     *   ALPHABET         {string}           A string of two or more unique characters which does
     *                                       not contain '.'.
     *   FORMAT           {object}           An object with some of the following properties:
     *     prefix                 {string}
     *     groupSize              {number}
     *     secondaryGroupSize     {number}
     *     groupSeparator         {string}
     *     decimalSeparator       {string}
     *     fractionGroupSize      {number}
     *     fractionGroupSeparator {string}
     *     suffix                 {string}
     *
     * (The values assigned to the above FORMAT object properties are not checked for validity.)
     *
     * E.g.
     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })
     *
     * Ignore properties/parameters set to null or undefined, except for ALPHABET.
     *
     * Return an object with the properties current values.
     */
    BigNumber.config = BigNumber.set = function (obj) {
      var p, v;

      if (obj != null) {

        if (typeof obj == 'object') {

          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.
          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {
            v = obj[p];
            intCheck(v, 0, MAX, p);
            DECIMAL_PLACES = v;
          }

          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.
          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {
            v = obj[p];
            intCheck(v, 0, 8, p);
            ROUNDING_MODE = v;
          }

          // EXPONENTIAL_AT {number|number[]}
          // Integer, -MAX to MAX inclusive or
          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].
          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {
            v = obj[p];
            if (v && v.pop) {
              intCheck(v[0], -MAX, 0, p);
              intCheck(v[1], 0, MAX, p);
              TO_EXP_NEG = v[0];
              TO_EXP_POS = v[1];
            } else {
              intCheck(v, -MAX, MAX, p);
              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);
            }
          }

          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or
          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].
          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'
          if (obj.hasOwnProperty(p = 'RANGE')) {
            v = obj[p];
            if (v && v.pop) {
              intCheck(v[0], -MAX, -1, p);
              intCheck(v[1], 1, MAX, p);
              MIN_EXP = v[0];
              MAX_EXP = v[1];
            } else {
              intCheck(v, -MAX, MAX, p);
              if (v) {
                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);
              } else {
                throw Error
                 (bignumberError + p + ' cannot be zero: ' + v);
              }
            }
          }

          // CRYPTO {boolean} true or false.
          // '[BigNumber Error] CRYPTO not true or false: {v}'
          // '[BigNumber Error] crypto unavailable'
          if (obj.hasOwnProperty(p = 'CRYPTO')) {
            v = obj[p];
            if (v === !!v) {
              if (v) {
                if (typeof crypto != 'undefined' && crypto &&
                 (crypto.getRandomValues || crypto.randomBytes)) {
                  CRYPTO = v;
                } else {
                  CRYPTO = !v;
                  throw Error
                   (bignumberError + 'crypto unavailable');
                }
              } else {
                CRYPTO = v;
              }
            } else {
              throw Error
               (bignumberError + p + ' not true or false: ' + v);
            }
          }

          // MODULO_MODE {number} Integer, 0 to 9 inclusive.
          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {
            v = obj[p];
            intCheck(v, 0, 9, p);
            MODULO_MODE = v;
          }

          // POW_PRECISION {number} Integer, 0 to MAX inclusive.
          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'
          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {
            v = obj[p];
            intCheck(v, 0, MAX, p);
            POW_PRECISION = v;
          }

          // FORMAT {object}
          // '[BigNumber Error] FORMAT not an object: {v}'
          if (obj.hasOwnProperty(p = 'FORMAT')) {
            v = obj[p];
            if (typeof v == 'object') FORMAT = v;
            else throw Error
             (bignumberError + p + ' not an object: ' + v);
          }

          // ALPHABET {string}
          // '[BigNumber Error] ALPHABET invalid: {v}'
          if (obj.hasOwnProperty(p = 'ALPHABET')) {
            v = obj[p];

            // Disallow if less than two characters,
            // or if it contains '+', '-', '.', whitespace, or a repeated character.
            if (typeof v == 'string' && !/^.?$|[+\-.\s]|(.).*\1/.test(v)) {
              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';
              ALPHABET = v;
            } else {
              throw Error
               (bignumberError + p + ' invalid: ' + v);
            }
          }

        } else {

          // '[BigNumber Error] Object expected: {v}'
          throw Error
           (bignumberError + 'Object expected: ' + obj);
        }
      }

      return {
        DECIMAL_PLACES: DECIMAL_PLACES,
        ROUNDING_MODE: ROUNDING_MODE,
        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],
        RANGE: [MIN_EXP, MAX_EXP],
        CRYPTO: CRYPTO,
        MODULO_MODE: MODULO_MODE,
        POW_PRECISION: POW_PRECISION,
        FORMAT: FORMAT,
        ALPHABET: ALPHABET
      };
    };


    /*
     * Return true if v is a BigNumber instance, otherwise return false.
     *
     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.
     *
     * v {any}
     *
     * '[BigNumber Error] Invalid BigNumber: {v}'
     */
    BigNumber.isBigNumber = function (v) {
      if (!v || v._isBigNumber !== true) return false;
      if (!BigNumber.DEBUG) return true;

      var i, n,
        c = v.c,
        e = v.e,
        s = v.s;

      out: if ({}.toString.call(c) == '[object Array]') {

        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {

          // If the first element is zero, the BigNumber value must be zero.
          if (c[0] === 0) {
            if (e === 0 && c.length === 1) return true;
            break out;
          }

          // Calculate number of digits that c[0] should have, based on the exponent.
          i = (e + 1) % LOG_BASE;
          if (i < 1) i += LOG_BASE;

          // Calculate number of digits of c[0].
          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {
          if (String(c[0]).length == i) {

            for (i = 0; i < c.length; i++) {
              n = c[i];
              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;
            }

            // Last element cannot be zero, unless it is the only element.
            if (n !== 0) return true;
          }
        }

      // Infinity/NaN
      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {
        return true;
      }

      throw Error
        (bignumberError + 'Invalid BigNumber: ' + v);
    };


    /*
     * Return a new BigNumber whose value is the maximum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */
    BigNumber.maximum = BigNumber.max = function () {
      return maxOrMin(arguments, P.lt);
    };


    /*
     * Return a new BigNumber whose value is the minimum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */
    BigNumber.minimum = BigNumber.min = function () {
      return maxOrMin(arguments, P.gt);
    };


    /*
     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,
     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing
     * zeros are produced).
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'
     * '[BigNumber Error] crypto unavailable'
     */
    BigNumber.random = (function () {
      var pow2_53 = 0x20000000000000;

      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.
      // Check if Math.random() produces more than 32 bits of randomness.
      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.
      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.
      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff
       ? function () { return mathfloor(Math.random() * pow2_53); }
       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +
         (Math.random() * 0x800000 | 0); };

      return function (dp) {
        var a, b, e, k, v,
          i = 0,
          c = [],
          rand = new BigNumber(ONE);

        if (dp == null) dp = DECIMAL_PLACES;
        else intCheck(dp, 0, MAX);

        k = mathceil(dp / LOG_BASE);

        if (CRYPTO) {

          // Browsers supporting crypto.getRandomValues.
          if (crypto.getRandomValues) {

            a = crypto.getRandomValues(new Uint32Array(k *= 2));

            for (; i < k;) {

              // 53 bits:
              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)
              // 11111 11111111 11111111 11111111 11100000 00000000 00000000
              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)
              //                                     11111 11111111 11111111
              // 0x20000 is 2^21.
              v = a[i] * 0x20000 + (a[i + 1] >>> 11);

              // Rejection sampling:
              // 0 <= v < 9007199254740992
              // Probability that v >= 9e15, is
              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251
              if (v >= 9e15) {
                b = crypto.getRandomValues(new Uint32Array(2));
                a[i] = b[0];
                a[i + 1] = b[1];
              } else {

                // 0 <= v <= 8999999999999999
                // 0 <= (v % 1e14) <= 99999999999999
                c.push(v % 1e14);
                i += 2;
              }
            }
            i = k / 2;

          // Node.js supporting crypto.randomBytes.
          } else if (crypto.randomBytes) {

            // buffer
            a = crypto.randomBytes(k *= 7);

            for (; i < k;) {

              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40
              // 0x100000000 is 2^32, 0x1000000 is 2^24
              // 11111 11111111 11111111 11111111 11111111 11111111 11111111
              // 0 <= v < 9007199254740992
              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +
                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +
                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];

              if (v >= 9e15) {
                crypto.randomBytes(7).copy(a, i);
              } else {

                // 0 <= (v % 1e14) <= 99999999999999
                c.push(v % 1e14);
                i += 7;
              }
            }
            i = k / 7;
          } else {
            CRYPTO = false;
            throw Error
             (bignumberError + 'crypto unavailable');
          }
        }

        // Use Math.random.
        if (!CRYPTO) {

          for (; i < k;) {
            v = random53bitInt();
            if (v < 9e15) c[i++] = v % 1e14;
          }
        }

        k = c[--i];
        dp %= LOG_BASE;

        // Convert trailing digits to zeros according to dp.
        if (k && dp) {
          v = POWS_TEN[LOG_BASE - dp];
          c[i] = mathfloor(k / v) * v;
        }

        // Remove trailing elements which are zero.
        for (; c[i] === 0; c.pop(), i--);

        // Zero?
        if (i < 0) {
          c = [e = 0];
        } else {

          // Remove leading elements which are zero and adjust exponent accordingly.
          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);

          // Count the digits of the first element of c to determine leading zeros, and...
          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);

          // adjust the exponent accordingly.
          if (i < LOG_BASE) e -= LOG_BASE - i;
        }

        rand.e = e;
        rand.c = c;
        return rand;
      };
    })();


    /*
     * Return a BigNumber whose value is the sum of the arguments.
     *
     * arguments {number|string|BigNumber}
     */
    BigNumber.sum = function () {
      var i = 1,
        args = arguments,
        sum = new BigNumber(args[0]);
      for (; i < args.length;) sum = sum.plus(args[i++]);
      return sum;
    };


    // PRIVATE FUNCTIONS


    // Called by BigNumber and BigNumber.prototype.toString.
    convertBase = (function () {
      var decimal = '0123456789';

      /*
       * Convert string of baseIn to an array of numbers of baseOut.
       * Eg. toBaseOut('255', 10, 16) returns [15, 15].
       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].
       */
      function toBaseOut(str, baseIn, baseOut, alphabet) {
        var j,
          arr = [0],
          arrL,
          i = 0,
          len = str.length;

        for (; i < len;) {
          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);

          arr[0] += alphabet.indexOf(str.charAt(i++));

          for (j = 0; j < arr.length; j++) {

            if (arr[j] > baseOut - 1) {
              if (arr[j + 1] == null) arr[j + 1] = 0;
              arr[j + 1] += arr[j] / baseOut | 0;
              arr[j] %= baseOut;
            }
          }
        }

        return arr.reverse();
      }

      // Convert a numeric string of baseIn to a numeric string of baseOut.
      // If the caller is toString, we are converting from base 10 to baseOut.
      // If the caller is BigNumber, we are converting from baseIn to base 10.
      return function (str, baseIn, baseOut, sign, callerIsToString) {
        var alphabet, d, e, k, r, x, xc, y,
          i = str.indexOf('.'),
          dp = DECIMAL_PLACES,
          rm = ROUNDING_MODE;

        // Non-integer.
        if (i >= 0) {
          k = POW_PRECISION;

          // Unlimited precision.
          POW_PRECISION = 0;
          str = str.replace('.', '');
          y = new BigNumber(baseIn);
          x = y.pow(str.length - i);
          POW_PRECISION = k;

          // Convert str as if an integer, then restore the fraction part by dividing the
          // result by its base raised to a power.

          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),
           10, baseOut, decimal);
          y.e = y.c.length;
        }

        // Convert the number as integer.

        xc = toBaseOut(str, baseIn, baseOut, callerIsToString
         ? (alphabet = ALPHABET, decimal)
         : (alphabet = decimal, ALPHABET));

        // xc now represents str as an integer and converted to baseOut. e is the exponent.
        e = k = xc.length;

        // Remove trailing zeros.
        for (; xc[--k] == 0; xc.pop());

        // Zero?
        if (!xc[0]) return alphabet.charAt(0);

        // Does str represent an integer? If so, no need for the division.
        if (i < 0) {
          --e;
        } else {
          x.c = xc;
          x.e = e;

          // The sign is needed for correct rounding.
          x.s = sign;
          x = div(x, y, dp, rm, baseOut);
          xc = x.c;
          r = x.r;
          e = x.e;
        }

        // xc now represents str converted to baseOut.

        // THe index of the rounding digit.
        d = e + dp + 1;

        // The rounding digit: the digit to the right of the digit that may be rounded up.
        i = xc[d];

        // Look at the rounding digits and mode to determine whether to round up.

        k = baseOut / 2;
        r = r || d < 0 || xc[d + 1] != null;

        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))
              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||
               rm == (x.s < 0 ? 8 : 7));

        // If the index of the rounding digit is not greater than zero, or xc represents
        // zero, then the result of the base conversion is zero or, if rounding up, a value
        // such as 0.00001.
        if (d < 1 || !xc[0]) {

          // 1^-dp or 0
          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);
        } else {

          // Truncate xc to the required number of decimal places.
          xc.length = d;

          // Round up?
          if (r) {

            // Rounding up may mean the previous digit has to be rounded up and so on.
            for (--baseOut; ++xc[--d] > baseOut;) {
              xc[d] = 0;

              if (!d) {
                ++e;
                xc = [1].concat(xc);
              }
            }
          }

          // Determine trailing zeros.
          for (k = xc.length; !xc[--k];);

          // E.g. [4, 11, 15] becomes 4bf.
          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));

          // Add leading zeros, decimal point and trailing zeros as required.
          str = toFixedPoint(str, e, alphabet.charAt(0));
        }

        // The caller will add the sign.
        return str;
      };
    })();


    // Perform division in the specified base. Called by div and convertBase.
    div = (function () {

      // Assume non-zero x and k.
      function multiply(x, k, base) {
        var m, temp, xlo, xhi,
          carry = 0,
          i = x.length,
          klo = k % SQRT_BASE,
          khi = k / SQRT_BASE | 0;

        for (x = x.slice(); i--;) {
          xlo = x[i] % SQRT_BASE;
          xhi = x[i] / SQRT_BASE | 0;
          m = khi * xlo + xhi * klo;
          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;
          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;
          x[i] = temp % base;
        }

        if (carry) x = [carry].concat(x);

        return x;
      }

      function compare(a, b, aL, bL) {
        var i, cmp;

        if (aL != bL) {
          cmp = aL > bL ? 1 : -1;
        } else {

          for (i = cmp = 0; i < aL; i++) {

            if (a[i] != b[i]) {
              cmp = a[i] > b[i] ? 1 : -1;
              break;
            }
          }
        }

        return cmp;
      }

      function subtract(a, b, aL, base) {
        var i = 0;

        // Subtract b from a.
        for (; aL--;) {
          a[aL] -= i;
          i = a[aL] < b[aL] ? 1 : 0;
          a[aL] = i * base + a[aL] - b[aL];
        }

        // Remove leading zeros.
        for (; !a[0] && a.length > 1; a.splice(0, 1));
      }

      // x: dividend, y: divisor.
      return function (x, y, dp, rm, base) {
        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,
          yL, yz,
          s = x.s == y.s ? 1 : -1,
          xc = x.c,
          yc = y.c;

        // Either NaN, Infinity or 0?
        if (!xc || !xc[0] || !yc || !yc[0]) {

          return new BigNumber(

           // Return NaN if either NaN, or both Infinity or 0.
           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :

            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.
            xc && xc[0] == 0 || !yc ? s * 0 : s / 0
         );
        }

        q = new BigNumber(s);
        qc = q.c = [];
        e = x.e - y.e;
        s = dp + e + 1;

        if (!base) {
          base = BASE;
          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);
          s = s / LOG_BASE | 0;
        }

        // Result exponent may be one less then the current value of e.
        // The coefficients of the BigNumbers from convertBase may have trailing zeros.
        for (i = 0; yc[i] == (xc[i] || 0); i++);

        if (yc[i] > (xc[i] || 0)) e--;

        if (s < 0) {
          qc.push(1);
          more = true;
        } else {
          xL = xc.length;
          yL = yc.length;
          i = 0;
          s += 2;

          // Normalise xc and yc so highest order digit of yc is >= base / 2.

          n = mathfloor(base / (yc[0] + 1));

          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.
          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {
          if (n > 1) {
            yc = multiply(yc, n, base);
            xc = multiply(xc, n, base);
            yL = yc.length;
            xL = xc.length;
          }

          xi = yL;
          rem = xc.slice(0, yL);
          remL = rem.length;

          // Add zeros to make remainder as long as divisor.
          for (; remL < yL; rem[remL++] = 0);
          yz = yc.slice();
          yz = [0].concat(yz);
          yc0 = yc[0];
          if (yc[1] >= base / 2) yc0++;
          // Not necessary, but to prevent trial digit n > base, when using base 3.
          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;

          do {
            n = 0;

            // Compare divisor and remainder.
            cmp = compare(yc, rem, yL, remL);

            // If divisor < remainder.
            if (cmp < 0) {

              // Calculate trial digit, n.

              rem0 = rem[0];
              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);

              // n is how many times the divisor goes into the current remainder.
              n = mathfloor(rem0 / yc0);

              //  Algorithm:
              //  product = divisor multiplied by trial digit (n).
              //  Compare product and remainder.
              //  If product is greater than remainder:
              //    Subtract divisor from product, decrement trial digit.
              //  Subtract product from remainder.
              //  If product was less than remainder at the last compare:
              //    Compare new remainder and divisor.
              //    If remainder is greater than divisor:
              //      Subtract divisor from remainder, increment trial digit.

              if (n > 1) {

                // n may be > base only when base is 3.
                if (n >= base) n = base - 1;

                // product = divisor * trial digit.
                prod = multiply(yc, n, base);
                prodL = prod.length;
                remL = rem.length;

                // Compare product and remainder.
                // If product > remainder then trial digit n too high.
                // n is 1 too high about 5% of the time, and is not known to have
                // ever been more than 1 too high.
                while (compare(prod, rem, prodL, remL) == 1) {
                  n--;

                  // Subtract divisor from product.
                  subtract(prod, yL < prodL ? yz : yc, prodL, base);
                  prodL = prod.length;
                  cmp = 1;
                }
              } else {

                // n is 0 or 1, cmp is -1.
                // If n is 0, there is no need to compare yc and rem again below,
                // so change cmp to 1 to avoid it.
                // If n is 1, leave cmp as -1, so yc and rem are compared again.
                if (n == 0) {

                  // divisor < remainder, so n must be at least 1.
                  cmp = n = 1;
                }

                // product = divisor
                prod = yc.slice();
                prodL = prod.length;
              }

              if (prodL < remL) prod = [0].concat(prod);

              // Subtract product from remainder.
              subtract(rem, prod, remL, base);
              remL = rem.length;

               // If product was < remainder.
              if (cmp == -1) {

                // Compare divisor and new remainder.
                // If divisor < new remainder, subtract divisor from remainder.
                // Trial digit n too low.
                // n is 1 too low about 5% of the time, and very rarely 2 too low.
                while (compare(yc, rem, yL, remL) < 1) {
                  n++;

                  // Subtract divisor from remainder.
                  subtract(rem, yL < remL ? yz : yc, remL, base);
                  remL = rem.length;
                }
              }
            } else if (cmp === 0) {
              n++;
              rem = [0];
            } // else cmp === 1 and n will be 0

            // Add the next digit, n, to the result array.
            qc[i++] = n;

            // Update the remainder.
            if (rem[0]) {
              rem[remL++] = xc[xi] || 0;
            } else {
              rem = [xc[xi]];
              remL = 1;
            }
          } while ((xi++ < xL || rem[0] != null) && s--);

          more = rem[0] != null;

          // Leading zero?
          if (!qc[0]) qc.splice(0, 1);
        }

        if (base == BASE) {

          // To calculate q.e, first get the number of digits of qc[0].
          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);

          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);

        // Caller is convertBase.
        } else {
          q.e = e;
          q.r = +more;
        }

        return q;
      };
    })();


    /*
     * Return a string representing the value of BigNumber n in fixed-point or exponential
     * notation rounded to the specified decimal places or significant digits.
     *
     * n: a BigNumber.
     * i: the index of the last digit required (i.e. the digit that may be rounded up).
     * rm: the rounding mode.
     * id: 1 (toExponential) or 2 (toPrecision).
     */
    function format(n, i, rm, id) {
      var c0, e, ne, len, str;

      if (rm == null) rm = ROUNDING_MODE;
      else intCheck(rm, 0, 8);

      if (!n.c) return n.toString();

      c0 = n.c[0];
      ne = n.e;

      if (i == null) {
        str = coeffToString(n.c);
        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)
         ? toExponential(str, ne)
         : toFixedPoint(str, ne, '0');
      } else {
        n = round(new BigNumber(n), i, rm);

        // n.e may have changed if the value was rounded up.
        e = n.e;

        str = coeffToString(n.c);
        len = str.length;

        // toPrecision returns exponential notation if the number of significant digits
        // specified is less than the number of digits necessary to represent the integer
        // part of the value in fixed-point notation.

        // Exponential notation.
        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {

          // Append zeros?
          for (; len < i; str += '0', len++);
          str = toExponential(str, e);

        // Fixed-point notation.
        } else {
          i -= ne;
          str = toFixedPoint(str, e, '0');

          // Append zeros?
          if (e + 1 > len) {
            if (--i > 0) for (str += '.'; i--; str += '0');
          } else {
            i += e - len;
            if (i > 0) {
              if (e + 1 == len) str += '.';
              for (; i--; str += '0');
            }
          }
        }
      }

      return n.s < 0 && c0 ? '-' + str : str;
    }


    // Handle BigNumber.max and BigNumber.min.
    function maxOrMin(args, method) {
      var n,
        i = 1,
        m = new BigNumber(args[0]);

      for (; i < args.length; i++) {
        n = new BigNumber(args[i]);

        // If any number is NaN, return NaN.
        if (!n.s) {
          m = n;
          break;
        } else if (method.call(m, n)) {
          m = n;
        }
      }

      return m;
    }


    /*
     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.
     * Called by minus, plus and times.
     */
    function normalise(n, c, e) {
      var i = 1,
        j = c.length;

       // Remove trailing zeros.
      for (; !c[--j]; c.pop());

      // Calculate the base 10 exponent. First get the number of digits of c[0].
      for (j = c[0]; j >= 10; j /= 10, i++);

      // Overflow?
      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {

        // Infinity.
        n.c = n.e = null;

      // Underflow?
      } else if (e < MIN_EXP) {

        // Zero.
        n.c = [n.e = 0];
      } else {
        n.e = e;
        n.c = c;
      }

      return n;
    }


    // Handle values that fail the validity test in BigNumber.
    parseNumeric = (function () {
      var basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
        dotAfter = /^([^.]+)\.$/,
        dotBefore = /^\.([^.]+)$/,
        isInfinityOrNaN = /^-?(Infinity|NaN)$/,
        whitespaceOrPlus = /^\s*\+(?=[\w.])|^\s+|\s+$/g;

      return function (x, str, isNum, b) {
        var base,
          s = isNum ? str : str.replace(whitespaceOrPlus, '');

        // No exception on ±Infinity or NaN.
        if (isInfinityOrNaN.test(s)) {
          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;
        } else {
          if (!isNum) {

            // basePrefix = /^(-?)0([xbo])(?=\w[\w.]*$)/i
            s = s.replace(basePrefix, function (m, p1, p2) {
              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;
              return !b || b == base ? p1 : m;
            });

            if (b) {
              base = b;

              // E.g. '1.' to '1', '.1' to '0.1'
              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');
            }

            if (str != s) return new BigNumber(s, base);
          }

          // '[BigNumber Error] Not a number: {n}'
          // '[BigNumber Error] Not a base {b} number: {n}'
          if (BigNumber.DEBUG) {
            throw Error
              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);
          }

          // NaN
          x.s = null;
        }

        x.c = x.e = null;
      }
    })();


    /*
     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.
     * If r is truthy, it is known that there are more digits after the rounding digit.
     */
    function round(x, sd, rm, r) {
      var d, i, j, k, n, ni, rd,
        xc = x.c,
        pows10 = POWS_TEN;

      // if x is not Infinity or NaN...
      if (xc) {

        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.
        // n is a base 1e14 number, the value of the element of array x.c containing rd.
        // ni is the index of n within x.c.
        // d is the number of digits of n.
        // i is the index of rd within n including leading zeros.
        // j is the actual index of rd within n (if < 0, rd is a leading zero).
        out: {

          // Get the number of digits of the first element of xc.
          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);
          i = sd - d;

          // If the rounding digit is in the first element of xc...
          if (i < 0) {
            i += LOG_BASE;
            j = sd;
            n = xc[ni = 0];

            // Get the rounding digit at index j of n.
            rd = n / pows10[d - j - 1] % 10 | 0;
          } else {
            ni = mathceil((i + 1) / LOG_BASE);

            if (ni >= xc.length) {

              if (r) {

                // Needed by sqrt.
                for (; xc.length <= ni; xc.push(0));
                n = rd = 0;
                d = 1;
                i %= LOG_BASE;
                j = i - LOG_BASE + 1;
              } else {
                break out;
              }
            } else {
              n = k = xc[ni];

              // Get the number of digits of n.
              for (d = 1; k >= 10; k /= 10, d++);

              // Get the index of rd within n.
              i %= LOG_BASE;

              // Get the index of rd within n, adjusted for leading zeros.
              // The number of leading zeros of n is given by LOG_BASE - d.
              j = i - LOG_BASE + d;

              // Get the rounding digit at index j of n.
              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;
            }
          }

          r = r || sd < 0 ||

          // Are there any non-zero digits after the rounding digit?
          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right
          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.
           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);

          r = rm < 4
           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))
           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&

            // Check whether the digit to the left of the rounding digit is odd.
            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||
             rm == (x.s < 0 ? 8 : 7));

          if (sd < 1 || !xc[0]) {
            xc.length = 0;

            if (r) {

              // Convert sd to decimal places.
              sd -= x.e + 1;

              // 1, 0.1, 0.01, 0.001, 0.0001 etc.
              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];
              x.e = -sd || 0;
            } else {

              // Zero.
              xc[0] = x.e = 0;
            }

            return x;
          }

          // Remove excess digits.
          if (i == 0) {
            xc.length = ni;
            k = 1;
            ni--;
          } else {
            xc.length = ni + 1;
            k = pows10[LOG_BASE - i];

            // E.g. 56700 becomes 56000 if 7 is the rounding digit.
            // j > 0 means i > number of leading zeros of n.
            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;
          }

          // Round up?
          if (r) {

            for (; ;) {

              // If the digit to be rounded up is in the first element of xc...
              if (ni == 0) {

                // i will be the length of xc[0] before k is added.
                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);
                j = xc[0] += k;
                for (k = 1; j >= 10; j /= 10, k++);

                // if i != k the length has increased.
                if (i != k) {
                  x.e++;
                  if (xc[0] == BASE) xc[0] = 1;
                }

                break;
              } else {
                xc[ni] += k;
                if (xc[ni] != BASE) break;
                xc[ni--] = 0;
                k = 1;
              }
            }
          }

          // Remove trailing zeros.
          for (i = xc.length; xc[--i] === 0; xc.pop());
        }

        // Overflow? Infinity.
        if (x.e > MAX_EXP) {
          x.c = x.e = null;

        // Underflow? Zero.
        } else if (x.e < MIN_EXP) {
          x.c = [x.e = 0];
        }
      }

      return x;
    }


    function valueOf(n) {
      var str,
        e = n.e;

      if (e === null) return n.toString();

      str = coeffToString(n.c);

      str = e <= TO_EXP_NEG || e >= TO_EXP_POS
        ? toExponential(str, e)
        : toFixedPoint(str, e, '0');

      return n.s < 0 ? '-' + str : str;
    }


    // PROTOTYPE/INSTANCE METHODS


    /*
     * Return a new BigNumber whose value is the absolute value of this BigNumber.
     */
    P.absoluteValue = P.abs = function () {
      var x = new BigNumber(this);
      if (x.s < 0) x.s = 1;
      return x;
    };


    /*
     * Return
     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),
     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),
     *   0 if they have the same value,
     *   or null if the value of either is NaN.
     */
    P.comparedTo = function (y, b) {
      return compare(this, new BigNumber(y, b));
    };


    /*
     * If dp is undefined or null or true or false, return the number of decimal places of the
     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.
     *
     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this
     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or
     * ROUNDING_MODE if rm is omitted.
     *
     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */
    P.decimalPlaces = P.dp = function (dp, rm) {
      var c, n, v,
        x = this;

      if (dp != null) {
        intCheck(dp, 0, MAX);
        if (rm == null) rm = ROUNDING_MODE;
        else intCheck(rm, 0, 8);

        return round(new BigNumber(x), dp + x.e + 1, rm);
      }

      if (!(c = x.c)) return null;
      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;

      // Subtract the number of trailing zeros of the last number.
      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);
      if (n < 0) n = 0;

      return n;
    };


    /*
     *  n / 0 = I
     *  n / N = N
     *  n / I = 0
     *  0 / n = 0
     *  0 / 0 = N
     *  0 / N = N
     *  0 / I = 0
     *  N / n = N
     *  N / 0 = N
     *  N / N = N
     *  N / I = N
     *  I / n = I
     *  I / 0 = I
     *  I / N = N
     *  I / I = N
     *
     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of
     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.
     */
    P.dividedBy = P.div = function (y, b) {
      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);
    };


    /*
     * Return a new BigNumber whose value is the integer part of dividing the value of this
     * BigNumber by the value of BigNumber(y, b).
     */
    P.dividedToIntegerBy = P.idiv = function (y, b) {
      return div(this, new BigNumber(y, b), 0, 1);
    };


    /*
     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.
     *
     * If m is present, return the result modulo m.
     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.
     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.
     *
     * The modular power operation works efficiently when x, n, and m are integers, otherwise it
     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.
     *
     * n {number|string|BigNumber} The exponent. An integer.
     * [m] {number|string|BigNumber} The modulus.
     *
     * '[BigNumber Error] Exponent not an integer: {n}'
     */
    P.exponentiatedBy = P.pow = function (n, m) {
      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,
        x = this;

      n = new BigNumber(n);

      // Allow NaN and ±Infinity, but not other non-integers.
      if (n.c && !n.isInteger()) {
        throw Error
          (bignumberError + 'Exponent not an integer: ' + valueOf(n));
      }

      if (m != null) m = new BigNumber(m);

      // Exponent of MAX_SAFE_INTEGER is 15.
      nIsBig = n.e > 14;

      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.
      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {

        // The sign of the result of pow when x is negative depends on the evenness of n.
        // If +n overflows to ±Infinity, the evenness of n would be not be known.
        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));
        return m ? y.mod(m) : y;
      }

      nIsNeg = n.s < 0;

      if (m) {

        // x % m returns NaN if abs(m) is zero, or m is NaN.
        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);

        isModExp = !nIsNeg && x.isInteger() && m.isInteger();

        if (isModExp) x = x.mod(m);

      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.
      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.
      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0
        // [1, 240000000]
        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7
        // [80000000000000]  [99999750000000]
        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {

        // If x is negative and n is odd, k = -0, else k = 0.
        k = x.s < 0 && isOdd(n) ? -0 : 0;

        // If x >= 1, k = ±Infinity.
        if (x.e > -1) k = 1 / k;

        // If n is negative return ±0, else return ±Infinity.
        return new BigNumber(nIsNeg ? 1 / k : k);

      } else if (POW_PRECISION) {

        // Truncating each coefficient array to a length of k after each multiplication
        // equates to truncating significant digits to POW_PRECISION + [28, 41],
        // i.e. there will be a minimum of 28 guard digits retained.
        k = mathceil(POW_PRECISION / LOG_BASE + 2);
      }

      if (nIsBig) {
        half = new BigNumber(0.5);
        if (nIsNeg) n.s = 1;
        nIsOdd = isOdd(n);
      } else {
        i = Math.abs(+valueOf(n));
        nIsOdd = i % 2;
      }

      y = new BigNumber(ONE);

      // Performs 54 loop iterations for n of 9007199254740991.
      for (; ;) {

        if (nIsOdd) {
          y = y.times(x);
          if (!y.c) break;

          if (k) {
            if (y.c.length > k) y.c.length = k;
          } else if (isModExp) {
            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));
          }
        }

        if (i) {
          i = mathfloor(i / 2);
          if (i === 0) break;
          nIsOdd = i % 2;
        } else {
          n = n.times(half);
          round(n, n.e + 1, 1);

          if (n.e > 14) {
            nIsOdd = isOdd(n);
          } else {
            i = +valueOf(n);
            if (i === 0) break;
            nIsOdd = i % 2;
          }
        }

        x = x.times(x);

        if (k) {
          if (x.c && x.c.length > k) x.c.length = k;
        } else if (isModExp) {
          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));
        }
      }

      if (isModExp) return y;
      if (nIsNeg) y = ONE.div(y);

      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;
    };


    /*
     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer
     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.
     *
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'
     */
    P.integerValue = function (rm) {
      var n = new BigNumber(this);
      if (rm == null) rm = ROUNDING_MODE;
      else intCheck(rm, 0, 8);
      return round(n, n.e + 1, rm);
    };


    /*
     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),
     * otherwise return false.
     */
    P.isEqualTo = P.eq = function (y, b) {
      return compare(this, new BigNumber(y, b)) === 0;
    };


    /*
     * Return true if the value of this BigNumber is a finite number, otherwise return false.
     */
    P.isFinite = function () {
      return !!this.c;
    };


    /*
     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),
     * otherwise return false.
     */
    P.isGreaterThan = P.gt = function (y, b) {
      return compare(this, new BigNumber(y, b)) > 0;
    };


    /*
     * Return true if the value of this BigNumber is greater than or equal to the value of
     * BigNumber(y, b), otherwise return false.
     */
    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {
      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;

    };


    /*
     * Return true if the value of this BigNumber is an integer, otherwise return false.
     */
    P.isInteger = function () {
      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;
    };


    /*
     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),
     * otherwise return false.
     */
    P.isLessThan = P.lt = function (y, b) {
      return compare(this, new BigNumber(y, b)) < 0;
    };


    /*
     * Return true if the value of this BigNumber is less than or equal to the value of
     * BigNumber(y, b), otherwise return false.
     */
    P.isLessThanOrEqualTo = P.lte = function (y, b) {
      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;
    };


    /*
     * Return true if the value of this BigNumber is NaN, otherwise return false.
     */
    P.isNaN = function () {
      return !this.s;
    };


    /*
     * Return true if the value of this BigNumber is negative, otherwise return false.
     */
    P.isNegative = function () {
      return this.s < 0;
    };


    /*
     * Return true if the value of this BigNumber is positive, otherwise return false.
     */
    P.isPositive = function () {
      return this.s > 0;
    };


    /*
     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.
     */
    P.isZero = function () {
      return !!this.c && this.c[0] == 0;
    };


    /*
     *  n - 0 = n
     *  n - N = N
     *  n - I = -I
     *  0 - n = -n
     *  0 - 0 = 0
     *  0 - N = N
     *  0 - I = -I
     *  N - n = N
     *  N - 0 = N
     *  N - N = N
     *  N - I = N
     *  I - n = I
     *  I - 0 = I
     *  I - N = N
     *  I - I = N
     *
     * Return a new BigNumber whose value is the value of this BigNumber minus the value of
     * BigNumber(y, b).
     */
    P.minus = function (y, b) {
      var i, j, t, xLTy,
        x = this,
        a = x.s;

      y = new BigNumber(y, b);
      b = y.s;

      // Either NaN?
      if (!a || !b) return new BigNumber(NaN);

      // Signs differ?
      if (a != b) {
        y.s = -b;
        return x.plus(y);
      }

      var xe = x.e / LOG_BASE,
        ye = y.e / LOG_BASE,
        xc = x.c,
        yc = y.c;

      if (!xe || !ye) {

        // Either Infinity?
        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);

        // Either zero?
        if (!xc[0] || !yc[0]) {

          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :

           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity
           ROUNDING_MODE == 3 ? -0 : 0);
        }
      }

      xe = bitFloor(xe);
      ye = bitFloor(ye);
      xc = xc.slice();

      // Determine which is the bigger number.
      if (a = xe - ye) {

        if (xLTy = a < 0) {
          a = -a;
          t = xc;
        } else {
          ye = xe;
          t = yc;
        }

        t.reverse();

        // Prepend zeros to equalise exponents.
        for (b = a; b--; t.push(0));
        t.reverse();
      } else {

        // Exponents equal. Check digit by digit.
        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;

        for (a = b = 0; b < j; b++) {

          if (xc[b] != yc[b]) {
            xLTy = xc[b] < yc[b];
            break;
          }
        }
      }

      // x < y? Point xc to the array of the bigger number.
      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;

      b = (j = yc.length) - (i = xc.length);

      // Append zeros to xc if shorter.
      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.
      if (b > 0) for (; b--; xc[i++] = 0);
      b = BASE - 1;

      // Subtract yc from xc.
      for (; j > a;) {

        if (xc[--j] < yc[j]) {
          for (i = j; i && !xc[--i]; xc[i] = b);
          --xc[i];
          xc[j] += BASE;
        }

        xc[j] -= yc[j];
      }

      // Remove leading zeros and adjust exponent accordingly.
      for (; xc[0] == 0; xc.splice(0, 1), --ye);

      // Zero?
      if (!xc[0]) {

        // Following IEEE 754 (2008) 6.3,
        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.
        y.s = ROUNDING_MODE == 3 ? -1 : 1;
        y.c = [y.e = 0];
        return y;
      }

      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity
      // for finite x and y.
      return normalise(y, xc, ye);
    };


    /*
     *   n % 0 =  N
     *   n % N =  N
     *   n % I =  n
     *   0 % n =  0
     *  -0 % n = -0
     *   0 % 0 =  N
     *   0 % N =  N
     *   0 % I =  0
     *   N % n =  N
     *   N % 0 =  N
     *   N % N =  N
     *   N % I =  N
     *   I % n =  N
     *   I % 0 =  N
     *   I % N =  N
     *   I % I =  N
     *
     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of
     * BigNumber(y, b). The result depends on the value of MODULO_MODE.
     */
    P.modulo = P.mod = function (y, b) {
      var q, s,
        x = this;

      y = new BigNumber(y, b);

      // Return NaN if x is Infinity or NaN, or y is NaN or zero.
      if (!x.c || !y.s || y.c && !y.c[0]) {
        return new BigNumber(NaN);

      // Return x if y is Infinity or x is zero.
      } else if (!y.c || x.c && !x.c[0]) {
        return new BigNumber(x);
      }

      if (MODULO_MODE == 9) {

        // Euclidian division: q = sign(y) * floor(x / abs(y))
        // r = x - qy    where  0 <= r < abs(y)
        s = y.s;
        y.s = 1;
        q = div(x, y, 0, 3);
        y.s = s;
        q.s *= s;
      } else {
        q = div(x, y, 0, MODULO_MODE);
      }

      y = x.minus(q.times(y));

      // To match JavaScript %, ensure sign of zero is sign of dividend.
      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;

      return y;
    };


    /*
     *  n * 0 = 0
     *  n * N = N
     *  n * I = I
     *  0 * n = 0
     *  0 * 0 = 0
     *  0 * N = N
     *  0 * I = N
     *  N * n = N
     *  N * 0 = N
     *  N * N = N
     *  N * I = N
     *  I * n = I
     *  I * 0 = N
     *  I * N = N
     *  I * I = I
     *
     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value
     * of BigNumber(y, b).
     */
    P.multipliedBy = P.times = function (y, b) {
      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,
        base, sqrtBase,
        x = this,
        xc = x.c,
        yc = (y = new BigNumber(y, b)).c;

      // Either NaN, ±Infinity or ±0?
      if (!xc || !yc || !xc[0] || !yc[0]) {

        // Return NaN if either is NaN, or one is 0 and the other is Infinity.
        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {
          y.c = y.e = y.s = null;
        } else {
          y.s *= x.s;

          // Return ±Infinity if either is ±Infinity.
          if (!xc || !yc) {
            y.c = y.e = null;

          // Return ±0 if either is ±0.
          } else {
            y.c = [0];
            y.e = 0;
          }
        }

        return y;
      }

      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);
      y.s *= x.s;
      xcL = xc.length;
      ycL = yc.length;

      // Ensure xc points to longer array and xcL to its length.
      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;

      // Initialise the result array with zeros.
      for (i = xcL + ycL, zc = []; i--; zc.push(0));

      base = BASE;
      sqrtBase = SQRT_BASE;

      for (i = ycL; --i >= 0;) {
        c = 0;
        ylo = yc[i] % sqrtBase;
        yhi = yc[i] / sqrtBase | 0;

        for (k = xcL, j = i + k; j > i;) {
          xlo = xc[--k] % sqrtBase;
          xhi = xc[k] / sqrtBase | 0;
          m = yhi * xlo + xhi * ylo;
          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;
          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;
          zc[j--] = xlo % base;
        }

        zc[j] = c;
      }

      if (c) {
        ++e;
      } else {
        zc.splice(0, 1);
      }

      return normalise(y, zc, e);
    };


    /*
     * Return a new BigNumber whose value is the value of this BigNumber negated,
     * i.e. multiplied by -1.
     */
    P.negated = function () {
      var x = new BigNumber(this);
      x.s = -x.s || null;
      return x;
    };


    /*
     *  n + 0 = n
     *  n + N = N
     *  n + I = I
     *  0 + n = n
     *  0 + 0 = 0
     *  0 + N = N
     *  0 + I = I
     *  N + n = N
     *  N + 0 = N
     *  N + N = N
     *  N + I = N
     *  I + n = I
     *  I + 0 = I
     *  I + N = N
     *  I + I = I
     *
     * Return a new BigNumber whose value is the value of this BigNumber plus the value of
     * BigNumber(y, b).
     */
    P.plus = function (y, b) {
      var t,
        x = this,
        a = x.s;

      y = new BigNumber(y, b);
      b = y.s;

      // Either NaN?
      if (!a || !b) return new BigNumber(NaN);

      // Signs differ?
       if (a != b) {
        y.s = -b;
        return x.minus(y);
      }

      var xe = x.e / LOG_BASE,
        ye = y.e / LOG_BASE,
        xc = x.c,
        yc = y.c;

      if (!xe || !ye) {

        // Return ±Infinity if either ±Infinity.
        if (!xc || !yc) return new BigNumber(a / 0);

        // Either zero?
        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.
        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);
      }

      xe = bitFloor(xe);
      ye = bitFloor(ye);
      xc = xc.slice();

      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.
      if (a = xe - ye) {
        if (a > 0) {
          ye = xe;
          t = yc;
        } else {
          a = -a;
          t = xc;
        }

        t.reverse();
        for (; a--; t.push(0));
        t.reverse();
      }

      a = xc.length;
      b = yc.length;

      // Point xc to the longer array, and b to the shorter length.
      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;

      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.
      for (a = 0; b;) {
        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;
        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;
      }

      if (a) {
        xc = [a].concat(xc);
        ++ye;
      }

      // No need to check for zero, as +x + +y != 0 && -x + -y != 0
      // ye = MAX_EXP + 1 possible
      return normalise(y, xc, ye);
    };


    /*
     * If sd is undefined or null or true or false, return the number of significant digits of
     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.
     * If sd is true include integer-part trailing zeros in the count.
     *
     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this
     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or
     * ROUNDING_MODE if rm is omitted.
     *
     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.
     *                     boolean: whether to count integer-part trailing zeros: true or false.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'
     */
    P.precision = P.sd = function (sd, rm) {
      var c, n, v,
        x = this;

      if (sd != null && sd !== !!sd) {
        intCheck(sd, 1, MAX);
        if (rm == null) rm = ROUNDING_MODE;
        else intCheck(rm, 0, 8);

        return round(new BigNumber(x), sd, rm);
      }

      if (!(c = x.c)) return null;
      v = c.length - 1;
      n = v * LOG_BASE + 1;

      if (v = c[v]) {

        // Subtract the number of trailing zeros of the last element.
        for (; v % 10 == 0; v /= 10, n--);

        // Add the number of digits of the first element.
        for (v = c[0]; v >= 10; v /= 10, n++);
      }

      if (sd && x.e + 1 > n) n = x.e + 1;

      return n;
    };


    /*
     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places
     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.
     *
     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'
     */
    P.shiftedBy = function (k) {
      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);
      return this.times('1e' + k);
    };


    /*
     *  sqrt(-n) =  N
     *  sqrt(N) =  N
     *  sqrt(-I) =  N
     *  sqrt(I) =  I
     *  sqrt(0) =  0
     *  sqrt(-0) = -0
     *
     * Return a new BigNumber whose value is the square root of the value of this BigNumber,
     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.
     */
    P.squareRoot = P.sqrt = function () {
      var m, n, r, rep, t,
        x = this,
        c = x.c,
        s = x.s,
        e = x.e,
        dp = DECIMAL_PLACES + 4,
        half = new BigNumber('0.5');

      // Negative/NaN/Infinity/zero?
      if (s !== 1 || !c || !c[0]) {
        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);
      }

      // Initial estimate.
      s = Math.sqrt(+valueOf(x));

      // Math.sqrt underflow/overflow?
      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.
      if (s == 0 || s == 1 / 0) {
        n = coeffToString(c);
        if ((n.length + e) % 2 == 0) n += '0';
        s = Math.sqrt(+n);
        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);

        if (s == 1 / 0) {
          n = '5e' + e;
        } else {
          n = s.toExponential();
          n = n.slice(0, n.indexOf('e') + 1) + e;
        }

        r = new BigNumber(n);
      } else {
        r = new BigNumber(s + '');
      }

      // Check for zero.
      // r could be zero if MIN_EXP is changed after the this value was created.
      // This would cause a division by zero (x/t) and hence Infinity below, which would cause
      // coeffToString to throw.
      if (r.c[0]) {
        e = r.e;
        s = e + dp;
        if (s < 3) s = 0;

        // Newton-Raphson iteration.
        for (; ;) {
          t = r;
          r = half.times(t.plus(div(x, t, dp, 1)));

          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {

            // The exponent of r may here be one less than the final result exponent,
            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits
            // are indexed correctly.
            if (r.e < e) --s;
            n = n.slice(s - 3, s + 1);

            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits
            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the
            // iteration.
            if (n == '9999' || !rep && n == '4999') {

              // On the first iteration only, check to see if rounding up gives the
              // exact result as the nines may infinitely repeat.
              if (!rep) {
                round(t, t.e + DECIMAL_PLACES + 2, 0);

                if (t.times(t).eq(x)) {
                  r = t;
                  break;
                }
              }

              dp += 4;
              s += 4;
              rep = 1;
            } else {

              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact
              // result. If not, then there are further digits and m will be truthy.
              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {

                // Truncate to the first rounding digit.
                round(r, r.e + DECIMAL_PLACES + 2, 1);
                m = !r.times(r).eq(x);
              }

              break;
            }
          }
        }
      }

      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);
    };


    /*
     * Return a string representing the value of this BigNumber in exponential notation and
     * rounded using ROUNDING_MODE to dp fixed decimal places.
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */
    P.toExponential = function (dp, rm) {
      if (dp != null) {
        intCheck(dp, 0, MAX);
        dp++;
      }
      return format(this, dp, rm, 1);
    };


    /*
     * Return a string representing the value of this BigNumber in fixed-point notation rounding
     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.
     *
     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',
     * but e.g. (-0.00001).toFixed(0) is '-0'.
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     */
    P.toFixed = function (dp, rm) {
      if (dp != null) {
        intCheck(dp, 0, MAX);
        dp = dp + this.e + 1;
      }
      return format(this, dp, rm);
    };


    /*
     * Return a string representing the value of this BigNumber in fixed-point notation rounded
     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties
     * of the format or FORMAT object (see BigNumber.set).
     *
     * The formatting object may contain some or all of the properties shown below.
     *
     * FORMAT = {
     *   prefix: '',
     *   groupSize: 3,
     *   secondaryGroupSize: 0,
     *   groupSeparator: ',',
     *   decimalSeparator: '.',
     *   fractionGroupSize: 0,
     *   fractionGroupSeparator: '\xA0',      // non-breaking space
     *   suffix: ''
     * };
     *
     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     * [format] {object} Formatting options. See FORMAT pbject above.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'
     * '[BigNumber Error] Argument not an object: {format}'
     */
    P.toFormat = function (dp, rm, format) {
      var str,
        x = this;

      if (format == null) {
        if (dp != null && rm && typeof rm == 'object') {
          format = rm;
          rm = null;
        } else if (dp && typeof dp == 'object') {
          format = dp;
          dp = rm = null;
        } else {
          format = FORMAT;
        }
      } else if (typeof format != 'object') {
        throw Error
          (bignumberError + 'Argument not an object: ' + format);
      }

      str = x.toFixed(dp, rm);

      if (x.c) {
        var i,
          arr = str.split('.'),
          g1 = +format.groupSize,
          g2 = +format.secondaryGroupSize,
          groupSeparator = format.groupSeparator || '',
          intPart = arr[0],
          fractionPart = arr[1],
          isNeg = x.s < 0,
          intDigits = isNeg ? intPart.slice(1) : intPart,
          len = intDigits.length;

        if (g2) i = g1, g1 = g2, g2 = i, len -= i;

        if (g1 > 0 && len > 0) {
          i = len % g1 || g1;
          intPart = intDigits.substr(0, i);
          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);
          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);
          if (isNeg) intPart = '-' + intPart;
        }

        str = fractionPart
         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)
          ? fractionPart.replace(new RegExp('\\d{' + g2 + '}\\B', 'g'),
           '$&' + (format.fractionGroupSeparator || ''))
          : fractionPart)
         : intPart;
      }

      return (format.prefix || '') + str + (format.suffix || '');
    };


    /*
     * Return an array of two BigNumbers representing the value of this BigNumber as a simple
     * fraction with an integer numerator and an integer denominator.
     * The denominator will be a positive non-zero value less than or equal to the specified
     * maximum denominator. If a maximum denominator is not specified, the denominator will be
     * the lowest value necessary to represent the number exactly.
     *
     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.
     *
     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'
     */
    P.toFraction = function (md) {
      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,
        x = this,
        xc = x.c;

      if (md != null) {
        n = new BigNumber(md);

        // Throw if md is less than one or is not an integer, unless it is Infinity.
        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {
          throw Error
            (bignumberError + 'Argument ' +
              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));
        }
      }

      if (!xc) return new BigNumber(x);

      d = new BigNumber(ONE);
      n1 = d0 = new BigNumber(ONE);
      d1 = n0 = new BigNumber(ONE);
      s = coeffToString(xc);

      // Determine initial denominator.
      // d is a power of 10 and the minimum max denominator that specifies the value exactly.
      e = d.e = s.length - x.e - 1;
      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];
      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;

      exp = MAX_EXP;
      MAX_EXP = 1 / 0;
      n = new BigNumber(s);

      // n0 = d1 = 0
      n0.c[0] = 0;

      for (; ;)  {
        q = div(n, d, 0, 1);
        d2 = d0.plus(q.times(d1));
        if (d2.comparedTo(md) == 1) break;
        d0 = d1;
        d1 = d2;
        n1 = n0.plus(q.times(d2 = n1));
        n0 = d2;
        d = n.minus(q.times(d2 = d));
        n = d2;
      }

      d2 = div(md.minus(d0), d1, 0, 1);
      n0 = n0.plus(d2.times(n1));
      d0 = d0.plus(d2.times(d1));
      n0.s = n1.s = x.s;
      e = e * 2;

      // Determine which fraction is closer to x, n0/d0 or n1/d1
      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(
          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];

      MAX_EXP = exp;

      return r;
    };


    /*
     * Return the value of this BigNumber converted to a number primitive.
     */
    P.toNumber = function () {
      return +valueOf(this);
    };


    /*
     * Return a string representing the value of this BigNumber rounded to sd significant digits
     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits
     * necessary to represent the integer part of the value in fixed-point notation, then use
     * exponential notation.
     *
     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.
     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.
     *
     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'
     */
    P.toPrecision = function (sd, rm) {
      if (sd != null) intCheck(sd, 1, MAX);
      return format(this, sd, rm, 2);
    };


    /*
     * Return a string representing the value of this BigNumber in base b, or base 10 if b is
     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and
     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent
     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than
     * TO_EXP_NEG, return exponential notation.
     *
     * [b] {number} Integer, 2 to ALPHABET.length inclusive.
     *
     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'
     */
    P.toString = function (b) {
      var str,
        n = this,
        s = n.s,
        e = n.e;

      // Infinity or NaN?
      if (e === null) {
        if (s) {
          str = 'Infinity';
          if (s < 0) str = '-' + str;
        } else {
          str = 'NaN';
        }
      } else {
        if (b == null) {
          str = e <= TO_EXP_NEG || e >= TO_EXP_POS
           ? toExponential(coeffToString(n.c), e)
           : toFixedPoint(coeffToString(n.c), e, '0');
        } else if (b === 10 && alphabetHasNormalDecimalDigits) {
          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);
          str = toFixedPoint(coeffToString(n.c), n.e, '0');
        } else {
          intCheck(b, 2, ALPHABET.length, 'Base');
          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);
        }

        if (s < 0 && n.c[0]) str = '-' + str;
      }

      return str;
    };


    /*
     * Return as toString, but do not accept a base argument, and include the minus sign for
     * negative zero.
     */
    P.valueOf = P.toJSON = function () {
      return valueOf(this);
    };


    P._isBigNumber = true;

    if (configObject != null) BigNumber.set(configObject);

    return BigNumber;
  }


  // PRIVATE HELPER FUNCTIONS

  // These functions don't need access to variables,
  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.


  function bitFloor(n) {
    var i = n | 0;
    return n > 0 || n === i ? i : i - 1;
  }


  // Return a coefficient array as a string of base 10 digits.
  function coeffToString(a) {
    var s, z,
      i = 1,
      j = a.length,
      r = a[0] + '';

    for (; i < j;) {
      s = a[i++] + '';
      z = LOG_BASE - s.length;
      for (; z--; s = '0' + s);
      r += s;
    }

    // Determine trailing zeros.
    for (j = r.length; r.charCodeAt(--j) === 48;);

    return r.slice(0, j + 1 || 1);
  }


  // Compare the value of BigNumbers x and y.
  function compare(x, y) {
    var a, b,
      xc = x.c,
      yc = y.c,
      i = x.s,
      j = y.s,
      k = x.e,
      l = y.e;

    // Either NaN?
    if (!i || !j) return null;

    a = xc && !xc[0];
    b = yc && !yc[0];

    // Either zero?
    if (a || b) return a ? b ? 0 : -j : i;

    // Signs differ?
    if (i != j) return i;

    a = i < 0;
    b = k == l;

    // Either Infinity?
    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;

    // Compare exponents.
    if (!b) return k > l ^ a ? 1 : -1;

    j = (k = xc.length) < (l = yc.length) ? k : l;

    // Compare digit by digit.
    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;

    // Compare lengths.
    return k == l ? 0 : k > l ^ a ? 1 : -1;
  }


  /*
   * Check that n is a primitive number, an integer, and in range, otherwise throw.
   */
  function intCheck(n, min, max, name) {
    if (n < min || n > max || n !== mathfloor(n)) {
      throw Error
       (bignumberError + (name || 'Argument') + (typeof n == 'number'
         ? n < min || n > max ? ' out of range: ' : ' not an integer: '
         : ' not a primitive number: ') + String(n));
    }
  }


  // Assumes finite n.
  function isOdd(n) {
    var k = n.c.length - 1;
    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;
  }


  function toExponential(str, e) {
    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +
     (e < 0 ? 'e' : 'e+') + e;
  }


  function toFixedPoint(str, e, z) {
    var len, zs;

    // Negative exponent?
    if (e < 0) {

      // Prepend zeros.
      for (zs = z + '.'; ++e; zs += z);
      str = zs + str;

    // Positive exponent
    } else {
      len = str.length;

      // Append zeros.
      if (++e > len) {
        for (zs = z, e -= len; --e; zs += z);
        str += zs;
      } else if (e < len) {
        str = str.slice(0, e) + '.' + str.slice(e);
      }
    }

    return str;
  }


  // EXPORT


  BigNumber = clone();
  BigNumber['default'] = BigNumber.BigNumber = BigNumber;

  // AMD.
  if (typeof define == 'function' && define.amd) {
    define(function () { return BigNumber; });

  // Node.js and other environments that support module.exports.
  } else if (typeof module != 'undefined' && module.exports) {
    module.exports = BigNumber;

  // Browser.
  } else {
    if (!globalObject) {
      globalObject = typeof self != 'undefined' && self ? self : window;
    }

    globalObject.BigNumber = BigNumber;
  }
})(this);

},{}],89:[function(require,module,exports){

},{}],90:[function(require,module,exports){
var basex = require('base-x')
var ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'

module.exports = basex(ALPHABET)

},{"base-x":86}],91:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":87,"buffer":91,"ieee754":103}],92:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBind = require('./');

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};

},{"./":93,"get-intrinsic":99}],93:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');

var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');

if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = null;
	}
}

module.exports = function callBind(originalFunction) {
	var func = $reflectApply(bind, $call, arguments);
	if ($gOPD && $defineProperty) {
		var desc = $gOPD(func, 'length');
		if (desc.configurable) {
			// original length, plus the receiver, minus any additional arguments (after the receiver)
			$defineProperty(
				func,
				'length',
				{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
			);
		}
	}
	return func;
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}

},{"function-bind":98,"get-intrinsic":99}],94:[function(require,module,exports){
'use strict';
const mapObj = require('map-obj');
const camelCase = require('camelcase');
const QuickLru = require('quick-lru');

const has = (array, key) => array.some(x => {
	if (typeof x === 'string') {
		return x === key;
	}

	x.lastIndex = 0;
	return x.test(key);
});

const cache = new QuickLru({maxSize: 100000});

// Reproduces behavior from `map-obj`
const isObject = value =>
	typeof value === 'object' &&
	value !== null &&
	!(value instanceof RegExp) &&
	!(value instanceof Error) &&
	!(value instanceof Date);

const camelCaseConvert = (input, options) => {
	if (!isObject(input)) {
		return input;
	}

	options = {
		deep: false,
		pascalCase: false,
		...options
	};

	const {exclude, pascalCase, stopPaths, deep} = options;

	const stopPathsSet = new Set(stopPaths);

	const makeMapper = parentPath => (key, value) => {
		if (deep && isObject(value)) {
			const path = parentPath === undefined ? key : `${parentPath}.${key}`;

			if (!stopPathsSet.has(path)) {
				value = mapObj(value, makeMapper(path));
			}
		}

		if (!(exclude && has(exclude, key))) {
			const cacheKey = pascalCase ? `${key}_` : key;

			if (cache.has(cacheKey)) {
				key = cache.get(cacheKey);
			} else {
				const ret = camelCase(key, {pascalCase});

				if (key.length < 100) { // Prevent abuse
					cache.set(cacheKey, ret);
				}

				key = ret;
			}
		}

		return [key, value];
	};

	return mapObj(input, makeMapper(undefined));
};

module.exports = (input, options) => {
	if (Array.isArray(input)) {
		return Object.keys(input).map(key => camelCaseConvert(input[key], options));
	}

	return camelCaseConvert(input, options);
};

},{"camelcase":95,"map-obj":106,"quick-lru":119}],95:[function(require,module,exports){
'use strict';

const preserveCamelCase = string => {
	let isLastCharLower = false;
	let isLastCharUpper = false;
	let isLastLastCharUpper = false;

	for (let i = 0; i < string.length; i++) {
		const character = string[i];

		if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {
			string = string.slice(0, i) + '-' + string.slice(i);
			isLastCharLower = false;
			isLastLastCharUpper = isLastCharUpper;
			isLastCharUpper = true;
			i++;
		} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {
			string = string.slice(0, i - 1) + '-' + string.slice(i - 1);
			isLastLastCharUpper = isLastCharUpper;
			isLastCharUpper = false;
			isLastCharLower = true;
		} else {
			isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;
			isLastLastCharUpper = isLastCharUpper;
			isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;
		}
	}

	return string;
};

const camelCase = (input, options) => {
	if (!(typeof input === 'string' || Array.isArray(input))) {
		throw new TypeError('Expected the input to be `string | string[]`');
	}

	options = Object.assign({
		pascalCase: false
	}, options);

	const postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;

	if (Array.isArray(input)) {
		input = input.map(x => x.trim())
			.filter(x => x.length)
			.join('-');
	} else {
		input = input.trim();
	}

	if (input.length === 0) {
		return '';
	}

	if (input.length === 1) {
		return options.pascalCase ? input.toUpperCase() : input.toLowerCase();
	}

	const hasUpperCase = input !== input.toLowerCase();

	if (hasUpperCase) {
		input = preserveCamelCase(input);
	}

	input = input
		.replace(/^[_.\- ]+/, '')
		.toLowerCase()
		.replace(/[_.\- ]+(\w|$)/g, (_, p1) => p1.toUpperCase())
		.replace(/\d+(\w|$)/g, m => m.toUpperCase());

	return postProcess(input);
};

module.exports = camelCase;
// TODO: Remove this for the next major release
module.exports.default = camelCase;

},{}],96:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dotCase = void 0;
var tslib_1 = require("tslib");
var no_case_1 = require("no-case");
function dotCase(input, options) {
    if (options === void 0) { options = {}; }
    return no_case_1.noCase(input, tslib_1.__assign({ delimiter: "." }, options));
}
exports.dotCase = dotCase;

},{"no-case":111,"tslib":125}],97:[function(require,module,exports){
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

},{}],98:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

},{"./implementation":97}],99:[function(require,module,exports){
'use strict';

var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();

var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('has');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

},{"function-bind":98,"has":102,"has-symbols":100}],100:[function(require,module,exports){
'use strict';

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};

},{"./shams":101}],101:[function(require,module,exports){
'use strict';

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{}],102:[function(require,module,exports){
'use strict';

var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":98}],103:[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],104:[function(require,module,exports){
(function (process,global){(function (){
/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.9.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */
/*jslint bitwise: true */
(function () {
  'use strict';

  var ERROR = 'input is invalid type';
  var WINDOW = typeof window === 'object';
  var root = WINDOW ? window : {};
  if (root.JS_SHA256_NO_WINDOW) {
    WINDOW = false;
  }
  var WEB_WORKER = !WINDOW && typeof self === 'object';
  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
  if (NODE_JS) {
    root = global;
  } else if (WEB_WORKER) {
    root = self;
  }
  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;
  var AMD = typeof define === 'function' && define.amd;
  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
  var HEX_CHARS = '0123456789abcdef'.split('');
  var EXTRA = [-2147483648, 8388608, 32768, 128];
  var SHIFT = [24, 16, 8, 0];
  var K = [
    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
  ];
  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];

  var blocks = [];

  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {
    Array.isArray = function (obj) {
      return Object.prototype.toString.call(obj) === '[object Array]';
    };
  }

  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
    ArrayBuffer.isView = function (obj) {
      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
    };
  }

  var createOutputMethod = function (outputType, is224) {
    return function (message) {
      return new Sha256(is224, true).update(message)[outputType]();
    };
  };

  var createMethod = function (is224) {
    var method = createOutputMethod('hex', is224);
    if (NODE_JS) {
      method = nodeWrap(method, is224);
    }
    method.create = function () {
      return new Sha256(is224);
    };
    method.update = function (message) {
      return method.create().update(message);
    };
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createOutputMethod(type, is224);
    }
    return method;
  };

  var nodeWrap = function (method, is224) {
    var crypto = eval("require('crypto')");
    var Buffer = eval("require('buffer').Buffer");
    var algorithm = is224 ? 'sha224' : 'sha256';
    var nodeMethod = function (message) {
      if (typeof message === 'string') {
        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');
      } else {
        if (message === null || message === undefined) {
          throw new Error(ERROR);
        } else if (message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        }
      }
      if (Array.isArray(message) || ArrayBuffer.isView(message) ||
        message.constructor === Buffer) {
        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');
      } else {
        return method(message);
      }
    };
    return nodeMethod;
  };

  var createHmacOutputMethod = function (outputType, is224) {
    return function (key, message) {
      return new HmacSha256(key, is224, true).update(message)[outputType]();
    };
  };

  var createHmacMethod = function (is224) {
    var method = createHmacOutputMethod('hex', is224);
    method.create = function (key) {
      return new HmacSha256(key, is224);
    };
    method.update = function (key, message) {
      return method.create(key).update(message);
    };
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createHmacOutputMethod(type, is224);
    }
    return method;
  };

  function Sha256(is224, sharedMemory) {
    if (sharedMemory) {
      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =
        blocks[4] = blocks[5] = blocks[6] = blocks[7] =
        blocks[8] = blocks[9] = blocks[10] = blocks[11] =
        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
      this.blocks = blocks;
    } else {
      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    }

    if (is224) {
      this.h0 = 0xc1059ed8;
      this.h1 = 0x367cd507;
      this.h2 = 0x3070dd17;
      this.h3 = 0xf70e5939;
      this.h4 = 0xffc00b31;
      this.h5 = 0x68581511;
      this.h6 = 0x64f98fa7;
      this.h7 = 0xbefa4fa4;
    } else { // 256
      this.h0 = 0x6a09e667;
      this.h1 = 0xbb67ae85;
      this.h2 = 0x3c6ef372;
      this.h3 = 0xa54ff53a;
      this.h4 = 0x510e527f;
      this.h5 = 0x9b05688c;
      this.h6 = 0x1f83d9ab;
      this.h7 = 0x5be0cd19;
    }

    this.block = this.start = this.bytes = this.hBytes = 0;
    this.finalized = this.hashed = false;
    this.first = true;
    this.is224 = is224;
  }

  Sha256.prototype.update = function (message) {
    if (this.finalized) {
      return;
    }
    var notString, type = typeof message;
    if (type !== 'string') {
      if (type === 'object') {
        if (message === null) {
          throw new Error(ERROR);
        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        } else if (!Array.isArray(message)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
            throw new Error(ERROR);
          }
        }
      } else {
        throw new Error(ERROR);
      }
      notString = true;
    }
    var code, index = 0, i, length = message.length, blocks = this.blocks;

    while (index < length) {
      if (this.hashed) {
        this.hashed = false;
        blocks[0] = this.block;
        blocks[16] = blocks[1] = blocks[2] = blocks[3] =
          blocks[4] = blocks[5] = blocks[6] = blocks[7] =
          blocks[8] = blocks[9] = blocks[10] = blocks[11] =
          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
      }

      if (notString) {
        for (i = this.start; index < length && i < 64; ++index) {
          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
        }
      } else {
        for (i = this.start; index < length && i < 64; ++index) {
          code = message.charCodeAt(index);
          if (code < 0x80) {
            blocks[i >> 2] |= code << SHIFT[i++ & 3];
          } else if (code < 0x800) {
            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else if (code < 0xd800 || code >= 0xe000) {
            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else {
            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          }
        }
      }

      this.lastByteIndex = i;
      this.bytes += i - this.start;
      if (i >= 64) {
        this.block = blocks[16];
        this.start = i - 64;
        this.hash();
        this.hashed = true;
      } else {
        this.start = i;
      }
    }
    if (this.bytes > 4294967295) {
      this.hBytes += this.bytes / 4294967296 << 0;
      this.bytes = this.bytes % 4294967296;
    }
    return this;
  };

  Sha256.prototype.finalize = function () {
    if (this.finalized) {
      return;
    }
    this.finalized = true;
    var blocks = this.blocks, i = this.lastByteIndex;
    blocks[16] = this.block;
    blocks[i >> 2] |= EXTRA[i & 3];
    this.block = blocks[16];
    if (i >= 56) {
      if (!this.hashed) {
        this.hash();
      }
      blocks[0] = this.block;
      blocks[16] = blocks[1] = blocks[2] = blocks[3] =
        blocks[4] = blocks[5] = blocks[6] = blocks[7] =
        blocks[8] = blocks[9] = blocks[10] = blocks[11] =
        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
    }
    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;
    blocks[15] = this.bytes << 3;
    this.hash();
  };

  Sha256.prototype.hash = function () {
    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,
      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;

    for (j = 16; j < 64; ++j) {
      // rightrotate
      t1 = blocks[j - 15];
      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);
      t1 = blocks[j - 2];
      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);
      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;
    }

    bc = b & c;
    for (j = 0; j < 64; j += 4) {
      if (this.first) {
        if (this.is224) {
          ab = 300032;
          t1 = blocks[0] - 1413257819;
          h = t1 - 150054599 << 0;
          d = t1 + 24177077 << 0;
        } else {
          ab = 704751109;
          t1 = blocks[0] - 210244248;
          h = t1 - 1521486534 << 0;
          d = t1 + 143694565 << 0;
        }
        this.first = false;
      } else {
        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));
        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));
        ab = a & b;
        maj = ab ^ (a & c) ^ bc;
        ch = (e & f) ^ (~e & g);
        t1 = h + s1 + ch + K[j] + blocks[j];
        t2 = s0 + maj;
        h = d + t1 << 0;
        d = t1 + t2 << 0;
      }
      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));
      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));
      da = d & a;
      maj = da ^ (d & b) ^ ab;
      ch = (h & e) ^ (~h & f);
      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];
      t2 = s0 + maj;
      g = c + t1 << 0;
      c = t1 + t2 << 0;
      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));
      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));
      cd = c & d;
      maj = cd ^ (c & a) ^ da;
      ch = (g & h) ^ (~g & e);
      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];
      t2 = s0 + maj;
      f = b + t1 << 0;
      b = t1 + t2 << 0;
      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));
      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));
      bc = b & c;
      maj = bc ^ (b & d) ^ cd;
      ch = (f & g) ^ (~f & h);
      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];
      t2 = s0 + maj;
      e = a + t1 << 0;
      a = t1 + t2 << 0;
    }

    this.h0 = this.h0 + a << 0;
    this.h1 = this.h1 + b << 0;
    this.h2 = this.h2 + c << 0;
    this.h3 = this.h3 + d << 0;
    this.h4 = this.h4 + e << 0;
    this.h5 = this.h5 + f << 0;
    this.h6 = this.h6 + g << 0;
    this.h7 = this.h7 + h << 0;
  };

  Sha256.prototype.hex = function () {
    this.finalize();

    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,
      h6 = this.h6, h7 = this.h7;

    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +
      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +
      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +
      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +
      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +
      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +
      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +
      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +
      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +
      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +
      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +
      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +
      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +
      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +
      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +
      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +
      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +
      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +
      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +
      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +
      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +
      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +
      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +
      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +
      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +
      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +
      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +
      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];
    if (!this.is224) {
      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +
        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +
        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +
        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];
    }
    return hex;
  };

  Sha256.prototype.toString = Sha256.prototype.hex;

  Sha256.prototype.digest = function () {
    this.finalize();

    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,
      h6 = this.h6, h7 = this.h7;

    var arr = [
      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,
      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,
      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,
      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,
      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,
      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,
      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF
    ];
    if (!this.is224) {
      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);
    }
    return arr;
  };

  Sha256.prototype.array = Sha256.prototype.digest;

  Sha256.prototype.arrayBuffer = function () {
    this.finalize();

    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);
    var dataView = new DataView(buffer);
    dataView.setUint32(0, this.h0);
    dataView.setUint32(4, this.h1);
    dataView.setUint32(8, this.h2);
    dataView.setUint32(12, this.h3);
    dataView.setUint32(16, this.h4);
    dataView.setUint32(20, this.h5);
    dataView.setUint32(24, this.h6);
    if (!this.is224) {
      dataView.setUint32(28, this.h7);
    }
    return buffer;
  };

  function HmacSha256(key, is224, sharedMemory) {
    var i, type = typeof key;
    if (type === 'string') {
      var bytes = [], length = key.length, index = 0, code;
      for (i = 0; i < length; ++i) {
        code = key.charCodeAt(i);
        if (code < 0x80) {
          bytes[index++] = code;
        } else if (code < 0x800) {
          bytes[index++] = (0xc0 | (code >> 6));
          bytes[index++] = (0x80 | (code & 0x3f));
        } else if (code < 0xd800 || code >= 0xe000) {
          bytes[index++] = (0xe0 | (code >> 12));
          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));
          bytes[index++] = (0x80 | (code & 0x3f));
        } else {
          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));
          bytes[index++] = (0xf0 | (code >> 18));
          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));
          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));
          bytes[index++] = (0x80 | (code & 0x3f));
        }
      }
      key = bytes;
    } else {
      if (type === 'object') {
        if (key === null) {
          throw new Error(ERROR);
        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {
          key = new Uint8Array(key);
        } else if (!Array.isArray(key)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {
            throw new Error(ERROR);
          }
        }
      } else {
        throw new Error(ERROR);
      }
    }

    if (key.length > 64) {
      key = (new Sha256(is224, true)).update(key).array();
    }

    var oKeyPad = [], iKeyPad = [];
    for (i = 0; i < 64; ++i) {
      var b = key[i] || 0;
      oKeyPad[i] = 0x5c ^ b;
      iKeyPad[i] = 0x36 ^ b;
    }

    Sha256.call(this, is224, sharedMemory);

    this.update(iKeyPad);
    this.oKeyPad = oKeyPad;
    this.inner = true;
    this.sharedMemory = sharedMemory;
  }
  HmacSha256.prototype = new Sha256();

  HmacSha256.prototype.finalize = function () {
    Sha256.prototype.finalize.call(this);
    if (this.inner) {
      this.inner = false;
      var innerHash = this.array();
      Sha256.call(this, this.is224, this.sharedMemory);
      this.update(this.oKeyPad);
      this.update(innerHash);
      Sha256.prototype.finalize.call(this);
    }
  };

  var exports = createMethod();
  exports.sha256 = exports;
  exports.sha224 = createMethod(true);
  exports.sha256.hmac = createHmacMethod();
  exports.sha224.hmac = createHmacMethod(true);

  if (COMMON_JS) {
    module.exports = exports;
  } else {
    root.sha256 = exports.sha256;
    root.sha224 = exports.sha224;
    if (AMD) {
      define(function () {
        return exports;
      });
    }
  }
})();

}).call(this)}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"_process":113}],105:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.lowerCase = exports.localeLowerCase = void 0;
/**
 * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt
 */
var SUPPORTED_LOCALE = {
    tr: {
        regexp: /\u0130|\u0049|\u0049\u0307/g,
        map: {
            İ: "\u0069",
            I: "\u0131",
            İ: "\u0069",
        },
    },
    az: {
        regexp: /\u0130/g,
        map: {
            İ: "\u0069",
            I: "\u0131",
            İ: "\u0069",
        },
    },
    lt: {
        regexp: /\u0049|\u004A|\u012E|\u00CC|\u00CD|\u0128/g,
        map: {
            I: "\u0069\u0307",
            J: "\u006A\u0307",
            Į: "\u012F\u0307",
            Ì: "\u0069\u0307\u0300",
            Í: "\u0069\u0307\u0301",
            Ĩ: "\u0069\u0307\u0303",
        },
    },
};
/**
 * Localized lower case.
 */
function localeLowerCase(str, locale) {
    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];
    if (lang)
        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));
    return lowerCase(str);
}
exports.localeLowerCase = localeLowerCase;
/**
 * Lower case as a function.
 */
function lowerCase(str) {
    return str.toLowerCase();
}
exports.lowerCase = lowerCase;

},{}],106:[function(require,module,exports){
'use strict';

const isObject = value => typeof value === 'object' && value !== null;

// Customized for this use-case
const isObjectCustom = value =>
	isObject(value) &&
	!(value instanceof RegExp) &&
	!(value instanceof Error) &&
	!(value instanceof Date);

const mapObject = (object, mapper, options, isSeen = new WeakMap()) => {
	options = {
		deep: false,
		target: {},
		...options
	};

	if (isSeen.has(object)) {
		return isSeen.get(object);
	}

	isSeen.set(object, options.target);

	const {target} = options;
	delete options.target;

	const mapArray = array => array.map(element => isObjectCustom(element) ? mapObject(element, mapper, options, isSeen) : element);
	if (Array.isArray(object)) {
		return mapArray(object);
	}

	for (const [key, value] of Object.entries(object)) {
		let [newKey, newValue, {shouldRecurse = true} = {}] = mapper(key, value, object);

		// Drop `__proto__` keys.
		if (newKey === '__proto__') {
			continue;
		}

		if (options.deep && shouldRecurse && isObjectCustom(newValue)) {
			newValue = Array.isArray(newValue) ?
				mapArray(newValue) :
				mapObject(newValue, mapper, options, isSeen);
		}

		target[newKey] = newValue;
	}

	return target;
};

module.exports = (object, mapper, options) => {
	if (!isObject(object)) {
		throw new TypeError(`Expected an object, got \`${object}\` (${typeof object})`);
	}

	return mapObject(object, mapper, options);
};

},{}],107:[function(require,module,exports){
module.exports={
	"version": "2021a",
	"zones": [
		"Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5",
		"Africa/Accra|LMT GMT +0020 +0030|.Q 0 -k -u|01212121212121212121212121212121212121212121212131313131313131|-2bRzX.8 9RbX.8 fdE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE 1BAk MLE 1Bck MLE 1Bck MLE 1Bck MLE Mok 1BXE M0k 1BXE fak 9vbu bjCu MLu 1Bcu MLu 1BAu MLu 1Bcu MLu 1Bcu MLu 1Bcu MLu|41e5",
		"Africa/Nairobi|LMT +0230 EAT +0245|-2r.g -2u -30 -2J|012132|-2ua2r.g N6nV.g 3Fbu h1cu dzbJ|47e5",
		"Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0|26e5",
		"Africa/Lagos|LMT GMT +0030 WAT|-d.z 0 -u -10|01023|-2B40d.z 7iod.z dnXK.p dLzH.z|17e6",
		"Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4",
		"Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k|26e5",
		"Africa/Cairo|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6",
		"Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|32e5",
		"Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|85e3",
		"Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0 2600 e00 2600 gM0 2600 gM0 2600 e00 2600 gM0|20e4",
		"Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0|84e5",
		"Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|012121212121212121212121212121212131|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 PeX0|",
		"Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5",
		"Africa/Monrovia|MMT MMT GMT|H.8 I.u 0|012|-23Lzg.Q 28G01.m|11e5",
		"Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5",
		"Africa/Sao_Tome|LMT GMT WAT|A.J 0 -10|0121|-2le00 4i6N0 2q00|",
		"Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00|11e5",
		"Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00|20e5",
		"Africa/Windhoek|+0130 SAST SAST CAT WAT|-1u -20 -30 -20 -10|01213434343434343434343434343434343434343434343434343|-2GJdu 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4",
		"America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326",
		"America/Anchorage|AST AWT APT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4",
		"America/Port_of_Spain|LMT AST|46.4 40|01|-2kNvR.U|43e3",
		"America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0|14e4",
		"America/Argentina/Buenos_Aires|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL0|",
		"America/Argentina/Catamarca|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
		"America/Argentina/Cordoba|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0|",
		"America/Argentina/Jujuy|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0|",
		"America/Argentina/La_Rioja|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
		"America/Argentina/Mendoza|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232312121321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0|",
		"America/Argentina/Rio_Gallegos|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0|",
		"America/Argentina/Salta|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0|",
		"America/Argentina/San_Juan|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 uL0|",
		"America/Argentina/San_Luis|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121212321212|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0|",
		"America/Argentina/Tucuman|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121212121212121212121212323232313232123232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1qN0 WL0|",
		"America/Argentina/Ushuaia|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0|",
		"America/Curacao|LMT -0430 AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d|15e4",
		"America/Asuncion|AMT -04 -03|3O.E 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0|28e5",
		"America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3je0 8x30 iw0|28e2",
		"America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|84e3",
		"America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5",
		"America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1ODC1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4",
		"America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5",
		"America/Belize|LMT CST -0530 CWT CPT CDT|5Q.M 60 5u 50 50 50|012121212121212121212121212121212121212121212121213412121212121212121212121212121212121212121215151|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu Rcu 7Bt0 Ni0 4nd0 Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu e9Au qn0 lxB0 mn0|57e3",
		"America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 iu0|11e2",
		"America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|62e2",
		"America/Bogota|BMT -05 -04|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0|90e5",
		"America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4",
		"America/Cambridge_Bay|-00 MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e2",
		"America/Campo_Grande|LMT -04 -03|3C.s 40 30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4",
		"America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4",
		"America/Caracas|CMT -0430 -04|4r.E 4u 40|01212|-2kV7w.k 28KM2.k 1IwOu kqo0|29e5",
		"America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3",
		"America/Panama|CMT EST|5j.A 50|01|-2uduE.o|15e5",
		"America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5",
		"America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4",
		"America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0|12e5",
		"America/Creston|MST PST|70 80|010|-29DR0 43B0|53e2",
		"America/Cuiaba|LMT -04 -03|3I.k 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4",
		"America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0|8",
		"America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0|12e3",
		"America/Dawson|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|010102304056565656565656565656565656565656565656565656565656565656565656565656565656565656567|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z90|13e2",
		"America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5",
		"America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|0123425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 JxX1 SMX 1cN0 1cL0 aW10 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5",
		"America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|0121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 XQp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5",
		"America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|31e3",
		"America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0|11e5",
		"America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOO0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5",
		"America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2",
		"America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Fortaleza|LMT -03 -02|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0|34e5",
		"America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
		"America/Godthab|LMT -03 -02|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3",
		"America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2",
		"America/Grand_Turk|KMT EST EDT AST|57.a 50 40 40|0121212121212121212121212121212121212121212121212121212121212121212121212132121212121212121212121212121212121212121|-2l1uQ.O 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 7jA0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2",
		"America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0|13e5",
		"America/Guayaquil|QMT -05 -04|5e 50 40|0121|-1yVSK 2uILK rz0|27e5",
		"America/Guyana|LMT -0345 -03 -04|3Q.E 3J 30 40|0123|-2dvU7.k 2r6LQ.k Bxbf|80e4",
		"America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4",
		"America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5",
		"America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0|64e4",
		"America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010401054541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 8wn0 1cN0 1cL0 1cN0 1cK0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Inuvik|-00 PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2",
		"America/Iqaluit|-00 EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2",
		"America/Jamaica|KMT EST EDT|57.a 50 40|0121212121212121212121|-2l1uQ.O 2uM1Q.O 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0|94e4",
		"America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3",
		"America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 1nX1 e0X 9vd0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/La_Paz|CMT BST -04|4w.A 3w.A 40|012|-1x37r.o 13b0|19e5",
		"America/Lima|LMT -05 -04|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6",
		"America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6",
		"America/Maceio|LMT -03 -02|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4",
		"America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5",
		"America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5",
		"America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0|39e4",
		"America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4",
		"America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|44e4",
		"America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|85e2",
		"America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|11e5",
		"America/Metlakatla|PST PWT PPT PDT AKST AKDT|80 70 70 70 90 80|01203030303030303030303030303030304545450454545454545454545454545454545454545454|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU10 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
		"America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6",
		"America/Miquelon|LMT AST -03 -02|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2",
		"America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|64e3",
		"America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|41e5",
		"America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u 20 1u|012343434343434343434343435353636353636375363636363636363636363636363636363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5",
		"America/Toronto|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5",
		"America/Nassau|LMT EST EWT EPT EDT|59.u 50 40 40 40|01212314141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2kNuO.u 1drbO.u 6tX0 cp0 1hS0 pF0 J630 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|24e4",
		"America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6",
		"America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|16e2",
		"America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2",
		"America/Noronha|LMT -02 -01|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2",
		"America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3",
		"America/Pangnirtung|-00 AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
		"America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k Wqo0.c qanX.I 1yVXN.o|24e4",
		"America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0|42e5",
		"America/Port-au-Prince|PPMT EST EDT|4N 50 40|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
		"America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4",
		"America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4",
		"America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0|24e5",
		"America/Punta_Arenas|SMT -05 -04 -03|4G.K 50 40 30|0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|",
		"America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|842",
		"America/Rankin_Inlet|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2",
		"America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5",
		"America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4",
		"America/Resolute|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229",
		"America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4",
		"America/Santiago|SMT -05 -04 -03|4G.K 50 40 30|010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|62e5",
		"America/Santo_Domingo|SDMT EST EDT -0430 AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|29e5",
		"America/Sao_Paulo|LMT -03 -02|36.s 30 20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6",
		"America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0|0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452",
		"America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2",
		"America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
		"America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3",
		"America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0|11e5",
		"America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656",
		"America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
		"America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
		"America/Whitehorse|YST YDT YWT YPT YDDT PST PDT MST|90 80 80 80 70 80 70 70|010102304056565656565656565656565656565656565656565656565656565656565656565656565656565656567|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1z90|23e3",
		"America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4",
		"America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|642",
		"America/Yellowknife|-00 MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
		"Antarctica/Casey|-00 +08 +11|0 -80 -b0|0121212121212|-2q00 1DjS0 T90 40P0 KL0 blz0 3m10 1o30 14k0 1kr0 12l0 1o01|10",
		"Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0|70",
		"Antarctica/DumontDUrville|-00 +10|0 -a0|0101|-U0o0 cfq0 bFm0|80",
		"Antarctica/Macquarie|AEST AEDT -00|-a0 -b0 0|010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 1a00 4SK0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 3Co0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|1",
		"Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60",
		"Pacific/Auckland|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5",
		"Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|0121212121213121212121212121212121212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40",
		"Antarctica/Rothera|-00 -03|0 30|01|gOo0|130",
		"Antarctica/Syowa|-00 +03|0 -30|01|-vs00|20",
		"Antarctica/Troll|-00 +00 +02|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40",
		"Antarctica/Vostok|-00 +06|0 -60|01|-tjA0|25",
		"Europe/Oslo|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e4",
		"Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5",
		"Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|012323232323232323232321232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|15e5",
		"Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e5",
		"Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|01232121212121212121214121212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3",
		"Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|15e4",
		"Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|27e4",
		"Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4",
		"Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|01232323232323232323242323232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|",
		"Asia/Baghdad|BMT +03 +04|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5",
		"Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4",
		"Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|01232323232323232323232123232323232323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5",
		"Asia/Bangkok|BMT +07|-6G.4 -70|01|-218SG.4|15e6",
		"Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|0123232323232323232323212323232321212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|",
		"Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5",
		"Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|012323232323232323232321212121212121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4",
		"Asia/Brunei|LMT +0730 +08|-7D.E -7u -80|012|-1KITD.E gDc9.E|42e4",
		"Asia/Kolkata|MMT IST +0630|-5l.a -5u -6u|012121|-2zOtl.a 1r2LP.a 1un0 HB0 7zX0|15e6",
		"Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4",
		"Asia/Choibalsan|LMT +07 +08 +10 +09|-7C -70 -80 -a0 -90|0123434343434343434343434343434343434343434343424242|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0|38e3",
		"Asia/Shanghai|CST CDT|-80 -90|01010101010101010101010101010|-23uw0 18n0 OjB0 Rz0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6",
		"Asia/Colombo|MMT +0530 +06 +0630|-5j.w -5u -60 -6u|01231321|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu|22e5",
		"Asia/Dhaka|HMT +0630 +0530 +06 +07|-5R.k -6u -5u -60 -70|0121343|-18LFR.k 1unn.k HB0 m6n0 2kxbu 1i00|16e6",
		"Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|26e5",
		"Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le8m.k 1dnXm.k 1nfA0 Xld0|19e4",
		"Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5",
		"Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4",
		"Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212312121212121212121212121212121212121212121|-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
		"Asia/Gaza|EET EEST IST IDT|-20 -30 -20 -30|010101010101010101010101010101010123232323232323232323232323232320101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2o0 MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 pBa0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nA0 1210 1qL0 WN0 1qL0 WN0 1qL0 11c0 1on0 11B0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5",
		"Asia/Hebron|EET EEST IST IDT|-20 -30 -20 -30|01010101010101010101010101010101012323232323232323232323232323232010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2o0 MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 pBa0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nA0 1210 1qL0 WN0 1qL0 WN0 1qL0 11c0 1on0 11B0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4",
		"Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.E -76.u -70 -80 -90|0123423232|-2yC76.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0|90e5",
		"Asia/Hong_Kong|LMT HKT HKST HKWT JST|-7A.G -80 -90 -8u -90|0123412121212121212121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu 11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5",
		"Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3",
		"Asia/Irkutsk|IMT +07 +08 +09|-6V.5 -70 -80 -90|01232323232323232323232123232323232323232323232323232323232323232|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
		"Europe/Istanbul|IMT EET EEST +03 +04|-1U.U -20 -30 -30 -40|0121212121212121212121212121212121212121212121234312121212121212121212121212121212121212121212121212121212121212123|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSN0 CL0 mp0 1Vz0 1gN0 8yn0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1ip0 19X0 1ip0 17b0 qdB0 38L0 1jd0 Tz0 l6O0 11A0 WN0 1qL0 TB0 1tX0 U10 1tz0 11B0 1in0 17d0 z90 cne0 pb0 2Cp0 1800 14o0 1dc0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6",
		"Asia/Jakarta|BMT +0720 +0730 +09 +08 WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6",
		"Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26e4",
		"Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|01212121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyOk.E MM0 iM0 4JA0 10o0 1pA0 10M0 1pA0 16o0 1jA0 16o0 1jA0 3LA0 Eo0 oo0 1co0 1dA0 16o0 10M0 1jc0 1tA0 14o0 1cM0 1a00 11A0 1Nc0 Ao0 1Nc0 Ao0 1Ko0 LA0 1o00 WM0 EQK0 Db0 1fB0 Rb0 bXB0 gM0 8Q00 IM0 1wo0 TX0 1HB0 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4",
		"Asia/Kabul|+04 +0430|-40 -4u|01|-10Qs0|46e5",
		"Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|012323232323232323232321232323232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4",
		"Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6",
		"Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5",
		"Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5",
		"Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2",
		"Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|01232323232323232323232123232323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5",
		"Asia/Kuala_Lumpur|SMT +07 +0720 +0730 +09 +08|-6T.p -70 -7k -7u -90 -80|0123435|-2Bg6T.p 17anT.p l5XE 17bO 8Fyu 1so1u|71e5",
		"Asia/Kuching|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0|13e4",
		"Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|012323214141414141414141414141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|57e4",
		"Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|012323232323232323232321232323232323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3",
		"Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0 myLV.A 8ML0|15e5",
		"Asia/Manila|PST PDT JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0|24e6",
		"Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|32e4",
		"Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|012323232323232323232321232323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4",
		"Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|0123232323232323232323212323212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5",
		"Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|01232323232323232323232123232323232323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5",
		"Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|27e4",
		"Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4",
		"Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 6BA0|29e5",
		"Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|012323232323232323232123232323232323232323232323|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|",
		"Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 zQl0|73e4",
		"Asia/Rangoon|RMT +0630 +09|-6o.L -6u -90|0121|-21Jio.L SmnS.L 7j9u|48e5",
		"Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|01232323232323232323232423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4",
		"Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4",
		"Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -a0 -9u|012343434343151515151515134343|-2um8r.Q 97XV.Q 1m1zu 6CM0 Fz0 1kN0 14n0 1kN0 14L0 1zd0 On0 69B0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0|23e6",
		"Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|01232323232323232323232123232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2",
		"Asia/Taipei|CST JST CDT|-80 -90 -90|01020202020202020202020202020202020202020|-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5",
		"Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5",
		"Asia/Tbilisi|TBMT +03 +04 +05|-2X.b -30 -40 -50|0123232323232323232323212121232323232323232323212|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0|11e5",
		"Asia/Tehran|LMT TMT +0330 +04 +05 +0430|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6",
		"Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3",
		"Asia/Tokyo|JST JDT|-90 -a0|010101010|-QJJ0 Rc0 1lc0 14o0 1zc0 Oo0 1zc0 Oo0|38e6",
		"Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|0123232323232323232323212323232323232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5",
		"Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5",
		"Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|012343434343434343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2",
		"Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|01232323232323232323232123232323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
		"Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|01232323232323232323232123232323232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4",
		"Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5",
		"Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|0123232323232323232323212121212323232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|13e5",
		"Atlantic/Azores|HMT -02 -01 +00 WET|1S.w 20 10 0 0|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323234323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2ldW0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4",
		"Atlantic/Bermuda|BMT BST AST ADT|4j.i 3j.i 40 30|010102323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28p7E.G 1bb0 1i10 11X0 ru30 thbE.G 1PX0 11B0 1tz0 Rd0 1zb0 Op0 1zb0 3I10 Lz0 1EN0 FX0 1HB0 FX0 1Kp0 Db0 1Kp0 Db0 1Kp0 FX0 93d0 11z0 GAp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e3",
		"Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
		"Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4",
		"Atlantic/Faroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|49e3",
		"Atlantic/Madeira|FMT -01 +00 +01 WET WEST|17.A 10 0 -10 0 -10|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldX0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e4",
		"Atlantic/Reykjavik|LMT -01 +00 GMT|1s 10 0 0|012121212121212121212121212121212121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0|12e4",
		"Atlantic/South_Georgia|-02|20|0||30",
		"Atlantic/Stanley|SMT -04 -03 -02|3P.o 40 30 20|012121212121212323212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2",
		"Australia/Sydney|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|40e5",
		"Australia/Adelaide|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293ju xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|11e5",
		"Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5",
		"Australia/Broken_Hill|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293ju xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|18e3",
		"Australia/Hobart|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 1a00 1qM0 Oo0 1zc0 Oo0 TAo0 yM0 1cM0 1cM0 1fA0 1a00 VfA0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|21e4",
		"Australia/Darwin|ACST ACDT|-9u -au|010101010|-293ju xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00|12e4",
		"Australia/Eucla|+0845 +0945|-8J -9J|0101010101010101010|-293iJ xc0 10jc0 yM0 1cM0 1cM0 1gSo0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368",
		"Australia/Lord_Howe|AEST +1030 +1130 +11|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu|347",
		"Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|10",
		"Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293k0 xc0 10jc0 yM0 1cM0 1cM0 1fA0 1a00 17c00 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|39e5",
		"Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293i0 xc0 10jc0 yM0 1cM0 1cM0 1gSo0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5",
		"CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
		"Pacific/Easter|EMT -07 -06 -05|7h.s 70 60 50|012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|30e2",
		"CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
		"Europe/Dublin|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
		"EST|EST|50|0||",
		"EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"Etc/GMT-0|GMT|0|0||",
		"Etc/GMT-1|+01|-10|0||",
		"Pacific/Port_Moresby|+10|-a0|0||25e4",
		"Etc/GMT-11|+11|-b0|0||",
		"Pacific/Tarawa|+12|-c0|0||29e3",
		"Etc/GMT-13|+13|-d0|0||",
		"Etc/GMT-14|+14|-e0|0||",
		"Etc/GMT-2|+02|-20|0||",
		"Etc/GMT-3|+03|-30|0||",
		"Etc/GMT-4|+04|-40|0||",
		"Etc/GMT-5|+05|-50|0||",
		"Etc/GMT-6|+06|-60|0||",
		"Indian/Christmas|+07|-70|0||21e2",
		"Etc/GMT-8|+08|-80|0||",
		"Pacific/Palau|+09|-90|0||21e3",
		"Etc/GMT+1|-01|10|0||",
		"Etc/GMT+10|-10|a0|0||",
		"Etc/GMT+11|-11|b0|0||",
		"Etc/GMT+12|-12|c0|0||",
		"Etc/GMT+3|-03|30|0||",
		"Etc/GMT+4|-04|40|0||",
		"Etc/GMT+5|-05|50|0||",
		"Etc/GMT+6|-06|60|0||",
		"Etc/GMT+7|-07|70|0||",
		"Etc/GMT+8|-08|80|0||",
		"Etc/GMT+9|-09|90|0||",
		"Etc/UTC|UTC|0|0||",
		"Europe/Amsterdam|AMT NST +0120 +0020 CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|16e5",
		"Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|79e3",
		"Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5",
		"Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5",
		"Europe/London|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6",
		"Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
		"Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e5",
		"Europe/Prague|CET CEST GMT|-10 -20 0|01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|13e5",
		"Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|21e5",
		"Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|19e5",
		"Europe/Budapest|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 1oo0 11c0 1lc0 17c0 O1V0 3Nf0 WM0 1fA0 1cM0 1cM0 1oJ0 1dd0 1020 1fX0 1cp0 1cM0 1cM0 1cM0 1fA0 1a00 bhy0 Rb0 1wr0 Rc0 1C00 LA0 1C00 LA0 SNW0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cO0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
		"Europe/Zurich|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e4",
		"Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|012323232323232323234545467676767676767676767323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4",
		"Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
		"Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|30e3",
		"Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
		"Europe/Kaliningrad|CET CEST EET EEST MSK MSD +03|-10 -20 -20 -30 -30 -40 -30|01010101010101232454545454545454543232323232323232323232323232323232323232323262|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 390 7A0 1en0 12N0 1pbb0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|44e4",
		"Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|34e5",
		"Europe/Kirov|LMT +03 +04 +05|-3i.M -30 -40 -50|01232323232323232321212121212121212121212121212121212121212121|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|48e4",
		"Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5",
		"Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
		"Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|010101010101010101210343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-25Td0 19B0 1cL0 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a10 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e5",
		"Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
		"Europe/Minsk|MMT EET MSK CEST CET MSD EEST +03|-1O -20 -30 -20 -10 -40 -30 -30|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0|19e5",
		"Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2n5c9.l cFX9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e3",
		"Europe/Moscow|MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|012132345464575454545454545454545458754545454545454545454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|16e6",
		"Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6",
		"Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|64e4",
		"Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|39e5",
		"Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|0123232323232323232121232323232323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|12e5",
		"Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 5810|",
		"Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|012343432525252525252525252161616525252616161616161616161616161616161616172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4",
		"Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
		"Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|15e5",
		"Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e4",
		"Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
		"Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|01232323232323232321214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5",
		"Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e4",
		"Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1ao0 1co0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5",
		"Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646473737373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
		"Europe/Volgograd|LMT +03 +04 +05|-2V.E -30 -40 -50|0123232323232323212121212121212121212121212121212121212121212121|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0 5gn0|10e5",
		"Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
		"Europe/Zaporozhye|+0220 EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|77e4",
		"HST|HST|a0|0||",
		"Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2",
		"Indian/Cocos|+0630|-6u|0||596",
		"Indian/Kerguelen|-00 +05|0 -50|01|-MG00|130",
		"Indian/Mahe|LMT +04|-3F.M -40|01|-2xorF.M|79e3",
		"Indian/Maldives|MMT +05|-4S -50|01|-olgS|35e4",
		"Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|15e4",
		"Indian/Reunion|LMT +04|-3F.Q -40|01|-2mDDF.Q|84e4",
		"Pacific/Kwajalein|+11 +10 +09 -12 +12|-b0 -a0 -90 c0 -c0|012034|-1kln0 akp0 6Up0 12ry0 Wan0|14e3",
		"MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|",
		"MST|MST|70|0||",
		"MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"Pacific/Chatham|+1215 +1245 +1345|-cf -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|600",
		"Pacific/Apia|LMT -1130 -11 -10 +14 +13|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|37e3",
		"Pacific/Bougainville|+10 +09 +11|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0|18e4",
		"Pacific/Chuuk|+10 +09|-a0 -90|01010|-2ewy0 axB0 RVX0 axd0|49e3",
		"Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|012121212121212121212121|-2l9nd.g 2uNXd.g Dc0 n610 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0|66e3",
		"Pacific/Enderbury|-12 -11 +13|c0 b0 -d0|012|nIc0 B7X0|1",
		"Pacific/Fakaofo|-11 +13|b0 -d0|01|1Gfn0|483",
		"Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|0121212121212121212121212121212121212121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 20o0 pc0 2hc0 bc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 20o0 pc0 20o0 pc0 20o0 pc0 20o0 pc0 20o0 s00 1VA0 s00|88e4",
		"Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3",
		"Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125",
		"Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4",
		"Pacific/Guam|GST +09 GDT ChST|-a0 -90 -b0 -a0|01020202020202020203|-18jK0 6pB0 AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0|17e4",
		"Pacific/Honolulu|HST HDT HWT HPT HST|au 9u 9u 9u a0|0102304|-1thLu 8x0 lef0 8wWu iAu 46p0|37e4",
		"Pacific/Kiritimati|-1040 -10 +14|aE a0 -e0|012|nIaE B7Xk|51e2",
		"Pacific/Kosrae|+11 +09 +10 +12|-b0 -90 -a0 -c0|01021030|-2ewz0 axC0 HBy0 akp0 axd0 WOK0 1bdz0|66e2",
		"Pacific/Majuro|+11 +09 +10 +12|-b0 -90 -a0 -c0|0102103|-2ewz0 axC0 HBy0 akp0 6RB0 12um0|28e3",
		"Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2",
		"Pacific/Pago_Pago|LMT SST|bm.M b0|01|-2nDMB.c|37e2",
		"Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1lnbu|10e3",
		"Pacific/Niue|-1120 -1130 -11|bk bu b0|012|-KfME 17y0a|12e2",
		"Pacific/Norfolk|+1112 +1130 +1230 +11 +12|-bc -bu -cu -b0 -c0|012134343434343434343434343434343434343434|-Kgbc W01G Oo0 1COo0 9Jcu 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|25e4",
		"Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0|98e3",
		"Pacific/Pitcairn|-0830 -08|8u 80|01|18Vku|56",
		"Pacific/Pohnpei|+11 +09 +10|-b0 -90 -a0|010210|-2ewz0 axC0 HBy0 akp0 axd0|34e3",
		"Pacific/Rarotonga|-1030 -0930 -10|au 9u a0|012121212121212121212121212|lyWu IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3",
		"Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4",
		"Pacific/Tongatapu|+1220 +13 +14|-ck -d0 -e0|0121212121|-1aB0k 2n5dk 15A0 1wo0 xz0 1Q10 xz0 zWN0 s00|75e3",
		"PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|",
		"WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|"
	],
	"links": [
		"Africa/Abidjan|Africa/Bamako",
		"Africa/Abidjan|Africa/Banjul",
		"Africa/Abidjan|Africa/Conakry",
		"Africa/Abidjan|Africa/Dakar",
		"Africa/Abidjan|Africa/Freetown",
		"Africa/Abidjan|Africa/Lome",
		"Africa/Abidjan|Africa/Nouakchott",
		"Africa/Abidjan|Africa/Ouagadougou",
		"Africa/Abidjan|Africa/Timbuktu",
		"Africa/Abidjan|Atlantic/St_Helena",
		"Africa/Cairo|Egypt",
		"Africa/Johannesburg|Africa/Maseru",
		"Africa/Johannesburg|Africa/Mbabane",
		"Africa/Lagos|Africa/Bangui",
		"Africa/Lagos|Africa/Brazzaville",
		"Africa/Lagos|Africa/Douala",
		"Africa/Lagos|Africa/Kinshasa",
		"Africa/Lagos|Africa/Libreville",
		"Africa/Lagos|Africa/Luanda",
		"Africa/Lagos|Africa/Malabo",
		"Africa/Lagos|Africa/Niamey",
		"Africa/Lagos|Africa/Porto-Novo",
		"Africa/Maputo|Africa/Blantyre",
		"Africa/Maputo|Africa/Bujumbura",
		"Africa/Maputo|Africa/Gaborone",
		"Africa/Maputo|Africa/Harare",
		"Africa/Maputo|Africa/Kigali",
		"Africa/Maputo|Africa/Lubumbashi",
		"Africa/Maputo|Africa/Lusaka",
		"Africa/Nairobi|Africa/Addis_Ababa",
		"Africa/Nairobi|Africa/Asmara",
		"Africa/Nairobi|Africa/Asmera",
		"Africa/Nairobi|Africa/Dar_es_Salaam",
		"Africa/Nairobi|Africa/Djibouti",
		"Africa/Nairobi|Africa/Kampala",
		"Africa/Nairobi|Africa/Mogadishu",
		"Africa/Nairobi|Indian/Antananarivo",
		"Africa/Nairobi|Indian/Comoro",
		"Africa/Nairobi|Indian/Mayotte",
		"Africa/Tripoli|Libya",
		"America/Adak|America/Atka",
		"America/Adak|US/Aleutian",
		"America/Anchorage|US/Alaska",
		"America/Argentina/Buenos_Aires|America/Buenos_Aires",
		"America/Argentina/Catamarca|America/Argentina/ComodRivadavia",
		"America/Argentina/Catamarca|America/Catamarca",
		"America/Argentina/Cordoba|America/Cordoba",
		"America/Argentina/Cordoba|America/Rosario",
		"America/Argentina/Jujuy|America/Jujuy",
		"America/Argentina/Mendoza|America/Mendoza",
		"America/Atikokan|America/Coral_Harbour",
		"America/Chicago|US/Central",
		"America/Curacao|America/Aruba",
		"America/Curacao|America/Kralendijk",
		"America/Curacao|America/Lower_Princes",
		"America/Denver|America/Shiprock",
		"America/Denver|Navajo",
		"America/Denver|US/Mountain",
		"America/Detroit|US/Michigan",
		"America/Edmonton|Canada/Mountain",
		"America/Fort_Wayne|America/Indiana/Indianapolis",
		"America/Fort_Wayne|America/Indianapolis",
		"America/Fort_Wayne|US/East-Indiana",
		"America/Godthab|America/Nuuk",
		"America/Halifax|Canada/Atlantic",
		"America/Havana|Cuba",
		"America/Indiana/Knox|America/Knox_IN",
		"America/Indiana/Knox|US/Indiana-Starke",
		"America/Jamaica|Jamaica",
		"America/Kentucky/Louisville|America/Louisville",
		"America/Los_Angeles|US/Pacific",
		"America/Manaus|Brazil/West",
		"America/Mazatlan|Mexico/BajaSur",
		"America/Mexico_City|Mexico/General",
		"America/New_York|US/Eastern",
		"America/Noronha|Brazil/DeNoronha",
		"America/Panama|America/Cayman",
		"America/Phoenix|US/Arizona",
		"America/Port_of_Spain|America/Anguilla",
		"America/Port_of_Spain|America/Antigua",
		"America/Port_of_Spain|America/Dominica",
		"America/Port_of_Spain|America/Grenada",
		"America/Port_of_Spain|America/Guadeloupe",
		"America/Port_of_Spain|America/Marigot",
		"America/Port_of_Spain|America/Montserrat",
		"America/Port_of_Spain|America/St_Barthelemy",
		"America/Port_of_Spain|America/St_Kitts",
		"America/Port_of_Spain|America/St_Lucia",
		"America/Port_of_Spain|America/St_Thomas",
		"America/Port_of_Spain|America/St_Vincent",
		"America/Port_of_Spain|America/Tortola",
		"America/Port_of_Spain|America/Virgin",
		"America/Regina|Canada/Saskatchewan",
		"America/Rio_Branco|America/Porto_Acre",
		"America/Rio_Branco|Brazil/Acre",
		"America/Santiago|Chile/Continental",
		"America/Sao_Paulo|Brazil/East",
		"America/St_Johns|Canada/Newfoundland",
		"America/Tijuana|America/Ensenada",
		"America/Tijuana|America/Santa_Isabel",
		"America/Tijuana|Mexico/BajaNorte",
		"America/Toronto|America/Montreal",
		"America/Toronto|Canada/Eastern",
		"America/Vancouver|Canada/Pacific",
		"America/Whitehorse|Canada/Yukon",
		"America/Winnipeg|Canada/Central",
		"Asia/Ashgabat|Asia/Ashkhabad",
		"Asia/Bangkok|Asia/Phnom_Penh",
		"Asia/Bangkok|Asia/Vientiane",
		"Asia/Dhaka|Asia/Dacca",
		"Asia/Dubai|Asia/Muscat",
		"Asia/Ho_Chi_Minh|Asia/Saigon",
		"Asia/Hong_Kong|Hongkong",
		"Asia/Jerusalem|Asia/Tel_Aviv",
		"Asia/Jerusalem|Israel",
		"Asia/Kathmandu|Asia/Katmandu",
		"Asia/Kolkata|Asia/Calcutta",
		"Asia/Kuala_Lumpur|Asia/Singapore",
		"Asia/Kuala_Lumpur|Singapore",
		"Asia/Macau|Asia/Macao",
		"Asia/Makassar|Asia/Ujung_Pandang",
		"Asia/Nicosia|Europe/Nicosia",
		"Asia/Qatar|Asia/Bahrain",
		"Asia/Rangoon|Asia/Yangon",
		"Asia/Riyadh|Asia/Aden",
		"Asia/Riyadh|Asia/Kuwait",
		"Asia/Seoul|ROK",
		"Asia/Shanghai|Asia/Chongqing",
		"Asia/Shanghai|Asia/Chungking",
		"Asia/Shanghai|Asia/Harbin",
		"Asia/Shanghai|PRC",
		"Asia/Taipei|ROC",
		"Asia/Tehran|Iran",
		"Asia/Thimphu|Asia/Thimbu",
		"Asia/Tokyo|Japan",
		"Asia/Ulaanbaatar|Asia/Ulan_Bator",
		"Asia/Urumqi|Asia/Kashgar",
		"Atlantic/Faroe|Atlantic/Faeroe",
		"Atlantic/Reykjavik|Iceland",
		"Atlantic/South_Georgia|Etc/GMT+2",
		"Australia/Adelaide|Australia/South",
		"Australia/Brisbane|Australia/Queensland",
		"Australia/Broken_Hill|Australia/Yancowinna",
		"Australia/Darwin|Australia/North",
		"Australia/Hobart|Australia/Currie",
		"Australia/Hobart|Australia/Tasmania",
		"Australia/Lord_Howe|Australia/LHI",
		"Australia/Melbourne|Australia/Victoria",
		"Australia/Perth|Australia/West",
		"Australia/Sydney|Australia/ACT",
		"Australia/Sydney|Australia/Canberra",
		"Australia/Sydney|Australia/NSW",
		"Etc/GMT-0|Etc/GMT",
		"Etc/GMT-0|Etc/GMT+0",
		"Etc/GMT-0|Etc/GMT0",
		"Etc/GMT-0|Etc/Greenwich",
		"Etc/GMT-0|GMT",
		"Etc/GMT-0|GMT+0",
		"Etc/GMT-0|GMT-0",
		"Etc/GMT-0|GMT0",
		"Etc/GMT-0|Greenwich",
		"Etc/UTC|Etc/UCT",
		"Etc/UTC|Etc/Universal",
		"Etc/UTC|Etc/Zulu",
		"Etc/UTC|UCT",
		"Etc/UTC|UTC",
		"Etc/UTC|Universal",
		"Etc/UTC|Zulu",
		"Europe/Belgrade|Europe/Ljubljana",
		"Europe/Belgrade|Europe/Podgorica",
		"Europe/Belgrade|Europe/Sarajevo",
		"Europe/Belgrade|Europe/Skopje",
		"Europe/Belgrade|Europe/Zagreb",
		"Europe/Chisinau|Europe/Tiraspol",
		"Europe/Dublin|Eire",
		"Europe/Helsinki|Europe/Mariehamn",
		"Europe/Istanbul|Asia/Istanbul",
		"Europe/Istanbul|Turkey",
		"Europe/Lisbon|Portugal",
		"Europe/London|Europe/Belfast",
		"Europe/London|Europe/Guernsey",
		"Europe/London|Europe/Isle_of_Man",
		"Europe/London|Europe/Jersey",
		"Europe/London|GB",
		"Europe/London|GB-Eire",
		"Europe/Moscow|W-SU",
		"Europe/Oslo|Arctic/Longyearbyen",
		"Europe/Oslo|Atlantic/Jan_Mayen",
		"Europe/Prague|Europe/Bratislava",
		"Europe/Rome|Europe/San_Marino",
		"Europe/Rome|Europe/Vatican",
		"Europe/Warsaw|Poland",
		"Europe/Zurich|Europe/Busingen",
		"Europe/Zurich|Europe/Vaduz",
		"Indian/Christmas|Etc/GMT-7",
		"Pacific/Auckland|Antarctica/McMurdo",
		"Pacific/Auckland|Antarctica/South_Pole",
		"Pacific/Auckland|NZ",
		"Pacific/Chatham|NZ-CHAT",
		"Pacific/Chuuk|Pacific/Truk",
		"Pacific/Chuuk|Pacific/Yap",
		"Pacific/Easter|Chile/EasterIsland",
		"Pacific/Guam|Pacific/Saipan",
		"Pacific/Honolulu|Pacific/Johnston",
		"Pacific/Honolulu|US/Hawaii",
		"Pacific/Kwajalein|Kwajalein",
		"Pacific/Pago_Pago|Pacific/Midway",
		"Pacific/Pago_Pago|Pacific/Samoa",
		"Pacific/Pago_Pago|US/Samoa",
		"Pacific/Palau|Etc/GMT-9",
		"Pacific/Pohnpei|Pacific/Ponape",
		"Pacific/Port_Moresby|Etc/GMT-10",
		"Pacific/Tarawa|Etc/GMT-12",
		"Pacific/Tarawa|Pacific/Funafuti",
		"Pacific/Tarawa|Pacific/Wake",
		"Pacific/Tarawa|Pacific/Wallis"
	],
	"countries": [
		"AD|Europe/Andorra",
		"AE|Asia/Dubai",
		"AF|Asia/Kabul",
		"AG|America/Port_of_Spain America/Antigua",
		"AI|America/Port_of_Spain America/Anguilla",
		"AL|Europe/Tirane",
		"AM|Asia/Yerevan",
		"AO|Africa/Lagos Africa/Luanda",
		"AQ|Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Mawson Antarctica/Palmer Antarctica/Rothera Antarctica/Syowa Antarctica/Troll Antarctica/Vostok Pacific/Auckland Antarctica/McMurdo",
		"AR|America/Argentina/Buenos_Aires America/Argentina/Cordoba America/Argentina/Salta America/Argentina/Jujuy America/Argentina/Tucuman America/Argentina/Catamarca America/Argentina/La_Rioja America/Argentina/San_Juan America/Argentina/Mendoza America/Argentina/San_Luis America/Argentina/Rio_Gallegos America/Argentina/Ushuaia",
		"AS|Pacific/Pago_Pago",
		"AT|Europe/Vienna",
		"AU|Australia/Lord_Howe Antarctica/Macquarie Australia/Hobart Australia/Currie Australia/Melbourne Australia/Sydney Australia/Broken_Hill Australia/Brisbane Australia/Lindeman Australia/Adelaide Australia/Darwin Australia/Perth Australia/Eucla",
		"AW|America/Curacao America/Aruba",
		"AX|Europe/Helsinki Europe/Mariehamn",
		"AZ|Asia/Baku",
		"BA|Europe/Belgrade Europe/Sarajevo",
		"BB|America/Barbados",
		"BD|Asia/Dhaka",
		"BE|Europe/Brussels",
		"BF|Africa/Abidjan Africa/Ouagadougou",
		"BG|Europe/Sofia",
		"BH|Asia/Qatar Asia/Bahrain",
		"BI|Africa/Maputo Africa/Bujumbura",
		"BJ|Africa/Lagos Africa/Porto-Novo",
		"BL|America/Port_of_Spain America/St_Barthelemy",
		"BM|Atlantic/Bermuda",
		"BN|Asia/Brunei",
		"BO|America/La_Paz",
		"BQ|America/Curacao America/Kralendijk",
		"BR|America/Noronha America/Belem America/Fortaleza America/Recife America/Araguaina America/Maceio America/Bahia America/Sao_Paulo America/Campo_Grande America/Cuiaba America/Santarem America/Porto_Velho America/Boa_Vista America/Manaus America/Eirunepe America/Rio_Branco",
		"BS|America/Nassau",
		"BT|Asia/Thimphu",
		"BW|Africa/Maputo Africa/Gaborone",
		"BY|Europe/Minsk",
		"BZ|America/Belize",
		"CA|America/St_Johns America/Halifax America/Glace_Bay America/Moncton America/Goose_Bay America/Blanc-Sablon America/Toronto America/Nipigon America/Thunder_Bay America/Iqaluit America/Pangnirtung America/Atikokan America/Winnipeg America/Rainy_River America/Resolute America/Rankin_Inlet America/Regina America/Swift_Current America/Edmonton America/Cambridge_Bay America/Yellowknife America/Inuvik America/Creston America/Dawson_Creek America/Fort_Nelson America/Vancouver America/Whitehorse America/Dawson",
		"CC|Indian/Cocos",
		"CD|Africa/Maputo Africa/Lagos Africa/Kinshasa Africa/Lubumbashi",
		"CF|Africa/Lagos Africa/Bangui",
		"CG|Africa/Lagos Africa/Brazzaville",
		"CH|Europe/Zurich",
		"CI|Africa/Abidjan",
		"CK|Pacific/Rarotonga",
		"CL|America/Santiago America/Punta_Arenas Pacific/Easter",
		"CM|Africa/Lagos Africa/Douala",
		"CN|Asia/Shanghai Asia/Urumqi",
		"CO|America/Bogota",
		"CR|America/Costa_Rica",
		"CU|America/Havana",
		"CV|Atlantic/Cape_Verde",
		"CW|America/Curacao",
		"CX|Indian/Christmas",
		"CY|Asia/Nicosia Asia/Famagusta",
		"CZ|Europe/Prague",
		"DE|Europe/Zurich Europe/Berlin Europe/Busingen",
		"DJ|Africa/Nairobi Africa/Djibouti",
		"DK|Europe/Copenhagen",
		"DM|America/Port_of_Spain America/Dominica",
		"DO|America/Santo_Domingo",
		"DZ|Africa/Algiers",
		"EC|America/Guayaquil Pacific/Galapagos",
		"EE|Europe/Tallinn",
		"EG|Africa/Cairo",
		"EH|Africa/El_Aaiun",
		"ER|Africa/Nairobi Africa/Asmara",
		"ES|Europe/Madrid Africa/Ceuta Atlantic/Canary",
		"ET|Africa/Nairobi Africa/Addis_Ababa",
		"FI|Europe/Helsinki",
		"FJ|Pacific/Fiji",
		"FK|Atlantic/Stanley",
		"FM|Pacific/Chuuk Pacific/Pohnpei Pacific/Kosrae",
		"FO|Atlantic/Faroe",
		"FR|Europe/Paris",
		"GA|Africa/Lagos Africa/Libreville",
		"GB|Europe/London",
		"GD|America/Port_of_Spain America/Grenada",
		"GE|Asia/Tbilisi",
		"GF|America/Cayenne",
		"GG|Europe/London Europe/Guernsey",
		"GH|Africa/Accra",
		"GI|Europe/Gibraltar",
		"GL|America/Nuuk America/Danmarkshavn America/Scoresbysund America/Thule",
		"GM|Africa/Abidjan Africa/Banjul",
		"GN|Africa/Abidjan Africa/Conakry",
		"GP|America/Port_of_Spain America/Guadeloupe",
		"GQ|Africa/Lagos Africa/Malabo",
		"GR|Europe/Athens",
		"GS|Atlantic/South_Georgia",
		"GT|America/Guatemala",
		"GU|Pacific/Guam",
		"GW|Africa/Bissau",
		"GY|America/Guyana",
		"HK|Asia/Hong_Kong",
		"HN|America/Tegucigalpa",
		"HR|Europe/Belgrade Europe/Zagreb",
		"HT|America/Port-au-Prince",
		"HU|Europe/Budapest",
		"ID|Asia/Jakarta Asia/Pontianak Asia/Makassar Asia/Jayapura",
		"IE|Europe/Dublin",
		"IL|Asia/Jerusalem",
		"IM|Europe/London Europe/Isle_of_Man",
		"IN|Asia/Kolkata",
		"IO|Indian/Chagos",
		"IQ|Asia/Baghdad",
		"IR|Asia/Tehran",
		"IS|Atlantic/Reykjavik",
		"IT|Europe/Rome",
		"JE|Europe/London Europe/Jersey",
		"JM|America/Jamaica",
		"JO|Asia/Amman",
		"JP|Asia/Tokyo",
		"KE|Africa/Nairobi",
		"KG|Asia/Bishkek",
		"KH|Asia/Bangkok Asia/Phnom_Penh",
		"KI|Pacific/Tarawa Pacific/Enderbury Pacific/Kiritimati",
		"KM|Africa/Nairobi Indian/Comoro",
		"KN|America/Port_of_Spain America/St_Kitts",
		"KP|Asia/Pyongyang",
		"KR|Asia/Seoul",
		"KW|Asia/Riyadh Asia/Kuwait",
		"KY|America/Panama America/Cayman",
		"KZ|Asia/Almaty Asia/Qyzylorda Asia/Qostanay Asia/Aqtobe Asia/Aqtau Asia/Atyrau Asia/Oral",
		"LA|Asia/Bangkok Asia/Vientiane",
		"LB|Asia/Beirut",
		"LC|America/Port_of_Spain America/St_Lucia",
		"LI|Europe/Zurich Europe/Vaduz",
		"LK|Asia/Colombo",
		"LR|Africa/Monrovia",
		"LS|Africa/Johannesburg Africa/Maseru",
		"LT|Europe/Vilnius",
		"LU|Europe/Luxembourg",
		"LV|Europe/Riga",
		"LY|Africa/Tripoli",
		"MA|Africa/Casablanca",
		"MC|Europe/Monaco",
		"MD|Europe/Chisinau",
		"ME|Europe/Belgrade Europe/Podgorica",
		"MF|America/Port_of_Spain America/Marigot",
		"MG|Africa/Nairobi Indian/Antananarivo",
		"MH|Pacific/Majuro Pacific/Kwajalein",
		"MK|Europe/Belgrade Europe/Skopje",
		"ML|Africa/Abidjan Africa/Bamako",
		"MM|Asia/Yangon",
		"MN|Asia/Ulaanbaatar Asia/Hovd Asia/Choibalsan",
		"MO|Asia/Macau",
		"MP|Pacific/Guam Pacific/Saipan",
		"MQ|America/Martinique",
		"MR|Africa/Abidjan Africa/Nouakchott",
		"MS|America/Port_of_Spain America/Montserrat",
		"MT|Europe/Malta",
		"MU|Indian/Mauritius",
		"MV|Indian/Maldives",
		"MW|Africa/Maputo Africa/Blantyre",
		"MX|America/Mexico_City America/Cancun America/Merida America/Monterrey America/Matamoros America/Mazatlan America/Chihuahua America/Ojinaga America/Hermosillo America/Tijuana America/Bahia_Banderas",
		"MY|Asia/Kuala_Lumpur Asia/Kuching",
		"MZ|Africa/Maputo",
		"NA|Africa/Windhoek",
		"NC|Pacific/Noumea",
		"NE|Africa/Lagos Africa/Niamey",
		"NF|Pacific/Norfolk",
		"NG|Africa/Lagos",
		"NI|America/Managua",
		"NL|Europe/Amsterdam",
		"NO|Europe/Oslo",
		"NP|Asia/Kathmandu",
		"NR|Pacific/Nauru",
		"NU|Pacific/Niue",
		"NZ|Pacific/Auckland Pacific/Chatham",
		"OM|Asia/Dubai Asia/Muscat",
		"PA|America/Panama",
		"PE|America/Lima",
		"PF|Pacific/Tahiti Pacific/Marquesas Pacific/Gambier",
		"PG|Pacific/Port_Moresby Pacific/Bougainville",
		"PH|Asia/Manila",
		"PK|Asia/Karachi",
		"PL|Europe/Warsaw",
		"PM|America/Miquelon",
		"PN|Pacific/Pitcairn",
		"PR|America/Puerto_Rico",
		"PS|Asia/Gaza Asia/Hebron",
		"PT|Europe/Lisbon Atlantic/Madeira Atlantic/Azores",
		"PW|Pacific/Palau",
		"PY|America/Asuncion",
		"QA|Asia/Qatar",
		"RE|Indian/Reunion",
		"RO|Europe/Bucharest",
		"RS|Europe/Belgrade",
		"RU|Europe/Kaliningrad Europe/Moscow Europe/Simferopol Europe/Kirov Europe/Astrakhan Europe/Volgograd Europe/Saratov Europe/Ulyanovsk Europe/Samara Asia/Yekaterinburg Asia/Omsk Asia/Novosibirsk Asia/Barnaul Asia/Tomsk Asia/Novokuznetsk Asia/Krasnoyarsk Asia/Irkutsk Asia/Chita Asia/Yakutsk Asia/Khandyga Asia/Vladivostok Asia/Ust-Nera Asia/Magadan Asia/Sakhalin Asia/Srednekolymsk Asia/Kamchatka Asia/Anadyr",
		"RW|Africa/Maputo Africa/Kigali",
		"SA|Asia/Riyadh",
		"SB|Pacific/Guadalcanal",
		"SC|Indian/Mahe",
		"SD|Africa/Khartoum",
		"SE|Europe/Stockholm",
		"SG|Asia/Singapore",
		"SH|Africa/Abidjan Atlantic/St_Helena",
		"SI|Europe/Belgrade Europe/Ljubljana",
		"SJ|Europe/Oslo Arctic/Longyearbyen",
		"SK|Europe/Prague Europe/Bratislava",
		"SL|Africa/Abidjan Africa/Freetown",
		"SM|Europe/Rome Europe/San_Marino",
		"SN|Africa/Abidjan Africa/Dakar",
		"SO|Africa/Nairobi Africa/Mogadishu",
		"SR|America/Paramaribo",
		"SS|Africa/Juba",
		"ST|Africa/Sao_Tome",
		"SV|America/El_Salvador",
		"SX|America/Curacao America/Lower_Princes",
		"SY|Asia/Damascus",
		"SZ|Africa/Johannesburg Africa/Mbabane",
		"TC|America/Grand_Turk",
		"TD|Africa/Ndjamena",
		"TF|Indian/Reunion Indian/Kerguelen",
		"TG|Africa/Abidjan Africa/Lome",
		"TH|Asia/Bangkok",
		"TJ|Asia/Dushanbe",
		"TK|Pacific/Fakaofo",
		"TL|Asia/Dili",
		"TM|Asia/Ashgabat",
		"TN|Africa/Tunis",
		"TO|Pacific/Tongatapu",
		"TR|Europe/Istanbul",
		"TT|America/Port_of_Spain",
		"TV|Pacific/Funafuti",
		"TW|Asia/Taipei",
		"TZ|Africa/Nairobi Africa/Dar_es_Salaam",
		"UA|Europe/Simferopol Europe/Kiev Europe/Uzhgorod Europe/Zaporozhye",
		"UG|Africa/Nairobi Africa/Kampala",
		"UM|Pacific/Pago_Pago Pacific/Wake Pacific/Honolulu Pacific/Midway",
		"US|America/New_York America/Detroit America/Kentucky/Louisville America/Kentucky/Monticello America/Indiana/Indianapolis America/Indiana/Vincennes America/Indiana/Winamac America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Vevay America/Chicago America/Indiana/Tell_City America/Indiana/Knox America/Menominee America/North_Dakota/Center America/North_Dakota/New_Salem America/North_Dakota/Beulah America/Denver America/Boise America/Phoenix America/Los_Angeles America/Anchorage America/Juneau America/Sitka America/Metlakatla America/Yakutat America/Nome America/Adak Pacific/Honolulu",
		"UY|America/Montevideo",
		"UZ|Asia/Samarkand Asia/Tashkent",
		"VA|Europe/Rome Europe/Vatican",
		"VC|America/Port_of_Spain America/St_Vincent",
		"VE|America/Caracas",
		"VG|America/Port_of_Spain America/Tortola",
		"VI|America/Port_of_Spain America/St_Thomas",
		"VN|Asia/Bangkok Asia/Ho_Chi_Minh",
		"VU|Pacific/Efate",
		"WF|Pacific/Wallis",
		"WS|Pacific/Apia",
		"YE|Asia/Riyadh Asia/Aden",
		"YT|Africa/Nairobi Indian/Mayotte",
		"ZA|Africa/Johannesburg",
		"ZM|Africa/Maputo Africa/Lusaka",
		"ZW|Africa/Maputo Africa/Harare"
	]
}
},{}],108:[function(require,module,exports){
var moment = module.exports = require("./moment-timezone");
moment.tz.load(require('./data/packed/latest.json'));

},{"./data/packed/latest.json":107,"./moment-timezone":109}],109:[function(require,module,exports){
//! moment-timezone.js
//! version : 0.5.33
//! Copyright (c) JS Foundation and other contributors
//! license : MIT
//! github.com/moment/moment-timezone

(function (root, factory) {
	"use strict";

	/*global define*/
	if (typeof module === 'object' && module.exports) {
		module.exports = factory(require('moment')); // Node
	} else if (typeof define === 'function' && define.amd) {
		define(['moment'], factory);                 // AMD
	} else {
		factory(root.moment);                        // Browser
	}
}(this, function (moment) {
	"use strict";

	// Resolves es6 module loading issue
	if (moment.version === undefined && moment.default) {
		moment = moment.default;
	}

	// Do not load moment-timezone a second time.
	// if (moment.tz !== undefined) {
	// 	logError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);
	// 	return moment;
	// }

	var VERSION = "0.5.33",
		zones = {},
		links = {},
		countries = {},
		names = {},
		guesses = {},
		cachedGuess;

	if (!moment || typeof moment.version !== 'string') {
		logError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');
	}

	var momentVersion = moment.version.split('.'),
		major = +momentVersion[0],
		minor = +momentVersion[1];

	// Moment.js version check
	if (major < 2 || (major === 2 && minor < 6)) {
		logError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');
	}

	/************************************
		Unpacking
	************************************/

	function charCodeToInt(charCode) {
		if (charCode > 96) {
			return charCode - 87;
		} else if (charCode > 64) {
			return charCode - 29;
		}
		return charCode - 48;
	}

	function unpackBase60(string) {
		var i = 0,
			parts = string.split('.'),
			whole = parts[0],
			fractional = parts[1] || '',
			multiplier = 1,
			num,
			out = 0,
			sign = 1;

		// handle negative numbers
		if (string.charCodeAt(0) === 45) {
			i = 1;
			sign = -1;
		}

		// handle digits before the decimal
		for (i; i < whole.length; i++) {
			num = charCodeToInt(whole.charCodeAt(i));
			out = 60 * out + num;
		}

		// handle digits after the decimal
		for (i = 0; i < fractional.length; i++) {
			multiplier = multiplier / 60;
			num = charCodeToInt(fractional.charCodeAt(i));
			out += num * multiplier;
		}

		return out * sign;
	}

	function arrayToInt (array) {
		for (var i = 0; i < array.length; i++) {
			array[i] = unpackBase60(array[i]);
		}
	}

	function intToUntil (array, length) {
		for (var i = 0; i < length; i++) {
			array[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds
		}

		array[length - 1] = Infinity;
	}

	function mapIndices (source, indices) {
		var out = [], i;

		for (i = 0; i < indices.length; i++) {
			out[i] = source[indices[i]];
		}

		return out;
	}

	function unpack (string) {
		var data = string.split('|'),
			offsets = data[2].split(' '),
			indices = data[3].split(''),
			untils  = data[4].split(' ');

		arrayToInt(offsets);
		arrayToInt(indices);
		arrayToInt(untils);

		intToUntil(untils, indices.length);

		return {
			name       : data[0],
			abbrs      : mapIndices(data[1].split(' '), indices),
			offsets    : mapIndices(offsets, indices),
			untils     : untils,
			population : data[5] | 0
		};
	}

	/************************************
		Zone object
	************************************/

	function Zone (packedString) {
		if (packedString) {
			this._set(unpack(packedString));
		}
	}

	Zone.prototype = {
		_set : function (unpacked) {
			this.name       = unpacked.name;
			this.abbrs      = unpacked.abbrs;
			this.untils     = unpacked.untils;
			this.offsets    = unpacked.offsets;
			this.population = unpacked.population;
		},

		_index : function (timestamp) {
			var target = +timestamp,
				untils = this.untils,
				i;

			for (i = 0; i < untils.length; i++) {
				if (target < untils[i]) {
					return i;
				}
			}
		},

		countries : function () {
			var zone_name = this.name;
			return Object.keys(countries).filter(function (country_code) {
				return countries[country_code].zones.indexOf(zone_name) !== -1;
			});
		},

		parse : function (timestamp) {
			var target  = +timestamp,
				offsets = this.offsets,
				untils  = this.untils,
				max     = untils.length - 1,
				offset, offsetNext, offsetPrev, i;

			for (i = 0; i < max; i++) {
				offset     = offsets[i];
				offsetNext = offsets[i + 1];
				offsetPrev = offsets[i ? i - 1 : i];

				if (offset < offsetNext && tz.moveAmbiguousForward) {
					offset = offsetNext;
				} else if (offset > offsetPrev && tz.moveInvalidForward) {
					offset = offsetPrev;
				}

				if (target < untils[i] - (offset * 60000)) {
					return offsets[i];
				}
			}

			return offsets[max];
		},

		abbr : function (mom) {
			return this.abbrs[this._index(mom)];
		},

		offset : function (mom) {
			logError("zone.offset has been deprecated in favor of zone.utcOffset");
			return this.offsets[this._index(mom)];
		},

		utcOffset : function (mom) {
			return this.offsets[this._index(mom)];
		}
	};

	/************************************
		Country object
	************************************/

	function Country (country_name, zone_names) {
		this.name = country_name;
		this.zones = zone_names;
	}

	/************************************
		Current Timezone
	************************************/

	function OffsetAt(at) {
		var timeString = at.toTimeString();
		var abbr = timeString.match(/\([a-z ]+\)/i);
		if (abbr && abbr[0]) {
			// 17:56:31 GMT-0600 (CST)
			// 17:56:31 GMT-0600 (Central Standard Time)
			abbr = abbr[0].match(/[A-Z]/g);
			abbr = abbr ? abbr.join('') : undefined;
		} else {
			// 17:56:31 CST
			// 17:56:31 GMT+0800 (台北標準時間)
			abbr = timeString.match(/[A-Z]{3,5}/g);
			abbr = abbr ? abbr[0] : undefined;
		}

		if (abbr === 'GMT') {
			abbr = undefined;
		}

		this.at = +at;
		this.abbr = abbr;
		this.offset = at.getTimezoneOffset();
	}

	function ZoneScore(zone) {
		this.zone = zone;
		this.offsetScore = 0;
		this.abbrScore = 0;
	}

	ZoneScore.prototype.scoreOffsetAt = function (offsetAt) {
		this.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);
		if (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {
			this.abbrScore++;
		}
	};

	function findChange(low, high) {
		var mid, diff;

		while ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {
			mid = new OffsetAt(new Date(low.at + diff));
			if (mid.offset === low.offset) {
				low = mid;
			} else {
				high = mid;
			}
		}

		return low;
	}

	function userOffsets() {
		var startYear = new Date().getFullYear() - 2,
			last = new OffsetAt(new Date(startYear, 0, 1)),
			offsets = [last],
			change, next, i;

		for (i = 1; i < 48; i++) {
			next = new OffsetAt(new Date(startYear, i, 1));
			if (next.offset !== last.offset) {
				change = findChange(last, next);
				offsets.push(change);
				offsets.push(new OffsetAt(new Date(change.at + 6e4)));
			}
			last = next;
		}

		for (i = 0; i < 4; i++) {
			offsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));
			offsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));
		}

		return offsets;
	}

	function sortZoneScores (a, b) {
		if (a.offsetScore !== b.offsetScore) {
			return a.offsetScore - b.offsetScore;
		}
		if (a.abbrScore !== b.abbrScore) {
			return a.abbrScore - b.abbrScore;
		}
		if (a.zone.population !== b.zone.population) {
			return b.zone.population - a.zone.population;
		}
		return b.zone.name.localeCompare(a.zone.name);
	}

	function addToGuesses (name, offsets) {
		var i, offset;
		arrayToInt(offsets);
		for (i = 0; i < offsets.length; i++) {
			offset = offsets[i];
			guesses[offset] = guesses[offset] || {};
			guesses[offset][name] = true;
		}
	}

	function guessesForUserOffsets (offsets) {
		var offsetsLength = offsets.length,
			filteredGuesses = {},
			out = [],
			i, j, guessesOffset;

		for (i = 0; i < offsetsLength; i++) {
			guessesOffset = guesses[offsets[i].offset] || {};
			for (j in guessesOffset) {
				if (guessesOffset.hasOwnProperty(j)) {
					filteredGuesses[j] = true;
				}
			}
		}

		for (i in filteredGuesses) {
			if (filteredGuesses.hasOwnProperty(i)) {
				out.push(names[i]);
			}
		}

		return out;
	}

	function rebuildGuess () {

		// use Intl API when available and returning valid time zone
		try {
			var intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;
			if (intlName && intlName.length > 3) {
				var name = names[normalizeName(intlName)];
				if (name) {
					return name;
				}
				logError("Moment Timezone found " + intlName + " from the Intl api, but did not have that data loaded.");
			}
		} catch (e) {
			// Intl unavailable, fall back to manual guessing.
		}

		var offsets = userOffsets(),
			offsetsLength = offsets.length,
			guesses = guessesForUserOffsets(offsets),
			zoneScores = [],
			zoneScore, i, j;

		for (i = 0; i < guesses.length; i++) {
			zoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);
			for (j = 0; j < offsetsLength; j++) {
				zoneScore.scoreOffsetAt(offsets[j]);
			}
			zoneScores.push(zoneScore);
		}

		zoneScores.sort(sortZoneScores);

		return zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;
	}

	function guess (ignoreCache) {
		if (!cachedGuess || ignoreCache) {
			cachedGuess = rebuildGuess();
		}
		return cachedGuess;
	}

	/************************************
		Global Methods
	************************************/

	function normalizeName (name) {
		return (name || '').toLowerCase().replace(/\//g, '_');
	}

	function addZone (packed) {
		var i, name, split, normalized;

		if (typeof packed === "string") {
			packed = [packed];
		}

		for (i = 0; i < packed.length; i++) {
			split = packed[i].split('|');
			name = split[0];
			normalized = normalizeName(name);
			zones[normalized] = packed[i];
			names[normalized] = name;
			addToGuesses(normalized, split[2].split(' '));
		}
	}

	function getZone (name, caller) {

		name = normalizeName(name);

		var zone = zones[name];
		var link;

		if (zone instanceof Zone) {
			return zone;
		}

		if (typeof zone === 'string') {
			zone = new Zone(zone);
			zones[name] = zone;
			return zone;
		}

		// Pass getZone to prevent recursion more than 1 level deep
		if (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {
			zone = zones[name] = new Zone();
			zone._set(link);
			zone.name = names[name];
			return zone;
		}

		return null;
	}

	function getNames () {
		var i, out = [];

		for (i in names) {
			if (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {
				out.push(names[i]);
			}
		}

		return out.sort();
	}

	function getCountryNames () {
		return Object.keys(countries);
	}

	function addLink (aliases) {
		var i, alias, normal0, normal1;

		if (typeof aliases === "string") {
			aliases = [aliases];
		}

		for (i = 0; i < aliases.length; i++) {
			alias = aliases[i].split('|');

			normal0 = normalizeName(alias[0]);
			normal1 = normalizeName(alias[1]);

			links[normal0] = normal1;
			names[normal0] = alias[0];

			links[normal1] = normal0;
			names[normal1] = alias[1];
		}
	}

	function addCountries (data) {
		var i, country_code, country_zones, split;
		if (!data || !data.length) return;
		for (i = 0; i < data.length; i++) {
			split = data[i].split('|');
			country_code = split[0].toUpperCase();
			country_zones = split[1].split(' ');
			countries[country_code] = new Country(
				country_code,
				country_zones
			);
		}
	}

	function getCountry (name) {
		name = name.toUpperCase();
		return countries[name] || null;
	}

	function zonesForCountry(country, with_offset) {
		country = getCountry(country);

		if (!country) return null;

		var zones = country.zones.sort();

		if (with_offset) {
			return zones.map(function (zone_name) {
				var zone = getZone(zone_name);
				return {
					name: zone_name,
					offset: zone.utcOffset(new Date())
				};
			});
		}

		return zones;
	}

	function loadData (data) {
		addZone(data.zones);
		addLink(data.links);
		addCountries(data.countries);
		tz.dataVersion = data.version;
	}

	function zoneExists (name) {
		if (!zoneExists.didShowError) {
			zoneExists.didShowError = true;
				logError("moment.tz.zoneExists('" + name + "') has been deprecated in favor of !moment.tz.zone('" + name + "')");
		}
		return !!getZone(name);
	}

	function needsOffset (m) {
		var isUnixTimestamp = (m._f === 'X' || m._f === 'x');
		return !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);
	}

	function logError (message) {
		if (typeof console !== 'undefined' && typeof console.error === 'function') {
			console.error(message);
		}
	}

	/************************************
		moment.tz namespace
	************************************/

	function tz (input) {
		var args = Array.prototype.slice.call(arguments, 0, -1),
			name = arguments[arguments.length - 1],
			zone = getZone(name),
			out  = moment.utc.apply(null, args);

		if (zone && !moment.isMoment(input) && needsOffset(out)) {
			out.add(zone.parse(out), 'minutes');
		}

		out.tz(name);

		return out;
	}

	tz.version      = VERSION;
	tz.dataVersion  = '';
	tz._zones       = zones;
	tz._links       = links;
	tz._names       = names;
	tz._countries	= countries;
	tz.add          = addZone;
	tz.link         = addLink;
	tz.load         = loadData;
	tz.zone         = getZone;
	tz.zoneExists   = zoneExists; // deprecated in 0.1.0
	tz.guess        = guess;
	tz.names        = getNames;
	tz.Zone         = Zone;
	tz.unpack       = unpack;
	tz.unpackBase60 = unpackBase60;
	tz.needsOffset  = needsOffset;
	tz.moveInvalidForward   = true;
	tz.moveAmbiguousForward = false;
	tz.countries    = getCountryNames;
	tz.zonesForCountry = zonesForCountry;

	/************************************
		Interface with Moment.js
	************************************/

	var fn = moment.fn;

	moment.tz = tz;

	moment.defaultZone = null;

	moment.updateOffset = function (mom, keepTime) {
		var zone = moment.defaultZone,
			offset;

		if (mom._z === undefined) {
			if (zone && needsOffset(mom) && !mom._isUTC) {
				mom._d = moment.utc(mom._a)._d;
				mom.utc().add(zone.parse(mom), 'minutes');
			}
			mom._z = zone;
		}
		if (mom._z) {
			offset = mom._z.utcOffset(mom);
			if (Math.abs(offset) < 16) {
				offset = offset / 60;
			}
			if (mom.utcOffset !== undefined) {
				var z = mom._z;
				mom.utcOffset(-offset, keepTime);
				mom._z = z;
			} else {
				mom.zone(offset, keepTime);
			}
		}
	};

	fn.tz = function (name, keepTime) {
		if (name) {
			if (typeof name !== 'string') {
				throw new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');
			}
			this._z = getZone(name);
			if (this._z) {
				moment.updateOffset(this, keepTime);
			} else {
				logError("Moment Timezone has no data for " + name + ". See http://momentjs.com/timezone/docs/#/data-loading/.");
			}
			return this;
		}
		if (this._z) { return this._z.name; }
	};

	function abbrWrap (old) {
		return function () {
			if (this._z) { return this._z.abbr(this); }
			return old.call(this);
		};
	}

	function resetZoneWrap (old) {
		return function () {
			this._z = null;
			return old.apply(this, arguments);
		};
	}

	function resetZoneWrap2 (old) {
		return function () {
			if (arguments.length > 0) this._z = null;
			return old.apply(this, arguments);
		};
	}

	fn.zoneName  = abbrWrap(fn.zoneName);
	fn.zoneAbbr  = abbrWrap(fn.zoneAbbr);
	fn.utc       = resetZoneWrap(fn.utc);
	fn.local     = resetZoneWrap(fn.local);
	fn.utcOffset = resetZoneWrap2(fn.utcOffset);

	moment.tz.setDefault = function(name) {
		if (major < 2 || (major === 2 && minor < 9)) {
			logError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');
		}
		moment.defaultZone = name ? getZone(name) : null;
		return moment;
	};

	// Cloning a moment should include the _z property.
	var momentProperties = moment.momentProperties;
	if (Object.prototype.toString.call(momentProperties) === '[object Array]') {
		// moment 2.8.1+
		momentProperties.push('_z');
		momentProperties.push('_a');
	} else if (momentProperties) {
		// moment 2.7.0
		momentProperties._z = null;
	}

	// INJECT DATA

	return moment;
}));

},{"moment":110}],110:[function(require,module,exports){
//! moment.js
//! version : 2.29.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback(callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return (
            input instanceof Array ||
            Object.prototype.toString.call(input) === '[object Array]'
        );
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return (
            input != null &&
            Object.prototype.toString.call(input) === '[object Object]'
        );
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0;
        } else {
            var k;
            for (k in obj) {
                if (hasOwnProp(obj, k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return (
            typeof input === 'number' ||
            Object.prototype.toString.call(input) === '[object Number]'
        );
    }

    function isDate(input) {
        return (
            input instanceof Date ||
            Object.prototype.toString.call(input) === '[object Date]'
        );
    }

    function map(arr, fn) {
        var res = [],
            i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false,
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this),
                len = t.length >>> 0,
                i;

            for (i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m),
                parsedParts = some.call(flags.parsedDateParts, function (i) {
                    return i != null;
                }),
                isNowValid =
                    !isNaN(m._d.getTime()) &&
                    flags.overflow < 0 &&
                    !flags.empty &&
                    !flags.invalidEra &&
                    !flags.invalidMonth &&
                    !flags.invalidWeekday &&
                    !flags.weekdayMismatch &&
                    !flags.nullInput &&
                    !flags.invalidFormat &&
                    !flags.userInvalidated &&
                    (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid =
                    isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            } else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        } else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = (hooks.momentProperties = []),
        updateInProgress = false;

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment(obj) {
        return (
            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
        );
    }

    function warn(msg) {
        if (
            hooks.suppressDeprecationWarnings === false &&
            typeof console !== 'undefined' &&
            console.warn
        ) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [],
                    arg,
                    i,
                    key;
                for (i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (key in arguments[0]) {
                            if (hasOwnProp(arguments[0], key)) {
                                arg += key + ': ' + arguments[0][key] + ', ';
                            }
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(
                    msg +
                        '\nArguments: ' +
                        Array.prototype.slice.call(args).join('') +
                        '\n' +
                        new Error().stack
                );
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return (
            (typeof Function !== 'undefined' && input instanceof Function) ||
            Object.prototype.toString.call(input) === '[object Function]'
        );
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            if (hasOwnProp(config, i)) {
                prop = config[i];
                if (isFunction(prop)) {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
        );
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
            ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i,
                res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L',
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (
            (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
            absNumber
        );
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
        formatFunctions = {},
        formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(
                    func.apply(this, arguments),
                    token
                );
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '',
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i])
                    ? array[i].call(mom, format)
                    : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] =
            formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens
            );
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A',
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper
            .match(formattingTokens)
            .map(function (tok) {
                if (
                    tok === 'MMMM' ||
                    tok === 'MM' ||
                    tok === 'DD' ||
                    tok === 'dddd'
                ) {
                    return tok.slice(1);
                }
                return tok;
            })
            .join('');

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate() {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d',
        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        w: 'a week',
        ww: '%d weeks',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years',
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output)
            ? output(number, withoutSuffix, string, isFuture)
            : output.replace(/%d/i, number);
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string'
            ? aliases[units] || aliases[units.toLowerCase()]
            : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [],
            u;
        for (u in unitsObj) {
            if (hasOwnProp(unitsObj, u)) {
                units.push({ unit: u, priority: priorities[u] });
            }
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    function absFloor(number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function makeGetSet(unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get(mom, unit) {
        return mom.isValid()
            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
            : NaN;
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (
                unit === 'FullYear' &&
                isLeapYear(mom.year()) &&
                mom.month() === 1 &&
                mom.date() === 29
            ) {
                value = toInt(value);
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
                    value,
                    mom.month(),
                    daysInMonth(value, mom.month())
                );
            } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }

    function stringSet(units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units),
                i;
            for (i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    var match1 = /\d/, //       0 - 9
        match2 = /\d\d/, //      00 - 99
        match3 = /\d{3}/, //     000 - 999
        match4 = /\d{4}/, //    0000 - 9999
        match6 = /[+-]?\d{6}/, // -999999 - 999999
        match1to2 = /\d\d?/, //       0 - 99
        match3to4 = /\d\d\d\d?/, //     999 - 9999
        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
        match1to3 = /\d{1,3}/, //       0 - 999
        match1to4 = /\d{1,4}/, //       0 - 9999
        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
        matchUnsigned = /\d+/, //       0 - inf
        matchSigned = /[+-]?\d+/, //    -inf - inf
        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
        // any word (or two) characters or numbers including two/three word month in arabic.
        // includes scottish gaelic two word and hyphenated months
        matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
        regexes;

    regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex)
            ? regex
            : function (isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex;
              };
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(
            s
                .replace('\\', '')
                .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
                    matched,
                    p1,
                    p2,
                    p3,
                    p4
                ) {
                    return p1 || p2 || p3 || p4;
                })
        );
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken(token, callback) {
        var i,
            func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0,
        MONTH = 1,
        DATE = 2,
        HOUR = 3,
        MINUTE = 4,
        SECOND = 5,
        MILLISECOND = 6,
        WEEK = 7,
        WEEKDAY = 8;

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1
            ? isLeapYear(year)
                ? 29
                : 28
            : 31 - ((modMonth % 7) % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M', match1to2);
    addRegexToken('MM', match1to2, match2);
    addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_'
        ),
        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
        defaultMonthsShortRegex = matchWord,
        defaultMonthsRegex = matchWord;

    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months)
                ? this._months
                : this._months['standalone'];
        }
        return isArray(this._months)
            ? this._months[m.month()]
            : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                      ? 'format'
                      : 'standalone'
              ][m.month()];
    }

    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort)
            ? this._monthsShort[m.month()]
            : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
              ][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                    '^' + this.months(mom, '').replace('.', '') + '$',
                    'i'
                );
                this._shortMonthsParse[i] = new RegExp(
                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                    'i'
                );
            }
            if (!strict && !this._monthsParse[i]) {
                regex =
                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'MMMM' &&
                this._longMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'MMM' &&
                this._shortMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
    }

    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex;
        }
    }

    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex;
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._monthsShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY', 4], 0, 'year');
    addFormatToken(0, ['YYYYY', 5], 0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y', matchSigned);
    addRegexToken('YY', match1to2, match2);
    addRegexToken('YYYY', match1to4, match4);
    addRegexToken('YYYYY', match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] =
            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear() {
        return isLeapYear(this.year());
    }

    function createDate(y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate(y) {
        var date, args;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear,
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear,
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w', match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W', match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow: 0, // Sunday is the first day of the week.
        doy: 6, // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek() {
        return this._week.dow;
    }

    function localeFirstDayOfYear() {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d', match1to2);
    addRegexToken('e', match1to2);
    addRegexToken('E', match1to2);
    addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        defaultWeekdaysRegex = matchWord,
        defaultWeekdaysShortRegex = matchWord,
        defaultWeekdaysMinRegex = matchWord;

    function localeWeekdays(m, format) {
        var weekdays = isArray(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                  m && m !== true && this._weekdays.isFormat.test(format)
                      ? 'format'
                      : 'standalone'
              ];
        return m === true
            ? shiftWeekdays(weekdays, this._week.dow)
            : m
            ? weekdays[m.day()]
            : weekdays;
    }

    function localeWeekdaysShort(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : m
            ? this._weekdaysShort[m.day()]
            : this._weekdaysShort;
    }

    function localeWeekdaysMin(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : m
            ? this._weekdaysMin[m.day()]
            : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._shortWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._minWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
            }
            if (!this._weekdaysParse[i]) {
                regex =
                    '^' +
                    this.weekdays(mom, '') +
                    '|^' +
                    this.weekdaysShort(mom, '') +
                    '|^' +
                    this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'dddd' &&
                this._fullWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'ddd' &&
                this._shortWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'dd' &&
                this._minWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex;
        }
    }

    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex;
        }
    }

    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex;
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = regexEscape(this.weekdaysMin(mom, ''));
            shortp = regexEscape(this.weekdaysShort(mom, ''));
            longp = regexEscape(this.weekdays(mom, ''));
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._weekdaysShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
        this._weekdaysMinStrictRegex = new RegExp(
            '^(' + minPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return (
            '' +
            hFormat.apply(this) +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return (
            '' +
            this.hours() +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase
            );
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a', matchMeridiem);
    addRegexToken('A', matchMeridiem);
    addRegexToken('H', match1to2);
    addRegexToken('h', match1to2);
    addRegexToken('k', match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM(input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return (input + '').toLowerCase().charAt(0) === 'p';
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
        // Setting the hour should keep the time, because the user explicitly
        // specified which hour they want. So trying to maintain the same hour (in
        // a new timezone) makes sense. Adding/subtracting hours does not follow
        // this rule.
        getSetHour = makeGetSet('Hours', true);

    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse,
    };

    // internal storage for locale config files
    var locales = {},
        localeFamilies = {},
        globalLocale;

    function commonPrefix(arr1, arr2) {
        var i,
            minl = Math.min(arr1.length, arr2.length);
        for (i = 0; i < minl; i += 1) {
            if (arr1[i] !== arr2[i]) {
                return i;
            }
        }
        return minl;
    }

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (
                    next &&
                    next.length >= j &&
                    commonPrefix(split, next) >= j - 1
                ) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null,
            aliasedRequire;
        // TODO: Find a better way to register and load all the locales in Node
        if (
            locales[name] === undefined &&
            typeof module !== 'undefined' &&
            module &&
            module.exports
        ) {
            try {
                oldLocale = globalLocale._abbr;
                aliasedRequire = require;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {
                // mark as not found to avoid repeating expensive file require call causing high CPU
                // when trying to find en-US, en_US, en-us for every format call
                locales[name] = null; // null means not found
            }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            } else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            } else {
                if (typeof console !== 'undefined' && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn(
                        'Locale ' + key + ' not found. Did you forget to load it?'
                    );
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var locale,
                parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple(
                    'defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
                );
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config,
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale,
                tmpLocale,
                parentConfig = baseConfig;

            if (locales[name] != null && locales[name].parentLocale != null) {
                // Update existing child locale in-place to avoid memory-leaks
                locales[name].set(mergeConfigs(locales[name]._config, config));
            } else {
                // MERGE
                tmpLocale = loadLocale(name);
                if (tmpLocale != null) {
                    parentConfig = tmpLocale._config;
                }
                config = mergeConfigs(parentConfig, config);
                if (tmpLocale == null) {
                    // updateLocale is called for creating a new locale
                    // Set abbr so it will have a name (getters return
                    // undefined otherwise).
                    config.abbr = name;
                }
                locale = new Locale(config);
                locale.parentLocale = locales[name];
                locales[name] = locale;
            }

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                    if (name === getSetGlobalLocale()) {
                        getSetGlobalLocale(name);
                    }
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow(m) {
        var overflow,
            a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                    ? MONTH
                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                    ? DATE
                    : a[HOUR] < 0 ||
                      a[HOUR] > 24 ||
                      (a[HOUR] === 24 &&
                          (a[MINUTE] !== 0 ||
                              a[SECOND] !== 0 ||
                              a[MILLISECOND] !== 0))
                    ? HOUR
                    : a[MINUTE] < 0 || a[MINUTE] > 59
                    ? MINUTE
                    : a[SECOND] < 0 || a[SECOND] > 59
                    ? SECOND
                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                    ? MILLISECOND
                    : -1;

            if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
            ) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
        isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/],
            ['YYYYMM', /\d{6}/, false],
            ['YYYY', /\d{4}/, false],
        ],
        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
        ],
        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
        obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60,
        };

    // date from iso format
    function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    function extractFromRFC2822Strings(
        yearStr,
        monthStr,
        dayStr,
        hourStr,
        minuteStr,
        secondStr
    ) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10),
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s
            .replace(/\([^)]*\)|[\n\t]/g, ' ')
            .replace(/(\s\s+)/g, ' ')
            .replace(/^\s\s*/, '')
            .replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(
                    parsedInput[0],
                    parsedInput[1],
                    parsedInput[2]
                ).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10),
                m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i)),
            parsedArray;
        if (match) {
            parsedArray = extractFromRFC2822Strings(
                match[4],
                match[3],
                match[2],
                match[5],
                match[6],
                match[7]
            );
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);
        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        if (config._strict) {
            config._isValid = false;
        } else {
            // Final attempt, use Input Fallback
            hooks.createFromInputFallback(config);
        }
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate(),
            ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (
                config._dayOfYear > daysInYear(yearToUse) ||
                config._dayOfYear === 0
            ) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (
            config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0
        ) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(
            null,
            input
        );
        expectedWeekday = config._useUTC
            ? config._d.getUTCDay()
            : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (
            config._w &&
            typeof config._w.d !== 'undefined' &&
            config._w.d !== expectedWeekday
        ) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(createLocal(), 1, 4).year
            );
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0,
            era;

        tokens =
            expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
                [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(
                    string.indexOf(parsedInput) + parsedInput.length
                );
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                } else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver =
            stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (
            config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0
        ) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(
            config._locale,
            config._a[HOUR],
            config._meridiem
        );

        // handle era
        era = getParsingFlags(config).era;
        if (era !== null) {
            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
        }

        configFromArray(config);
        checkOverflow(config);
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,
            scoreToBeat,
            i,
            currentScore,
            validFormatFound,
            bestFormatIsValid = false;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            validFormatFound = false;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (isValid(tempConfig)) {
                validFormatFound = true;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (!bestFormatIsValid) {
                if (
                    scoreToBeat == null ||
                    currentScore < scoreToBeat ||
                    validFormatFound
                ) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                    if (validFormatFound) {
                        bestFormatIsValid = true;
                    }
                }
            } else {
                if (currentScore < scoreToBeat) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                }
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i),
            dayOrDate = i.day === undefined ? i.date : i.day;
        config._a = map(
            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
            function (obj) {
                return obj && parseInt(obj, 10);
            }
        );

        configFromArray(config);
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({ nullInput: true });
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (format === true || format === false) {
            strict = format;
            format = undefined;
        }

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if (
            (isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)
        ) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other < this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        ),
        prototypeMax = deprecate(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other > this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +new Date();
    };

    var ordering = [
        'year',
        'quarter',
        'month',
        'week',
        'day',
        'hour',
        'minute',
        'second',
        'millisecond',
    ];

    function isDurationValid(m) {
        var key,
            unitHasDecimal = false,
            i;
        for (key in m) {
            if (
                hasOwnProp(m, key) &&
                !(
                    indexOf.call(ordering, key) !== -1 &&
                    (m[key] == null || !isNaN(m[key]))
                )
            ) {
                return false;
            }
        }

        for (i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds =
            +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days + weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months + quarters * 3 + years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration(obj) {
        return obj instanceof Duration;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
            ) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    // FORMATTING

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset(),
                sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
            );
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z', matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher),
            chunk,
            parts,
            minutes;

        if (matches === null) {
            return null;
        }

        chunk = matches[matches.length - 1] || [];
        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff =
                (isMoment(input) || isDate(input)
                    ? input.valueOf()
                    : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset(m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset());
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(
                        this,
                        createDuration(input - offset, 'm'),
                        1,
                        false
                    );
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            } else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime() {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {},
            other;

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        // and further modified to allow for strings containing both week and day
        isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months,
            };
        } else if (isNumber(input) || !isNaN(+input)) {
            duration = {};
            if (key) {
                duration[key] = +input;
            } else {
                duration.milliseconds = +input;
            }
        } else if ((match = aspNetRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
            };
        } else if ((match = isoRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign),
            };
        } else if (duration == null) {
            // checks for null or undefined
            duration = {};
        } else if (
            typeof duration === 'object' &&
            ('from' in duration || 'to' in duration)
        ) {
            diffRes = momentsDifference(
                createLocal(duration.from),
                createLocal(duration.to)
            );

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
            ret._isValid = input._isValid;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months =
            other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                    name,
                    'moment().' +
                        name +
                        '(period, number) is deprecated. Please use moment().' +
                        name +
                        '(number, period). ' +
                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                );
                tmp = val;
                val = period;
                period = tmp;
            }

            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add = createAdder(1, 'add'),
        subtract = createAdder(-1, 'subtract');

    function isString(input) {
        return typeof input === 'string' || input instanceof String;
    }

    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
    function isMomentInput(input) {
        return (
            isMoment(input) ||
            isDate(input) ||
            isString(input) ||
            isNumber(input) ||
            isNumberOrStringArray(input) ||
            isMomentInputObject(input) ||
            input === null ||
            input === undefined
        );
    }

    function isMomentInputObject(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function isNumberOrStringArray(input) {
        var arrayTest = isArray(input),
            dataTypeTest = false;
        if (arrayTest) {
            dataTypeTest =
                input.filter(function (item) {
                    return !isNumber(item) && isString(input);
                }).length === 0;
        }
        return arrayTest && dataTypeTest;
    }

    function isCalendarSpec(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'sameDay',
                'nextDay',
                'lastDay',
                'nextWeek',
                'lastWeek',
                'sameElse',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6
            ? 'sameElse'
            : diff < -1
            ? 'lastWeek'
            : diff < 0
            ? 'lastDay'
            : diff < 1
            ? 'sameDay'
            : diff < 2
            ? 'nextDay'
            : diff < 7
            ? 'nextWeek'
            : 'sameElse';
    }

    function calendar$1(time, formats) {
        // Support for single parameter, formats only overload to the calendar function
        if (arguments.length === 1) {
            if (!arguments[0]) {
                time = undefined;
                formats = undefined;
            } else if (isMomentInput(arguments[0])) {
                time = arguments[0];
                formats = undefined;
            } else if (isCalendarSpec(arguments[0])) {
                formats = arguments[0];
                time = undefined;
            }
        }
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse',
            output =
                formats &&
                (isFunction(formats[format])
                    ? formats[format].call(this, now)
                    : formats[format]);

        return this.format(
            output || this.localeData().calendar(format, this, createLocal(now))
        );
    }

    function clone() {
        return new Moment(this);
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween(from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (
            (inclusivity[0] === '('
                ? this.isAfter(localFrom, units)
                : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')'
                ? this.isBefore(localTo, units)
                : !this.isAfter(localTo, units))
        );
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return (
                this.clone().startOf(units).valueOf() <= inputMs &&
                inputMs <= this.clone().endOf(units).valueOf()
            );
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                output = monthDiff(this, that) / 12;
                break;
            case 'month':
                output = monthDiff(this, that);
                break;
            case 'quarter':
                output = monthDiff(this, that) / 3;
                break;
            case 'second':
                output = (this - that) / 1e3;
                break; // 1000
            case 'minute':
                output = (this - that) / 6e4;
                break; // 1000 * 60
            case 'hour':
                output = (this - that) / 36e5;
                break; // 1000 * 60 * 60
            case 'day':
                output = (this - that - zoneDelta) / 864e5;
                break; // 1000 * 60 * 60 * 24, negate dst
            case 'week':
                output = (this - that - zoneDelta) / 6048e5;
                break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default:
                output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff(a, b) {
        if (a.date() < b.date()) {
            // end-of-month calculations work correct when the start month has more
            // days than the end month.
            return -monthDiff(b, a);
        }
        // difference in months
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true,
            m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(
                m,
                utc
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
            );
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                    .toISOString()
                    .replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(
            m,
            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
        );
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect() {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment',
            zone = '',
            prefix,
            year,
            datetime,
            suffix;
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        prefix = '[' + func + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        datetime = '-MM-DD[T]HH:mm:ss.SSS';
        suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc()
                ? hooks.defaultFormatUtc
                : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale(key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData() {
        return this._locale;
    }

    var MS_PER_SECOND = 1000,
        MS_PER_MINUTE = 60 * MS_PER_SECOND,
        MS_PER_HOUR = 60 * MS_PER_MINUTE,
        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return ((dividend % divisor) + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(
                    this.year(),
                    this.month() - (this.month() % 3),
                    1
                );
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday()
                );
                break;
            case 'isoWeek':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                );
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(
                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                    MS_PER_HOUR
                );
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time =
                    startOfDate(
                        this.year(),
                        this.month() - (this.month() % 3) + 3,
                        1
                    ) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - this.weekday() + 7
                    ) - 1;
                break;
            case 'isoWeek':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time +=
                    MS_PER_HOUR -
                    mod$1(
                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                        MS_PER_HOUR
                    ) -
                    1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
    }

    function unix() {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate() {
        return new Date(this.valueOf());
    }

    function toArray() {
        var m = this;
        return [
            m.year(),
            m.month(),
            m.date(),
            m.hour(),
            m.minute(),
            m.second(),
            m.millisecond(),
        ];
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds(),
        };
    }

    function toJSON() {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2() {
        return isValid(this);
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt() {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
        };
    }

    addFormatToken('N', 0, 0, 'eraAbbr');
    addFormatToken('NN', 0, 0, 'eraAbbr');
    addFormatToken('NNN', 0, 0, 'eraAbbr');
    addFormatToken('NNNN', 0, 0, 'eraName');
    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
    addFormatToken('y', ['yy', 2], 0, 'eraYear');
    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

    addRegexToken('N', matchEraAbbr);
    addRegexToken('NN', matchEraAbbr);
    addRegexToken('NNN', matchEraAbbr);
    addRegexToken('NNNN', matchEraName);
    addRegexToken('NNNNN', matchEraNarrow);

    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (
        input,
        array,
        config,
        token
    ) {
        var era = config._locale.erasParse(input, token, config._strict);
        if (era) {
            getParsingFlags(config).era = era;
        } else {
            getParsingFlags(config).invalidEra = input;
        }
    });

    addRegexToken('y', matchUnsigned);
    addRegexToken('yy', matchUnsigned);
    addRegexToken('yyy', matchUnsigned);
    addRegexToken('yyyy', matchUnsigned);
    addRegexToken('yo', matchEraYearOrdinal);

    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
    addParseToken(['yo'], function (input, array, config, token) {
        var match;
        if (config._locale._eraYearOrdinalRegex) {
            match = input.match(config._locale._eraYearOrdinalRegex);
        }

        if (config._locale.eraYearOrdinalParse) {
            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
        } else {
            array[YEAR] = parseInt(input, 10);
        }
    });

    function localeEras(m, format) {
        var i,
            l,
            date,
            eras = this._eras || getLocale('en')._eras;
        for (i = 0, l = eras.length; i < l; ++i) {
            switch (typeof eras[i].since) {
                case 'string':
                    // truncate time
                    date = hooks(eras[i].since).startOf('day');
                    eras[i].since = date.valueOf();
                    break;
            }

            switch (typeof eras[i].until) {
                case 'undefined':
                    eras[i].until = +Infinity;
                    break;
                case 'string':
                    // truncate time
                    date = hooks(eras[i].until).startOf('day').valueOf();
                    eras[i].until = date.valueOf();
                    break;
            }
        }
        return eras;
    }

    function localeErasParse(eraName, format, strict) {
        var i,
            l,
            eras = this.eras(),
            name,
            abbr,
            narrow;
        eraName = eraName.toUpperCase();

        for (i = 0, l = eras.length; i < l; ++i) {
            name = eras[i].name.toUpperCase();
            abbr = eras[i].abbr.toUpperCase();
            narrow = eras[i].narrow.toUpperCase();

            if (strict) {
                switch (format) {
                    case 'N':
                    case 'NN':
                    case 'NNN':
                        if (abbr === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNN':
                        if (name === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNNN':
                        if (narrow === eraName) {
                            return eras[i];
                        }
                        break;
                }
            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                return eras[i];
            }
        }
    }

    function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? +1 : -1;
        if (year === undefined) {
            return hooks(era.since).year();
        } else {
            return hooks(era.since).year() + (year - era.offset) * dir;
        }
    }

    function getEraName() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].name;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].name;
            }
        }

        return '';
    }

    function getEraNarrow() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].narrow;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].narrow;
            }
        }

        return '';
    }

    function getEraAbbr() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].abbr;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].abbr;
            }
        }

        return '';
    }

    function getEraYear() {
        var i,
            l,
            dir,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            dir = eras[i].since <= eras[i].until ? +1 : -1;

            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (
                (eras[i].since <= val && val <= eras[i].until) ||
                (eras[i].until <= val && val <= eras[i].since)
            ) {
                return (
                    (this.year() - hooks(eras[i].since).year()) * dir +
                    eras[i].offset
                );
            }
        }

        return this.year();
    }

    function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNameRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
    }

    function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, '_erasAbbrRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
    }

    function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNarrowRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
    }

    function matchEraAbbr(isStrict, locale) {
        return locale.erasAbbrRegex(isStrict);
    }

    function matchEraName(isStrict, locale) {
        return locale.erasNameRegex(isStrict);
    }

    function matchEraNarrow(isStrict, locale) {
        return locale.erasNarrowRegex(isStrict);
    }

    function matchEraYearOrdinal(isStrict, locale) {
        return locale._eraYearOrdinalRegex || matchUnsigned;
    }

    function computeErasParse() {
        var abbrPieces = [],
            namePieces = [],
            narrowPieces = [],
            mixedPieces = [],
            i,
            l,
            eras = this.eras();

        for (i = 0, l = eras.length; i < l; ++i) {
            namePieces.push(regexEscape(eras[i].name));
            abbrPieces.push(regexEscape(eras[i].abbr));
            narrowPieces.push(regexEscape(eras[i].narrow));

            mixedPieces.push(regexEscape(eras[i].name));
            mixedPieces.push(regexEscape(eras[i].abbr));
            mixedPieces.push(regexEscape(eras[i].narrow));
        }

        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
        this._erasNarrowRegex = new RegExp(
            '^(' + narrowPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg', 'weekYear');
    addWeekYearFormatToken('ggggg', 'weekYear');
    addWeekYearFormatToken('GGGG', 'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);

    // PARSING

    addRegexToken('G', matchSigned);
    addRegexToken('g', matchSigned);
    addRegexToken('GG', match1to2, match2);
    addRegexToken('gg', match1to2, match2);
    addRegexToken('GGGG', match1to4, match4);
    addRegexToken('gggg', match1to4, match4);
    addRegexToken('GGGGG', match1to6, match6);
    addRegexToken('ggggg', match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
        );
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.isoWeek(),
            this.isoWeekday(),
            1,
            4
        );
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
    }

    function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter(input) {
        return input == null
            ? Math.ceil((this.month() + 1) / 3)
            : this.month((input - 1) * 3 + (this.month() % 3));
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D', match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict
            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
            : locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD', match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear(input) {
        var dayOfYear =
            Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
            ) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m', match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s', match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });

    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S', match1to3, match1);
    addRegexToken('SS', match1to3, match2);
    addRegexToken('SSS', match1to3, match3);

    var token, getSetMillisecond;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }

    getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z', 0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
            return 'Moment<' + this.format() + '>';
        };
    }
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.eraName = getEraName;
    proto.eraNarrow = getEraNarrow;
    proto.eraAbbr = getEraAbbr;
    proto.eraYear = getEraYear;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.weeksInWeekYear = getWeeksInWeekYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate(
        'dates accessor is deprecated. Use date instead.',
        getSetDayOfMonth
    );
    proto.months = deprecate(
        'months accessor is deprecated. Use month instead',
        getSetMonth
    );
    proto.years = deprecate(
        'years accessor is deprecated. Use year instead',
        getSetYear
    );
    proto.zone = deprecate(
        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
        getSetZone
    );
    proto.isDSTShifted = deprecate(
        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
        isDaylightSavingTimeShifted
    );

    function createUnix(input) {
        return createLocal(input * 1000);
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat(string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.eras = localeEras;
    proto$1.erasParse = localeErasParse;
    proto$1.erasConvertYear = localeErasConvertYear;
    proto$1.erasAbbrRegex = erasAbbrRegex;
    proto$1.erasNameRegex = erasNameRegex;
    proto$1.erasNarrowRegex = erasNarrowRegex;

    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;

    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale(),
            utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i,
            out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0,
            i,
            out = [];

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        eras: [
            {
                since: '0001-01-01',
                until: +Infinity,
                offset: 1,
                name: 'Anno Domini',
                narrow: 'AD',
                abbr: 'AD',
            },
            {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: 'Before Christ',
                narrow: 'BC',
                abbr: 'BC',
            },
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    toInt((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    // Side effect imports

    hooks.lang = deprecate(
        'moment.lang is deprecated. Use moment.locale instead.',
        getSetGlobalLocale
    );
    hooks.langData = deprecate(
        'moment.langData is deprecated. Use moment.localeData instead.',
        getLocale
    );

    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);

        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);

        return this;
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds,
            days = this._days,
            months = this._months,
            data = this._data,
            seconds,
            minutes,
            hours,
            years,
            monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (
            !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
            )
        ) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;

        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;

        hours = absFloor(minutes / 60);
        data.hours = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days = days;
        data.months = months;
        data.years = years;

        return this;
    }

    function daysToMonths(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return (days * 4800) / 146097;
    }

    function monthsToDays(months) {
        // the reverse of daysToMonths
        return (months * 146097) / 4800;
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days,
            months,
            milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':
                    return months;
                case 'quarter':
                    return months / 3;
                case 'year':
                    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week':
                    return days / 7 + milliseconds / 6048e5;
                case 'day':
                    return days + milliseconds / 864e5;
                case 'hour':
                    return days * 24 + milliseconds / 36e5;
                case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                case 'second':
                    return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1() {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs(alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms'),
        asSeconds = makeAs('s'),
        asMinutes = makeAs('m'),
        asHours = makeAs('h'),
        asDays = makeAs('d'),
        asWeeks = makeAs('w'),
        asMonths = makeAs('M'),
        asQuarters = makeAs('Q'),
        asYears = makeAs('y');

    function clone$1() {
        return createDuration(this);
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds'),
        seconds = makeGetter('seconds'),
        minutes = makeGetter('minutes'),
        hours = makeGetter('hours'),
        days = makeGetter('days'),
        months = makeGetter('months'),
        years = makeGetter('years');

    function weeks() {
        return absFloor(this.days() / 7);
    }

    var round = Math.round,
        thresholds = {
            ss: 44, // a few seconds to seconds
            s: 45, // seconds to minute
            m: 45, // minutes to hour
            h: 22, // hours to day
            d: 26, // days to month/week
            w: null, // weeks to month
            M: 11, // months to year
        };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
        var duration = createDuration(posNegDuration).abs(),
            seconds = round(duration.as('s')),
            minutes = round(duration.as('m')),
            hours = round(duration.as('h')),
            days = round(duration.as('d')),
            months = round(duration.as('M')),
            weeks = round(duration.as('w')),
            years = round(duration.as('y')),
            a =
                (seconds <= thresholds.ss && ['s', seconds]) ||
                (seconds < thresholds.s && ['ss', seconds]) ||
                (minutes <= 1 && ['m']) ||
                (minutes < thresholds.m && ['mm', minutes]) ||
                (hours <= 1 && ['h']) ||
                (hours < thresholds.h && ['hh', hours]) ||
                (days <= 1 && ['d']) ||
                (days < thresholds.d && ['dd', days]);

        if (thresholds.w != null) {
            a =
                a ||
                (weeks <= 1 && ['w']) ||
                (weeks < thresholds.w && ['ww', weeks]);
        }
        a = a ||
            (months <= 1 && ['M']) ||
            (months < thresholds.M && ['MM', months]) ||
            (years <= 1 && ['y']) || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof roundingFunction === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var withSuffix = false,
            th = thresholds,
            locale,
            output;

        if (typeof argWithSuffix === 'object') {
            argThresholds = argWithSuffix;
            argWithSuffix = false;
        }
        if (typeof argWithSuffix === 'boolean') {
            withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === 'object') {
            th = Object.assign({}, thresholds, argThresholds);
            if (argThresholds.s != null && argThresholds.ss == null) {
                th.ss = argThresholds.s - 1;
            }
        }

        locale = this.localeData();
        output = relativeTime$1(this, !withSuffix, th, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000,
            days = abs$1(this._days),
            months = abs$1(this._months),
            minutes,
            hours,
            years,
            s,
            total = this.asSeconds(),
            totalSign,
            ymSign,
            daysSign,
            hmsSign;

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

        totalSign = total < 0 ? '-' : '';
        ymSign = sign(this._months) !== sign(total) ? '-' : '';
        daysSign = sign(this._days) !== sign(total) ? '-' : '';
        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return (
            totalSign +
            'P' +
            (years ? ymSign + years + 'Y' : '') +
            (months ? ymSign + months + 'M' : '') +
            (days ? daysSign + days + 'D' : '') +
            (hours || minutes || seconds ? 'T' : '') +
            (hours ? hmsSign + hours + 'H' : '') +
            (minutes ? hmsSign + minutes + 'M' : '') +
            (seconds ? hmsSign + s + 'S' : '')
        );
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asQuarters = asQuarters;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;

    proto$2.toIsoString = deprecate(
        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
        toISOString$1
    );
    proto$2.lang = lang;

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    //! moment.js

    hooks.version = '2.29.1';

    setHookCallback(createLocal);

    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD', // <input type="date" />
        TIME: 'HH:mm', // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW', // <input type="week" />
        MONTH: 'YYYY-MM', // <input type="month" />
    };

    return hooks;

})));

},{}],111:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.noCase = void 0;
var lower_case_1 = require("lower-case");
// Support camel case ("camelCase" -> "camel Case" and "CAMELCase" -> "CAMEL Case").
var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];
// Remove all non-word characters.
var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;
/**
 * Normalize the string into something other libraries can manipulate easier.
 */
function noCase(input, options) {
    if (options === void 0) { options = {}; }
    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lower_case_1.lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? " " : _d;
    var result = replace(replace(input, splitRegexp, "$1\0$2"), stripRegexp, "\0");
    var start = 0;
    var end = result.length;
    // Trim the delimiter from around the output string.
    while (result.charAt(start) === "\0")
        start++;
    while (result.charAt(end - 1) === "\0")
        end--;
    // Transform each token independently.
    return result.slice(start, end).split("\0").map(transform).join(delimiter);
}
exports.noCase = noCase;
/**
 * Replace `re` in the input string with the replacement value.
 */
function replace(input, re, value) {
    if (re instanceof RegExp)
        return input.replace(re, value);
    return re.reduce(function (input, re) { return input.replace(re, value); }, input);
}

},{"lower-case":105}],112:[function(require,module,exports){
var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;
var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
var hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;
var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
var booleanValueOf = Boolean.prototype.valueOf;
var objectToString = Object.prototype.toString;
var functionToString = Function.prototype.toString;
var match = String.prototype.match;
var bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
var gOPS = Object.getOwnPropertySymbols;
var symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;
var isEnumerable = Object.prototype.propertyIsEnumerable;

var gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (
    [].__proto__ === Array.prototype // eslint-disable-line no-proto
        ? function (O) {
            return O.__proto__; // eslint-disable-line no-proto
        }
        : null
);

var inspectCustom = require('./util.inspect').custom;
var inspectSymbol = inspectCustom && isSymbol(inspectCustom) ? inspectCustom : null;
var toStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol' ? Symbol.toStringTag : null;

module.exports = function inspect_(obj, options, depth, seen) {
    var opts = options || {};

    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
    }
    if (
        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'
            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity
            : opts.maxStringLength !== null
        )
    ) {
        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
    }
    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;
    if (typeof customInspect !== 'boolean') {
        throw new TypeError('option "customInspect", if provided, must be `true` or `false`');
    }

    if (
        has(opts, 'indent')
        && opts.indent !== null
        && opts.indent !== '\t'
        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)
    ) {
        throw new TypeError('options "indent" must be "\\t", an integer > 0, or `null`');
    }

    if (typeof obj === 'undefined') {
        return 'undefined';
    }
    if (obj === null) {
        return 'null';
    }
    if (typeof obj === 'boolean') {
        return obj ? 'true' : 'false';
    }

    if (typeof obj === 'string') {
        return inspectString(obj, opts);
    }
    if (typeof obj === 'number') {
        if (obj === 0) {
            return Infinity / obj > 0 ? '0' : '-0';
        }
        return String(obj);
    }
    if (typeof obj === 'bigint') {
        return String(obj) + 'n';
    }

    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
    if (typeof depth === 'undefined') { depth = 0; }
    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {
        return isArray(obj) ? '[Array]' : '[Object]';
    }

    var indent = getIndent(opts, depth);

    if (typeof seen === 'undefined') {
        seen = [];
    } else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }

    function inspect(value, from, noIndent) {
        if (from) {
            seen = seen.slice();
            seen.push(from);
        }
        if (noIndent) {
            var newOpts = {
                depth: opts.depth
            };
            if (has(opts, 'quoteStyle')) {
                newOpts.quoteStyle = opts.quoteStyle;
            }
            return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
    }

    if (typeof obj === 'function') {
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + keys.join(', ') + ' }' : '');
    }
    if (isSymbol(obj)) {
        var symString = symToString.call(obj);
        return typeof obj === 'object' ? markBoxed(symString) : symString;
    }
    if (isElement(obj)) {
        var s = '<' + String(obj.nodeName).toLowerCase();
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) { s += '...'; }
        s += '</' + String(obj.nodeName).toLowerCase() + '>';
        return s;
    }
    if (isArray(obj)) {
        if (obj.length === 0) { return '[]'; }
        var xs = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs)) {
            return '[' + indentedJoin(xs, indent) + ']';
        }
        return '[ ' + xs.join(', ') + ' ]';
    }
    if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (parts.length === 0) { return '[' + String(obj) + ']'; }
        return '{ [' + String(obj) + '] ' + parts.join(', ') + ' }';
    }
    if (typeof obj === 'object' && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === 'function') {
            return obj[inspectSymbol]();
        } else if (typeof obj.inspect === 'function') {
            return obj.inspect();
        }
    }
    if (isMap(obj)) {
        var mapParts = [];
        mapForEach.call(obj, function (value, key) {
            mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));
        });
        return collectionOf('Map', mapSize.call(obj), mapParts, indent);
    }
    if (isSet(obj)) {
        var setParts = [];
        setForEach.call(obj, function (value) {
            setParts.push(inspect(value, obj));
        });
        return collectionOf('Set', setSize.call(obj), setParts, indent);
    }
    if (isWeakMap(obj)) {
        return weakCollectionOf('WeakMap');
    }
    if (isWeakSet(obj)) {
        return weakCollectionOf('WeakSet');
    }
    if (isWeakRef(obj)) {
        return weakCollectionOf('WeakRef');
    }
    if (isNumber(obj)) {
        return markBoxed(inspect(Number(obj)));
    }
    if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
    }
    if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
    }
    if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
    }
    if (!isDate(obj) && !isRegExp(obj)) {
        var ys = arrObjKeys(obj, inspect);
        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
        var protoTag = obj instanceof Object ? '' : 'null prototype';
        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? toStr(obj).slice(8, -1) : protoTag ? 'Object' : '';
        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';
        var tag = constructorTag + (stringTag || protoTag ? '[' + [].concat(stringTag || [], protoTag || []).join(': ') + '] ' : '');
        if (ys.length === 0) { return tag + '{}'; }
        if (indent) {
            return tag + '{' + indentedJoin(ys, indent) + '}';
        }
        return tag + '{ ' + ys.join(', ') + ' }';
    }
    return String(obj);
};

function wrapQuotes(s, defaultStyle, opts) {
    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
    return quoteChar + s + quoteChar;
}

function quote(s) {
    return String(s).replace(/"/g, '&quot;');
}

function isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
function isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }

// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives
function isSymbol(obj) {
    if (typeof obj === 'symbol') {
        return true;
    }
    if (!obj || typeof obj !== 'object' || !symToString) {
        return false;
    }
    try {
        symToString.call(obj);
        return true;
    } catch (e) {}
    return false;
}

function isBigInt(obj) {
    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {
        return false;
    }
    try {
        bigIntValueOf.call(obj);
        return true;
    } catch (e) {}
    return false;
}

var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
function has(obj, key) {
    return hasOwn.call(obj, key);
}

function toStr(obj) {
    return objectToString.call(obj);
}

function nameOf(f) {
    if (f.name) { return f.name; }
    var m = match.call(functionToString.call(f), /^function\s*([\w$]+)/);
    if (m) { return m[1]; }
    return null;
}

function indexOf(xs, x) {
    if (xs.indexOf) { return xs.indexOf(x); }
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) { return i; }
    }
    return -1;
}

function isMap(x) {
    if (!mapSize || !x || typeof x !== 'object') {
        return false;
    }
    try {
        mapSize.call(x);
        try {
            setSize.call(x);
        } catch (s) {
            return true;
        }
        return x instanceof Map; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakMap(x) {
    if (!weakMapHas || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakMapHas.call(x, weakMapHas);
        try {
            weakSetHas.call(x, weakSetHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakRef(x) {
    if (!weakRefDeref || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakRefDeref.call(x);
        return true;
    } catch (e) {}
    return false;
}

function isSet(x) {
    if (!setSize || !x || typeof x !== 'object') {
        return false;
    }
    try {
        setSize.call(x);
        try {
            mapSize.call(x);
        } catch (m) {
            return true;
        }
        return x instanceof Set; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakSet(x) {
    if (!weakSetHas || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakSetHas.call(x, weakSetHas);
        try {
            weakMapHas.call(x, weakMapHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isElement(x) {
    if (!x || typeof x !== 'object') { return false; }
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';
}

function inspectString(str, opts) {
    if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
        return inspectString(str.slice(0, opts.maxStringLength), opts) + trailer;
    }
    // eslint-disable-next-line no-control-regex
    var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
    return wrapQuotes(s, 'single', opts);
}

function lowbyte(c) {
    var n = c.charCodeAt(0);
    var x = {
        8: 'b',
        9: 't',
        10: 'n',
        12: 'f',
        13: 'r'
    }[n];
    if (x) { return '\\' + x; }
    return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16).toUpperCase();
}

function markBoxed(str) {
    return 'Object(' + str + ')';
}

function weakCollectionOf(type) {
    return type + ' { ? }';
}

function collectionOf(type, size, entries, indent) {
    var joinedEntries = indent ? indentedJoin(entries, indent) : entries.join(', ');
    return type + ' (' + size + ') {' + joinedEntries + '}';
}

function singleLineValues(xs) {
    for (var i = 0; i < xs.length; i++) {
        if (indexOf(xs[i], '\n') >= 0) {
            return false;
        }
    }
    return true;
}

function getIndent(opts, depth) {
    var baseIndent;
    if (opts.indent === '\t') {
        baseIndent = '\t';
    } else if (typeof opts.indent === 'number' && opts.indent > 0) {
        baseIndent = Array(opts.indent + 1).join(' ');
    } else {
        return null;
    }
    return {
        base: baseIndent,
        prev: Array(depth + 1).join(baseIndent)
    };
}

function indentedJoin(xs, indent) {
    if (xs.length === 0) { return ''; }
    var lineJoiner = '\n' + indent.prev + indent.base;
    return lineJoiner + xs.join(',' + lineJoiner) + '\n' + indent.prev;
}

function arrObjKeys(obj, inspect) {
    var isArr = isArray(obj);
    var xs = [];
    if (isArr) {
        xs.length = obj.length;
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
    }
    for (var key in obj) { // eslint-disable-line no-restricted-syntax
        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
        if ((/[^\w$]/).test(key)) {
            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
        } else {
            xs.push(key + ': ' + inspect(obj[key], obj));
        }
    }
    if (typeof gOPS === 'function') {
        var syms = gOPS(obj);
        for (var j = 0; j < syms.length; j++) {
            if (isEnumerable.call(obj, syms[j])) {
                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));
            }
        }
    }
    return xs;
}

},{"./util.inspect":89}],113:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],114:[function(require,module,exports){
'use strict';

var replace = String.prototype.replace;
var percentTwenties = /%20/g;

var Format = {
    RFC1738: 'RFC1738',
    RFC3986: 'RFC3986'
};

module.exports = {
    'default': Format.RFC3986,
    formatters: {
        RFC1738: function (value) {
            return replace.call(value, percentTwenties, '+');
        },
        RFC3986: function (value) {
            return String(value);
        }
    },
    RFC1738: Format.RFC1738,
    RFC3986: Format.RFC3986
};

},{}],115:[function(require,module,exports){
'use strict';

var stringify = require('./stringify');
var parse = require('./parse');
var formats = require('./formats');

module.exports = {
    formats: formats,
    parse: parse,
    stringify: stringify
};

},{"./formats":114,"./parse":116,"./stringify":117}],116:[function(require,module,exports){
'use strict';

var utils = require('./utils');

var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;

var defaults = {
    allowDots: false,
    allowPrototypes: false,
    allowSparse: false,
    arrayLimit: 20,
    charset: 'utf-8',
    charsetSentinel: false,
    comma: false,
    decoder: utils.decode,
    delimiter: '&',
    depth: 5,
    ignoreQueryPrefix: false,
    interpretNumericEntities: false,
    parameterLimit: 1000,
    parseArrays: true,
    plainObjects: false,
    strictNullHandling: false
};

var interpretNumericEntities = function (str) {
    return str.replace(/&#(\d+);/g, function ($0, numberStr) {
        return String.fromCharCode(parseInt(numberStr, 10));
    });
};

var parseArrayValue = function (val, options) {
    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {
        return val.split(',');
    }

    return val;
};

// This is what browsers will submit when the ✓ character occurs in an
// application/x-www-form-urlencoded body and the encoding of the page containing
// the form is iso-8859-1, or when the submitted form has an accept-charset
// attribute of iso-8859-1. Presumably also with other charsets that do not contain
// the ✓ character, such as us-ascii.
var isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')

// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.
var charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')

var parseValues = function parseQueryStringValues(str, options) {
    var obj = {};
    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
    var parts = cleanStr.split(options.delimiter, limit);
    var skipIndex = -1; // Keep track of where the utf8 sentinel was found
    var i;

    var charset = options.charset;
    if (options.charsetSentinel) {
        for (i = 0; i < parts.length; ++i) {
            if (parts[i].indexOf('utf8=') === 0) {
                if (parts[i] === charsetSentinel) {
                    charset = 'utf-8';
                } else if (parts[i] === isoSentinel) {
                    charset = 'iso-8859-1';
                }
                skipIndex = i;
                i = parts.length; // The eslint settings do not allow break;
            }
        }
    }

    for (i = 0; i < parts.length; ++i) {
        if (i === skipIndex) {
            continue;
        }
        var part = parts[i];

        var bracketEqualsPos = part.indexOf(']=');
        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;

        var key, val;
        if (pos === -1) {
            key = options.decoder(part, defaults.decoder, charset, 'key');
            val = options.strictNullHandling ? null : '';
        } else {
            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');
            val = utils.maybeMap(
                parseArrayValue(part.slice(pos + 1), options),
                function (encodedVal) {
                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');
                }
            );
        }

        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {
            val = interpretNumericEntities(val);
        }

        if (part.indexOf('[]=') > -1) {
            val = isArray(val) ? [val] : val;
        }

        if (has.call(obj, key)) {
            obj[key] = utils.combine(obj[key], val);
        } else {
            obj[key] = val;
        }
    }

    return obj;
};

var parseObject = function (chain, val, options, valuesParsed) {
    var leaf = valuesParsed ? val : parseArrayValue(val, options);

    for (var i = chain.length - 1; i >= 0; --i) {
        var obj;
        var root = chain[i];

        if (root === '[]' && options.parseArrays) {
            obj = [].concat(leaf);
        } else {
            obj = options.plainObjects ? Object.create(null) : {};
            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
            var index = parseInt(cleanRoot, 10);
            if (!options.parseArrays && cleanRoot === '') {
                obj = { 0: leaf };
            } else if (
                !isNaN(index)
                && root !== cleanRoot
                && String(index) === cleanRoot
                && index >= 0
                && (options.parseArrays && index <= options.arrayLimit)
            ) {
                obj = [];
                obj[index] = leaf;
            } else {
                obj[cleanRoot] = leaf;
            }
        }

        leaf = obj;
    }

    return leaf;
};

var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
    if (!givenKey) {
        return;
    }

    // Transform dot notation to bracket notation
    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;

    // The regex chunks

    var brackets = /(\[[^[\]]*])/;
    var child = /(\[[^[\]]*])/g;

    // Get the parent

    var segment = options.depth > 0 && brackets.exec(key);
    var parent = segment ? key.slice(0, segment.index) : key;

    // Stash the parent if it exists

    var keys = [];
    if (parent) {
        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties
        if (!options.plainObjects && has.call(Object.prototype, parent)) {
            if (!options.allowPrototypes) {
                return;
            }
        }

        keys.push(parent);
    }

    // Loop through children appending to the array until we hit depth

    var i = 0;
    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {
        i += 1;
        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
            if (!options.allowPrototypes) {
                return;
            }
        }
        keys.push(segment[1]);
    }

    // If there's a remainder, just add whatever is left

    if (segment) {
        keys.push('[' + key.slice(segment.index) + ']');
    }

    return parseObject(keys, val, options, valuesParsed);
};

var normalizeParseOptions = function normalizeParseOptions(opts) {
    if (!opts) {
        return defaults;
    }

    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {
        throw new TypeError('Decoder has to be a function.');
    }

    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
    }
    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;

    return {
        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,
        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,
        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,
        charset: charset,
        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
        // eslint-disable-next-line no-implicit-coercion, no-extra-parens
        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,
        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,
        parseArrays: opts.parseArrays !== false,
        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,
        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
    };
};

module.exports = function (str, opts) {
    var options = normalizeParseOptions(opts);

    if (str === '' || str === null || typeof str === 'undefined') {
        return options.plainObjects ? Object.create(null) : {};
    }

    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
    var obj = options.plainObjects ? Object.create(null) : {};

    // Iterate over the keys and setup the new object

    var keys = Object.keys(tempObj);
    for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');
        obj = utils.merge(obj, newObj, options);
    }

    if (options.allowSparse === true) {
        return obj;
    }

    return utils.compact(obj);
};

},{"./utils":118}],117:[function(require,module,exports){
'use strict';

var getSideChannel = require('side-channel');
var utils = require('./utils');
var formats = require('./formats');
var has = Object.prototype.hasOwnProperty;

var arrayPrefixGenerators = {
    brackets: function brackets(prefix) {
        return prefix + '[]';
    },
    comma: 'comma',
    indices: function indices(prefix, key) {
        return prefix + '[' + key + ']';
    },
    repeat: function repeat(prefix) {
        return prefix;
    }
};

var isArray = Array.isArray;
var push = Array.prototype.push;
var pushToArray = function (arr, valueOrArray) {
    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
};

var toISO = Date.prototype.toISOString;

var defaultFormat = formats['default'];
var defaults = {
    addQueryPrefix: false,
    allowDots: false,
    charset: 'utf-8',
    charsetSentinel: false,
    delimiter: '&',
    encode: true,
    encoder: utils.encode,
    encodeValuesOnly: false,
    format: defaultFormat,
    formatter: formats.formatters[defaultFormat],
    // deprecated
    indices: false,
    serializeDate: function serializeDate(date) {
        return toISO.call(date);
    },
    skipNulls: false,
    strictNullHandling: false
};

var isNonNullishPrimitive = function isNonNullishPrimitive(v) {
    return typeof v === 'string'
        || typeof v === 'number'
        || typeof v === 'boolean'
        || typeof v === 'symbol'
        || typeof v === 'bigint';
};

var stringify = function stringify(
    object,
    prefix,
    generateArrayPrefix,
    strictNullHandling,
    skipNulls,
    encoder,
    filter,
    sort,
    allowDots,
    serializeDate,
    format,
    formatter,
    encodeValuesOnly,
    charset,
    sideChannel
) {
    var obj = object;

    if (sideChannel.has(object)) {
        throw new RangeError('Cyclic object value');
    }

    if (typeof filter === 'function') {
        obj = filter(prefix, obj);
    } else if (obj instanceof Date) {
        obj = serializeDate(obj);
    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {
        obj = utils.maybeMap(obj, function (value) {
            if (value instanceof Date) {
                return serializeDate(value);
            }
            return value;
        });
    }

    if (obj === null) {
        if (strictNullHandling) {
            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;
        }

        obj = '';
    }

    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
        if (encoder) {
            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);
            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];
        }
        return [formatter(prefix) + '=' + formatter(String(obj))];
    }

    var values = [];

    if (typeof obj === 'undefined') {
        return values;
    }

    var objKeys;
    if (generateArrayPrefix === 'comma' && isArray(obj)) {
        // we need to join elements in
        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : undefined }];
    } else if (isArray(filter)) {
        objKeys = filter;
    } else {
        var keys = Object.keys(obj);
        objKeys = sort ? keys.sort(sort) : keys;
    }

    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];
        var value = typeof key === 'object' && key.value !== undefined ? key.value : obj[key];

        if (skipNulls && value === null) {
            continue;
        }

        var keyPrefix = isArray(obj)
            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix
            : prefix + (allowDots ? '.' + key : '[' + key + ']');

        sideChannel.set(object, true);
        var valueSideChannel = getSideChannel();
        pushToArray(values, stringify(
            value,
            keyPrefix,
            generateArrayPrefix,
            strictNullHandling,
            skipNulls,
            encoder,
            filter,
            sort,
            allowDots,
            serializeDate,
            format,
            formatter,
            encodeValuesOnly,
            charset,
            valueSideChannel
        ));
    }

    return values;
};

var normalizeStringifyOptions = function normalizeStringifyOptions(opts) {
    if (!opts) {
        return defaults;
    }

    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {
        throw new TypeError('Encoder has to be a function.');
    }

    var charset = opts.charset || defaults.charset;
    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
    }

    var format = formats['default'];
    if (typeof opts.format !== 'undefined') {
        if (!has.call(formats.formatters, opts.format)) {
            throw new TypeError('Unknown format option provided.');
        }
        format = opts.format;
    }
    var formatter = formats.formatters[format];

    var filter = defaults.filter;
    if (typeof opts.filter === 'function' || isArray(opts.filter)) {
        filter = opts.filter;
    }

    return {
        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,
        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
        charset: charset,
        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,
        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
        filter: filter,
        format: format,
        formatter: formatter,
        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,
        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,
        sort: typeof opts.sort === 'function' ? opts.sort : null,
        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
    };
};

module.exports = function (object, opts) {
    var obj = object;
    var options = normalizeStringifyOptions(opts);

    var objKeys;
    var filter;

    if (typeof options.filter === 'function') {
        filter = options.filter;
        obj = filter('', obj);
    } else if (isArray(options.filter)) {
        filter = options.filter;
        objKeys = filter;
    }

    var keys = [];

    if (typeof obj !== 'object' || obj === null) {
        return '';
    }

    var arrayFormat;
    if (opts && opts.arrayFormat in arrayPrefixGenerators) {
        arrayFormat = opts.arrayFormat;
    } else if (opts && 'indices' in opts) {
        arrayFormat = opts.indices ? 'indices' : 'repeat';
    } else {
        arrayFormat = 'indices';
    }

    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];

    if (!objKeys) {
        objKeys = Object.keys(obj);
    }

    if (options.sort) {
        objKeys.sort(options.sort);
    }

    var sideChannel = getSideChannel();
    for (var i = 0; i < objKeys.length; ++i) {
        var key = objKeys[i];

        if (options.skipNulls && obj[key] === null) {
            continue;
        }
        pushToArray(keys, stringify(
            obj[key],
            key,
            generateArrayPrefix,
            options.strictNullHandling,
            options.skipNulls,
            options.encode ? options.encoder : null,
            options.filter,
            options.sort,
            options.allowDots,
            options.serializeDate,
            options.format,
            options.formatter,
            options.encodeValuesOnly,
            options.charset,
            sideChannel
        ));
    }

    var joined = keys.join(options.delimiter);
    var prefix = options.addQueryPrefix === true ? '?' : '';

    if (options.charsetSentinel) {
        if (options.charset === 'iso-8859-1') {
            // encodeURIComponent('&#10003;'), the "numeric entity" representation of a checkmark
            prefix += 'utf8=%26%2310003%3B&';
        } else {
            // encodeURIComponent('✓')
            prefix += 'utf8=%E2%9C%93&';
        }
    }

    return joined.length > 0 ? prefix + joined : '';
};

},{"./formats":114,"./utils":118,"side-channel":122}],118:[function(require,module,exports){
'use strict';

var formats = require('./formats');

var has = Object.prototype.hasOwnProperty;
var isArray = Array.isArray;

var hexTable = (function () {
    var array = [];
    for (var i = 0; i < 256; ++i) {
        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
    }

    return array;
}());

var compactQueue = function compactQueue(queue) {
    while (queue.length > 1) {
        var item = queue.pop();
        var obj = item.obj[item.prop];

        if (isArray(obj)) {
            var compacted = [];

            for (var j = 0; j < obj.length; ++j) {
                if (typeof obj[j] !== 'undefined') {
                    compacted.push(obj[j]);
                }
            }

            item.obj[item.prop] = compacted;
        }
    }
};

var arrayToObject = function arrayToObject(source, options) {
    var obj = options && options.plainObjects ? Object.create(null) : {};
    for (var i = 0; i < source.length; ++i) {
        if (typeof source[i] !== 'undefined') {
            obj[i] = source[i];
        }
    }

    return obj;
};

var merge = function merge(target, source, options) {
    /* eslint no-param-reassign: 0 */
    if (!source) {
        return target;
    }

    if (typeof source !== 'object') {
        if (isArray(target)) {
            target.push(source);
        } else if (target && typeof target === 'object') {
            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {
                target[source] = true;
            }
        } else {
            return [target, source];
        }

        return target;
    }

    if (!target || typeof target !== 'object') {
        return [target].concat(source);
    }

    var mergeTarget = target;
    if (isArray(target) && !isArray(source)) {
        mergeTarget = arrayToObject(target, options);
    }

    if (isArray(target) && isArray(source)) {
        source.forEach(function (item, i) {
            if (has.call(target, i)) {
                var targetItem = target[i];
                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {
                    target[i] = merge(targetItem, item, options);
                } else {
                    target.push(item);
                }
            } else {
                target[i] = item;
            }
        });
        return target;
    }

    return Object.keys(source).reduce(function (acc, key) {
        var value = source[key];

        if (has.call(acc, key)) {
            acc[key] = merge(acc[key], value, options);
        } else {
            acc[key] = value;
        }
        return acc;
    }, mergeTarget);
};

var assign = function assignSingleSource(target, source) {
    return Object.keys(source).reduce(function (acc, key) {
        acc[key] = source[key];
        return acc;
    }, target);
};

var decode = function (str, decoder, charset) {
    var strWithoutPlus = str.replace(/\+/g, ' ');
    if (charset === 'iso-8859-1') {
        // unescape never throws, no try...catch needed:
        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
    }
    // utf-8
    try {
        return decodeURIComponent(strWithoutPlus);
    } catch (e) {
        return strWithoutPlus;
    }
};

var encode = function encode(str, defaultEncoder, charset, kind, format) {
    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
    // It has been adapted here for stricter adherence to RFC 3986
    if (str.length === 0) {
        return str;
    }

    var string = str;
    if (typeof str === 'symbol') {
        string = Symbol.prototype.toString.call(str);
    } else if (typeof str !== 'string') {
        string = String(str);
    }

    if (charset === 'iso-8859-1') {
        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {
            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';
        });
    }

    var out = '';
    for (var i = 0; i < string.length; ++i) {
        var c = string.charCodeAt(i);

        if (
            c === 0x2D // -
            || c === 0x2E // .
            || c === 0x5F // _
            || c === 0x7E // ~
            || (c >= 0x30 && c <= 0x39) // 0-9
            || (c >= 0x41 && c <= 0x5A) // a-z
            || (c >= 0x61 && c <= 0x7A) // A-Z
            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )
        ) {
            out += string.charAt(i);
            continue;
        }

        if (c < 0x80) {
            out = out + hexTable[c];
            continue;
        }

        if (c < 0x800) {
            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        if (c < 0xD800 || c >= 0xE000) {
            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
            continue;
        }

        i += 1;
        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
        out += hexTable[0xF0 | (c >> 18)]
            + hexTable[0x80 | ((c >> 12) & 0x3F)]
            + hexTable[0x80 | ((c >> 6) & 0x3F)]
            + hexTable[0x80 | (c & 0x3F)];
    }

    return out;
};

var compact = function compact(value) {
    var queue = [{ obj: { o: value }, prop: 'o' }];
    var refs = [];

    for (var i = 0; i < queue.length; ++i) {
        var item = queue[i];
        var obj = item.obj[item.prop];

        var keys = Object.keys(obj);
        for (var j = 0; j < keys.length; ++j) {
            var key = keys[j];
            var val = obj[key];
            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
                queue.push({ obj: obj, prop: key });
                refs.push(val);
            }
        }
    }

    compactQueue(queue);

    return value;
};

var isRegExp = function isRegExp(obj) {
    return Object.prototype.toString.call(obj) === '[object RegExp]';
};

var isBuffer = function isBuffer(obj) {
    if (!obj || typeof obj !== 'object') {
        return false;
    }

    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
};

var combine = function combine(a, b) {
    return [].concat(a, b);
};

var maybeMap = function maybeMap(val, fn) {
    if (isArray(val)) {
        var mapped = [];
        for (var i = 0; i < val.length; i += 1) {
            mapped.push(fn(val[i]));
        }
        return mapped;
    }
    return fn(val);
};

module.exports = {
    arrayToObject: arrayToObject,
    assign: assign,
    combine: combine,
    compact: compact,
    decode: decode,
    encode: encode,
    isBuffer: isBuffer,
    isRegExp: isRegExp,
    maybeMap: maybeMap,
    merge: merge
};

},{"./formats":114}],119:[function(require,module,exports){
'use strict';

class QuickLRU {
	constructor(options = {}) {
		if (!(options.maxSize && options.maxSize > 0)) {
			throw new TypeError('`maxSize` must be a number greater than 0');
		}

		this.maxSize = options.maxSize;
		this.cache = new Map();
		this.oldCache = new Map();
		this._size = 0;
	}

	_set(key, value) {
		this.cache.set(key, value);
		this._size++;

		if (this._size >= this.maxSize) {
			this._size = 0;
			this.oldCache = this.cache;
			this.cache = new Map();
		}
	}

	get(key) {
		if (this.cache.has(key)) {
			return this.cache.get(key);
		}

		if (this.oldCache.has(key)) {
			const value = this.oldCache.get(key);
			this.oldCache.delete(key);
			this._set(key, value);
			return value;
		}
	}

	set(key, value) {
		if (this.cache.has(key)) {
			this.cache.set(key, value);
		} else {
			this._set(key, value);
		}

		return this;
	}

	has(key) {
		return this.cache.has(key) || this.oldCache.has(key);
	}

	peek(key) {
		if (this.cache.has(key)) {
			return this.cache.get(key);
		}

		if (this.oldCache.has(key)) {
			return this.oldCache.get(key);
		}
	}

	delete(key) {
		const deleted = this.cache.delete(key);
		if (deleted) {
			this._size--;
		}

		return this.oldCache.delete(key) || deleted;
	}

	clear() {
		this.cache.clear();
		this.oldCache.clear();
		this._size = 0;
	}

	* keys() {
		for (const [key] of this) {
			yield key;
		}
	}

	* values() {
		for (const [, value] of this) {
			yield value;
		}
	}

	* [Symbol.iterator]() {
		for (const item of this.cache) {
			yield item;
		}

		for (const item of this.oldCache) {
			const [key] = item;
			if (!this.cache.has(key)) {
				yield item;
			}
		}
	}

	get size() {
		let oldCacheSize = 0;
		for (const key of this.oldCache.keys()) {
			if (!this.cache.has(key)) {
				oldCacheSize++;
			}
		}

		return this._size + oldCacheSize;
	}
}

module.exports = QuickLRU;

},{}],120:[function(require,module,exports){
var e,t=(e=require("axios"))&&"object"==typeof e&&"default"in e?e.default:e;function r(e){return e}function n(e){var t=[];if(e)return Array.isArray(e)?e:("object"==typeof e&&Object.keys(e).forEach(function(r){"number"==typeof r&&(t[r]=e[r])}),t)}function o(e){if(t.isCancel(e))return Promise.reject(e);var r=i(e)||{};if(r.currentRetryAttempt=r.currentRetryAttempt||0,r.retry="number"==typeof r.retry?r.retry:3,r.retryDelay="number"==typeof r.retryDelay?r.retryDelay:100,r.instance=r.instance||t,r.backoffType=r.backoffType||"exponential",r.httpMethodsToRetry=n(r.httpMethodsToRetry)||["GET","HEAD","PUT","OPTIONS","DELETE"],r.noResponseRetries="number"==typeof r.noResponseRetries?r.noResponseRetries:2,r.statusCodesToRetry=n(r.statusCodesToRetry)||[[100,199],[429,429],[500,599]],e.config=e.config||{},e.config.raxConfig=Object.assign({},r),!(r.shouldRetry||s)(e))return Promise.reject(e);var o=new Promise(function(t){var n;n="linear"===r.backoffType?1e3*r.currentRetryAttempt:"static"===r.backoffType?r.retryDelay:(Math.pow(2,r.currentRetryAttempt)-1)/2*1e3,e.config.raxConfig.currentRetryAttempt+=1,setTimeout(t,n)}),f=r.onRetryAttempt?Promise.resolve(r.onRetryAttempt(e)):Promise.resolve();return Promise.resolve().then(function(){return o}).then(function(){return f}).then(function(){return r.instance.request(e.config)})}function s(e){var t=e.config.raxConfig;if(!t||0===t.retry)return!1;if(!e.response&&(t.currentRetryAttempt||0)>=t.noResponseRetries)return!1;if(!e.config.method||t.httpMethodsToRetry.indexOf(e.config.method.toUpperCase())<0)return!1;if(e.response&&e.response.status){for(var r=!1,n=0,o=t.statusCodesToRetry;n<o.length;n+=1){var s=o[n],i=e.response.status;if(i>=s[0]&&i<=s[1]){r=!0;break}}if(!r)return!1}return t.currentRetryAttempt=t.currentRetryAttempt||0,!(t.currentRetryAttempt>=t.retry)}function i(e){if(e&&e.config)return e.config.raxConfig}exports.attach=function(e){return(e=e||t).interceptors.response.use(r,o)},exports.detach=function(e,r){(r=r||t).interceptors.response.eject(e)},exports.shouldRetryRequest=s,exports.getConfig=i;


},{"axios":57}],121:[function(require,module,exports){
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.prototype = Object.create(Buffer.prototype)

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":91}],122:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');
var callBound = require('call-bind/callBound');
var inspect = require('object-inspect');

var $TypeError = GetIntrinsic('%TypeError%');
var $WeakMap = GetIntrinsic('%WeakMap%', true);
var $Map = GetIntrinsic('%Map%', true);

var $weakMapGet = callBound('WeakMap.prototype.get', true);
var $weakMapSet = callBound('WeakMap.prototype.set', true);
var $weakMapHas = callBound('WeakMap.prototype.has', true);
var $mapGet = callBound('Map.prototype.get', true);
var $mapSet = callBound('Map.prototype.set', true);
var $mapHas = callBound('Map.prototype.has', true);

/*
 * This function traverses the list returning the node corresponding to the
 * given key.
 *
 * That node is also moved to the head of the list, so that if it's accessed
 * again we don't need to traverse the whole list. By doing so, all the recently
 * used nodes can be accessed relatively quickly.
 */
var listGetNode = function (list, key) { // eslint-disable-line consistent-return
	for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
		if (curr.key === key) {
			prev.next = curr.next;
			curr.next = list.next;
			list.next = curr; // eslint-disable-line no-param-reassign
			return curr;
		}
	}
};

var listGet = function (objects, key) {
	var node = listGetNode(objects, key);
	return node && node.value;
};
var listSet = function (objects, key, value) {
	var node = listGetNode(objects, key);
	if (node) {
		node.value = value;
	} else {
		// Prepend the new node to the beginning of the list
		objects.next = { // eslint-disable-line no-param-reassign
			key: key,
			next: objects.next,
			value: value
		};
	}
};
var listHas = function (objects, key) {
	return !!listGetNode(objects, key);
};

module.exports = function getSideChannel() {
	var $wm;
	var $m;
	var $o;
	var channel = {
		assert: function (key) {
			if (!channel.has(key)) {
				throw new $TypeError('Side channel does not contain ' + inspect(key));
			}
		},
		get: function (key) { // eslint-disable-line consistent-return
			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
				if ($wm) {
					return $weakMapGet($wm, key);
				}
			} else if ($Map) {
				if ($m) {
					return $mapGet($m, key);
				}
			} else {
				if ($o) { // eslint-disable-line no-lonely-if
					return listGet($o, key);
				}
			}
		},
		has: function (key) {
			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
				if ($wm) {
					return $weakMapHas($wm, key);
				}
			} else if ($Map) {
				if ($m) {
					return $mapHas($m, key);
				}
			} else {
				if ($o) { // eslint-disable-line no-lonely-if
					return listHas($o, key);
				}
			}
			return false;
		},
		set: function (key, value) {
			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
				if (!$wm) {
					$wm = new $WeakMap();
				}
				$weakMapSet($wm, key, value);
			} else if ($Map) {
				if (!$m) {
					$m = new $Map();
				}
				$mapSet($m, key, value);
			} else {
				if (!$o) {
					/*
					 * Initialize the linked list as an empty node, so that we don't have
					 * to special-case handling of the first node: we can always refer to
					 * it as (previous node).next, instead of something like (list).head
					 */
					$o = { key: {}, next: null };
				}
				listSet($o, key, value);
			}
		}
	};
	return channel;
};

},{"call-bind/callBound":92,"get-intrinsic":99,"object-inspect":112}],123:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.snakeCase = void 0;
var tslib_1 = require("tslib");
var dot_case_1 = require("dot-case");
function snakeCase(input, options) {
    if (options === void 0) { options = {}; }
    return dot_case_1.dotCase(input, tslib_1.__assign({ delimiter: "_" }, options));
}
exports.snakeCase = snakeCase;

},{"dot-case":96,"tslib":125}],124:[function(require,module,exports){
'use strict'

const map = require('map-obj')
const { snakeCase } = require('snake-case')

module.exports = function (obj, options) {
  options = Object.assign({ deep: true, exclude: [] }, options)

  return map(obj, function (key, val) {
    return [
      matches(options.exclude, key) ? key : snakeCase(key),
      val
    ]
  }, options)
}

function matches (patterns, value) {
  return patterns.some(function (pattern) {
    return typeof pattern === 'string'
      ? pattern === value
      : pattern.test(value)
  })
}

},{"map-obj":106,"snake-case":123}],125:[function(require,module,exports){
(function (global){(function (){
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, System, Reflect, Promise */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __createBinding;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if (typeof module === "object" && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
});

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],126:[function(require,module,exports){
module.exports=[
    [
        1300130,
        2301615000
    ],
    [
        1300120,
        2300500000
    ],
    [
        1300110,
        2310240000
    ],
    [
        1300100,
        2312000000
    ],
    [
        1300090,
        2313000000
    ],
    [
        1300080,
        2324790000
    ],
    [
        1300070,
        2320537500
    ],
    [
        1300050,
        2324500000
    ],
    [
        1300040,
        2329705000
    ],
    [
        1300020,
        2332000000
    ],
    [
        1300010,
        2369000000
    ],
    [
        1300000,
        2369096000
    ],
    [
        1299990,
        2372693750
    ],
    [
        1299980,
        2373787500
    ],
    [
        1299960,
        2378000000
    ],
    [
        1299950,
        2377512500
    ],
    [
        1299930,
        2358320000
    ],
    [
        1299920,
        2355460000
    ],
    [
        1299910,
        2357984750
    ],
    [
        1299890,
        2361000000
    ],
    [
        1299880,
        2361555000
    ],
    [
        1299860,
        2362930000
    ],
    [
        1299850,
        2363102500
    ],
    [
        1299840,
        2373500000
    ],
    [
        1299830,
        2374000000
    ],
    [
        1299820,
        2379104750
    ],
    [
        1299810,
        2380089000
    ],
    [
        1299800,
        2384000000
    ],
    [
        1299790,
        2383760000
    ],
    [
        1299780,
        2382000000
    ],
    [
        1299760,
        2378870000
    ],
    [
        1299750,
        2376192250
    ],
    [
        1299740,
        2371030000
    ],
    [
        1299730,
        2371023000
    ],
    [
        1299720,
        2376197500
    ],
    [
        1299710,
        2384000000
    ],
    [
        1299690,
        2370190000
    ],
    [
        1299680,
        2367820000
    ],
    [
        1299670,
        2357345000
    ],
    [
        1299660,
        2350820000
    ],
    [
        1299650,
        2346000000
    ],
    [
        1299630,
        2338865000
    ],
    [
        1299620,
        2353500000
    ],
    [
        1299610,
        2354500000
    ],
    [
        1299600,
        2353500000
    ],
    [
        1299590,
        2352000000
    ],
    [
        1299570,
        2353000000
    ],
    [
        1299560,
        2353500000
    ],
    [
        1299550,
        2357500000
    ],
    [
        1299540,
        2352390000
    ],
    [
        1299530,
        2353742500
    ],
    [
        1299520,
        2354000000
    ],
    [
        1299510,
        2356750000
    ],
    [
        1299470,
        2351000000
    ],
    [
        1299460,
        2350135000
    ],
    [
        1299450,
        2349360000
    ],
    [
        1299440,
        2343342000
    ],
    [
        1299430,
        2336335000
    ],
    [
        1299420,
        2335941750
    ],
    [
        1299410,
        2334000000
    ],
    [
        1299400,
        2333358750
    ],
    [
        1299390,
        2331240000
    ],
    [
        1299380,
        2394370000
    ],
    [
        1299370,
        2436075000
    ],
    [
        1299350,
        2445000000
    ],
    [
        1299340,
        2428000000
    ],
    [
        1299330,
        2422985000
    ],
    [
        1299320,
        2427000000
    ],
    [
        1299310,
        2427970000
    ],
    [
        1299290,
        2428000000
    ],
    [
        1299280,
        2431000000
    ],
    [
        1299260,
        2431650000
    ],
    [
        1299250,
        2432150000
    ],
    [
        1299240,
        2431500000
    ],
    [
        1299220,
        2431000000
    ],
    [
        1299210,
        2430098750
    ],
    [
        1299190,
        2429225000
    ],
    [
        1299180,
        2432870000
    ],
    [
        1299170,
        2437000000
    ],
    [
        1299160,
        2438000000
    ],
    [
        1299150,
        2435465000
    ],
    [
        1299140,
        2434000000
    ],
    [
        1299130,
        2436415000
    ],
    [
        1299120,
        2437788750
    ],
    [
        1299110,
        2441226250
    ],
    [
        1299100,
        2435582500
    ],
    [
        1299090,
        2433235000
    ],
    [
        1299080,
        2433415000
    ],
    [
        1299070,
        2432376250
    ],
    [
        1299060,
        2440723750
    ],
    [
        1299050,
        2431646250
    ],
    [
        1299030,
        2453000000
    ],
    [
        1299020,
        2451822500
    ],
    [
        1299010,
        2450859000
    ],
    [
        1299000,
        2454750500
    ],
    [
        1298990,
        2454150000
    ],
    [
        1298980,
        2451115500
    ],
    [
        1298970,
        2452500000
    ],
    [
        1298960,
        2453508000
    ],
    [
        1298950,
        2457167500
    ],
    [
        1298890,
        2459003000
    ],
    [
        1298880,
        2465345000
    ],
    [
        1298870,
        2470121000
    ],
    [
        1298860,
        2460930000
    ],
    [
        1298850,
        2460748750
    ],
    [
        1298840,
        2467015000
    ],
    [
        1298830,
        2466390500
    ],
    [
        1298820,
        2470879000
    ],
    [
        1298810,
        2473490000
    ],
    [
        1298800,
        2428906500
    ],
    [
        1298790,
        2427885500
    ],
    [
        1298780,
        2440281750
    ],
    [
        1298750,
        2474000000
    ],
    [
        1298740,
        2469880000
    ],
    [
        1298730,
        2474000000
    ],
    [
        1298720,
        2476011250
    ],
    [
        1298700,
        2497500000
    ],
    [
        1298680,
        2488500000
    ],
    [
        1298670,
        2495950000
    ],
    [
        1298660,
        2500282500
    ],
    [
        1298650,
        2503000000
    ],
    [
        1298640,
        2499000000
    ],
    [
        1298630,
        2499350000
    ],
    [
        1298620,
        2501975000
    ],
    [
        1298610,
        2497500000
    ],
    [
        1298600,
        2495773000
    ],
    [
        1298590,
        2492841000
    ],
    [
        1298580,
        2485511500
    ],
    [
        1298570,
        2486921500
    ],
    [
        1298560,
        2486106250
    ],
    [
        1298550,
        2485924500
    ],
    [
        1298540,
        2484500000
    ],
    [
        1298530,
        2482080500
    ],
    [
        1298520,
        2495500000
    ],
    [
        1298510,
        2497500000
    ],
    [
        1298500,
        2504585000
    ],
    [
        1298490,
        2504975000
    ],
    [
        1298480,
        2502469000
    ],
    [
        1298470,
        2499000000
    ],
    [
        1298460,
        2507975000
    ],
    [
        1298450,
        2513553750
    ],
    [
        1298440,
        2513453500
    ],
    [
        1298430,
        2511000000
    ],
    [
        1298420,
        2510223750
    ],
    [
        1298410,
        2506710750
    ],
    [
        1298400,
        2503376000
    ],
    [
        1298390,
        2494339000
    ],
    [
        1298380,
        2487380000
    ],
    [
        1298370,
        2486634750
    ],
    [
        1298360,
        2488445000
    ],
    [
        1298350,
        2487136000
    ],
    [
        1298340,
        2484635500
    ],
    [
        1298330,
        2487000000
    ],
    [
        1298320,
        2489633500
    ],
    [
        1298310,
        2495055750
    ],
    [
        1298300,
        2494210000
    ],
    [
        1298290,
        2490351250
    ],
    [
        1298280,
        2494500000
    ],
    [
        1298270,
        2506475000
    ],
    [
        1298260,
        2504490000
    ],
    [
        1298250,
        2500423500
    ],
    [
        1298240,
        2498179000
    ],
    [
        1298230,
        2493559000
    ],
    [
        1298220,
        2500000000
    ],
    [
        1298210,
        2504790000
    ],
    [
        1298200,
        2504078000
    ],
    [
        1298190,
        2503875500
    ],
    [
        1298180,
        2506100000
    ],
    [
        1298170,
        2505475000
    ],
    [
        1298160,
        2500845000
    ],
    [
        1298150,
        2495914500
    ],
    [
        1298140,
        2485328750
    ],
    [
        1298130,
        2475155000
    ],
    [
        1298120,
        2485695000
    ],
    [
        1298110,
        2497750000
    ],
    [
        1298100,
        2501836000
    ],
    [
        1298090,
        2499127000
    ],
    [
        1298080,
        2495973750
    ],
    [
        1298070,
        2514504000
    ],
    [
        1298060,
        2529500000
    ],
    [
        1298050,
        2528322000
    ],
    [
        1298040,
        2520531750
    ],
    [
        1298030,
        2509200000
    ],
    [
        1298020,
        2510700000
    ],
    [
        1298010,
        2513531500
    ],
    [
        1298000,
        2506320000
    ],
    [
        1297990,
        2502000000
    ],
    [
        1297980,
        2500000000
    ],
    [
        1297970,
        2486525000
    ],
    [
        1297960,
        2485816250
    ],
    [
        1297950,
        2482189000
    ],
    [
        1297940,
        2477707000
    ],
    [
        1297930,
        2477297000
    ],
    [
        1297920,
        2475527500
    ],
    [
        1297800,
        2483000000
    ],
    [
        1297790,
        2471442500
    ],
    [
        1297780,
        2464340000
    ],
    [
        1297760,
        2465535000
    ],
    [
        1297750,
        2471034500
    ],
    [
        1297740,
        2478000000
    ],
    [
        1297690,
        2472092500
    ],
    [
        1297680,
        2472000000
    ],
    [
        1297670,
        2468198750
    ],
    [
        1297660,
        2466001250
    ],
    [
        1297650,
        2456910000
    ],
    [
        1297640,
        2446095000
    ],
    [
        1297630,
        2436000000
    ],
    [
        1297620,
        2442875000
    ],
    [
        1297600,
        2439155000
    ],
    [
        1297590,
        2432483000
    ],
    [
        1297580,
        2432162500
    ],
    [
        1297570,
        2427315000
    ],
    [
        1297560,
        2424000000
    ],
    [
        1297550,
        2405511500
    ],
    [
        1297540,
        2402512500
    ],
    [
        1297530,
        2401455000
    ],
    [
        1297520,
        2393672500
    ],
    [
        1297510,
        2389000000
    ],
    [
        1297500,
        2389447500
    ],
    [
        1297490,
        2405500000
    ],
    [
        1297480,
        2412805000
    ],
    [
        1297470,
        2415020000
    ],
    [
        1297460,
        2410970000
    ],
    [
        1297450,
        2407970000
    ],
    [
        1297440,
        2406945000
    ],
    [
        1297430,
        2396290000
    ],
    [
        1297420,
        2395737500
    ],
    [
        1297410,
        2395697500
    ],
    [
        1297400,
        2395528500
    ],
    [
        1297390,
        2396580000
    ],
    [
        1297380,
        2400290000
    ],
    [
        1297370,
        2482445000
    ],
    [
        1297360,
        2506990000
    ],
    [
        1297350,
        2539991000
    ],
    [
        1297340,
        2539780000
    ],
    [
        1297330,
        2561000000
    ],
    [
        1297320,
        2561500000
    ],
    [
        1297310,
        2575387250
    ],
    [
        1297300,
        2581765000
    ],
    [
        1297290,
        2584500000
    ],
    [
        1297260,
        2590000000
    ],
    [
        1297250,
        2581380000
    ],
    [
        1297240,
        2576060500
    ],
    [
        1297230,
        2575255000
    ],
    [
        1297220,
        2580356250
    ],
    [
        1297210,
        2574758500
    ],
    [
        1297200,
        2570841000
    ],
    [
        1297190,
        2595000000
    ],
    [
        1297180,
        2600670000
    ],
    [
        1297170,
        2604340000
    ],
    [
        1297160,
        2606000000
    ],
    [
        1297150,
        2602340000
    ],
    [
        1297140,
        2599000000
    ],
    [
        1297130,
        2596810000
    ],
    [
        1297110,
        2595220000
    ],
    [
        1297100,
        2611526000
    ],
    [
        1297090,
        2607590000
    ],
    [
        1297080,
        2611000000
    ],
    [
        1297070,
        2633000000
    ],
    [
        1297060,
        2643000000
    ],
    [
        1297050,
        2650730000
    ],
    [
        1297040,
        2661000000
    ],
    [
        1297020,
        2678950000
    ],
    [
        1297010,
        2725000000
    ],
    [
        1297000,
        2744300000
    ],
    [
        1296990,
        2759410000
    ],
    [
        1296980,
        2758000000
    ],
    [
        1296970,
        2732000000
    ],
    [
        1296960,
        2731613000
    ],
    [
        1296950,
        2726000000
    ],
    [
        1296940,
        2723840000
    ],
    [
        1296930,
        2722100000
    ],
    [
        1296920,
        2702410000
    ],
    [
        1296900,
        2696000000
    ],
    [
        1296890,
        2689231000
    ],
    [
        1296880,
        2686260000
    ],
    [
        1296860,
        2682000000
    ],
    [
        1296850,
        2674000000
    ],
    [
        1296840,
        2672530000
    ],
    [
        1296830,
        2675160000
    ],
    [
        1296820,
        2671000000
    ],
    [
        1296810,
        2668000000
    ],
    [
        1296800,
        2664000000
    ],
    [
        1296790,
        2668000000
    ],
    [
        1296770,
        2663602000
    ],
    [
        1296760,
        2684380000
    ],
    [
        1296750,
        2671000000
    ],
    [
        1296740,
        2689000000
    ],
    [
        1296730,
        2698000000
    ],
    [
        1296720,
        2687000000
    ],
    [
        1296710,
        2677300000
    ],
    [
        1296700,
        2676050000
    ],
    [
        1296690,
        2667590000
    ],
    [
        1296680,
        2664497000
    ],
    [
        1296660,
        2652000000
    ],
    [
        1296650,
        2654000000
    ],
    [
        1296640,
        2696000000
    ],
    [
        1296630,
        2702000000
    ],
    [
        1296620,
        2696000000
    ],
    [
        1296610,
        2693000000
    ],
    [
        1296580,
        2694000000
    ],
    [
        1296570,
        2696000000
    ],
    [
        1296560,
        2673320000
    ],
    [
        1296550,
        2662000000
    ],
    [
        1296540,
        2654810000
    ],
    [
        1296530,
        2649600000
    ],
    [
        1296520,
        2645360000
    ],
    [
        1296510,
        2643000000
    ],
    [
        1296480,
        2619000000
    ],
    [
        1296470,
        2627550000
    ],
    [
        1296460,
        2622811000
    ],
    [
        1296450,
        2643000000
    ],
    [
        1296440,
        2641000000
    ],
    [
        1296420,
        2640640000
    ],
    [
        1296410,
        2633000000
    ],
    [
        1296400,
        2633228000
    ],
    [
        1296390,
        2632155000
    ],
    [
        1296360,
        2634000000
    ],
    [
        1296350,
        2643000000
    ],
    [
        1296340,
        2646803000
    ],
    [
        1296330,
        2643330000
    ],
    [
        1296310,
        2627110000
    ],
    [
        1296300,
        2625760000
    ],
    [
        1296290,
        2637000000
    ],
    [
        1296280,
        2643000000
    ],
    [
        1296270,
        2650900000
    ],
    [
        1296260,
        2643000000
    ],
    [
        1296250,
        2642040000
    ],
    [
        1296240,
        2643000000
    ],
    [
        1296220,
        2658000000
    ],
    [
        1296210,
        2653591000
    ],
    [
        1296190,
        2646602500
    ],
    [
        1296180,
        2658000000
    ],
    [
        1296170,
        2639520000
    ],
    [
        1296160,
        2633000000
    ],
    [
        1296140,
        2637345000
    ],
    [
        1296130,
        2622000000
    ],
    [
        1296110,
        2605668000
    ],
    [
        1296100,
        2605900000
    ],
    [
        1296090,
        2596850000
    ],
    [
        1296070,
        2596340000
    ],
    [
        1296060,
        2594817500
    ],
    [
        1296050,
        2595550000
    ],
    [
        1296040,
        2589390000
    ],
    [
        1296030,
        2588000000
    ],
    [
        1296010,
        2591630000
    ],
    [
        1296000,
        2588000000
    ],
    [
        1295990,
        2587355000
    ],
    [
        1295980,
        2592482500
    ],
    [
        1295970,
        2612657750
    ],
    [
        1295950,
        2626315000
    ],
    [
        1295940,
        2629000000
    ],
    [
        1295930,
        2627240000
    ],
    [
        1295920,
        2619576250
    ],
    [
        1295910,
        2604662500
    ],
    [
        1295900,
        2600662500
    ],
    [
        1295890,
        2600000000
    ],
    [
        1295880,
        2599690000
    ],
    [
        1295870,
        2597000000
    ],
    [
        1295860,
        2590480000
    ],
    [
        1295850,
        2589470000
    ],
    [
        1295840,
        2587439500
    ],
    [
        1295830,
        2589231250
    ],
    [
        1295820,
        2591000000
    ],
    [
        1295810,
        2593599500
    ],
    [
        1295800,
        2601260500
    ],
    [
        1295790,
        2591473750
    ],
    [
        1295780,
        2577845000
    ],
    [
        1295770,
        2575665000
    ],
    [
        1295760,
        2578090000
    ],
    [
        1295750,
        2592810500
    ],
    [
        1295740,
        2603673000
    ],
    [
        1295730,
        2607000000
    ],
    [
        1295720,
        2623000000
    ],
    [
        1295710,
        2620331000
    ],
    [
        1295700,
        2623000000
    ],
    [
        1295690,
        2620000000
    ],
    [
        1295680,
        2612900000
    ],
    [
        1295670,
        2598000000
    ],
    [
        1295660,
        2587000000
    ],
    [
        1295640,
        2585000000
    ],
    [
        1295630,
        2566000000
    ],
    [
        1295620,
        2584356000
    ],
    [
        1295610,
        2579050000
    ],
    [
        1295600,
        2566000000
    ],
    [
        1295590,
        2563410000
    ],
    [
        1295580,
        2565560000
    ],
    [
        1295570,
        2566000000
    ],
    [
        1295560,
        2569918000
    ],
    [
        1295550,
        2566000000
    ],
    [
        1295540,
        2568000000
    ],
    [
        1295530,
        2566000000
    ],
    [
        1295520,
        2597000000
    ],
    [
        1295510,
        2600574000
    ],
    [
        1295500,
        2612390000
    ],
    [
        1295490,
        2623150000
    ],
    [
        1295480,
        2629000000
    ],
    [
        1295460,
        2642000000
    ],
    [
        1295450,
        2670304000
    ],
    [
        1295430,
        2696000000
    ],
    [
        1295390,
        2692920000
    ],
    [
        1295370,
        2692000000
    ],
    [
        1295360,
        2684000000
    ],
    [
        1295350,
        2684295000
    ],
    [
        1295340,
        2692000000
    ],
    [
        1295330,
        2702471000
    ],
    [
        1295320,
        2718000000
    ],
    [
        1295310,
        2726257500
    ],
    [
        1295300,
        2721950000
    ],
    [
        1295290,
        2737728000
    ],
    [
        1295280,
        2733787500
    ],
    [
        1295270,
        2706000000
    ],
    [
        1295250,
        2710000000
    ],
    [
        1295230,
        2704410000
    ],
    [
        1295210,
        2680730000
    ],
    [
        1295200,
        2675000000
    ],
    [
        1295190,
        2672000000
    ],
    [
        1295180,
        2666000000
    ],
    [
        1295170,
        2672000000
    ],
    [
        1295160,
        2665420000
    ],
    [
        1295150,
        2629050000
    ],
    [
        1295140,
        2614000000
    ],
    [
        1295130,
        2608000000
    ],
    [
        1295120,
        2591960000
    ],
    [
        1295100,
        2578000000
    ],
    [
        1295070,
        2480000000
    ],
    [
        1295060,
        2449000000
    ],
    [
        1295040,
        2437000000
    ],
    [
        1295030,
        2447000000
    ],
    [
        1295020,
        2437554000
    ],
    [
        1295010,
        2428000000
    ],
    [
        1295000,
        2426537000
    ],
    [
        1294990,
        2425510000
    ],
    [
        1294980,
        2420528000
    ],
    [
        1294970,
        2415610000
    ],
    [
        1294960,
        2411150000
    ],
    [
        1294950,
        2413545000
    ],
    [
        1294940,
        2409640000
    ],
    [
        1294930,
        2419000000
    ],
    [
        1294910,
        2421280000
    ],
    [
        1294900,
        2423713000
    ],
    [
        1294890,
        2436647000
    ],
    [
        1294880,
        2441000000
    ],
    [
        1294870,
        2458780000
    ],
    [
        1294860,
        2457032500
    ],
    [
        1294850,
        2447960000
    ],
    [
        1294840,
        2433620000
    ],
    [
        1294830,
        2438250000
    ],
    [
        1294820,
        2448460000
    ],
    [
        1294810,
        2450000000
    ],
    [
        1294800,
        2451000000
    ],
    [
        1294790,
        2450000000
    ],
    [
        1294780,
        2450730000
    ],
    [
        1294760,
        2451000000
    ],
    [
        1294750,
        2452367500
    ],
    [
        1294740,
        2454000000
    ],
    [
        1294710,
        2449000000
    ],
    [
        1294700,
        2442159000
    ],
    [
        1294690,
        2431520000
    ],
    [
        1294670,
        2418140000
    ],
    [
        1294660,
        2425865000
    ],
    [
        1294630,
        2433580000
    ],
    [
        1294620,
        2444000000
    ],
    [
        1294600,
        2446000000
    ],
    [
        1294590,
        2445000000
    ],
    [
        1294580,
        2446111000
    ],
    [
        1294570,
        2448000000
    ],
    [
        1294560,
        2445000000
    ],
    [
        1294550,
        2446175000
    ],
    [
        1294540,
        2442536000
    ],
    [
        1294530,
        2436712500
    ],
    [
        1294520,
        2432000000
    ],
    [
        1294510,
        2437612000
    ],
    [
        1294500,
        2437950000
    ],
    [
        1294490,
        2436000000
    ],
    [
        1294480,
        2435647000
    ],
    [
        1294470,
        2429000000
    ],
    [
        1294450,
        2432000000
    ],
    [
        1294430,
        2447000000
    ],
    [
        1294420,
        2443000000
    ],
    [
        1294410,
        2444760000
    ],
    [
        1294390,
        2450565000
    ],
    [
        1294380,
        2457836000
    ],
    [
        1294370,
        2468050000
    ],
    [
        1294360,
        2474000000
    ],
    [
        1294350,
        2481380000
    ],
    [
        1294340,
        2486698000
    ],
    [
        1294330,
        2484781000
    ],
    [
        1294310,
        2484850000
    ],
    [
        1294300,
        2504930000
    ],
    [
        1294290,
        2449000000
    ],
    [
        1294280,
        2446000000
    ],
    [
        1294270,
        2445500000
    ],
    [
        1294260,
        2447985000
    ],
    [
        1294250,
        2453815000
    ],
    [
        1294230,
        2444000000
    ],
    [
        1294220,
        2439227500
    ],
    [
        1294210,
        2465060000
    ],
    [
        1294200,
        2468895000
    ],
    [
        1294180,
        2465000000
    ],
    [
        1294090,
        2453000000
    ],
    [
        1294080,
        2454140000
    ],
    [
        1294060,
        2460042500
    ],
    [
        1294050,
        2452942000
    ],
    [
        1294040,
        2454000000
    ],
    [
        1294030,
        2451000000
    ],
    [
        1294010,
        2446910000
    ],
    [
        1293990,
        2445000000
    ],
    [
        1293980,
        2443510000
    ],
    [
        1293970,
        2443000000
    ],
    [
        1293960,
        2440560000
    ],
    [
        1293950,
        2434000000
    ],
    [
        1293940,
        2434317500
    ],
    [
        1293920,
        2443720000
    ],
    [
        1293910,
        2437000000
    ],
    [
        1293890,
        2433000000
    ],
    [
        1293880,
        2433120000
    ],
    [
        1293870,
        2433000000
    ],
    [
        1293860,
        2432000000
    ],
    [
        1293850,
        2430028000
    ],
    [
        1293840,
        2426000000
    ],
    [
        1293830,
        2428666000
    ],
    [
        1293820,
        2430000000
    ],
    [
        1293810,
        2430580000
    ],
    [
        1293800,
        2432000000
    ],
    [
        1293790,
        2433000000
    ],
    [
        1293770,
        2431000000
    ],
    [
        1293760,
        2433000000
    ],
    [
        1293740,
        2431000000
    ],
    [
        1293730,
        2430660000
    ],
    [
        1293720,
        2430000000
    ],
    [
        1293710,
        2431000000
    ],
    [
        1293700,
        2428110000
    ],
    [
        1293690,
        2421330000
    ],
    [
        1293680,
        2431000000
    ],
    [
        1293670,
        2433460000
    ],
    [
        1293650,
        2437415000
    ],
    [
        1293640,
        2441000000
    ],
    [
        1293630,
        2437510000
    ],
    [
        1293600,
        2433000000
    ],
    [
        1293590,
        2436930000
    ],
    [
        1293580,
        2439530000
    ],
    [
        1293570,
        2442000000
    ],
    [
        1293560,
        2449433000
    ],
    [
        1293550,
        2451187500
    ],
    [
        1293540,
        2457000000
    ],
    [
        1293530,
        2445370000
    ],
    [
        1293510,
        2442000000
    ],
    [
        1293500,
        2439240000
    ],
    [
        1293490,
        2433242500
    ],
    [
        1293480,
        2431007500
    ],
    [
        1293470,
        2441000000
    ],
    [
        1293460,
        2442000000
    ],
    [
        1293450,
        2441000000
    ],
    [
        1293440,
        2442000000
    ],
    [
        1293430,
        2444000000
    ],
    [
        1293420,
        2443180000
    ],
    [
        1293400,
        2421000000
    ],
    [
        1293390,
        2419070000
    ],
    [
        1293370,
        2417000000
    ],
    [
        1293360,
        2401000000
    ],
    [
        1293350,
        2396905000
    ],
    [
        1293330,
        2398265000
    ],
    [
        1293320,
        2410000000
    ],
    [
        1293310,
        2427000000
    ],
    [
        1293300,
        2432000000
    ],
    [
        1293290,
        2433000000
    ],
    [
        1293280,
        2437966000
    ],
    [
        1293270,
        2443000000
    ],
    [
        1293260,
        2444160000
    ],
    [
        1293240,
        2460888000
    ],
    [
        1293180,
        2373000000
    ],
    [
        1293170,
        2375164000
    ],
    [
        1293160,
        2382050000
    ],
    [
        1293150,
        2383560000
    ],
    [
        1293140,
        2390430000
    ],
    [
        1293130,
        2391000000
    ],
    [
        1293120,
        2390430000
    ],
    [
        1293100,
        2386000000
    ],
    [
        1293090,
        2389196000
    ],
    [
        1293080,
        2393600000
    ],
    [
        1293070,
        2396140000
    ],
    [
        1293060,
        2398000000
    ],
    [
        1293050,
        2397000000
    ],
    [
        1293040,
        2397150000
    ],
    [
        1293030,
        2395247500
    ],
    [
        1293020,
        2393120000
    ],
    [
        1292990,
        2391000000
    ],
    [
        1292970,
        2390000000
    ],
    [
        1292950,
        2377000000
    ],
    [
        1292940,
        2372000000
    ],
    [
        1292920,
        2370000000
    ],
    [
        1292910,
        2367507500
    ],
    [
        1292900,
        2373050000
    ],
    [
        1292890,
        2374000000
    ],
    [
        1292880,
        2367167000
    ],
    [
        1292870,
        2365270000
    ],
    [
        1292860,
        2372000000
    ],
    [
        1292840,
        2373000000
    ],
    [
        1292830,
        2373090000
    ],
    [
        1292770,
        2378000000
    ],
    [
        1292750,
        2353000000
    ],
    [
        1292730,
        2351000000
    ],
    [
        1292720,
        2348720000
    ],
    [
        1292700,
        2323955000
    ],
    [
        1292660,
        2307500000
    ],
    [
        1292650,
        2302385000
    ],
    [
        1292640,
        2301000000
    ],
    [
        1292630,
        2300000000
    ],
    [
        1292620,
        2292490000
    ],
    [
        1292610,
        2288669000
    ],
    [
        1292600,
        2277117500
    ],
    [
        1292590,
        2288088000
    ],
    [
        1292560,
        2292000000
    ],
    [
        1292540,
        2307870000
    ],
    [
        1292530,
        2310500000
    ],
    [
        1292520,
        2312082000
    ],
    [
        1292510,
        2319231000
    ],
    [
        1292490,
        2325410000
    ],
    [
        1292480,
        2314890000
    ],
    [
        1292460,
        2312020000
    ],
    [
        1292450,
        2316000000
    ],
    [
        1292440,
        2316598750
    ],
    [
        1292430,
        2320000000
    ],
    [
        1292420,
        2320233500
    ],
    [
        1292410,
        2336265000
    ],
    [
        1292390,
        2337757500
    ],
    [
        1292360,
        2336000000
    ],
    [
        1292350,
        2349120500
    ],
    [
        1292340,
        2349500000
    ],
    [
        1292330,
        2351401000
    ],
    [
        1292320,
        2350453750
    ],
    [
        1292310,
        2350946000
    ],
    [
        1292300,
        2349000000
    ],
    [
        1292290,
        2348905000
    ],
    [
        1292280,
        2328270000
    ],
    [
        1292260,
        2327124000
    ],
    [
        1292250,
        2323742000
    ],
    [
        1292240,
        2320261500
    ],
    [
        1292230,
        2319000000
    ],
    [
        1292220,
        2317840000
    ],
    [
        1292210,
        2292640000
    ],
    [
        1292200,
        2284566250
    ],
    [
        1292190,
        2284491500
    ],
    [
        1292160,
        2284300000
    ],
    [
        1292150,
        2286001250
    ],
    [
        1292140,
        2287883750
    ],
    [
        1292130,
        2289435000
    ],
    [
        1292120,
        2288093750
    ],
    [
        1292110,
        2289935000
    ],
    [
        1292100,
        2285224000
    ],
    [
        1292090,
        2285000000
    ],
    [
        1292080,
        2270460000
    ],
    [
        1292070,
        2269471250
    ],
    [
        1292060,
        2264000000
    ],
    [
        1292050,
        2257965000
    ],
    [
        1292040,
        2255053750
    ],
    [
        1292020,
        2247000000
    ],
    [
        1292010,
        2252620000
    ],
    [
        1292000,
        2252119000
    ],
    [
        1291990,
        2250000000
    ],
    [
        1291980,
        2251469000
    ],
    [
        1291970,
        2250018750
    ],
    [
        1291960,
        2250000000
    ],
    [
        1291950,
        2262626250
    ],
    [
        1291930,
        2355590000
    ],
    [
        1291920,
        2372540000
    ],
    [
        1291910,
        2381194000
    ],
    [
        1291890,
        2377395000
    ],
    [
        1291880,
        2409095000
    ],
    [
        1291870,
        2414595000
    ],
    [
        1291860,
        2432458500
    ],
    [
        1291850,
        2435958500
    ],
    [
        1291840,
        2436000000
    ],
    [
        1291830,
        2436180000
    ],
    [
        1291820,
        2427210500
    ],
    [
        1291810,
        2425620500
    ],
    [
        1291800,
        2423500000
    ],
    [
        1291790,
        2421975500
    ],
    [
        1291780,
        2413406250
    ],
    [
        1291770,
        2410000000
    ],
    [
        1291760,
        2415005000
    ],
    [
        1291750,
        2415698750
    ],
    [
        1291740,
        2415342500
    ],
    [
        1291730,
        2422055000
    ],
    [
        1291720,
        2424000000
    ],
    [
        1291710,
        2429248750
    ],
    [
        1291700,
        2431890000
    ],
    [
        1291690,
        2433324000
    ],
    [
        1291680,
        2432390000
    ],
    [
        1291670,
        2435890000
    ],
    [
        1291650,
        2437000000
    ],
    [
        1291640,
        2436648750
    ],
    [
        1291630,
        2437430000
    ],
    [
        1291620,
        2434890000
    ],
    [
        1291600,
        2435000000
    ],
    [
        1291590,
        2434087000
    ],
    [
        1291580,
        2432295000
    ],
    [
        1291570,
        2428990000
    ],
    [
        1291550,
        2419121250
    ],
    [
        1291490,
        2407630000
    ],
    [
        1291480,
        2401925000
    ],
    [
        1291470,
        2400040000
    ],
    [
        1291460,
        2401647000
    ],
    [
        1291440,
        2403645000
    ],
    [
        1291410,
        2405210000
    ],
    [
        1291400,
        2407022500
    ],
    [
        1291380,
        2399865000
    ],
    [
        1291370,
        2393007500
    ],
    [
        1291360,
        2392055000
    ],
    [
        1291340,
        2415500000
    ],
    [
        1291330,
        2416555000
    ],
    [
        1291310,
        2417522500
    ],
    [
        1291300,
        2425500000
    ],
    [
        1291280,
        2428500000
    ],
    [
        1291240,
        2429437500
    ],
    [
        1291220,
        2433890000
    ],
    [
        1291210,
        2426850000
    ],
    [
        1291200,
        2410436250
    ],
    [
        1291190,
        2388500000
    ],
    [
        1291180,
        2484500000
    ],
    [
        1291160,
        2492000000
    ],
    [
        1291150,
        2494777500
    ],
    [
        1291130,
        2505625000
    ],
    [
        1291120,
        2517700000
    ],
    [
        1291110,
        2521048500
    ],
    [
        1291100,
        2534651500
    ],
    [
        1291090,
        2535637000
    ],
    [
        1291080,
        2535735000
    ],
    [
        1291070,
        2522830000
    ],
    [
        1291060,
        2521035000
    ],
    [
        1291050,
        2512257500
    ],
    [
        1291040,
        2529000000
    ],
    [
        1291010,
        2543000000
    ],
    [
        1291000,
        2532517000
    ],
    [
        1290990,
        2534000000
    ],
    [
        1290980,
        2545120000
    ],
    [
        1290970,
        2548533000
    ],
    [
        1290960,
        2556320000
    ],
    [
        1290950,
        2558000000
    ],
    [
        1290930,
        2556105000
    ],
    [
        1290920,
        2557460000
    ],
    [
        1290910,
        2558200000
    ],
    [
        1290900,
        2562724000
    ],
    [
        1290890,
        2568397000
    ],
    [
        1290880,
        2569000000
    ],
    [
        1290870,
        2567621000
    ],
    [
        1290860,
        2562330000
    ],
    [
        1290850,
        2563995000
    ],
    [
        1290840,
        2578000000
    ],
    [
        1290830,
        2580000000
    ],
    [
        1290820,
        2577580000
    ],
    [
        1290800,
        2568230000
    ],
    [
        1290790,
        2560000000
    ],
    [
        1290780,
        2559377500
    ],
    [
        1290770,
        2559000000
    ],
    [
        1290760,
        2558200000
    ],
    [
        1290750,
        2558000000
    ],
    [
        1290740,
        2549260000
    ],
    [
        1290730,
        2551375000
    ],
    [
        1290720,
        2545830000
    ],
    [
        1290710,
        2537930000
    ],
    [
        1290700,
        2526729000
    ],
    [
        1290690,
        2526000000
    ],
    [
        1290670,
        2526499000
    ],
    [
        1290660,
        2535897500
    ],
    [
        1290650,
        2540160000
    ],
    [
        1290640,
        2543370000
    ],
    [
        1290630,
        2546000000
    ],
    [
        1290610,
        2543360000
    ],
    [
        1290600,
        2541565000
    ],
    [
        1290590,
        2540570000
    ],
    [
        1290580,
        2541994000
    ],
    [
        1290570,
        2535000000
    ],
    [
        1290560,
        2540397000
    ],
    [
        1290550,
        2542000000
    ],
    [
        1290540,
        2542361000
    ],
    [
        1290520,
        2549540000
    ],
    [
        1290460,
        2544000000
    ],
    [
        1290440,
        2533000000
    ],
    [
        1290390,
        2523000000
    ],
    [
        1290380,
        2526000000
    ],
    [
        1290370,
        2535130000
    ],
    [
        1290360,
        2542580000
    ],
    [
        1290340,
        2502250000
    ],
    [
        1290310,
        2499000000
    ],
    [
        1290300,
        2498000000
    ],
    [
        1290270,
        2480840000
    ],
    [
        1290260,
        2467190000
    ],
    [
        1290250,
        2463820000
    ],
    [
        1290240,
        2460695000
    ],
    [
        1290220,
        2463820000
    ],
    [
        1290210,
        2467190000
    ],
    [
        1290200,
        2460510000
    ],
    [
        1290190,
        2458000000
    ],
    [
        1290180,
        2453920000
    ],
    [
        1290170,
        2451000000
    ],
    [
        1290160,
        2443190000
    ],
    [
        1290150,
        2438690000
    ],
    [
        1290140,
        2435000000
    ],
    [
        1290090,
        2427112500
    ],
    [
        1290080,
        2392910000
    ],
    [
        1290070,
        2409480000
    ],
    [
        1290060,
        2438000000
    ],
    [
        1290050,
        2440750000
    ],
    [
        1290040,
        2449000000
    ],
    [
        1290030,
        2451000000
    ],
    [
        1290010,
        2489000000
    ],
    [
        1290000,
        2516000000
    ],
    [
        1289990,
        2540254000
    ],
    [
        1289980,
        2532490000
    ],
    [
        1289970,
        2523156000
    ],
    [
        1289950,
        2551900000
    ],
    [
        1289940,
        2549784000
    ],
    [
        1289930,
        2551360000
    ],
    [
        1289920,
        2562330000
    ],
    [
        1289910,
        2563000000
    ],
    [
        1289890,
        2562330000
    ],
    [
        1289880,
        2560357000
    ],
    [
        1289870,
        2548620000
    ],
    [
        1289840,
        2544000000
    ],
    [
        1289830,
        2542000000
    ],
    [
        1289820,
        2542537500
    ],
    [
        1289810,
        2545070000
    ],
    [
        1289800,
        2563553000
    ],
    [
        1289790,
        2580000000
    ],
    [
        1289780,
        2579498000
    ],
    [
        1289770,
        2574930000
    ],
    [
        1289730,
        2496750000
    ],
    [
        1289700,
        2493000000
    ],
    [
        1289680,
        2439000000
    ],
    [
        1289670,
        2419000000
    ],
    [
        1289660,
        2418760000
    ],
    [
        1289650,
        2427957000
    ],
    [
        1289640,
        2432000000
    ],
    [
        1289620,
        2419688000
    ],
    [
        1289610,
        2417790000
    ],
    [
        1289600,
        2409000000
    ],
    [
        1289590,
        2413260000
    ],
    [
        1289580,
        2404787500
    ],
    [
        1289550,
        2402000000
    ],
    [
        1289540,
        2407550000
    ],
    [
        1289530,
        2417000000
    ],
    [
        1289520,
        2432000000
    ],
    [
        1289510,
        2436860000
    ],
    [
        1289500,
        2436905000
    ],
    [
        1289480,
        2436000000
    ],
    [
        1289470,
        2428000000
    ],
    [
        1289460,
        2426680000
    ],
    [
        1289450,
        2430313000
    ],
    [
        1289440,
        2439029000
    ],
    [
        1289430,
        2441000000
    ],
    [
        1289370,
        2439000000
    ],
    [
        1289360,
        2424000000
    ],
    [
        1289340,
        2415340000
    ],
    [
        1289330,
        2411000000
    ],
    [
        1289320,
        2408070000
    ],
    [
        1289300,
        2405000000
    ],
    [
        1289290,
        2415340000
    ],
    [
        1289230,
        2416000000
    ],
    [
        1289220,
        2403920000
    ],
    [
        1289210,
        2400000000
    ],
    [
        1289200,
        2395000000
    ],
    [
        1289180,
        2398000000
    ],
    [
        1289170,
        2400000000
    ],
    [
        1289130,
        2401000000
    ],
    [
        1289120,
        2401070000
    ],
    [
        1289100,
        2401000000
    ],
    [
        1289050,
        2385000000
    ],
    [
        1289030,
        2382100000
    ],
    [
        1289020,
        2364500000
    ],
    [
        1288990,
        2363000000
    ],
    [
        1288980,
        2362000000
    ],
    [
        1288960,
        2356080000
    ],
    [
        1288940,
        2360000000
    ],
    [
        1288930,
        2360989000
    ],
    [
        1288920,
        2370067500
    ],
    [
        1288890,
        2362000000
    ],
    [
        1288880,
        2357257500
    ],
    [
        1288870,
        2365000000
    ],
    [
        1288850,
        2366000000
    ],
    [
        1288830,
        2360000000
    ],
    [
        1288820,
        2358709000
    ],
    [
        1288810,
        2349000000
    ],
    [
        1288800,
        2345000000
    ],
    [
        1288790,
        2341000000
    ],
    [
        1288780,
        2339648000
    ],
    [
        1288770,
        2335013000
    ],
    [
        1288760,
        2328838000
    ],
    [
        1288740,
        2341780000
    ],
    [
        1288730,
        2341919000
    ],
    [
        1288710,
        2365000000
    ],
    [
        1288690,
        2363000000
    ],
    [
        1288680,
        2365772500
    ],
    [
        1288670,
        2361310000
    ],
    [
        1288660,
        2384160000
    ],
    [
        1288650,
        2390058000
    ],
    [
        1288640,
        2394000000
    ],
    [
        1288620,
        2391000000
    ],
    [
        1288590,
        2376990000
    ],
    [
        1288440,
        2369500000
    ],
    [
        1288410,
        2371000000
    ],
    [
        1288340,
        2369500000
    ],
    [
        1288330,
        2368400000
    ],
    [
        1288320,
        2368000000
    ],
    [
        1288290,
        2362000000
    ],
    [
        1288280,
        2363227500
    ],
    [
        1288260,
        2362000000
    ],
    [
        1288250,
        2363207500
    ],
    [
        1288240,
        2363319000
    ],
    [
        1288220,
        2359456250
    ],
    [
        1288200,
        2364000000
    ],
    [
        1288190,
        2372487500
    ],
    [
        1288180,
        2372905000
    ],
    [
        1288170,
        2369862500
    ],
    [
        1288160,
        2369760000
    ],
    [
        1288150,
        2354055000
    ],
    [
        1288140,
        2362940000
    ],
    [
        1288130,
        2371500000
    ],
    [
        1288120,
        2374321000
    ],
    [
        1288100,
        2417500000
    ],
    [
        1288090,
        2427030000
    ],
    [
        1288080,
        2435571500
    ],
    [
        1288070,
        2436432500
    ],
    [
        1288060,
        2439195000
    ],
    [
        1288050,
        2441985000
    ],
    [
        1288040,
        2442063000
    ],
    [
        1288030,
        2442156000
    ],
    [
        1288020,
        2442000000
    ],
    [
        1288010,
        2440728750
    ],
    [
        1288000,
        2441019000
    ],
    [
        1287990,
        2442823500
    ],
    [
        1287980,
        2442000000
    ],
    [
        1287970,
        2441655000
    ],
    [
        1287850,
        2442000000
    ],
    [
        1287840,
        2430000000
    ],
    [
        1287830,
        2426645000
    ],
    [
        1287820,
        2426000000
    ],
    [
        1287810,
        2423000000
    ],
    [
        1287800,
        2423700000
    ],
    [
        1287790,
        2424665000
    ],
    [
        1287780,
        2426580000
    ],
    [
        1287770,
        2425080000
    ],
    [
        1287760,
        2425295000
    ],
    [
        1287740,
        2425000000
    ],
    [
        1287730,
        2424000000
    ],
    [
        1287710,
        2418336250
    ],
    [
        1287700,
        2425000000
    ],
    [
        1287690,
        2426435000
    ],
    [
        1287680,
        2425535000
    ],
    [
        1287650,
        2427460000
    ],
    [
        1287640,
        2426435000
    ],
    [
        1287630,
        2431059750
    ],
    [
        1287620,
        2433000000
    ],
    [
        1287610,
        2428500000
    ],
    [
        1287600,
        2424350000
    ],
    [
        1287590,
        2415610000
    ],
    [
        1287570,
        2415000000
    ],
    [
        1287550,
        2435507500
    ],
    [
        1287530,
        2436000000
    ],
    [
        1287510,
        2436500000
    ],
    [
        1287500,
        2437247000
    ],
    [
        1287490,
        2443520000
    ],
    [
        1287470,
        2448159500
    ],
    [
        1287460,
        2444040000
    ],
    [
        1287450,
        2442647000
    ],
    [
        1287440,
        2442475000
    ],
    [
        1287430,
        2440455000
    ],
    [
        1287420,
        2433109000
    ],
    [
        1287400,
        2427472500
    ],
    [
        1287390,
        2426560000
    ],
    [
        1287380,
        2436181500
    ],
    [
        1287360,
        2426560000
    ],
    [
        1287230,
        2424331250
    ],
    [
        1287220,
        2425654500
    ],
    [
        1287210,
        2422490500
    ],
    [
        1287200,
        2423400500
    ],
    [
        1287170,
        2419710000
    ],
    [
        1287120,
        2408790000
    ],
    [
        1287060,
        2407000000
    ],
    [
        1287040,
        2409438750
    ],
    [
        1287020,
        2426560000
    ],
    [
        1286990,
        2429560000
    ],
    [
        1286970,
        2431175000
    ],
    [
        1286950,
        2429465000
    ],
    [
        1286920,
        2426560000
    ],
    [
        1286900,
        2474925000
    ],
    [
        1286890,
        2504500000
    ],
    [
        1286880,
        2509340000
    ],
    [
        1286870,
        2514035000
    ],
    [
        1286860,
        2513115000
    ],
    [
        1286850,
        2514720000
    ],
    [
        1286840,
        2514835000
    ],
    [
        1286830,
        2516446250
    ],
    [
        1286820,
        2516581500
    ],
    [
        1286810,
        2519079000
    ],
    [
        1286800,
        2526000000
    ],
    [
        1286790,
        2526460000
    ],
    [
        1286780,
        2538692000
    ],
    [
        1286770,
        2539885000
    ],
    [
        1286690,
        2526525500
    ],
    [
        1286680,
        2529230000
    ],
    [
        1286670,
        2541000000
    ],
    [
        1286660,
        2540201250
    ],
    [
        1286650,
        2503455000
    ],
    [
        1286640,
        2488091000
    ],
    [
        1286630,
        2487000000
    ],
    [
        1286620,
        2480011500
    ],
    [
        1286610,
        2486036000
    ],
    [
        1286600,
        2485980000
    ],
    [
        1286590,
        2483490000
    ],
    [
        1286580,
        2482630000
    ],
    [
        1286570,
        2480430000
    ],
    [
        1286560,
        2484410000
    ],
    [
        1286550,
        2486990000
    ],
    [
        1286540,
        2483000000
    ],
    [
        1286530,
        2487031000
    ],
    [
        1286520,
        2490230000
    ],
    [
        1286510,
        2495030000
    ],
    [
        1286500,
        2503254500
    ],
    [
        1286490,
        2508900000
    ],
    [
        1286480,
        2503000000
    ],
    [
        1286470,
        2503093750
    ],
    [
        1286460,
        2497740000
    ],
    [
        1286450,
        2495201250
    ],
    [
        1286440,
        2495995000
    ],
    [
        1286420,
        2503000000
    ],
    [
        1286400,
        2514000000
    ],
    [
        1286390,
        2513280000
    ],
    [
        1286380,
        2513484000
    ],
    [
        1286360,
        2506000000
    ],
    [
        1286350,
        2507126000
    ],
    [
        1286340,
        2506898000
    ],
    [
        1286330,
        2506952000
    ],
    [
        1286320,
        2510366000
    ],
    [
        1286300,
        2516000000
    ],
    [
        1286290,
        2516670000
    ],
    [
        1286270,
        2516000000
    ],
    [
        1286250,
        2504265000
    ],
    [
        1286240,
        2501000000
    ],
    [
        1286220,
        2498720000
    ],
    [
        1286210,
        2500300000
    ],
    [
        1286190,
        2489000000
    ],
    [
        1286140,
        2486000000
    ],
    [
        1286120,
        2483000000
    ],
    [
        1286100,
        2479000000
    ],
    [
        1286090,
        2475027000
    ],
    [
        1286070,
        2465060000
    ],
    [
        1286040,
        2459000000
    ],
    [
        1286030,
        2467960000
    ],
    [
        1286020,
        2465544000
    ],
    [
        1285980,
        2465060000
    ],
    [
        1285970,
        2464920000
    ],
    [
        1285960,
        2458957000
    ],
    [
        1285950,
        2466900000
    ],
    [
        1285940,
        2467458000
    ],
    [
        1285930,
        2455712500
    ],
    [
        1285920,
        2451000000
    ],
    [
        1285900,
        2483000000
    ],
    [
        1285870,
        2463000000
    ],
    [
        1285860,
        2461000000
    ],
    [
        1285850,
        2460000000
    ],
    [
        1285830,
        2457000000
    ],
    [
        1285810,
        2454667500
    ],
    [
        1285800,
        2459982000
    ],
    [
        1285790,
        2459000000
    ],
    [
        1285770,
        2462000000
    ],
    [
        1285740,
        2453000000
    ],
    [
        1285730,
        2451965000
    ],
    [
        1285700,
        2453000000
    ],
    [
        1285680,
        2433160000
    ],
    [
        1285660,
        2431610000
    ],
    [
        1285630,
        2430970000
    ],
    [
        1285620,
        2436537500
    ],
    [
        1285610,
        2436080000
    ],
    [
        1285600,
        2443500000
    ],
    [
        1285590,
        2443000000
    ],
    [
        1285580,
        2442725000
    ],
    [
        1285570,
        2442690000
    ],
    [
        1285560,
        2443000000
    ],
    [
        1285550,
        2454692500
    ],
    [
        1285540,
        2456451000
    ],
    [
        1285530,
        2455000000
    ],
    [
        1285520,
        2450250000
    ],
    [
        1285510,
        2452324250
    ],
    [
        1285500,
        2457000000
    ],
    [
        1285490,
        2456208500
    ],
    [
        1285480,
        2448420000
    ],
    [
        1285470,
        2440500000
    ],
    [
        1285460,
        2434070500
    ],
    [
        1285450,
        2432580000
    ],
    [
        1285440,
        2430782000
    ],
    [
        1285430,
        2431580000
    ],
    [
        1285420,
        2439000000
    ],
    [
        1285410,
        2440000000
    ],
    [
        1285400,
        2437407000
    ],
    [
        1285390,
        2433802500
    ],
    [
        1285380,
        2436580000
    ],
    [
        1285370,
        2441000000
    ],
    [
        1285360,
        2441500000
    ],
    [
        1285290,
        2402000000
    ],
    [
        1285280,
        2401230000
    ],
    [
        1285260,
        2389105000
    ],
    [
        1285230,
        2403000000
    ],
    [
        1285210,
        2396930000
    ],
    [
        1285190,
        2394960000
    ],
    [
        1285170,
        2397206000
    ],
    [
        1285140,
        2398000000
    ],
    [
        1285130,
        2399000000
    ],
    [
        1285100,
        2398000000
    ],
    [
        1285040,
        2404380000
    ],
    [
        1285020,
        2400500000
    ],
    [
        1285010,
        2399703500
    ],
    [
        1285000,
        2397500000
    ],
    [
        1284990,
        2397813500
    ],
    [
        1284980,
        2398073500
    ],
    [
        1284970,
        2397573500
    ],
    [
        1284960,
        2397280000
    ],
    [
        1284950,
        2394780000
    ],
    [
        1284940,
        2394773000
    ],
    [
        1284900,
        2393000000
    ],
    [
        1284890,
        2397280000
    ],
    [
        1284880,
        2397366500
    ],
    [
        1284870,
        2397550500
    ],
    [
        1284860,
        2395280000
    ],
    [
        1284850,
        2394000000
    ],
    [
        1284840,
        2393952000
    ],
    [
        1284830,
        2386930000
    ],
    [
        1284820,
        2384000000
    ],
    [
        1284810,
        2380928750
    ],
    [
        1284800,
        2372559000
    ],
    [
        1284790,
        2372947500
    ],
    [
        1284780,
        2377500000
    ],
    [
        1284770,
        2390650000
    ],
    [
        1284760,
        2398665000
    ],
    [
        1284750,
        2401187000
    ],
    [
        1284740,
        2404665000
    ],
    [
        1284730,
        2414970000
    ],
    [
        1284720,
        2424251250
    ],
    [
        1284710,
        2425000000
    ],
    [
        1284700,
        2429500000
    ],
    [
        1284690,
        2430589000
    ],
    [
        1284650,
        2431000000
    ],
    [
        1284640,
        2426785000
    ],
    [
        1284630,
        2426285000
    ],
    [
        1284620,
        2426024000
    ],
    [
        1284610,
        2424786250
    ],
    [
        1284600,
        2425500000
    ],
    [
        1284590,
        2425557000
    ],
    [
        1284580,
        2426070000
    ],
    [
        1284560,
        2429000000
    ],
    [
        1284550,
        2428890000
    ],
    [
        1284540,
        2424591250
    ],
    [
        1284520,
        2429000000
    ],
    [
        1284510,
        2435390000
    ],
    [
        1284500,
        2435827500
    ],
    [
        1284490,
        2441500000
    ],
    [
        1284480,
        2443263500
    ],
    [
        1284470,
        2443769500
    ],
    [
        1284460,
        2442125000
    ],
    [
        1284450,
        2445348250
    ],
    [
        1284440,
        2443676250
    ],
    [
        1284430,
        2441000000
    ],
    [
        1284420,
        2439204000
    ],
    [
        1284410,
        2438528750
    ],
    [
        1284400,
        2441960000
    ],
    [
        1284390,
        2458827000
    ],
    [
        1284380,
        2421500000
    ],
    [
        1284370,
        2416450000
    ],
    [
        1284360,
        2412713750
    ],
    [
        1284350,
        2401000000
    ],
    [
        1284340,
        2393340000
    ],
    [
        1284330,
        2390000000
    ],
    [
        1284320,
        2387000000
    ],
    [
        1284310,
        2384085000
    ],
    [
        1284300,
        2385085000
    ],
    [
        1284280,
        2384665000
    ],
    [
        1284270,
        2385000000
    ],
    [
        1284250,
        2384000000
    ],
    [
        1284240,
        2394500000
    ],
    [
        1284230,
        2396340000
    ],
    [
        1284220,
        2396519000
    ],
    [
        1284210,
        2397205000
    ],
    [
        1284200,
        2397285000
    ],
    [
        1284190,
        2396000000
    ],
    [
        1284180,
        2397270000
    ],
    [
        1284170,
        2404000000
    ],
    [
        1284160,
        2409577500
    ],
    [
        1284150,
        2408899500
    ],
    [
        1284140,
        2406480000
    ],
    [
        1284130,
        2404046500
    ],
    [
        1284120,
        2404621500
    ],
    [
        1284110,
        2405250250
    ],
    [
        1284100,
        2406860500
    ],
    [
        1284090,
        2418148750
    ],
    [
        1284080,
        2419479500
    ],
    [
        1284070,
        2415500000
    ],
    [
        1284060,
        2411415000
    ],
    [
        1284020,
        2404305000
    ],
    [
        1284010,
        2402586250
    ],
    [
        1283990,
        2403050000
    ],
    [
        1283980,
        2395890000
    ],
    [
        1283900,
        2391000000
    ],
    [
        1283880,
        2389140000
    ],
    [
        1283870,
        2383000000
    ],
    [
        1283860,
        2380500000
    ],
    [
        1283850,
        2381000000
    ],
    [
        1283840,
        2379500000
    ],
    [
        1283830,
        2379160000
    ],
    [
        1283810,
        2378580000
    ],
    [
        1283800,
        2371000000
    ],
    [
        1283790,
        2369977000
    ],
    [
        1283780,
        2367657500
    ],
    [
        1283770,
        2370500000
    ],
    [
        1283760,
        2371522500
    ],
    [
        1283750,
        2372690250
    ],
    [
        1283740,
        2373857500
    ],
    [
        1283730,
        2377620000
    ],
    [
        1283720,
        2378636250
    ],
    [
        1283710,
        2375501250
    ],
    [
        1283700,
        2372270000
    ],
    [
        1283680,
        2372000000
    ],
    [
        1283670,
        2374010000
    ],
    [
        1283660,
        2375010000
    ],
    [
        1283650,
        2378092500
    ],
    [
        1283640,
        2380000000
    ],
    [
        1283630,
        2380388750
    ],
    [
        1283620,
        2381192500
    ],
    [
        1283610,
        2378308750
    ],
    [
        1283600,
        2376277500
    ],
    [
        1283590,
        2378720000
    ],
    [
        1283580,
        2381500000
    ],
    [
        1283570,
        2388385000
    ],
    [
        1283550,
        2388885000
    ],
    [
        1283530,
        2388000000
    ],
    [
        1283520,
        2389000000
    ],
    [
        1283510,
        2379740000
    ],
    [
        1283500,
        2379380000
    ],
    [
        1283490,
        2377585000
    ],
    [
        1283470,
        2365870000
    ],
    [
        1283460,
        2361000000
    ],
    [
        1283450,
        2357941000
    ],
    [
        1283440,
        2358462500
    ],
    [
        1283420,
        2364000000
    ],
    [
        1283410,
        2362000000
    ],
    [
        1283400,
        2360630000
    ],
    [
        1283370,
        2358000000
    ],
    [
        1283360,
        2353650000
    ],
    [
        1283350,
        2352427500
    ],
    [
        1283340,
        2353000000
    ],
    [
        1283330,
        2354000000
    ],
    [
        1283320,
        2358000000
    ],
    [
        1283310,
        2356722500
    ],
    [
        1283290,
        2353000000
    ],
    [
        1283280,
        2352124000
    ],
    [
        1283270,
        2352072500
    ],
    [
        1283260,
        2353790000
    ],
    [
        1283250,
        2360318000
    ],
    [
        1283220,
        2364000000
    ],
    [
        1283210,
        2358557500
    ],
    [
        1283190,
        2369280000
    ],
    [
        1283150,
        2377000000
    ],
    [
        1283140,
        2369280000
    ],
    [
        1283120,
        2367726000
    ],
    [
        1283100,
        2367000000
    ],
    [
        1283090,
        2359000000
    ],
    [
        1283080,
        2363000000
    ],
    [
        1283050,
        2365565000
    ],
    [
        1283040,
        2363450000
    ],
    [
        1283020,
        2367000000
    ],
    [
        1282990,
        2370000000
    ],
    [
        1282980,
        2370030000
    ],
    [
        1282950,
        2371300000
    ],
    [
        1282930,
        2375000000
    ],
    [
        1282900,
        2370030000
    ],
    [
        1282880,
        2368000000
    ],
    [
        1282830,
        2367000000
    ],
    [
        1282810,
        2368000000
    ],
    [
        1282800,
        2365590000
    ],
    [
        1282780,
        2367000000
    ],
    [
        1282770,
        2365650000
    ],
    [
        1282760,
        2356000000
    ],
    [
        1282750,
        2354670000
    ],
    [
        1282730,
        2345000000
    ],
    [
        1282720,
        2346560000
    ],
    [
        1282700,
        2339000000
    ],
    [
        1282690,
        2337000000
    ],
    [
        1282680,
        2332050000
    ],
    [
        1282660,
        2326000000
    ],
    [
        1282650,
        2319119000
    ],
    [
        1282640,
        2319845000
    ],
    [
        1282630,
        2318000000
    ],
    [
        1282620,
        2315110000
    ],
    [
        1282600,
        2309000000
    ],
    [
        1282590,
        2314506000
    ],
    [
        1282580,
        2317805000
    ],
    [
        1282570,
        2321557500
    ],
    [
        1282560,
        2322230000
    ],
    [
        1282530,
        2324000000
    ],
    [
        1282510,
        2325810000
    ],
    [
        1282490,
        2326301000
    ],
    [
        1282480,
        2325000000
    ],
    [
        1282470,
        2325057500
    ],
    [
        1282460,
        2327000000
    ],
    [
        1282450,
        2334391000
    ],
    [
        1282440,
        2337087000
    ],
    [
        1282430,
        2335000000
    ],
    [
        1282420,
        2333000000
    ],
    [
        1282410,
        2329145000
    ],
    [
        1282400,
        2331000000
    ],
    [
        1282390,
        2328000000
    ],
    [
        1282380,
        2327000000
    ],
    [
        1282370,
        2328000000
    ],
    [
        1282360,
        2323327500
    ],
    [
        1282350,
        2324000000
    ],
    [
        1282340,
        2326080000
    ],
    [
        1282330,
        2327000000
    ],
    [
        1282320,
        2334000000
    ],
    [
        1282310,
        2336040000
    ],
    [
        1282300,
        2337120000
    ],
    [
        1282290,
        2337157500
    ],
    [
        1282280,
        2344940000
    ],
    [
        1282270,
        2347472500
    ],
    [
        1282260,
        2348000000
    ],
    [
        1282250,
        2348562500
    ],
    [
        1282240,
        2347000000
    ],
    [
        1282230,
        2350550000
    ],
    [
        1282220,
        2354917500
    ],
    [
        1282200,
        2358367500
    ],
    [
        1282190,
        2351157000
    ],
    [
        1282150,
        2347000000
    ],
    [
        1282110,
        2349961250
    ],
    [
        1282100,
        2350869750
    ],
    [
        1282080,
        2351928750
    ],
    [
        1282070,
        2350002750
    ],
    [
        1282060,
        2359900000
    ],
    [
        1282040,
        2518850000
    ],
    [
        1281860,
        2522000000
    ],
    [
        1281540,
        2488400000
    ],
    [
        1281530,
        2496488750
    ],
    [
        1281510,
        2494778750
    ],
    [
        1281500,
        2499579000
    ],
    [
        1281480,
        2504399000
    ],
    [
        1281470,
        2502853000
    ],
    [
        1281450,
        2500038500
    ],
    [
        1281430,
        2499598750
    ],
    [
        1281340,
        2516440000
    ],
    [
        1281330,
        2516479500
    ],
    [
        1281300,
        2526880000
    ],
    [
        1281270,
        2530000000
    ],
    [
        1281260,
        2541141000
    ],
    [
        1281250,
        2545953000
    ],
    [
        1281230,
        2534867500
    ],
    [
        1281220,
        2531725000
    ],
    [
        1281200,
        2535942500
    ],
    [
        1281170,
        2538425000
    ],
    [
        1281100,
        2528440000
    ],
    [
        1281040,
        2521440000
    ],
    [
        1281030,
        2520980000
    ],
    [
        1281000,
        2521440000
    ],
    [
        1280980,
        2520173000
    ],
    [
        1280950,
        2516599500
    ],
    [
        1280940,
        2512855000
    ],
    [
        1280920,
        2513612500
    ],
    [
        1280900,
        2512855000
    ],
    [
        1280890,
        2512402000
    ],
    [
        1280870,
        2508242500
    ],
    [
        1280860,
        2514940000
    ],
    [
        1280840,
        2517680000
    ],
    [
        1280830,
        2519310000
    ],
    [
        1280820,
        2518624000
    ],
    [
        1280810,
        2521440000
    ],
    [
        1280790,
        2521824500
    ],
    [
        1280780,
        2528440000
    ],
    [
        1280760,
        2528817500
    ],
    [
        1280740,
        2528900000
    ],
    [
        1280690,
        2530000000
    ],
    [
        1280680,
        2528732500
    ],
    [
        1280640,
        2530000000
    ],
    [
        1280620,
        2546850000
    ],
    [
        1280580,
        2541460000
    ],
    [
        1280570,
        2556000000
    ],
    [
        1280560,
        2554915000
    ],
    [
        1277760,
        2425000000
    ],
    [
        1277360,
        2419935000
    ],
    [
        1277100,
        2417270000
    ],
    [
        1277000,
        2412073000
    ],
    [
        1276990,
        2405000000
    ],
    [
        1276900,
        2402495000
    ],
    [
        1276860,
        2396535000
    ],
    [
        1276810,
        2390040000
    ],
    [
        1276750,
        2386045000
    ],
    [
        1276670,
        2377920000
    ],
    [
        1276660,
        2391000000
    ],
    [
        1276610,
        2381290000
    ],
    [
        1276600,
        2291660000
    ],
    [
        1276550,
        2267232500
    ],
    [
        1276400,
        2252616250
    ],
    [
        1276300,
        2245863000
    ],
    [
        1276250,
        2238000000
    ],
    [
        1276080,
        2206810000
    ],
    [
        1275960,
        2203000000
    ],
    [
        1275950,
        2202765000
    ],
    [
        1275890,
        2201840000
    ],
    [
        1275840,
        2198600000
    ],
    [
        1275750,
        2203000000
    ],
    [
        1275720,
        2200232000
    ],
    [
        1275540,
        2191530000
    ],
    [
        1275520,
        2202126000
    ],
    [
        1275480,
        2203000000
    ],
    [
        1275390,
        2187480000
    ],
    [
        1275350,
        2185914500
    ],
    [
        1275330,
        2183500000
    ],
    [
        1275270,
        2185000000
    ],
    [
        1275150,
        2168500000
    ],
    [
        1275120,
        2166875000
    ],
    [
        1275050,
        2165296250
    ],
    [
        1275010,
        2159874000
    ],
    [
        1274980,
        2158775000
    ],
    [
        1274960,
        2156095000
    ],
    [
        1274950,
        2157095000
    ],
    [
        1274890,
        2145638500
    ],
    [
        1274870,
        2143426500
    ],
    [
        1274860,
        2152242500
    ],
    [
        1274820,
        2183413750
    ],
    [
        1274810,
        2214233750
    ],
    [
        1274770,
        2223500000
    ],
    [
        1274740,
        2225658750
    ],
    [
        1274720,
        2230840500
    ],
    [
        1274710,
        2234880000
    ],
    [
        1274680,
        2237380000
    ],
    [
        1274670,
        2233000000
    ],
    [
        1274660,
        2227638750
    ],
    [
        1274640,
        2232662500
    ],
    [
        1274630,
        2235281000
    ],
    [
        1274610,
        2241204250
    ],
    [
        1274590,
        2244455500
    ],
    [
        1274580,
        2235322000
    ],
    [
        1274570,
        2233000000
    ],
    [
        1274560,
        2236768750
    ],
    [
        1274550,
        2241868750
    ],
    [
        1274520,
        2259055500
    ],
    [
        1274500,
        2253509250
    ],
    [
        1274490,
        2239875500
    ],
    [
        1274460,
        2230031250
    ],
    [
        1274450,
        2227024500
    ],
    [
        1274430,
        2227049000
    ],
    [
        1274400,
        2217130000
    ],
    [
        1274390,
        2215042000
    ],
    [
        1274380,
        2238216000
    ],
    [
        1274340,
        2255181250
    ],
    [
        1274330,
        2259810000
    ],
    [
        1274300,
        2262053000
    ],
    [
        1274260,
        2258986500
    ],
    [
        1274220,
        2269195000
    ],
    [
        1274190,
        2266791500
    ],
    [
        1274120,
        2255006500
    ],
    [
        1274090,
        2260086500
    ],
    [
        1274080,
        2254086500
    ],
    [
        1274060,
        2249241250
    ],
    [
        1274050,
        2246148250
    ],
    [
        1274020,
        2244826250
    ],
    [
        1274010,
        2240595000
    ],
    [
        1273990,
        2236836250
    ],
    [
        1273980,
        2233202500
    ],
    [
        1273970,
        2241447500
    ],
    [
        1273940,
        2300580000
    ],
    [
        1273930,
        2355500000
    ],
    [
        1273910,
        2358500000
    ],
    [
        1273870,
        2360248500
    ],
    [
        1273840,
        2362253500
    ],
    [
        1273760,
        2358500000
    ],
    [
        1273730,
        2358784500
    ],
    [
        1273680,
        2364815000
    ],
    [
        1273670,
        2368550000
    ],
    [
        1273630,
        2373240000
    ],
    [
        1273610,
        2375657500
    ],
    [
        1273600,
        2378187500
    ],
    [
        1273590,
        2382694750
    ],
    [
        1273580,
        2372292000
    ],
    [
        1273570,
        2369142000
    ],
    [
        1273560,
        2366886000
    ],
    [
        1273540,
        2367556000
    ],
    [
        1273530,
        2366725000
    ],
    [
        1273520,
        2362361250
    ],
    [
        1273510,
        2362790000
    ],
    [
        1273500,
        2387090000
    ],
    [
        1273370,
        2397595000
    ],
    [
        1273360,
        2415708750
    ],
    [
        1273350,
        2417208750
    ],
    [
        1273340,
        2415150500
    ],
    [
        1273330,
        2416066750
    ],
    [
        1273320,
        2422037500
    ],
    [
        1273310,
        2424205000
    ],
    [
        1273300,
        2420205000
    ],
    [
        1273290,
        2418000000
    ],
    [
        1273270,
        2433166250
    ],
    [
        1273250,
        2447000000
    ],
    [
        1273230,
        2447735500
    ],
    [
        1273220,
        2455500000
    ],
    [
        1273190,
        2453525000
    ],
    [
        1273170,
        2450090000
    ],
    [
        1273130,
        2455500000
    ],
    [
        1273120,
        2461473750
    ],
    [
        1273110,
        2461788750
    ],
    [
        1273080,
        2463922500
    ],
    [
        1273070,
        2465963750
    ],
    [
        1273060,
        2466510000
    ],
    [
        1273040,
        2463168500
    ],
    [
        1273020,
        2453515000
    ],
    [
        1273010,
        2449980000
    ],
    [
        1272990,
        2445814000
    ],
    [
        1272980,
        2445000000
    ],
    [
        1272970,
        2447537500
    ],
    [
        1272950,
        2450480000
    ],
    [
        1272930,
        2449500000
    ],
    [
        1272920,
        2448498750
    ],
    [
        1272910,
        2450415500
    ],
    [
        1272900,
        2449500000
    ],
    [
        1272890,
        2435500000
    ],
    [
        1272870,
        2436455000
    ],
    [
        1272860,
        2433883750
    ],
    [
        1272850,
        2434366250
    ],
    [
        1272830,
        2430000000
    ],
    [
        1272820,
        2426237000
    ],
    [
        1272790,
        2426000000
    ],
    [
        1272780,
        2430000000
    ],
    [
        1272770,
        2436910000
    ],
    [
        1272740,
        2430000000
    ],
    [
        1272730,
        2414000000
    ],
    [
        1272720,
        2412000000
    ],
    [
        1272700,
        2410940000
    ],
    [
        1272680,
        2411140000
    ],
    [
        1272660,
        2409130000
    ],
    [
        1272650,
        2402167500
    ],
    [
        1272630,
        2402000000
    ],
    [
        1272600,
        2403000000
    ],
    [
        1272590,
        2405830000
    ],
    [
        1272580,
        2405902500
    ],
    [
        1272570,
        2408000000
    ],
    [
        1272540,
        2411000000
    ],
    [
        1272530,
        2410677500
    ],
    [
        1272490,
        2418000000
    ],
    [
        1272480,
        2421470000
    ],
    [
        1272470,
        2428022000
    ],
    [
        1272460,
        2429000000
    ],
    [
        1272430,
        2428030000
    ],
    [
        1272420,
        2430000000
    ],
    [
        1272410,
        2429173000
    ],
    [
        1272390,
        2428030000
    ],
    [
        1272380,
        2429727000
    ],
    [
        1272360,
        2430000000
    ],
    [
        1272330,
        2430647000
    ],
    [
        1272320,
        2433000000
    ],
    [
        1272310,
        2442490000
    ],
    [
        1272290,
        2440000000
    ],
    [
        1272280,
        2443770000
    ],
    [
        1272260,
        2454000000
    ],
    [
        1272250,
        2431560000
    ],
    [
        1272220,
        2430000000
    ],
    [
        1272160,
        2422000000
    ],
    [
        1272150,
        2414000000
    ],
    [
        1272140,
        2403220000
    ],
    [
        1272120,
        2403212500
    ],
    [
        1272110,
        2404750000
    ],
    [
        1272100,
        2401936000
    ],
    [
        1272090,
        2402530000
    ],
    [
        1272080,
        2415010000
    ],
    [
        1272070,
        2421000000
    ],
    [
        1272060,
        2406882500
    ],
    [
        1272050,
        2405000000
    ],
    [
        1272040,
        2404000000
    ],
    [
        1272030,
        2403738000
    ],
    [
        1272020,
        2402107500
    ],
    [
        1272010,
        2404075000
    ],
    [
        1271990,
        2394660000
    ],
    [
        1271980,
        2403610000
    ],
    [
        1271950,
        2409785000
    ],
    [
        1271940,
        2430000000
    ],
    [
        1271930,
        2433000000
    ],
    [
        1271920,
        2439053750
    ],
    [
        1271910,
        2444820000
    ],
    [
        1271900,
        2447621500
    ],
    [
        1271870,
        2432280000
    ],
    [
        1271860,
        2426260500
    ],
    [
        1271850,
        2426010500
    ],
    [
        1271840,
        2427261250
    ],
    [
        1271830,
        2427865000
    ],
    [
        1271820,
        2432964000
    ],
    [
        1271810,
        2430300000
    ],
    [
        1271800,
        2425655000
    ],
    [
        1271790,
        2423378000
    ],
    [
        1271780,
        2423460000
    ],
    [
        1271770,
        2424461000
    ],
    [
        1271760,
        2429020000
    ],
    [
        1271730,
        2411530000
    ],
    [
        1271720,
        2402500000
    ],
    [
        1271710,
        2399678500
    ],
    [
        1271700,
        2400355000
    ],
    [
        1271690,
        2403430000
    ],
    [
        1271590,
        2337808500
    ],
    [
        1271580,
        2337328500
    ],
    [
        1271570,
        2337698500
    ],
    [
        1271560,
        2327270000
    ],
    [
        1271550,
        2322472500
    ],
    [
        1271520,
        2348610000
    ],
    [
        1271490,
        2360420000
    ],
    [
        1271480,
        2364870000
    ],
    [
        1271460,
        2365740000
    ],
    [
        1271450,
        2363000000
    ],
    [
        1271430,
        2362810000
    ],
    [
        1271420,
        2363000000
    ],
    [
        1271410,
        2361290000
    ],
    [
        1271390,
        2362824000
    ],
    [
        1271380,
        2363000000
    ],
    [
        1271370,
        2374297500
    ],
    [
        1271350,
        2379000000
    ],
    [
        1271340,
        2381000000
    ],
    [
        1271330,
        2387280000
    ],
    [
        1271260,
        2378430000
    ],
    [
        1271250,
        2376495000
    ],
    [
        1271230,
        2376000000
    ],
    [
        1271220,
        2378430000
    ],
    [
        1271200,
        2372644000
    ],
    [
        1271190,
        2373410000
    ],
    [
        1271180,
        2379956000
    ],
    [
        1271160,
        2379000000
    ],
    [
        1271150,
        2376126000
    ],
    [
        1271140,
        2378150000
    ],
    [
        1271120,
        2378904000
    ],
    [
        1271080,
        2366000000
    ],
    [
        1271070,
        2359230000
    ],
    [
        1271050,
        2345000000
    ],
    [
        1271040,
        2344570000
    ],
    [
        1271020,
        2361930000
    ],
    [
        1271010,
        2360105000
    ],
    [
        1271000,
        2346210000
    ],
    [
        1270990,
        2345180000
    ],
    [
        1270970,
        2330000000
    ],
    [
        1270960,
        2336762000
    ],
    [
        1270950,
        2345980000
    ],
    [
        1270940,
        2326000000
    ],
    [
        1270910,
        2325836000
    ],
    [
        1270900,
        2321000000
    ],
    [
        1270880,
        2310900000
    ],
    [
        1270870,
        2302691000
    ],
    [
        1270860,
        2310210000
    ],
    [
        1270850,
        2319543000
    ],
    [
        1270840,
        2312880000
    ],
    [
        1270820,
        2306000000
    ],
    [
        1270790,
        2295000000
    ],
    [
        1270770,
        2279540000
    ],
    [
        1270760,
        2278000000
    ],
    [
        1270680,
        2271000000
    ],
    [
        1270650,
        2268000000
    ],
    [
        1270640,
        2277167500
    ],
    [
        1270630,
        2274040000
    ],
    [
        1270580,
        2271000000
    ],
    [
        1270570,
        2278840000
    ],
    [
        1270500,
        2281190000
    ],
    [
        1270480,
        2279930000
    ],
    [
        1270470,
        2282850000
    ],
    [
        1270450,
        2279540000
    ],
    [
        1270440,
        2271312000
    ],
    [
        1270430,
        2252000000
    ],
    [
        1270410,
        2246090000
    ],
    [
        1270380,
        2267818000
    ],
    [
        1270370,
        2273870000
    ],
    [
        1270360,
        2258900000
    ],
    [
        1270340,
        2257628000
    ],
    [
        1270330,
        2254000000
    ],
    [
        1270310,
        2253980000
    ],
    [
        1270300,
        2254000000
    ],
    [
        1270260,
        2264120000
    ],
    [
        1270250,
        2267000000
    ],
    [
        1270230,
        2279540000
    ],
    [
        1270200,
        2281840000
    ],
    [
        1270190,
        2279540000
    ],
    [
        1270180,
        2278000000
    ],
    [
        1270170,
        2279000000
    ],
    [
        1270160,
        2279540000
    ],
    [
        1270150,
        2274000000
    ],
    [
        1270140,
        2267116250
    ],
    [
        1270130,
        2264060000
    ],
    [
        1270120,
        2262560000
    ],
    [
        1270100,
        2261000000
    ],
    [
        1270090,
        2259342000
    ],
    [
        1270080,
        2255860000
    ],
    [
        1270060,
        2255110000
    ],
    [
        1270050,
        2259885000
    ],
    [
        1270040,
        2260941000
    ],
    [
        1270010,
        2260240000
    ],
    [
        1269990,
        2258000000
    ],
    [
        1269920,
        2261000000
    ],
    [
        1269910,
        2259640000
    ],
    [
        1269890,
        2258780000
    ],
    [
        1269870,
        2249492500
    ],
    [
        1269860,
        2248407500
    ],
    [
        1269850,
        2250445000
    ],
    [
        1269830,
        2259640000
    ],
    [
        1269790,
        2265994000
    ],
    [
        1269780,
        2263000000
    ],
    [
        1269770,
        2262617500
    ],
    [
        1269750,
        2263000000
    ],
    [
        1269740,
        2263572500
    ],
    [
        1269730,
        2267038000
    ],
    [
        1269700,
        2272000000
    ],
    [
        1269690,
        2259656000
    ],
    [
        1269670,
        2258180000
    ],
    [
        1269660,
        2258345000
    ],
    [
        1269640,
        2259640000
    ],
    [
        1269630,
        2258126000
    ],
    [
        1269600,
        2259640000
    ],
    [
        1269570,
        2257610000
    ],
    [
        1269550,
        2256000000
    ],
    [
        1269540,
        2256098000
    ],
    [
        1269530,
        2256000000
    ],
    [
        1269520,
        2227340000
    ],
    [
        1269510,
        2225000000
    ],
    [
        1269500,
        2239000000
    ],
    [
        1269480,
        2240000000
    ],
    [
        1269440,
        2212930000
    ],
    [
        1269400,
        2206130000
    ],
    [
        1269380,
        2205000000
    ],
    [
        1269370,
        2204465000
    ],
    [
        1269360,
        2206130000
    ],
    [
        1269340,
        2206000000
    ],
    [
        1269330,
        2196000000
    ],
    [
        1269320,
        2192511000
    ],
    [
        1269260,
        2187000000
    ],
    [
        1269250,
        2177900000
    ],
    [
        1269240,
        2176000000
    ],
    [
        1269230,
        2173000000
    ],
    [
        1269220,
        2175840000
    ],
    [
        1269190,
        2173000000
    ],
    [
        1269180,
        2176000000
    ],
    [
        1269160,
        2177950000
    ],
    [
        1269150,
        2175896000
    ],
    [
        1269140,
        2167875000
    ],
    [
        1269130,
        2165500000
    ],
    [
        1269120,
        2156329500
    ],
    [
        1269110,
        2159632000
    ],
    [
        1269100,
        2163000000
    ],
    [
        1269090,
        2163500000
    ],
    [
        1269080,
        2168700000
    ],
    [
        1269060,
        2159575000
    ],
    [
        1269050,
        2151895000
    ],
    [
        1269040,
        2153371250
    ],
    [
        1269030,
        2154256000
    ],
    [
        1269020,
        2158309500
    ],
    [
        1269010,
        2165305000
    ],
    [
        1269000,
        2170029500
    ],
    [
        1268980,
        2171000000
    ],
    [
        1268970,
        2171765000
    ],
    [
        1268950,
        2180950000
    ],
    [
        1268940,
        2174801500
    ],
    [
        1268930,
        2173301500
    ],
    [
        1268920,
        2164982500
    ],
    [
        1268910,
        2165000000
    ],
    [
        1268900,
        2179025000
    ],
    [
        1268890,
        2168245500
    ],
    [
        1268880,
        2163000000
    ],
    [
        1268870,
        2165000000
    ],
    [
        1268860,
        2165435000
    ],
    [
        1268840,
        2163335000
    ],
    [
        1268820,
        2167000000
    ],
    [
        1268810,
        2168277500
    ],
    [
        1268800,
        2177860000
    ],
    [
        1268780,
        2177097500
    ],
    [
        1268770,
        2180090000
    ],
    [
        1268750,
        2180860000
    ],
    [
        1268740,
        2180090000
    ],
    [
        1268730,
        2183580000
    ],
    [
        1268710,
        2186000000
    ],
    [
        1268700,
        2193000000
    ],
    [
        1268670,
        2194000000
    ],
    [
        1268660,
        2193678000
    ],
    [
        1268650,
        2193000000
    ],
    [
        1268630,
        2188000000
    ],
    [
        1268620,
        2187245000
    ],
    [
        1268600,
        2180690000
    ],
    [
        1268540,
        2175000000
    ],
    [
        1268510,
        2168000000
    ],
    [
        1268500,
        2166790000
    ],
    [
        1268480,
        2166612500
    ],
    [
        1268470,
        2170049000
    ],
    [
        1268460,
        2178000000
    ],
    [
        1268440,
        2176526000
    ],
    [
        1268430,
        2175350000
    ],
    [
        1268410,
        2174000000
    ],
    [
        1268400,
        2158220000
    ],
    [
        1268390,
        2150560000
    ],
    [
        1268380,
        2155930000
    ],
    [
        1268370,
        2138020000
    ],
    [
        1268350,
        2121000000
    ],
    [
        1268340,
        2114000000
    ],
    [
        1268330,
        2111620000
    ],
    [
        1268310,
        2111370000
    ],
    [
        1268300,
        2120688000
    ],
    [
        1268280,
        2121000000
    ],
    [
        1268180,
        2121000000
    ],
    [
        1268170,
        2111590000
    ],
    [
        1268160,
        2108575000
    ],
    [
        1268150,
        2111402500
    ],
    [
        1268140,
        2113919000
    ],
    [
        1268130,
        2117315000
    ],
    [
        1268120,
        2118898000
    ],
    [
        1268110,
        2117260000
    ],
    [
        1268100,
        2117227500
    ],
    [
        1268080,
        2121000000
    ],
    [
        1268070,
        2120640000
    ],
    [
        1268060,
        2117640000
    ],
    [
        1268040,
        2121000000
    ],
    [
        1268000,
        2076000000
    ],
    [
        1267950,
        2071520000
    ],
    [
        1267930,
        2071000000
    ],
    [
        1267920,
        2071262500
    ],
    [
        1267910,
        2066777500
    ],
    [
        1267900,
        2071000000
    ],
    [
        1267890,
        2074000000
    ],
    [
        1267870,
        2076000000
    ],
    [
        1267830,
        2072000000
    ],
    [
        1267820,
        2071000000
    ],
    [
        1267810,
        2064110000
    ],
    [
        1267800,
        2059470000
    ],
    [
        1267780,
        2058332500
    ],
    [
        1267770,
        2059000000
    ],
    [
        1267760,
        2055000000
    ],
    [
        1267750,
        2049659000
    ],
    [
        1267740,
        2055830000
    ],
    [
        1267720,
        2055915000
    ],
    [
        1267710,
        2056660000
    ],
    [
        1267700,
        2057526750
    ],
    [
        1267690,
        2058622000
    ],
    [
        1267680,
        2060392500
    ],
    [
        1267670,
        2056561250
    ],
    [
        1267660,
        2047298000
    ],
    [
        1267650,
        2055536250
    ],
    [
        1267640,
        2058190000
    ],
    [
        1267630,
        2057165000
    ],
    [
        1267610,
        2046996250
    ],
    [
        1267580,
        2043332500
    ],
    [
        1267570,
        2046927500
    ],
    [
        1267560,
        2057975000
    ],
    [
        1267550,
        2060930000
    ],
    [
        1267540,
        2060580000
    ],
    [
        1267530,
        2062435000
    ],
    [
        1267520,
        2066935000
    ],
    [
        1267510,
        2062336250
    ],
    [
        1267490,
        2062000000
    ],
    [
        1267480,
        2052790000
    ],
    [
        1267470,
        2049782000
    ],
    [
        1267440,
        2048625000
    ],
    [
        1267420,
        2049454500
    ],
    [
        1267410,
        2049000000
    ],
    [
        1267390,
        2048105500
    ],
    [
        1267380,
        2046000000
    ],
    [
        1267370,
        2046075000
    ],
    [
        1267350,
        2054320000
    ],
    [
        1267340,
        2055005000
    ],
    [
        1267330,
        2058485000
    ],
    [
        1267320,
        2058000000
    ],
    [
        1267310,
        2053482500
    ],
    [
        1267300,
        2053197500
    ],
    [
        1267290,
        2046175000
    ],
    [
        1267280,
        2043478750
    ],
    [
        1267270,
        2039853750
    ],
    [
        1267260,
        2044950000
    ],
    [
        1267250,
        2041446000
    ],
    [
        1267230,
        2040345000
    ],
    [
        1267220,
        2039415000
    ],
    [
        1267210,
        2036475000
    ],
    [
        1267200,
        2036370000
    ],
    [
        1267190,
        2041013750
    ],
    [
        1267180,
        2039638750
    ],
    [
        1267170,
        2055985000
    ],
    [
        1267160,
        2067315000
    ],
    [
        1267150,
        2070500000
    ],
    [
        1267140,
        2073322500
    ],
    [
        1267130,
        2074080000
    ],
    [
        1267110,
        2078530000
    ],
    [
        1267100,
        2070922500
    ],
    [
        1267090,
        2072437500
    ],
    [
        1267080,
        2072515000
    ],
    [
        1267070,
        2072465000
    ],
    [
        1267060,
        2066571250
    ],
    [
        1267050,
        2072148750
    ],
    [
        1267040,
        2073237500
    ],
    [
        1267030,
        2055296250
    ],
    [
        1267010,
        2053954500
    ],
    [
        1266990,
        2052790500
    ],
    [
        1266980,
        2052845000
    ],
    [
        1266970,
        2054000000
    ],
    [
        1266950,
        2057442500
    ],
    [
        1266910,
        2058605000
    ],
    [
        1266900,
        2055000000
    ],
    [
        1266880,
        2054710000
    ],
    [
        1266870,
        2053421500
    ],
    [
        1266860,
        2051393500
    ],
    [
        1266850,
        2027609000
    ],
    [
        1266790,
        2087490000
    ],
    [
        1266780,
        2090660000
    ],
    [
        1266770,
        2091858750
    ],
    [
        1266760,
        2093000000
    ],
    [
        1266750,
        2087000000
    ],
    [
        1266740,
        2088500000
    ],
    [
        1266730,
        2090104000
    ],
    [
        1266720,
        2087000000
    ],
    [
        1266710,
        2086500500
    ],
    [
        1266700,
        2071847000
    ],
    [
        1266690,
        2073261500
    ],
    [
        1266670,
        2073825000
    ],
    [
        1266640,
        2072497500
    ],
    [
        1266610,
        2074680000
    ],
    [
        1266600,
        2074046250
    ],
    [
        1266580,
        2073125000
    ],
    [
        1266570,
        2069554750
    ],
    [
        1266560,
        2073125000
    ],
    [
        1266550,
        2074980000
    ],
    [
        1266540,
        2074924500
    ],
    [
        1266520,
        2072910500
    ],
    [
        1266510,
        2074141750
    ],
    [
        1266500,
        2074960500
    ],
    [
        1266490,
        2080718750
    ],
    [
        1266480,
        2078160000
    ],
    [
        1266470,
        2073648750
    ],
    [
        1266460,
        2076583500
    ],
    [
        1266450,
        2083196500
    ],
    [
        1266440,
        2086135000
    ],
    [
        1266430,
        2086253750
    ],
    [
        1266420,
        2083192750
    ],
    [
        1266410,
        2084943750
    ],
    [
        1266400,
        2093870000
    ],
    [
        1266390,
        2097070000
    ],
    [
        1266380,
        2096210500
    ],
    [
        1266370,
        2095610000
    ],
    [
        1266360,
        2097150000
    ],
    [
        1266340,
        2076000000
    ],
    [
        1266320,
        2075000000
    ],
    [
        1266310,
        2035120000
    ],
    [
        1266270,
        2032000000
    ],
    [
        1266260,
        2026217000
    ],
    [
        1266250,
        2026435000
    ],
    [
        1266240,
        2020770000
    ],
    [
        1266230,
        2018500000
    ],
    [
        1266210,
        2017760000
    ],
    [
        1266190,
        2020658000
    ],
    [
        1266180,
        2022540000
    ],
    [
        1266170,
        2027000000
    ],
    [
        1266160,
        2021295000
    ],
    [
        1266140,
        2021100000
    ],
    [
        1266130,
        2021059000
    ],
    [
        1266120,
        2022838000
    ],
    [
        1266110,
        2027000000
    ],
    [
        1266100,
        2028606000
    ],
    [
        1266080,
        2034320000
    ],
    [
        1266070,
        2039852500
    ],
    [
        1266060,
        2041435000
    ],
    [
        1266050,
        2041000000
    ],
    [
        1266030,
        2040000000
    ],
    [
        1266010,
        2041000000
    ],
    [
        1266000,
        2044726000
    ],
    [
        1265990,
        2045639000
    ],
    [
        1265940,
        2040000000
    ],
    [
        1265860,
        2024290000
    ],
    [
        1265850,
        2018904000
    ],
    [
        1265830,
        2018000000
    ],
    [
        1265790,
        2012000000
    ],
    [
        1265780,
        2010430000
    ],
    [
        1265770,
        2009724000
    ],
    [
        1265700,
        2008130000
    ],
    [
        1265690,
        2002948000
    ],
    [
        1265680,
        2002000000
    ],
    [
        1265670,
        1993000000
    ],
    [
        1265630,
        1992010000
    ],
    [
        1265600,
        1993000000
    ],
    [
        1265560,
        1991000000
    ],
    [
        1265550,
        1992000000
    ],
    [
        1265540,
        2000800000
    ],
    [
        1265510,
        2008130000
    ],
    [
        1265490,
        1993620000
    ],
    [
        1265420,
        2007790000
    ],
    [
        1265410,
        2008130000
    ],
    [
        1265400,
        2015766000
    ],
    [
        1265390,
        2046000000
    ],
    [
        1265380,
        2077200000
    ],
    [
        1265360,
        2077395000
    ],
    [
        1265330,
        2082000000
    ],
    [
        1265320,
        2085495000
    ],
    [
        1265310,
        2084079000
    ],
    [
        1265300,
        2083982000
    ],
    [
        1265280,
        2082000000
    ],
    [
        1265270,
        2082230000
    ],
    [
        1265260,
        2082640000
    ],
    [
        1265250,
        2080430000
    ],
    [
        1265240,
        2079330000
    ],
    [
        1265230,
        2084137000
    ],
    [
        1265220,
        2095000000
    ],
    [
        1265210,
        2104897000
    ],
    [
        1265190,
        2106000000
    ],
    [
        1265070,
        2105092500
    ],
    [
        1265040,
        2107900000
    ],
    [
        1265030,
        2106185000
    ],
    [
        1264990,
        2112340000
    ],
    [
        1264970,
        2117852000
    ],
    [
        1264960,
        2111830000
    ],
    [
        1264950,
        2110000000
    ],
    [
        1264930,
        2109023000
    ],
    [
        1264920,
        2108415000
    ],
    [
        1264910,
        2099940000
    ],
    [
        1264880,
        2099375000
    ],
    [
        1264870,
        2096440000
    ],
    [
        1264860,
        2096305000
    ],
    [
        1264850,
        2092347000
    ],
    [
        1264840,
        2081160000
    ],
    [
        1264830,
        2076662000
    ],
    [
        1264820,
        2076000000
    ],
    [
        1264800,
        2097000000
    ],
    [
        1264780,
        2100246000
    ],
    [
        1264770,
        2102237500
    ],
    [
        1264760,
        2109050000
    ],
    [
        1264750,
        2119000000
    ],
    [
        1264700,
        2123000000
    ],
    [
        1264650,
        2118000000
    ],
    [
        1264640,
        2129420000
    ],
    [
        1264590,
        2133000000
    ],
    [
        1264520,
        2136930000
    ],
    [
        1264500,
        2143020000
    ],
    [
        1264490,
        2145150000
    ],
    [
        1264480,
        2145000000
    ],
    [
        1264470,
        2143020000
    ],
    [
        1264450,
        2145150000
    ],
    [
        1264440,
        2147348000
    ],
    [
        1264430,
        2148000000
    ],
    [
        1264420,
        2148690000
    ],
    [
        1264410,
        2149849000
    ],
    [
        1264400,
        2150522500
    ],
    [
        1264390,
        2151835000
    ],
    [
        1264380,
        2151185000
    ],
    [
        1264370,
        2157302500
    ],
    [
        1264360,
        2161970000
    ],
    [
        1264350,
        2163567000
    ],
    [
        1264340,
        2168407000
    ],
    [
        1264320,
        2168582500
    ],
    [
        1264310,
        2169732500
    ],
    [
        1264300,
        2171000000
    ],
    [
        1264290,
        2169390000
    ],
    [
        1264270,
        2168244000
    ],
    [
        1264260,
        2168574000
    ],
    [
        1264240,
        2168690000
    ],
    [
        1264200,
        2148000000
    ],
    [
        1264170,
        2147110000
    ],
    [
        1264150,
        2145150000
    ],
    [
        1264130,
        2127847500
    ],
    [
        1264120,
        2125354000
    ],
    [
        1264110,
        2121200000
    ],
    [
        1264100,
        2119360000
    ],
    [
        1264090,
        2121200000
    ],
    [
        1264060,
        2116000000
    ],
    [
        1264050,
        2133000000
    ],
    [
        1264010,
        2134000000
    ],
    [
        1264000,
        2135255000
    ],
    [
        1263990,
        2134000000
    ],
    [
        1263970,
        2132900000
    ],
    [
        1263960,
        2132740000
    ],
    [
        1263940,
        2141000000
    ],
    [
        1263920,
        2143629000
    ],
    [
        1263900,
        2144000000
    ],
    [
        1263880,
        2144530000
    ],
    [
        1263870,
        2144000000
    ],
    [
        1263850,
        2143317500
    ],
    [
        1263840,
        2142535000
    ],
    [
        1263800,
        2141735000
    ],
    [
        1263790,
        2143920000
    ],
    [
        1263780,
        2145000000
    ],
    [
        1263770,
        2145150000
    ],
    [
        1263760,
        2145000000
    ],
    [
        1263740,
        2145150000
    ],
    [
        1263700,
        2145490000
    ],
    [
        1263660,
        2145150000
    ],
    [
        1263650,
        2144887500
    ],
    [
        1263640,
        2152000000
    ],
    [
        1263620,
        2152310000
    ],
    [
        1263610,
        2152000000
    ],
    [
        1263580,
        2152630000
    ],
    [
        1263570,
        2151000000
    ],
    [
        1263560,
        2150512000
    ],
    [
        1263550,
        2155000000
    ],
    [
        1263540,
        2150245000
    ],
    [
        1263520,
        2146700000
    ],
    [
        1263500,
        2142560000
    ],
    [
        1263490,
        2140000000
    ],
    [
        1263480,
        2145000000
    ],
    [
        1263460,
        2145677500
    ],
    [
        1263450,
        2147000000
    ],
    [
        1263430,
        2148025000
    ],
    [
        1263420,
        2147928750
    ],
    [
        1263410,
        2148928750
    ],
    [
        1263400,
        2149000000
    ],
    [
        1263370,
        2149500000
    ],
    [
        1263280,
        2131618000
    ],
    [
        1263270,
        2131091500
    ],
    [
        1263250,
        2128848750
    ],
    [
        1263230,
        2128000000
    ],
    [
        1263210,
        2116633750
    ],
    [
        1263200,
        2112633750
    ],
    [
        1263170,
        2112000000
    ],
    [
        1263160,
        2112581250
    ],
    [
        1263140,
        2111091250
    ],
    [
        1263130,
        2110062500
    ],
    [
        1263120,
        2110747500
    ],
    [
        1263110,
        2112236250
    ],
    [
        1263100,
        2111500000
    ],
    [
        1263060,
        2116000000
    ],
    [
        1263040,
        2117070000
    ],
    [
        1263030,
        2125090000
    ],
    [
        1263020,
        2129141250
    ],
    [
        1263010,
        2134000000
    ],
    [
        1263000,
        2137802500
    ],
    [
        1262840,
        2140302500
    ],
    [
        1262830,
        2139669500
    ],
    [
        1262820,
        2135585000
    ],
    [
        1262800,
        2134000000
    ],
    [
        1262790,
        2135320000
    ],
    [
        1262780,
        2134820000
    ],
    [
        1262770,
        2135640000
    ],
    [
        1262740,
        2137350000
    ],
    [
        1262730,
        2138850000
    ],
    [
        1262720,
        2141465000
    ],
    [
        1262710,
        2145820000
    ],
    [
        1262700,
        2145275000
    ],
    [
        1262690,
        2142571000
    ],
    [
        1262680,
        2137687000
    ],
    [
        1262650,
        2122105000
    ],
    [
        1262630,
        2116858000
    ],
    [
        1262620,
        2101775000
    ],
    [
        1262610,
        2098265000
    ],
    [
        1262600,
        2094940000
    ],
    [
        1262590,
        2094350000
    ],
    [
        1262580,
        2094500000
    ],
    [
        1262570,
        2102958750
    ],
    [
        1262550,
        2101644500
    ],
    [
        1262540,
        2107911000
    ],
    [
        1262520,
        2104156000
    ],
    [
        1262490,
        2101000000
    ],
    [
        1262480,
        2101605000
    ],
    [
        1262470,
        2101395500
    ],
    [
        1262460,
        2100874500
    ],
    [
        1262450,
        2099325000
    ],
    [
        1262440,
        2092405750
    ],
    [
        1262420,
        2104000000
    ],
    [
        1262410,
        2104865000
    ],
    [
        1262400,
        2106340500
    ],
    [
        1262390,
        2104840500
    ],
    [
        1262380,
        2104387500
    ],
    [
        1262350,
        2113825000
    ],
    [
        1262340,
        2116000000
    ],
    [
        1262330,
        2117000000
    ],
    [
        1262320,
        2121503000
    ],
    [
        1262310,
        2130858750
    ],
    [
        1262290,
        2133290500
    ],
    [
        1262280,
        2134809500
    ],
    [
        1262270,
        2133155000
    ],
    [
        1262250,
        2130699500
    ],
    [
        1262230,
        2129830000
    ],
    [
        1262210,
        2132000000
    ],
    [
        1262190,
        2127000000
    ],
    [
        1262180,
        2129741500
    ],
    [
        1262170,
        2132000000
    ],
    [
        1262160,
        2142330500
    ],
    [
        1262140,
        2139661000
    ],
    [
        1262130,
        2145000000
    ],
    [
        1262090,
        2149000000
    ],
    [
        1262060,
        2146000000
    ],
    [
        1262050,
        2159007500
    ],
    [
        1262030,
        2157700000
    ],
    [
        1262000,
        2168000000
    ],
    [
        1261950,
        2155000000
    ],
    [
        1261920,
        2150000000
    ],
    [
        1261910,
        2143734000
    ],
    [
        1261900,
        2144000000
    ],
    [
        1261890,
        2144677500
    ],
    [
        1261880,
        2150650000
    ],
    [
        1261860,
        2155652000
    ],
    [
        1261850,
        2143960000
    ],
    [
        1261830,
        2151000000
    ],
    [
        1261820,
        2162000000
    ],
    [
        1261810,
        2164000000
    ],
    [
        1261800,
        2172000000
    ],
    [
        1261790,
        2167693000
    ],
    [
        1261770,
        2162000000
    ],
    [
        1261750,
        2164000000
    ],
    [
        1261740,
        2163275000
    ],
    [
        1261730,
        2156130000
    ],
    [
        1261720,
        2154320000
    ],
    [
        1261700,
        2152302000
    ],
    [
        1261690,
        2157540000
    ],
    [
        1261660,
        2135000000
    ],
    [
        1261650,
        2134143000
    ],
    [
        1261640,
        2132337000
    ],
    [
        1261590,
        2114455000
    ],
    [
        1261580,
        2111218000
    ],
    [
        1261560,
        2111000000
    ],
    [
        1261550,
        2120000000
    ],
    [
        1261540,
        2118140000
    ],
    [
        1261530,
        2118060000
    ],
    [
        1261520,
        2111842000
    ],
    [
        1261510,
        2106811000
    ],
    [
        1261490,
        2105545000
    ],
    [
        1261480,
        2110235000
    ],
    [
        1261450,
        2083512500
    ],
    [
        1261420,
        2078000000
    ],
    [
        1261410,
        2087000000
    ],
    [
        1261390,
        2111210000
    ],
    [
        1261380,
        2116674000
    ],
    [
        1261370,
        2122460000
    ],
    [
        1261360,
        2122670000
    ],
    [
        1261340,
        2118060000
    ],
    [
        1261330,
        2121350000
    ],
    [
        1261320,
        2123715000
    ],
    [
        1261310,
        2123813000
    ],
    [
        1261300,
        2122200000
    ],
    [
        1261290,
        2124120000
    ],
    [
        1261270,
        2126000000
    ],
    [
        1261260,
        2120000000
    ],
    [
        1261240,
        2114532500
    ],
    [
        1261230,
        2112490000
    ],
    [
        1261220,
        2111000000
    ],
    [
        1261210,
        2113000000
    ],
    [
        1261200,
        2133880000
    ],
    [
        1261190,
        2136250000
    ],
    [
        1261180,
        2144000000
    ],
    [
        1261170,
        2159000000
    ],
    [
        1261160,
        2159300000
    ],
    [
        1261150,
        2149000000
    ],
    [
        1261140,
        2147690000
    ],
    [
        1261120,
        2144000000
    ],
    [
        1261110,
        2140000000
    ],
    [
        1261090,
        2134320000
    ],
    [
        1261080,
        2130820000
    ],
    [
        1261060,
        2136165000
    ],
    [
        1261050,
        2127000000
    ],
    [
        1261040,
        2124632000
    ],
    [
        1261010,
        2127000000
    ],
    [
        1261000,
        2125000000
    ],
    [
        1260980,
        2124040000
    ],
    [
        1260970,
        2119000000
    ],
    [
        1260960,
        2122960000
    ],
    [
        1260950,
        2121047500
    ],
    [
        1260930,
        2118060000
    ],
    [
        1260910,
        2117995000
    ],
    [
        1260900,
        2115410000
    ],
    [
        1260890,
        2117000000
    ],
    [
        1260880,
        2118062500
    ],
    [
        1260870,
        2120090000
    ],
    [
        1260860,
        2116530000
    ],
    [
        1260850,
        2114585000
    ],
    [
        1260810,
        2111000000
    ],
    [
        1260790,
        2111590000
    ],
    [
        1260780,
        2116000000
    ],
    [
        1260770,
        2118000000
    ],
    [
        1260750,
        2117670000
    ],
    [
        1260740,
        2117607500
    ],
    [
        1260730,
        2115880000
    ],
    [
        1260720,
        2115841000
    ],
    [
        1260710,
        2109417500
    ],
    [
        1260690,
        2105000000
    ],
    [
        1260670,
        2096580000
    ],
    [
        1260660,
        2099407000
    ],
    [
        1260590,
        2095000000
    ],
    [
        1260580,
        2090850000
    ],
    [
        1260570,
        2089912500
    ],
    [
        1260560,
        2085130000
    ],
    [
        1260550,
        2085562000
    ],
    [
        1260540,
        2086525000
    ],
    [
        1260530,
        2082000000
    ],
    [
        1260520,
        2064000000
    ],
    [
        1260500,
        2057550000
    ],
    [
        1260470,
        2064000000
    ],
    [
        1260460,
        2061110000
    ],
    [
        1260420,
        2061000000
    ],
    [
        1260410,
        2055950000
    ],
    [
        1260390,
        2053580000
    ],
    [
        1260380,
        2055632000
    ],
    [
        1260370,
        2052000000
    ],
    [
        1260360,
        2051000000
    ],
    [
        1260340,
        2056730000
    ],
    [
        1260330,
        2059124000
    ],
    [
        1260320,
        2060000000
    ],
    [
        1260300,
        2107000000
    ],
    [
        1260280,
        2110960000
    ],
    [
        1260270,
        2112000000
    ],
    [
        1260260,
        2112429000
    ],
    [
        1260220,
        2116000000
    ],
    [
        1260210,
        2123285000
    ],
    [
        1260190,
        2124890000
    ],
    [
        1260180,
        2126295000
    ],
    [
        1260160,
        2124087000
    ],
    [
        1260150,
        2127090000
    ],
    [
        1260140,
        2154370000
    ],
    [
        1260090,
        2170000000
    ],
    [
        1260070,
        2172310000
    ],
    [
        1260050,
        2159000000
    ],
    [
        1260040,
        2170000000
    ],
    [
        1260010,
        2159000000
    ],
    [
        1260000,
        2155410000
    ],
    [
        1259980,
        2151670000
    ],
    [
        1259970,
        2158057500
    ],
    [
        1259950,
        2158000000
    ],
    [
        1259940,
        2159000000
    ],
    [
        1259930,
        2157830000
    ],
    [
        1259920,
        2160070000
    ],
    [
        1259910,
        2155900000
    ],
    [
        1259880,
        2161000000
    ],
    [
        1259850,
        2189910000
    ],
    [
        1259830,
        2190000000
    ],
    [
        1259820,
        2182670000
    ],
    [
        1259770,
        2174000000
    ],
    [
        1259750,
        2214000000
    ],
    [
        1259730,
        2215000000
    ],
    [
        1259720,
        2214000000
    ],
    [
        1259700,
        2215740000
    ],
    [
        1259680,
        2217000000
    ],
    [
        1259670,
        2219082500
    ],
    [
        1259660,
        2217022500
    ],
    [
        1259650,
        2229000000
    ],
    [
        1259640,
        2225415000
    ],
    [
        1259630,
        2216475000
    ],
    [
        1259620,
        2216110000
    ],
    [
        1259610,
        2216975000
    ],
    [
        1259590,
        2210295000
    ],
    [
        1259560,
        2205980000
    ],
    [
        1259550,
        2206090000
    ],
    [
        1259540,
        2204940000
    ],
    [
        1259520,
        2206401000
    ],
    [
        1259510,
        2201910000
    ],
    [
        1259500,
        2201585000
    ],
    [
        1259490,
        2206679000
    ],
    [
        1259480,
        2208000000
    ],
    [
        1259470,
        2208110000
    ],
    [
        1259460,
        2204250000
    ],
    [
        1259440,
        2212000000
    ],
    [
        1259430,
        2215000000
    ],
    [
        1259420,
        2222450000
    ],
    [
        1259410,
        2219289000
    ],
    [
        1259400,
        2215820000
    ],
    [
        1259390,
        2215000000
    ],
    [
        1259380,
        2215235000
    ],
    [
        1259370,
        2214980000
    ],
    [
        1259340,
        2222000000
    ],
    [
        1259330,
        2221000000
    ],
    [
        1259320,
        2219920000
    ],
    [
        1259300,
        2221960000
    ],
    [
        1259290,
        2217262500
    ],
    [
        1259270,
        2224000000
    ],
    [
        1259260,
        2231690000
    ],
    [
        1259250,
        2239530000
    ],
    [
        1259240,
        2234260000
    ],
    [
        1259230,
        2231460000
    ],
    [
        1259220,
        2230441000
    ],
    [
        1259210,
        2224772500
    ],
    [
        1259200,
        2219582500
    ],
    [
        1259190,
        2221885000
    ],
    [
        1259180,
        2230000000
    ],
    [
        1259170,
        2234310000
    ],
    [
        1259160,
        2240420000
    ],
    [
        1259150,
        2242200000
    ],
    [
        1259140,
        2242310000
    ],
    [
        1259130,
        2245500000
    ],
    [
        1259120,
        2240222000
    ],
    [
        1259110,
        2238000000
    ],
    [
        1259100,
        2237843000
    ],
    [
        1259090,
        2235000000
    ],
    [
        1259080,
        2235770000
    ],
    [
        1259070,
        2236969000
    ],
    [
        1259060,
        2234000000
    ],
    [
        1259030,
        2232890000
    ],
    [
        1259020,
        2246000000
    ],
    [
        1259010,
        2248090000
    ],
    [
        1258970,
        2233000000
    ],
    [
        1258960,
        2226753000
    ],
    [
        1258930,
        2173000000
    ],
    [
        1258910,
        2165800000
    ],
    [
        1258900,
        2168070000
    ],
    [
        1258870,
        2151280000
    ],
    [
        1258860,
        2151260000
    ],
    [
        1258850,
        2148000000
    ],
    [
        1258840,
        2147000000
    ],
    [
        1258830,
        2144000000
    ],
    [
        1258820,
        2143340000
    ],
    [
        1258810,
        2139649000
    ],
    [
        1258800,
        2140770000
    ],
    [
        1258790,
        2141442500
    ],
    [
        1258780,
        2141036000
    ],
    [
        1258770,
        2138181000
    ],
    [
        1258760,
        2139000000
    ],
    [
        1258740,
        2121810000
    ],
    [
        1258730,
        2117000000
    ],
    [
        1258720,
        2105190000
    ],
    [
        1258710,
        2099000000
    ],
    [
        1258690,
        2087760000
    ],
    [
        1258680,
        2086000000
    ],
    [
        1258660,
        2075300000
    ],
    [
        1258650,
        2074817500
    ],
    [
        1258630,
        2074090000
    ],
    [
        1258620,
        2072840000
    ],
    [
        1258610,
        2069000000
    ],
    [
        1258600,
        2069349000
    ],
    [
        1258590,
        2073145000
    ],
    [
        1258580,
        2066043000
    ],
    [
        1258570,
        2057840000
    ],
    [
        1258560,
        2087323000
    ],
    [
        1258540,
        2156000000
    ],
    [
        1258510,
        2157000000
    ],
    [
        1258480,
        2158180000
    ],
    [
        1258460,
        2162870000
    ],
    [
        1258450,
        2163000000
    ],
    [
        1258440,
        2185000000
    ],
    [
        1258420,
        2204050000
    ],
    [
        1258410,
        2224000000
    ],
    [
        1258390,
        2222350000
    ],
    [
        1258370,
        2159580000
    ],
    [
        1258360,
        2155490000
    ],
    [
        1258350,
        2127160000
    ],
    [
        1258340,
        2121991000
    ],
    [
        1258330,
        2123000000
    ],
    [
        1258310,
        2155000000
    ],
    [
        1258300,
        2156000000
    ],
    [
        1258290,
        2157170000
    ],
    [
        1258270,
        2157210000
    ],
    [
        1258260,
        2155490000
    ],
    [
        1258250,
        2159987500
    ],
    [
        1258240,
        2165954500
    ],
    [
        1258230,
        2165420000
    ],
    [
        1258220,
        2167000000
    ],
    [
        1258210,
        2171562500
    ],
    [
        1258200,
        2172943000
    ],
    [
        1258190,
        2187820000
    ],
    [
        1258180,
        2194816000
    ],
    [
        1258170,
        2199000000
    ],
    [
        1258160,
        2200000000
    ],
    [
        1258140,
        2191000000
    ],
    [
        1258100,
        2190000000
    ],
    [
        1258070,
        2193000000
    ],
    [
        1258060,
        2194000000
    ],
    [
        1258050,
        2192757000
    ],
    [
        1258040,
        2192054000
    ],
    [
        1258030,
        2194520000
    ],
    [
        1258010,
        2196000000
    ],
    [
        1258000,
        2196460000
    ],
    [
        1257990,
        2195000000
    ],
    [
        1257980,
        2186744000
    ],
    [
        1257970,
        2182170000
    ],
    [
        1257960,
        2182460000
    ],
    [
        1257950,
        2187520000
    ],
    [
        1257940,
        2188320000
    ],
    [
        1257930,
        2189145000
    ],
    [
        1257920,
        2183980000
    ],
    [
        1257900,
        2180592000
    ],
    [
        1257890,
        2171522500
    ],
    [
        1257880,
        2171000000
    ],
    [
        1257870,
        2170812500
    ],
    [
        1257860,
        2175460000
    ],
    [
        1257850,
        2168580000
    ],
    [
        1257840,
        2165000000
    ],
    [
        1257830,
        2162164000
    ],
    [
        1257820,
        2162257500
    ],
    [
        1257800,
        2167250000
    ],
    [
        1257790,
        2157117500
    ],
    [
        1257770,
        2164580000
    ],
    [
        1257760,
        2172000000
    ],
    [
        1257750,
        2180490000
    ],
    [
        1257740,
        2181505000
    ],
    [
        1257730,
        2187000000
    ],
    [
        1257710,
        2188000000
    ],
    [
        1257700,
        2187400000
    ],
    [
        1257690,
        2182914000
    ],
    [
        1257680,
        2181901000
    ],
    [
        1257670,
        2183000000
    ],
    [
        1257660,
        2186000000
    ],
    [
        1257650,
        2186140000
    ],
    [
        1257640,
        2188000000
    ],
    [
        1257630,
        2189295000
    ],
    [
        1257610,
        2190000000
    ],
    [
        1257580,
        2203000000
    ],
    [
        1257560,
        2195000000
    ],
    [
        1257530,
        2195150000
    ],
    [
        1257520,
        2192895000
    ],
    [
        1257510,
        2181000000
    ],
    [
        1257490,
        2180400000
    ],
    [
        1257470,
        2180490000
    ],
    [
        1257460,
        2163304000
    ],
    [
        1257450,
        2156810000
    ],
    [
        1257440,
        2162010000
    ],
    [
        1257430,
        2160782000
    ],
    [
        1257410,
        2148000000
    ],
    [
        1257400,
        2147346000
    ],
    [
        1257390,
        2136000000
    ],
    [
        1257380,
        2132121000
    ],
    [
        1257370,
        2123310000
    ],
    [
        1257290,
        2117000000
    ],
    [
        1257280,
        2122430000
    ],
    [
        1257270,
        2119000000
    ],
    [
        1257260,
        2118235000
    ],
    [
        1257250,
        2112959000
    ],
    [
        1257240,
        2105000000
    ],
    [
        1257230,
        2100308000
    ],
    [
        1257220,
        2098430000
    ],
    [
        1257210,
        2096751000
    ],
    [
        1257200,
        2091320000
    ],
    [
        1257190,
        2074699000
    ],
    [
        1257180,
        2071000000
    ],
    [
        1257170,
        2074396000
    ],
    [
        1257160,
        2083330000
    ],
    [
        1257150,
        2088037000
    ],
    [
        1257120,
        2065000000
    ],
    [
        1257060,
        2115000000
    ],
    [
        1257030,
        2137680000
    ],
    [
        1257020,
        2152000000
    ],
    [
        1257010,
        2153000000
    ],
    [
        1257000,
        2161000000
    ],
    [
        1256980,
        2158227500
    ],
    [
        1256950,
        2161000000
    ],
    [
        1256920,
        2190000000
    ],
    [
        1256910,
        2191832500
    ],
    [
        1256890,
        2192000000
    ],
    [
        1256880,
        2177860000
    ],
    [
        1256870,
        2173820000
    ],
    [
        1256860,
        2170944000
    ],
    [
        1256850,
        2164190000
    ],
    [
        1256840,
        2164602000
    ],
    [
        1256830,
        2166000000
    ],
    [
        1256820,
        2175142000
    ],
    [
        1256810,
        2175915000
    ],
    [
        1256800,
        2178720000
    ],
    [
        1256790,
        2165920000
    ],
    [
        1256780,
        2157942500
    ],
    [
        1256750,
        2134090000
    ],
    [
        1256740,
        2122230000
    ],
    [
        1256730,
        2120451000
    ],
    [
        1256720,
        2120000000
    ],
    [
        1256710,
        2110614000
    ],
    [
        1256690,
        2094930000
    ],
    [
        1256680,
        2069336000
    ],
    [
        1256670,
        2061000000
    ],
    [
        1256660,
        2059000000
    ],
    [
        1256630,
        2058000000
    ],
    [
        1256620,
        2055552000
    ],
    [
        1256610,
        2054000000
    ],
    [
        1256600,
        2058000000
    ],
    [
        1256580,
        2063970000
    ],
    [
        1256570,
        2064000000
    ],
    [
        1256560,
        2067785000
    ],
    [
        1256550,
        2065000000
    ],
    [
        1256540,
        2069000000
    ],
    [
        1256520,
        2069160000
    ],
    [
        1256500,
        2072850000
    ],
    [
        1256490,
        2068630000
    ],
    [
        1256480,
        2064000000
    ],
    [
        1256470,
        2058750000
    ],
    [
        1256460,
        2060200000
    ],
    [
        1256450,
        2059000000
    ],
    [
        1256430,
        2064030000
    ],
    [
        1256420,
        2068000000
    ],
    [
        1256410,
        2069950000
    ],
    [
        1256400,
        2071200000
    ],
    [
        1256390,
        2079940000
    ],
    [
        1256380,
        2080000000
    ],
    [
        1256370,
        2079940000
    ],
    [
        1256350,
        2072530000
    ],
    [
        1256330,
        2072000000
    ],
    [
        1256320,
        2071622500
    ],
    [
        1256310,
        2070935000
    ],
    [
        1256290,
        2056000000
    ],
    [
        1256280,
        2055000000
    ],
    [
        1256270,
        2049630000
    ],
    [
        1256260,
        2047000000
    ],
    [
        1256250,
        2049802500
    ],
    [
        1256230,
        2039000000
    ],
    [
        1256220,
        2038790000
    ],
    [
        1256210,
        2035642500
    ],
    [
        1256200,
        2036330000
    ],
    [
        1256190,
        2038000000
    ],
    [
        1256170,
        2024700000
    ],
    [
        1256160,
        2014421000
    ],
    [
        1256150,
        2005180000
    ],
    [
        1256140,
        2005000000
    ],
    [
        1256130,
        2018000000
    ],
    [
        1256120,
        2024000000
    ],
    [
        1256110,
        2029101000
    ],
    [
        1256100,
        2037177500
    ],
    [
        1256090,
        2037000000
    ],
    [
        1256070,
        2036000000
    ],
    [
        1256060,
        2033770000
    ],
    [
        1256050,
        2033972500
    ],
    [
        1256040,
        2033555000
    ],
    [
        1256030,
        2034190000
    ],
    [
        1256020,
        2032000000
    ],
    [
        1256010,
        2041220000
    ],
    [
        1256000,
        2047490000
    ],
    [
        1255990,
        2074158000
    ],
    [
        1255980,
        2081000000
    ],
    [
        1255970,
        2078655000
    ],
    [
        1255960,
        2091617000
    ],
    [
        1255950,
        2107705000
    ],
    [
        1255940,
        2121000000
    ],
    [
        1255930,
        2149000000
    ],
    [
        1255920,
        2157090000
    ],
    [
        1255910,
        2159370000
    ],
    [
        1255900,
        2163180000
    ],
    [
        1255890,
        2165012500
    ],
    [
        1255880,
        2168280000
    ],
    [
        1255870,
        2168220000
    ],
    [
        1255850,
        2168000000
    ],
    [
        1255830,
        2164090000
    ],
    [
        1255820,
        2163230000
    ],
    [
        1255810,
        2159000000
    ],
    [
        1255790,
        2158000000
    ],
    [
        1255780,
        2162110000
    ],
    [
        1255770,
        2161570000
    ],
    [
        1255740,
        2157000000
    ],
    [
        1255730,
        2170920000
    ],
    [
        1255720,
        2179000000
    ],
    [
        1255710,
        2181750000
    ],
    [
        1255700,
        2177496000
    ],
    [
        1255690,
        2175520000
    ],
    [
        1255680,
        2177417000
    ],
    [
        1255670,
        2178794000
    ],
    [
        1255650,
        2181750000
    ],
    [
        1255640,
        2182990000
    ],
    [
        1255620,
        2183295000
    ],
    [
        1255610,
        2183000000
    ],
    [
        1255590,
        2177220000
    ],
    [
        1255580,
        2184330000
    ],
    [
        1255560,
        2190000000
    ],
    [
        1255550,
        2176675000
    ],
    [
        1255510,
        2157000000
    ],
    [
        1255500,
        2156000000
    ],
    [
        1255490,
        2149548000
    ],
    [
        1255480,
        2141680000
    ],
    [
        1255470,
        2145288000
    ],
    [
        1255460,
        2149040000
    ],
    [
        1255450,
        2151872500
    ],
    [
        1255440,
        2156000000
    ],
    [
        1255430,
        2159212500
    ],
    [
        1255420,
        2156070000
    ],
    [
        1255410,
        2158000000
    ],
    [
        1255400,
        2160844000
    ],
    [
        1255390,
        2165987500
    ],
    [
        1255340,
        2156000000
    ],
    [
        1255330,
        2154920000
    ],
    [
        1255310,
        2141020000
    ],
    [
        1255290,
        2136000000
    ],
    [
        1255280,
        2133000000
    ],
    [
        1255270,
        2121000000
    ],
    [
        1255260,
        2116840000
    ],
    [
        1255250,
        2117213000
    ],
    [
        1255240,
        2121000000
    ],
    [
        1255230,
        2120615000
    ],
    [
        1255220,
        2121000000
    ],
    [
        1255210,
        2130340000
    ],
    [
        1255200,
        2142586000
    ],
    [
        1255190,
        2143318000
    ],
    [
        1255170,
        2148870000
    ],
    [
        1255160,
        2150000000
    ],
    [
        1255150,
        2159479000
    ],
    [
        1255130,
        2164000000
    ],
    [
        1255100,
        2170000000
    ],
    [
        1255090,
        2174180000
    ],
    [
        1255070,
        2176552000
    ],
    [
        1255060,
        2179051000
    ],
    [
        1255050,
        2180000000
    ],
    [
        1255040,
        2181000000
    ],
    [
        1255030,
        2183000000
    ],
    [
        1255020,
        2180101000
    ],
    [
        1255010,
        2180151000
    ],
    [
        1255000,
        2181960000
    ],
    [
        1254990,
        2185815000
    ],
    [
        1254960,
        2180492500
    ],
    [
        1254950,
        2172260000
    ],
    [
        1254930,
        2171970000
    ],
    [
        1254920,
        2172570000
    ],
    [
        1254910,
        2174180000
    ],
    [
        1254900,
        2173250000
    ],
    [
        1254870,
        2170000000
    ],
    [
        1254860,
        2174000000
    ],
    [
        1254850,
        2146164000
    ],
    [
        1254830,
        2172230000
    ],
    [
        1254820,
        2177000000
    ],
    [
        1254800,
        2187540000
    ],
    [
        1254790,
        2191241000
    ],
    [
        1254780,
        2193980000
    ],
    [
        1254770,
        2195010000
    ],
    [
        1254760,
        2195830000
    ],
    [
        1254730,
        2193000000
    ],
    [
        1254720,
        2188250000
    ],
    [
        1254710,
        2188309000
    ],
    [
        1254700,
        2191870000
    ],
    [
        1254690,
        2194040000
    ],
    [
        1254680,
        2207000000
    ],
    [
        1254590,
        2197180000
    ],
    [
        1254580,
        2197042500
    ],
    [
        1254570,
        2199000000
    ],
    [
        1254550,
        2198940000
    ],
    [
        1254540,
        2196840000
    ],
    [
        1254530,
        2194017500
    ],
    [
        1254520,
        2190735000
    ],
    [
        1254510,
        2188000000
    ],
    [
        1254500,
        2188040000
    ],
    [
        1254490,
        2188000000
    ],
    [
        1254480,
        2184450000
    ],
    [
        1254470,
        2199000000
    ],
    [
        1254450,
        2198580000
    ],
    [
        1254440,
        2209770000
    ],
    [
        1254400,
        2211560000
    ],
    [
        1254390,
        2207321000
    ],
    [
        1254380,
        2205000000
    ],
    [
        1254370,
        2201500000
    ],
    [
        1254360,
        2201000000
    ],
    [
        1254350,
        2197810000
    ],
    [
        1254340,
        2199140000
    ],
    [
        1254330,
        2198504000
    ],
    [
        1254320,
        2196395000
    ],
    [
        1254300,
        2195771000
    ],
    [
        1254290,
        2193370000
    ],
    [
        1254280,
        2201493000
    ],
    [
        1254270,
        2205000000
    ],
    [
        1254260,
        2213537000
    ],
    [
        1254250,
        2225480000
    ],
    [
        1254220,
        2217600000
    ],
    [
        1254190,
        2205000000
    ],
    [
        1254170,
        2199872500
    ],
    [
        1254160,
        2198656250
    ],
    [
        1254150,
        2195276250
    ],
    [
        1254140,
        2194000000
    ],
    [
        1254130,
        2190556500
    ],
    [
        1254120,
        2190543500
    ],
    [
        1254110,
        2190560000
    ],
    [
        1254100,
        2189330000
    ],
    [
        1254090,
        2187860000
    ],
    [
        1254080,
        2185005000
    ],
    [
        1254070,
        2183590000
    ],
    [
        1254060,
        2178478250
    ],
    [
        1254050,
        2176558750
    ],
    [
        1254040,
        2173154000
    ],
    [
        1254030,
        2178735000
    ],
    [
        1254010,
        2177440000
    ],
    [
        1254000,
        2171315000
    ],
    [
        1253990,
        2168574500
    ],
    [
        1253980,
        2172915000
    ],
    [
        1253970,
        2173140000
    ],
    [
        1253960,
        2171555000
    ],
    [
        1253940,
        2166240000
    ],
    [
        1253930,
        2163755000
    ],
    [
        1253920,
        2163165000
    ],
    [
        1253910,
        2159250000
    ],
    [
        1253890,
        2158932500
    ],
    [
        1253870,
        2160860000
    ],
    [
        1253860,
        2155955000
    ],
    [
        1253850,
        2143401000
    ],
    [
        1253840,
        2143435500
    ],
    [
        1253830,
        2147860500
    ],
    [
        1253820,
        2152715500
    ],
    [
        1253810,
        2151270500
    ],
    [
        1253800,
        2156700000
    ],
    [
        1253790,
        2151009500
    ],
    [
        1253780,
        2149190000
    ],
    [
        1253770,
        2147815000
    ],
    [
        1253760,
        2143757000
    ],
    [
        1253740,
        2143320000
    ],
    [
        1253710,
        2135636500
    ],
    [
        1253700,
        2138320000
    ],
    [
        1253690,
        2136680500
    ],
    [
        1253670,
        2127411250
    ],
    [
        1253660,
        2117349500
    ],
    [
        1253640,
        2114240000
    ],
    [
        1253630,
        2109190000
    ],
    [
        1253620,
        2111574500
    ],
    [
        1253610,
        2112029500
    ],
    [
        1253600,
        2111430000
    ],
    [
        1253570,
        2120115000
    ],
    [
        1253560,
        2107780000
    ],
    [
        1253550,
        2119280000
    ],
    [
        1253540,
        2117344750
    ],
    [
        1253530,
        2105783500
    ],
    [
        1253520,
        2105508500
    ],
    [
        1253510,
        2106323500
    ],
    [
        1253500,
        2108431250
    ],
    [
        1253480,
        2114264000
    ],
    [
        1253470,
        2115228500
    ],
    [
        1253460,
        2116505000
    ],
    [
        1253450,
        2117385000
    ],
    [
        1253440,
        2120085000
    ],
    [
        1253430,
        2106225000
    ],
    [
        1253420,
        2100840000
    ],
    [
        1253410,
        2101375000
    ],
    [
        1253400,
        2098017500
    ],
    [
        1253390,
        2097857500
    ],
    [
        1253380,
        2098257500
    ],
    [
        1253370,
        2095575500
    ],
    [
        1253290,
        2102198500
    ],
    [
        1253280,
        2106525000
    ],
    [
        1253270,
        2113395000
    ],
    [
        1253260,
        2123709500
    ],
    [
        1253250,
        2126680000
    ],
    [
        1253240,
        2134165000
    ],
    [
        1253230,
        2137973750
    ],
    [
        1253220,
        2141221250
    ],
    [
        1253210,
        2138510000
    ],
    [
        1253200,
        2136038000
    ],
    [
        1253170,
        2122340250
    ],
    [
        1253160,
        2113865750
    ],
    [
        1253150,
        2121201250
    ],
    [
        1253140,
        2125420000
    ],
    [
        1253130,
        2128020500
    ],
    [
        1253120,
        2133073750
    ],
    [
        1253110,
        2131495000
    ],
    [
        1253100,
        2132153000
    ],
    [
        1253090,
        2126115000
    ],
    [
        1253080,
        2125000000
    ],
    [
        1253070,
        2124732000
    ],
    [
        1253060,
        2121360250
    ],
    [
        1253050,
        2119667000
    ],
    [
        1253040,
        2121755500
    ],
    [
        1253030,
        2121890000
    ],
    [
        1253010,
        2128029000
    ],
    [
        1253000,
        2151863250
    ],
    [
        1252990,
        2153959500
    ],
    [
        1252980,
        2153554500
    ],
    [
        1252970,
        2178081000
    ],
    [
        1252960,
        2181000000
    ],
    [
        1252950,
        2196495000
    ],
    [
        1252940,
        2200787000
    ],
    [
        1252930,
        2204000000
    ],
    [
        1252910,
        2204333750
    ],
    [
        1252900,
        2205349500
    ],
    [
        1252890,
        2211543750
    ],
    [
        1252880,
        2215927500
    ],
    [
        1252870,
        2215455000
    ],
    [
        1252860,
        2214022000
    ],
    [
        1252850,
        2211650250
    ],
    [
        1252840,
        2207955000
    ],
    [
        1252830,
        2209930000
    ],
    [
        1252820,
        2215000000
    ],
    [
        1252800,
        2221490000
    ],
    [
        1252790,
        2227000000
    ],
    [
        1252770,
        2231985000
    ],
    [
        1252760,
        2230456000
    ],
    [
        1252740,
        2232000000
    ],
    [
        1252730,
        2245000000
    ],
    [
        1252710,
        2250000000
    ],
    [
        1252690,
        2252000000
    ],
    [
        1252680,
        2257000000
    ],
    [
        1252670,
        2259610000
    ],
    [
        1252660,
        2257000000
    ],
    [
        1252650,
        2256710000
    ],
    [
        1252630,
        2257000000
    ],
    [
        1252620,
        2261821000
    ],
    [
        1252610,
        2257000000
    ],
    [
        1252600,
        2267266000
    ],
    [
        1252590,
        2274031000
    ],
    [
        1252570,
        2273000000
    ],
    [
        1252560,
        2270600000
    ],
    [
        1252540,
        2273000000
    ],
    [
        1252530,
        2271987500
    ],
    [
        1252510,
        2257000000
    ],
    [
        1252500,
        2256000000
    ],
    [
        1252480,
        2255710000
    ],
    [
        1252470,
        2253100000
    ],
    [
        1252430,
        2237000000
    ],
    [
        1252410,
        2230580000
    ],
    [
        1252400,
        2227052000
    ],
    [
        1252380,
        2230580000
    ],
    [
        1252360,
        2227000000
    ],
    [
        1252340,
        2230350000
    ],
    [
        1252310,
        2237000000
    ],
    [
        1252210,
        2235000000
    ],
    [
        1252190,
        2222875000
    ],
    [
        1252180,
        2220650000
    ],
    [
        1252170,
        2222608000
    ],
    [
        1252160,
        2222906000
    ],
    [
        1252150,
        2224487500
    ],
    [
        1252140,
        2220260000
    ],
    [
        1252120,
        2220600000
    ],
    [
        1252110,
        2229000000
    ],
    [
        1252100,
        2229340000
    ],
    [
        1252090,
        2229000000
    ],
    [
        1252080,
        2226000000
    ],
    [
        1252060,
        2222340000
    ],
    [
        1252050,
        2228410000
    ],
    [
        1252030,
        2231307500
    ],
    [
        1252020,
        2230880000
    ],
    [
        1252010,
        2231990000
    ],
    [
        1252000,
        2253150000
    ],
    [
        1251990,
        2256000000
    ],
    [
        1251980,
        2272283000
    ],
    [
        1251970,
        2283000000
    ],
    [
        1251960,
        2282827500
    ],
    [
        1251950,
        2284361000
    ],
    [
        1251940,
        2291355000
    ],
    [
        1251820,
        2260470000
    ],
    [
        1251810,
        2256000000
    ],
    [
        1251800,
        2255782000
    ],
    [
        1251770,
        2259000000
    ],
    [
        1251760,
        2258600000
    ],
    [
        1251750,
        2249986000
    ],
    [
        1251720,
        2259000000
    ],
    [
        1251670,
        2261000000
    ],
    [
        1251600,
        2260110000
    ],
    [
        1251590,
        2259826000
    ],
    [
        1251570,
        2259000000
    ],
    [
        1251560,
        2265656250
    ],
    [
        1251550,
        2264823250
    ],
    [
        1251540,
        2279046250
    ],
    [
        1251440,
        2288079500
    ],
    [
        1251430,
        2366074000
    ],
    [
        1251400,
        2374239000
    ],
    [
        1251380,
        2471448750
    ],
    [
        1251330,
        2481345250
    ],
    [
        1251320,
        2483150000
    ],
    [
        1251310,
        2487953750
    ],
    [
        1251300,
        2484613750
    ],
    [
        1251280,
        2472160000
    ],
    [
        1251250,
        2461500000
    ],
    [
        1251240,
        2461000000
    ],
    [
        1251220,
        2451596500
    ],
    [
        1251200,
        2441265000
    ],
    [
        1251190,
        2437880000
    ],
    [
        1251160,
        2440500000
    ],
    [
        1251140,
        2437765000
    ],
    [
        1251130,
        2435265000
    ],
    [
        1251100,
        2441000000
    ],
    [
        1251080,
        2435531750
    ],
    [
        1251070,
        2437943000
    ],
    [
        1251060,
        2439965000
    ],
    [
        1251050,
        2438250000
    ],
    [
        1251030,
        2441785000
    ],
    [
        1251020,
        2453736250
    ],
    [
        1251000,
        2457155000
    ],
    [
        1250980,
        2457505000
    ],
    [
        1250970,
        2464500000
    ],
    [
        1250960,
        2463000000
    ],
    [
        1250950,
        2466235000
    ],
    [
        1250940,
        2463000000
    ],
    [
        1250910,
        2450870000
    ],
    [
        1250890,
        2445365000
    ],
    [
        1250880,
        2448565000
    ],
    [
        1250870,
        2421000000
    ],
    [
        1250850,
        2416660000
    ],
    [
        1250840,
        2407103750
    ],
    [
        1250820,
        2408550500
    ],
    [
        1250810,
        2420057000
    ],
    [
        1250780,
        2407077500
    ],
    [
        1250770,
        2399140000
    ],
    [
        1250750,
        2398087500
    ],
    [
        1250740,
        2397280000
    ],
    [
        1250730,
        2402695000
    ],
    [
        1250720,
        2404434000
    ],
    [
        1250710,
        2400345000
    ],
    [
        1250690,
        2397490000
    ],
    [
        1250670,
        2383597500
    ],
    [
        1250660,
        2389460000
    ],
    [
        1250650,
        2392265000
    ],
    [
        1250630,
        2399427500
    ],
    [
        1250610,
        2414800000
    ],
    [
        1250600,
        2426820000
    ],
    [
        1250590,
        2428490500
    ],
    [
        1250580,
        2428666500
    ],
    [
        1250570,
        2440786000
    ],
    [
        1250560,
        2438202500
    ],
    [
        1250550,
        2428385000
    ],
    [
        1250530,
        2425500000
    ],
    [
        1250520,
        2414779000
    ],
    [
        1250500,
        2419300000
    ],
    [
        1250490,
        2410300000
    ],
    [
        1250480,
        2399932500
    ],
    [
        1250450,
        2391000000
    ],
    [
        1250440,
        2392230000
    ],
    [
        1250430,
        2401222500
    ],
    [
        1250420,
        2404919000
    ],
    [
        1250400,
        2406000000
    ],
    [
        1250390,
        2404793750
    ],
    [
        1250380,
        2404300500
    ],
    [
        1250370,
        2406094250
    ],
    [
        1250360,
        2402500000
    ],
    [
        1250340,
        2400561250
    ],
    [
        1250330,
        2402676250
    ],
    [
        1250310,
        2402500000
    ],
    [
        1250300,
        2392769500
    ],
    [
        1250290,
        2390667500
    ],
    [
        1250280,
        2389265750
    ],
    [
        1250270,
        2383098000
    ],
    [
        1250240,
        2382855000
    ],
    [
        1250230,
        2384205000
    ],
    [
        1250220,
        2385823750
    ],
    [
        1250210,
        2384016250
    ],
    [
        1250200,
        2387614000
    ],
    [
        1250190,
        2388000000
    ],
    [
        1250180,
        2387550000
    ],
    [
        1250150,
        2382710000
    ],
    [
        1250090,
        2393972500
    ],
    [
        1250080,
        2393714000
    ],
    [
        1250060,
        2393235000
    ],
    [
        1250050,
        2407378000
    ],
    [
        1250030,
        2418000000
    ],
    [
        1250020,
        2421000000
    ],
    [
        1250000,
        2426000000
    ],
    [
        1249990,
        2421300000
    ],
    [
        1249980,
        2418930000
    ],
    [
        1249950,
        2418000000
    ],
    [
        1249920,
        2415090000
    ],
    [
        1249900,
        2414767000
    ],
    [
        1249890,
        2418000000
    ],
    [
        1249860,
        2433705000
    ],
    [
        1249850,
        2431000000
    ],
    [
        1249840,
        2404527500
    ],
    [
        1249830,
        2376360000
    ],
    [
        1249820,
        2367310000
    ],
    [
        1249810,
        2363757000
    ],
    [
        1249800,
        2361500000
    ],
    [
        1249780,
        2431000000
    ],
    [
        1249740,
        2435000000
    ],
    [
        1249730,
        2437093000
    ],
    [
        1249710,
        2435250000
    ],
    [
        1249700,
        2436457000
    ],
    [
        1249690,
        2441000000
    ],
    [
        1249680,
        2439757500
    ],
    [
        1249670,
        2441000000
    ],
    [
        1249650,
        2444460000
    ],
    [
        1249640,
        2441000000
    ],
    [
        1249630,
        2437762500
    ],
    [
        1249620,
        2438240000
    ],
    [
        1249610,
        2438992000
    ],
    [
        1249590,
        2431277000
    ],
    [
        1249580,
        2413288000
    ],
    [
        1249560,
        2404115000
    ],
    [
        1249550,
        2400365000
    ],
    [
        1249540,
        2409000000
    ],
    [
        1249520,
        2408050000
    ],
    [
        1249490,
        2409000000
    ],
    [
        1249460,
        2410000000
    ],
    [
        1249450,
        2409110000
    ],
    [
        1249440,
        2410000000
    ],
    [
        1249430,
        2410445000
    ],
    [
        1249400,
        2435250000
    ],
    [
        1249340,
        2447000000
    ],
    [
        1249320,
        2448340000
    ],
    [
        1249310,
        2444622500
    ],
    [
        1249300,
        2443476000
    ],
    [
        1249290,
        2450740000
    ],
    [
        1249280,
        2452223000
    ],
    [
        1249270,
        2452835000
    ],
    [
        1249260,
        2452980000
    ],
    [
        1249250,
        2456002500
    ],
    [
        1249230,
        2452980000
    ],
    [
        1249200,
        2450502000
    ],
    [
        1249190,
        2448340000
    ],
    [
        1249180,
        2435250000
    ],
    [
        1249170,
        2429848000
    ],
    [
        1249150,
        2419650000
    ],
    [
        1249140,
        2418292000
    ],
    [
        1249120,
        2418000000
    ],
    [
        1249100,
        2415840250
    ],
    [
        1249090,
        2414620000
    ],
    [
        1249060,
        2413340000
    ],
    [
        1249030,
        2433000000
    ],
    [
        1249000,
        2446290000
    ],
    [
        1248990,
        2436020000
    ],
    [
        1248980,
        2439941000
    ],
    [
        1248970,
        2468000000
    ],
    [
        1248960,
        2474426000
    ],
    [
        1248940,
        2481106000
    ],
    [
        1248930,
        2475871000
    ],
    [
        1248920,
        2475550000
    ],
    [
        1248910,
        2468000000
    ],
    [
        1248890,
        2440211000
    ],
    [
        1248880,
        2439560000
    ],
    [
        1248860,
        2438982500
    ],
    [
        1248850,
        2430177500
    ],
    [
        1248810,
        2432749000
    ],
    [
        1248800,
        2449790000
    ],
    [
        1248780,
        2451000000
    ],
    [
        1248770,
        2455301000
    ],
    [
        1248760,
        2458950000
    ],
    [
        1248750,
        2455000000
    ],
    [
        1248700,
        2467640000
    ],
    [
        1248680,
        2471255500
    ],
    [
        1248670,
        2481060000
    ],
    [
        1248660,
        2485275000
    ],
    [
        1248650,
        2487885000
    ],
    [
        1248640,
        2484755500
    ],
    [
        1248630,
        2486150500
    ],
    [
        1248620,
        2489182250
    ],
    [
        1248600,
        2485576000
    ],
    [
        1248590,
        2479522000
    ],
    [
        1248580,
        2479110000
    ],
    [
        1248570,
        2490885000
    ],
    [
        1248560,
        2491000000
    ],
    [
        1248550,
        2492950000
    ],
    [
        1248530,
        2489910000
    ],
    [
        1248480,
        2547105000
    ],
    [
        1248450,
        2541407500
    ],
    [
        1248270,
        2535710000
    ],
    [
        1248260,
        2553600000
    ],
    [
        1248240,
        2545999000
    ],
    [
        1248190,
        2532000000
    ],
    [
        1248180,
        2526522500
    ],
    [
        1248160,
        2526000000
    ],
    [
        1248150,
        2532000000
    ],
    [
        1248120,
        2519000000
    ],
    [
        1248110,
        2514136000
    ],
    [
        1248100,
        2501000000
    ],
    [
        1248090,
        2492490000
    ],
    [
        1248080,
        2486312000
    ],
    [
        1248030,
        2492490000
    ],
    [
        1248020,
        2510540000
    ],
    [
        1248010,
        2519630000
    ],
    [
        1248000,
        2522227500
    ],
    [
        1247990,
        2528340000
    ],
    [
        1247980,
        2530575000
    ],
    [
        1247970,
        2517000000
    ],
    [
        1247960,
        2516960000
    ],
    [
        1247950,
        2517000000
    ],
    [
        1247930,
        2517100000
    ],
    [
        1247920,
        2517000000
    ],
    [
        1247910,
        2514072500
    ],
    [
        1247900,
        2516000000
    ],
    [
        1247880,
        2513147500
    ],
    [
        1247870,
        2514590000
    ],
    [
        1247850,
        2506240000
    ],
    [
        1247830,
        2503510000
    ],
    [
        1247810,
        2480819000
    ],
    [
        1247800,
        2509670000
    ],
    [
        1247770,
        2511000000
    ],
    [
        1247760,
        2513426000
    ],
    [
        1247720,
        2527400000
    ],
    [
        1247710,
        2525710000
    ],
    [
        1247700,
        2523000000
    ],
    [
        1247690,
        2510244000
    ],
    [
        1247680,
        2508000000
    ],
    [
        1247670,
        2512167500
    ],
    [
        1247660,
        2508000000
    ],
    [
        1247640,
        2494601000
    ],
    [
        1247630,
        2492205000
    ],
    [
        1247610,
        2498000000
    ],
    [
        1247600,
        2498687000
    ],
    [
        1247590,
        2500007500
    ],
    [
        1247580,
        2505000000
    ],
    [
        1247570,
        2507078000
    ],
    [
        1247560,
        2505737500
    ],
    [
        1247550,
        2515421000
    ],
    [
        1247540,
        2527400000
    ],
    [
        1247530,
        2531000000
    ],
    [
        1247520,
        2540450000
    ],
    [
        1247510,
        2540572500
    ],
    [
        1247500,
        2544155000
    ],
    [
        1247490,
        2569810000
    ],
    [
        1247480,
        2570000000
    ],
    [
        1247470,
        2575000000
    ],
    [
        1247430,
        2570000000
    ],
    [
        1247420,
        2569000000
    ],
    [
        1247410,
        2559780000
    ],
    [
        1247400,
        2559560000
    ],
    [
        1247370,
        2538000000
    ],
    [
        1247360,
        2537000000
    ],
    [
        1247340,
        2527400000
    ],
    [
        1247330,
        2446679000
    ],
    [
        1247300,
        2439000000
    ],
    [
        1247290,
        2438000000
    ],
    [
        1247270,
        2437486000
    ],
    [
        1247250,
        2431000000
    ],
    [
        1247240,
        2432040000
    ],
    [
        1247230,
        2433540000
    ],
    [
        1247220,
        2432237500
    ],
    [
        1247210,
        2429460000
    ],
    [
        1247180,
        2419285000
    ],
    [
        1247170,
        2404739000
    ],
    [
        1247160,
        2403230000
    ],
    [
        1247150,
        2405000000
    ],
    [
        1247140,
        2407674000
    ],
    [
        1247130,
        2406350000
    ],
    [
        1247110,
        2406794000
    ],
    [
        1247100,
        2415550000
    ],
    [
        1247090,
        2415843000
    ],
    [
        1247080,
        2406810000
    ],
    [
        1247070,
        2408170000
    ],
    [
        1247060,
        2406032500
    ],
    [
        1247050,
        2410277000
    ],
    [
        1247040,
        2412860000
    ],
    [
        1247030,
        2415550000
    ],
    [
        1247020,
        2395650000
    ],
    [
        1247010,
        2397787000
    ],
    [
        1247000,
        2397040000
    ],
    [
        1246990,
        2395650000
    ],
    [
        1246980,
        2404550000
    ],
    [
        1246960,
        2406000000
    ],
    [
        1246950,
        2420344000
    ],
    [
        1246940,
        2423402500
    ],
    [
        1246930,
        2422353000
    ],
    [
        1246920,
        2423417000
    ],
    [
        1246860,
        2412850000
    ],
    [
        1246830,
        2371760000
    ],
    [
        1246810,
        2358860000
    ],
    [
        1246800,
        2348000000
    ],
    [
        1246790,
        2332457500
    ],
    [
        1246780,
        2324490000
    ],
    [
        1246770,
        2315027500
    ],
    [
        1246750,
        2322000000
    ],
    [
        1246740,
        2332014500
    ],
    [
        1246730,
        2340530000
    ],
    [
        1246720,
        2342071000
    ],
    [
        1246710,
        2343612000
    ],
    [
        1246700,
        2337620000
    ],
    [
        1246690,
        2335720000
    ],
    [
        1246660,
        2333000000
    ],
    [
        1246650,
        2332850000
    ],
    [
        1246630,
        2326770000
    ],
    [
        1246610,
        2326270000
    ],
    [
        1246600,
        2331400000
    ],
    [
        1246590,
        2334270000
    ],
    [
        1246580,
        2335620000
    ],
    [
        1246570,
        2336000000
    ],
    [
        1246560,
        2340710000
    ],
    [
        1246550,
        2339000000
    ],
    [
        1246540,
        2323000000
    ],
    [
        1246530,
        2322000000
    ],
    [
        1246520,
        2323970000
    ],
    [
        1246500,
        2335980000
    ],
    [
        1246480,
        2335130000
    ],
    [
        1246470,
        2339552500
    ],
    [
        1246460,
        2343727500
    ],
    [
        1246450,
        2337710000
    ],
    [
        1246440,
        2337060000
    ],
    [
        1246420,
        2328900000
    ],
    [
        1246410,
        2346540000
    ],
    [
        1246390,
        2324070000
    ],
    [
        1246380,
        2322000000
    ],
    [
        1246360,
        2278370000
    ],
    [
        1246330,
        2277550000
    ],
    [
        1246310,
        2274000000
    ],
    [
        1246290,
        2261500000
    ],
    [
        1246280,
        2260000000
    ],
    [
        1246270,
        2259030000
    ],
    [
        1246260,
        2260000000
    ],
    [
        1246250,
        2262000000
    ],
    [
        1246240,
        2260000000
    ],
    [
        1246210,
        2261680000
    ],
    [
        1246190,
        2260000000
    ],
    [
        1246180,
        2256020000
    ],
    [
        1246160,
        2266000000
    ],
    [
        1246150,
        2274492500
    ],
    [
        1246140,
        2277000000
    ],
    [
        1246130,
        2279000000
    ],
    [
        1246120,
        2277000000
    ],
    [
        1246110,
        2274550000
    ],
    [
        1246100,
        2272000000
    ],
    [
        1246080,
        2261960000
    ],
    [
        1246060,
        2264067500
    ],
    [
        1246050,
        2255440000
    ],
    [
        1246040,
        2291069000
    ],
    [
        1246030,
        2299000000
    ],
    [
        1246020,
        2303000000
    ],
    [
        1246010,
        2306320000
    ],
    [
        1246000,
        2307450000
    ],
    [
        1245990,
        2306837500
    ],
    [
        1245980,
        2307450000
    ],
    [
        1245970,
        2305080000
    ],
    [
        1245960,
        2304990000
    ],
    [
        1245950,
        2263717500
    ],
    [
        1245940,
        2253725000
    ],
    [
        1245920,
        2246000000
    ],
    [
        1245910,
        2287330000
    ],
    [
        1245880,
        2288000000
    ],
    [
        1245870,
        2287571000
    ],
    [
        1245860,
        2288000000
    ],
    [
        1245850,
        2286130000
    ],
    [
        1245840,
        2281380000
    ],
    [
        1245830,
        2277340000
    ],
    [
        1245800,
        2283620000
    ],
    [
        1245790,
        2284945000
    ],
    [
        1245770,
        2280457000
    ],
    [
        1245750,
        2277630000
    ],
    [
        1245730,
        2270980000
    ],
    [
        1245720,
        2268364000
    ],
    [
        1245710,
        2263409000
    ],
    [
        1245700,
        2270757000
    ],
    [
        1245690,
        2295181000
    ],
    [
        1245680,
        2298790000
    ],
    [
        1245670,
        2290950000
    ],
    [
        1245650,
        2282975000
    ],
    [
        1245630,
        2294041000
    ],
    [
        1245620,
        2306000000
    ],
    [
        1245590,
        2323940000
    ],
    [
        1245580,
        2367810000
    ],
    [
        1245560,
        2371000000
    ],
    [
        1245550,
        2376210000
    ],
    [
        1245540,
        2379000000
    ],
    [
        1245530,
        2386946000
    ],
    [
        1245520,
        2386180000
    ],
    [
        1245510,
        2382420000
    ],
    [
        1245480,
        2378086000
    ],
    [
        1245460,
        2379000000
    ],
    [
        1245410,
        2399460000
    ],
    [
        1245400,
        2406000000
    ],
    [
        1245390,
        2409792000
    ],
    [
        1245380,
        2413500000
    ],
    [
        1245370,
        2415000000
    ],
    [
        1245350,
        2416000000
    ],
    [
        1245340,
        2408332000
    ],
    [
        1245330,
        2396370000
    ],
    [
        1245320,
        2410720000
    ],
    [
        1245310,
        2373890000
    ],
    [
        1245300,
        2371905000
    ],
    [
        1245280,
        2364000000
    ],
    [
        1245260,
        2382220000
    ],
    [
        1245250,
        2384000000
    ],
    [
        1245230,
        2380506000
    ],
    [
        1245220,
        2398450000
    ],
    [
        1245210,
        2402000000
    ],
    [
        1245200,
        2433073000
    ],
    [
        1245180,
        2458830000
    ],
    [
        1245170,
        2473000000
    ],
    [
        1245150,
        2467852500
    ],
    [
        1245140,
        2455000000
    ],
    [
        1245130,
        2454682500
    ],
    [
        1245120,
        2452628000
    ],
    [
        1245110,
        2455000000
    ],
    [
        1245100,
        2460660000
    ],
    [
        1245080,
        2459680000
    ],
    [
        1245060,
        2455000000
    ],
    [
        1245050,
        2443390000
    ],
    [
        1245040,
        2449702500
    ],
    [
        1245030,
        2450150000
    ],
    [
        1245020,
        2436000000
    ],
    [
        1245000,
        2434176000
    ],
    [
        1244980,
        2436000000
    ],
    [
        1244970,
        2436170000
    ],
    [
        1244950,
        2434255000
    ],
    [
        1244940,
        2435000000
    ],
    [
        1244930,
        2422801000
    ],
    [
        1244910,
        2413000000
    ],
    [
        1244900,
        2405756000
    ],
    [
        1244890,
        2405250000
    ],
    [
        1244880,
        2402540000
    ],
    [
        1244870,
        2397000000
    ],
    [
        1244850,
        2423000000
    ],
    [
        1244840,
        2429467500
    ],
    [
        1244830,
        2433385000
    ],
    [
        1244810,
        2434490000
    ],
    [
        1244780,
        2435000000
    ],
    [
        1244770,
        2424930000
    ],
    [
        1244760,
        2426230000
    ],
    [
        1244750,
        2418377000
    ],
    [
        1244740,
        2407000000
    ],
    [
        1244720,
        2405070000
    ],
    [
        1244710,
        2403754000
    ],
    [
        1244690,
        2400000000
    ],
    [
        1244680,
        2397610000
    ],
    [
        1244650,
        2392000000
    ],
    [
        1244640,
        2400000000
    ],
    [
        1244630,
        2406779000
    ],
    [
        1244620,
        2408000000
    ],
    [
        1244610,
        2405795000
    ],
    [
        1244600,
        2407000000
    ],
    [
        1244590,
        2407619000
    ],
    [
        1244580,
        2416090000
    ],
    [
        1244570,
        2419120000
    ],
    [
        1244560,
        2436972500
    ],
    [
        1244550,
        2440000000
    ],
    [
        1244540,
        2443110000
    ],
    [
        1244530,
        2440000000
    ],
    [
        1244510,
        2407000000
    ],
    [
        1244500,
        2446920000
    ],
    [
        1243810,
        2451521000
    ],
    [
        1243800,
        2446920000
    ],
    [
        1243780,
        2447470000
    ],
    [
        1243770,
        2446388000
    ],
    [
        1243760,
        2441695000
    ],
    [
        1243750,
        2436000000
    ],
    [
        1243740,
        2433755000
    ],
    [
        1243730,
        2432580000
    ],
    [
        1243710,
        2410755000
    ],
    [
        1243700,
        2405840000
    ],
    [
        1243690,
        2405615000
    ],
    [
        1243650,
        2389000000
    ],
    [
        1243640,
        2387254000
    ],
    [
        1243620,
        2386364000
    ],
    [
        1243590,
        2385754000
    ],
    [
        1243580,
        2383674000
    ],
    [
        1243570,
        2378036500
    ],
    [
        1243560,
        2380161250
    ],
    [
        1243550,
        2381420000
    ],
    [
        1243530,
        2397998750
    ],
    [
        1243520,
        2400120000
    ],
    [
        1243510,
        2404188500
    ],
    [
        1243490,
        2407941250
    ],
    [
        1243480,
        2406285000
    ],
    [
        1243460,
        2411390000
    ],
    [
        1243450,
        2410575000
    ],
    [
        1243440,
        2399681250
    ],
    [
        1243340,
        2386701250
    ],
    [
        1243330,
        2381420000
    ],
    [
        1243320,
        2388919500
    ],
    [
        1243310,
        2413390000
    ],
    [
        1243290,
        2417345500
    ],
    [
        1243270,
        2409490000
    ],
    [
        1243260,
        2400256500
    ],
    [
        1243250,
        2386300000
    ],
    [
        1243200,
        2385895500
    ],
    [
        1243190,
        2386300000
    ],
    [
        1243180,
        2390677500
    ],
    [
        1243160,
        2389923500
    ],
    [
        1243150,
        2390488750
    ],
    [
        1243140,
        2390288500
    ],
    [
        1243130,
        2388251250
    ],
    [
        1243120,
        2396502500
    ],
    [
        1243100,
        2415850000
    ],
    [
        1243010,
        2413306500
    ],
    [
        1243000,
        2415026000
    ],
    [
        1242990,
        2414481000
    ],
    [
        1242980,
        2414250000
    ],
    [
        1242970,
        2426000000
    ],
    [
        1242960,
        2416175000
    ],
    [
        1242950,
        2413180000
    ],
    [
        1242940,
        2414770000
    ],
    [
        1242790,
        2390912500
    ],
    [
        1242710,
        2390260000
    ],
    [
        1242700,
        2384000000
    ],
    [
        1242690,
        2383340000
    ],
    [
        1242640,
        2366000000
    ],
    [
        1242630,
        2359000000
    ],
    [
        1242620,
        2343870000
    ],
    [
        1242600,
        2330813000
    ],
    [
        1242580,
        2328860000
    ],
    [
        1242570,
        2323960000
    ],
    [
        1242550,
        2322000000
    ],
    [
        1242530,
        2323960000
    ],
    [
        1242510,
        2323680000
    ],
    [
        1242500,
        2315730000
    ],
    [
        1242490,
        2323477500
    ],
    [
        1242470,
        2335244000
    ],
    [
        1242460,
        2335210000
    ],
    [
        1242440,
        2337377000
    ],
    [
        1242430,
        2347000000
    ],
    [
        1242420,
        2361900000
    ],
    [
        1242410,
        2364000000
    ],
    [
        1242400,
        2366000000
    ],
    [
        1242390,
        2358916000
    ],
    [
        1242380,
        2352040000
    ],
    [
        1242370,
        2351030000
    ],
    [
        1242360,
        2350000000
    ],
    [
        1242350,
        2351030000
    ],
    [
        1242340,
        2350000000
    ],
    [
        1242330,
        2362173000
    ],
    [
        1242310,
        2364000000
    ],
    [
        1242300,
        2363900000
    ],
    [
        1242280,
        2358000000
    ],
    [
        1242260,
        2352620000
    ],
    [
        1242250,
        2333000000
    ],
    [
        1242230,
        2358000000
    ],
    [
        1242220,
        2355270000
    ],
    [
        1242200,
        2358300000
    ],
    [
        1242190,
        2356610000
    ],
    [
        1242170,
        2360080000
    ],
    [
        1242120,
        2320000000
    ],
    [
        1242110,
        2299295000
    ],
    [
        1242060,
        2285210000
    ],
    [
        1242040,
        2264060000
    ],
    [
        1242030,
        2262000000
    ],
    [
        1242000,
        2255000000
    ],
    [
        1241980,
        2252673000
    ],
    [
        1241970,
        2254218000
    ],
    [
        1241940,
        2257075000
    ],
    [
        1241930,
        2257262500
    ],
    [
        1241920,
        2253000000
    ],
    [
        1241910,
        2232000000
    ],
    [
        1241900,
        2231000000
    ],
    [
        1241890,
        2226330000
    ],
    [
        1241850,
        2231000000
    ],
    [
        1241820,
        2232000000
    ],
    [
        1241790,
        2245720000
    ],
    [
        1241760,
        2245557500
    ],
    [
        1241740,
        2245720000
    ],
    [
        1241730,
        2245557500
    ],
    [
        1241720,
        2238060000
    ],
    [
        1241710,
        2232964000
    ],
    [
        1241690,
        2222716000
    ],
    [
        1241680,
        2212970000
    ],
    [
        1241670,
        2206000000
    ],
    [
        1241620,
        2244000000
    ],
    [
        1241610,
        2247900000
    ],
    [
        1241600,
        2255790000
    ],
    [
        1241570,
        2259680000
    ],
    [
        1241560,
        2262000000
    ],
    [
        1241550,
        2264090000
    ],
    [
        1241540,
        2263000000
    ],
    [
        1241530,
        2266707000
    ],
    [
        1241500,
        2262130000
    ],
    [
        1241490,
        2276000000
    ],
    [
        1241420,
        2262000000
    ],
    [
        1241380,
        2256900000
    ],
    [
        1241370,
        2255000000
    ],
    [
        1241360,
        2245520000
    ],
    [
        1241350,
        2244337500
    ],
    [
        1241340,
        2245520000
    ],
    [
        1241330,
        2251000000
    ],
    [
        1241300,
        2256900000
    ],
    [
        1241290,
        2251000000
    ],
    [
        1241280,
        2245520000
    ],
    [
        1241270,
        2242200000
    ],
    [
        1241260,
        2229930000
    ],
    [
        1241240,
        2219007000
    ],
    [
        1241220,
        2217000000
    ],
    [
        1241210,
        2237265000
    ],
    [
        1241190,
        2259760000
    ],
    [
        1241180,
        2262000000
    ],
    [
        1241170,
        2259760000
    ],
    [
        1241160,
        2262700000
    ],
    [
        1241150,
        2264190000
    ],
    [
        1241130,
        2262000000
    ],
    [
        1241110,
        2263100000
    ],
    [
        1241100,
        2270390000
    ],
    [
        1241070,
        2208000000
    ],
    [
        1241040,
        2178410000
    ],
    [
        1240980,
        2145000000
    ],
    [
        1240960,
        2129000000
    ],
    [
        1240950,
        2128190000
    ],
    [
        1240940,
        2120000000
    ],
    [
        1240930,
        2116690000
    ],
    [
        1240920,
        2120000000
    ],
    [
        1240900,
        2116000000
    ],
    [
        1240890,
        2125210000
    ],
    [
        1240880,
        2133595000
    ],
    [
        1240870,
        2145000000
    ],
    [
        1240850,
        2151895000
    ],
    [
        1240840,
        2163910000
    ],
    [
        1240830,
        2186470000
    ],
    [
        1240770,
        2145000000
    ],
    [
        1240760,
        2136547500
    ],
    [
        1240740,
        2118940000
    ],
    [
        1240730,
        2111010000
    ],
    [
        1240720,
        2111000000
    ],
    [
        1240700,
        2098480000
    ],
    [
        1240690,
        2096000000
    ],
    [
        1240680,
        2088885000
    ],
    [
        1240670,
        2078002500
    ],
    [
        1240660,
        2093120000
    ],
    [
        1240650,
        2093611000
    ],
    [
        1240630,
        2098095000
    ],
    [
        1240600,
        2080000000
    ],
    [
        1240590,
        2067665000
    ],
    [
        1240580,
        2067630000
    ],
    [
        1240570,
        2067665000
    ],
    [
        1240560,
        2058814000
    ],
    [
        1240540,
        2021870000
    ],
    [
        1240530,
        2020860000
    ],
    [
        1240520,
        2043000000
    ],
    [
        1240510,
        2040809000
    ],
    [
        1240500,
        2023645000
    ],
    [
        1240490,
        2010510000
    ],
    [
        1240480,
        2002662000
    ],
    [
        1240470,
        1991000000
    ],
    [
        1240460,
        1985670000
    ],
    [
        1240440,
        1982440000
    ],
    [
        1240430,
        1975000000
    ],
    [
        1240420,
        1991000000
    ],
    [
        1240360,
        2002000000
    ],
    [
        1240350,
        2016490000
    ],
    [
        1240320,
        2026000000
    ],
    [
        1240310,
        2025470000
    ],
    [
        1240300,
        2021070000
    ],
    [
        1240290,
        2013260000
    ],
    [
        1240260,
        2008442000
    ],
    [
        1240250,
        2002240000
    ],
    [
        1240230,
        1994030000
    ],
    [
        1240200,
        1967000000
    ],
    [
        1240190,
        1966200000
    ],
    [
        1240170,
        1967000000
    ],
    [
        1240160,
        1978580000
    ],
    [
        1240150,
        1986000000
    ],
    [
        1240140,
        1986080000
    ],
    [
        1240130,
        1986760000
    ],
    [
        1240110,
        1986000000
    ],
    [
        1240080,
        2011289000
    ],
    [
        1240070,
        2017165000
    ],
    [
        1240060,
        2017500000
    ],
    [
        1240050,
        2018000000
    ],
    [
        1240030,
        2017250000
    ],
    [
        1240020,
        2022360000
    ],
    [
        1240010,
        2017250000
    ],
    [
        1239990,
        2096620000
    ],
    [
        1239980,
        2105200000
    ],
    [
        1239960,
        2112360000
    ],
    [
        1239950,
        2120000000
    ],
    [
        1239940,
        2126300000
    ],
    [
        1239910,
        2171000000
    ],
    [
        1239880,
        2168980000
    ],
    [
        1239870,
        2167010000
    ],
    [
        1239860,
        2169000000
    ],
    [
        1239850,
        2168740000
    ],
    [
        1239790,
        2172040000
    ],
    [
        1239780,
        2187000000
    ],
    [
        1239770,
        2192206000
    ],
    [
        1239760,
        2196840000
    ],
    [
        1239750,
        2195650000
    ],
    [
        1239740,
        2187725000
    ],
    [
        1239730,
        2190000000
    ],
    [
        1239720,
        2201802000
    ],
    [
        1239700,
        2201310000
    ],
    [
        1239690,
        2230000000
    ],
    [
        1239680,
        2240350000
    ],
    [
        1239660,
        2244000000
    ],
    [
        1239650,
        2237640000
    ],
    [
        1239640,
        2230235000
    ],
    [
        1239630,
        2227235000
    ],
    [
        1239620,
        2241940000
    ],
    [
        1239610,
        2244932000
    ],
    [
        1239600,
        2244522500
    ],
    [
        1239590,
        2248000000
    ],
    [
        1239570,
        2292000000
    ],
    [
        1239560,
        2298000000
    ],
    [
        1239540,
        2300980000
    ],
    [
        1239530,
        2300580000
    ],
    [
        1239520,
        2291320000
    ],
    [
        1239510,
        2289310000
    ],
    [
        1239500,
        2286490000
    ],
    [
        1239490,
        2274577000
    ],
    [
        1239480,
        2280104000
    ],
    [
        1239470,
        2292000000
    ],
    [
        1239450,
        2318330000
    ],
    [
        1239430,
        2320000000
    ],
    [
        1239410,
        2318047000
    ],
    [
        1239400,
        2319180000
    ],
    [
        1239390,
        2305730000
    ],
    [
        1239380,
        2303000000
    ],
    [
        1239370,
        2308970000
    ],
    [
        1239360,
        2328990000
    ],
    [
        1239350,
        2337000000
    ],
    [
        1239340,
        2335780000
    ],
    [
        1239330,
        2345000000
    ],
    [
        1239320,
        2369600000
    ],
    [
        1239310,
        2377000000
    ],
    [
        1239300,
        2371000000
    ],
    [
        1239280,
        2368440000
    ],
    [
        1239270,
        2361908000
    ],
    [
        1239260,
        2337000000
    ],
    [
        1239250,
        2332440000
    ],
    [
        1239240,
        2319840000
    ],
    [
        1239230,
        2318460000
    ],
    [
        1239210,
        2337000000
    ],
    [
        1239200,
        2336092500
    ],
    [
        1239190,
        2340132500
    ],
    [
        1239180,
        2345000000
    ],
    [
        1239170,
        2351430000
    ],
    [
        1239160,
        2364485000
    ],
    [
        1239150,
        2374000000
    ],
    [
        1239140,
        2381555000
    ],
    [
        1239130,
        2384000000
    ],
    [
        1239120,
        2377860000
    ],
    [
        1239110,
        2374969000
    ],
    [
        1239100,
        2382300000
    ],
    [
        1239090,
        2383660000
    ],
    [
        1239080,
        2382350000
    ],
    [
        1239070,
        2392664000
    ],
    [
        1239050,
        2398960000
    ],
    [
        1239040,
        2404950000
    ],
    [
        1239020,
        2403197500
    ],
    [
        1238980,
        2373780000
    ],
    [
        1238950,
        2372000000
    ],
    [
        1238940,
        2373780000
    ],
    [
        1238930,
        2373120000
    ],
    [
        1238920,
        2373780000
    ],
    [
        1238910,
        2373150000
    ],
    [
        1238900,
        2373780000
    ],
    [
        1238890,
        2379145000
    ],
    [
        1238880,
        2377570000
    ],
    [
        1238850,
        2350620000
    ],
    [
        1238840,
        2355840000
    ],
    [
        1238830,
        2356667500
    ],
    [
        1238820,
        2359965000
    ],
    [
        1238780,
        2345000000
    ],
    [
        1238770,
        2344000000
    ],
    [
        1238760,
        2341385000
    ],
    [
        1238750,
        2340320000
    ],
    [
        1238740,
        2339000000
    ],
    [
        1238730,
        2339820000
    ],
    [
        1238720,
        2340000000
    ],
    [
        1238700,
        2337680000
    ],
    [
        1238690,
        2339000000
    ],
    [
        1238680,
        2336250000
    ],
    [
        1238660,
        2323000000
    ],
    [
        1238640,
        2316000000
    ],
    [
        1238630,
        2315000000
    ],
    [
        1238620,
        2313840000
    ],
    [
        1238610,
        2322040000
    ],
    [
        1238600,
        2323000000
    ],
    [
        1238590,
        2322235000
    ],
    [
        1238560,
        2323000000
    ],
    [
        1238550,
        2319000000
    ],
    [
        1238540,
        2317070000
    ],
    [
        1238490,
        2314710000
    ],
    [
        1238480,
        2301000000
    ],
    [
        1238470,
        2299945000
    ],
    [
        1238460,
        2299360000
    ],
    [
        1238430,
        2300352500
    ],
    [
        1238410,
        2301045000
    ],
    [
        1238400,
        2299473000
    ],
    [
        1238390,
        2294450000
    ],
    [
        1238380,
        2290100000
    ],
    [
        1238360,
        2309820000
    ],
    [
        1238340,
        2309344000
    ],
    [
        1238300,
        2311740000
    ],
    [
        1238290,
        2310270000
    ],
    [
        1238280,
        2310617500
    ],
    [
        1238270,
        2320230000
    ],
    [
        1238260,
        2318495000
    ],
    [
        1238250,
        2314900000
    ],
    [
        1238240,
        2311740000
    ],
    [
        1238230,
        2306290000
    ],
    [
        1238220,
        2306148000
    ],
    [
        1238210,
        2304030000
    ],
    [
        1238200,
        2314900000
    ],
    [
        1238180,
        2321140000
    ],
    [
        1238170,
        2315280000
    ],
    [
        1238160,
        2305062500
    ],
    [
        1238140,
        2265730000
    ],
    [
        1238120,
        2262562500
    ],
    [
        1238110,
        2255000000
    ],
    [
        1238100,
        2253532500
    ],
    [
        1238090,
        2249000000
    ],
    [
        1238080,
        2244920000
    ],
    [
        1238070,
        2249000000
    ],
    [
        1238060,
        2252000000
    ],
    [
        1238050,
        2254260000
    ],
    [
        1238040,
        2258000000
    ],
    [
        1237980,
        2270460000
    ],
    [
        1237960,
        2270422500
    ],
    [
        1237910,
        2270460000
    ],
    [
        1237900,
        2269920000
    ],
    [
        1237890,
        2258000000
    ],
    [
        1237870,
        2257000000
    ],
    [
        1237860,
        2256121250
    ],
    [
        1237850,
        2256260000
    ],
    [
        1237840,
        2255011250
    ],
    [
        1237830,
        2251166500
    ],
    [
        1237820,
        2241500000
    ],
    [
        1237810,
        2239986500
    ],
    [
        1237800,
        2252805000
    ],
    [
        1237790,
        2252620000
    ],
    [
        1237760,
        2252662000
    ],
    [
        1237750,
        2251870000
    ],
    [
        1237730,
        2252882500
    ],
    [
        1237710,
        2254000000
    ],
    [
        1237690,
        2250700000
    ],
    [
        1237680,
        2253670000
    ],
    [
        1237660,
        2271000000
    ],
    [
        1237650,
        2281447000
    ],
    [
        1237630,
        2281450000
    ],
    [
        1237590,
        2272150000
    ],
    [
        1237570,
        2271000000
    ],
    [
        1237550,
        2272150000
    ],
    [
        1237530,
        2271000000
    ],
    [
        1237520,
        2265690000
    ],
    [
        1237510,
        2242000000
    ],
    [
        1237500,
        2232705000
    ],
    [
        1237480,
        2231669500
    ],
    [
        1237460,
        2241000000
    ],
    [
        1237450,
        2236741000
    ],
    [
        1237440,
        2234066000
    ],
    [
        1237400,
        2233370500
    ],
    [
        1237390,
        2236620500
    ],
    [
        1237380,
        2238000000
    ],
    [
        1237370,
        2234560000
    ],
    [
        1237360,
        2235010000
    ],
    [
        1237350,
        2238000000
    ],
    [
        1237330,
        2240267500
    ],
    [
        1237320,
        2238000000
    ],
    [
        1237310,
        2233060000
    ],
    [
        1237290,
        2218000000
    ],
    [
        1237260,
        2192000000
    ],
    [
        1237240,
        2187595000
    ],
    [
        1237230,
        2178000000
    ],
    [
        1237220,
        2182510000
    ],
    [
        1237200,
        2180025000
    ],
    [
        1237190,
        2180760000
    ],
    [
        1237180,
        2168080000
    ],
    [
        1237160,
        2163055000
    ],
    [
        1237000,
        2143000000
    ],
    [
        1236990,
        2138785000
    ],
    [
        1236980,
        2138447000
    ],
    [
        1236970,
        2126550000
    ],
    [
        1236960,
        2113000000
    ],
    [
        1236950,
        2114775000
    ],
    [
        1236940,
        2113000000
    ],
    [
        1236930,
        2119900000
    ],
    [
        1236920,
        2108000000
    ],
    [
        1236910,
        2106990000
    ],
    [
        1236900,
        2105480000
    ],
    [
        1236890,
        2108000000
    ],
    [
        1236880,
        2108880000
    ],
    [
        1236790,
        2157670000
    ],
    [
        1236780,
        2151927000
    ],
    [
        1236770,
        2163640000
    ],
    [
        1236760,
        2164368000
    ],
    [
        1236750,
        2166000000
    ],
    [
        1236730,
        2175000000
    ],
    [
        1236720,
        2165905000
    ],
    [
        1236710,
        2175000000
    ],
    [
        1236700,
        2175238000
    ],
    [
        1236690,
        2175237500
    ],
    [
        1236680,
        2175000000
    ],
    [
        1236670,
        2159360000
    ],
    [
        1236660,
        2158070000
    ],
    [
        1236650,
        2150610000
    ],
    [
        1236640,
        2128090000
    ],
    [
        1236620,
        2131532500
    ],
    [
        1236610,
        2148712500
    ],
    [
        1236600,
        2158291000
    ],
    [
        1236590,
        2174072000
    ],
    [
        1236560,
        2192000000
    ],
    [
        1236550,
        2186745000
    ],
    [
        1236530,
        2184240000
    ],
    [
        1236520,
        2206770000
    ],
    [
        1236510,
        2209430000
    ],
    [
        1236500,
        2205850000
    ],
    [
        1236490,
        2225880000
    ],
    [
        1236480,
        2256582000
    ],
    [
        1236460,
        2265310000
    ],
    [
        1236450,
        2254700000
    ],
    [
        1236420,
        2254000000
    ],
    [
        1236410,
        2252555000
    ],
    [
        1236400,
        2247693000
    ],
    [
        1236390,
        2245000000
    ],
    [
        1236380,
        2250000000
    ],
    [
        1236360,
        2250710000
    ],
    [
        1236350,
        2245000000
    ],
    [
        1236320,
        2244860000
    ],
    [
        1236310,
        2246000000
    ],
    [
        1236300,
        2246875000
    ],
    [
        1236290,
        2254000000
    ],
    [
        1236280,
        2253664000
    ],
    [
        1236270,
        2265380000
    ],
    [
        1236260,
        2268000000
    ],
    [
        1236250,
        2303840000
    ],
    [
        1236240,
        2303962000
    ],
    [
        1236230,
        2304000000
    ],
    [
        1236220,
        2317000000
    ],
    [
        1236210,
        2320896250
    ],
    [
        1236200,
        2317978000
    ],
    [
        1236190,
        2314887500
    ],
    [
        1236180,
        2316597500
    ],
    [
        1236170,
        2317000000
    ],
    [
        1236160,
        2319800000
    ],
    [
        1236140,
        2322500000
    ],
    [
        1236130,
        2326263750
    ],
    [
        1236120,
        2318533750
    ],
    [
        1236110,
        2323409250
    ],
    [
        1236100,
        2325285500
    ],
    [
        1236090,
        2324610500
    ],
    [
        1236080,
        2328500000
    ],
    [
        1236060,
        2332000000
    ],
    [
        1236050,
        2331415000
    ],
    [
        1236040,
        2329853750
    ],
    [
        1236030,
        2295565000
    ],
    [
        1236010,
        2286735000
    ],
    [
        1236000,
        2256565000
    ],
    [
        1235990,
        2238648500
    ],
    [
        1235980,
        2238000000
    ],
    [
        1235970,
        2230324750
    ],
    [
        1235950,
        2225230000
    ],
    [
        1235940,
        2228608000
    ],
    [
        1235930,
        2225827000
    ],
    [
        1235920,
        2228255000
    ],
    [
        1235910,
        2232135000
    ],
    [
        1235900,
        2243334500
    ],
    [
        1235890,
        2244000000
    ],
    [
        1235880,
        2246208500
    ],
    [
        1235860,
        2255500000
    ],
    [
        1235850,
        2295142500
    ],
    [
        1235830,
        2318939500
    ],
    [
        1235820,
        2322293000
    ],
    [
        1235810,
        2332227500
    ],
    [
        1235800,
        2336500000
    ],
    [
        1235780,
        2338000000
    ],
    [
        1235770,
        2339491000
    ],
    [
        1235760,
        2346516500
    ],
    [
        1235750,
        2361936500
    ],
    [
        1235740,
        2379975000
    ],
    [
        1235730,
        2386200000
    ],
    [
        1235720,
        2390568750
    ],
    [
        1235710,
        2389568750
    ],
    [
        1235700,
        2390465000
    ],
    [
        1235690,
        2391465000
    ],
    [
        1235680,
        2390886500
    ],
    [
        1235670,
        2392419500
    ],
    [
        1235660,
        2395919500
    ],
    [
        1235650,
        2399194000
    ],
    [
        1235640,
        2401495000
    ],
    [
        1235630,
        2403080000
    ],
    [
        1235620,
        2407080000
    ],
    [
        1235590,
        2404536500
    ],
    [
        1235560,
        2388725000
    ],
    [
        1235540,
        2385705000
    ],
    [
        1235530,
        2385209000
    ],
    [
        1235520,
        2383980000
    ],
    [
        1235500,
        2374580000
    ],
    [
        1235490,
        2374470000
    ],
    [
        1235460,
        2375300000
    ],
    [
        1235450,
        2377465000
    ],
    [
        1235430,
        2379600000
    ],
    [
        1235420,
        2378340000
    ],
    [
        1235410,
        2385485000
    ],
    [
        1235400,
        2384678750
    ],
    [
        1235390,
        2370000000
    ],
    [
        1235360,
        2369500000
    ],
    [
        1235350,
        2369370000
    ],
    [
        1235330,
        2368885000
    ],
    [
        1235300,
        2345310000
    ],
    [
        1235290,
        2346545000
    ],
    [
        1235280,
        2347175000
    ],
    [
        1235270,
        2347183750
    ],
    [
        1235260,
        2348586250
    ],
    [
        1235230,
        2344945000
    ],
    [
        1235220,
        2349462500
    ],
    [
        1235200,
        2351130000
    ],
    [
        1235170,
        2314565000
    ],
    [
        1235140,
        2313065000
    ],
    [
        1235130,
        2299742500
    ],
    [
        1235120,
        2295395000
    ],
    [
        1235110,
        2293550000
    ],
    [
        1235100,
        2295395000
    ],
    [
        1235080,
        2297021500
    ],
    [
        1235070,
        2300000000
    ],
    [
        1235060,
        2313584000
    ],
    [
        1235050,
        2320377500
    ],
    [
        1235040,
        2318083750
    ],
    [
        1235020,
        2331000000
    ],
    [
        1235000,
        2315941250
    ],
    [
        1234990,
        2296065000
    ],
    [
        1234970,
        2285755000
    ],
    [
        1234960,
        2287364500
    ],
    [
        1234950,
        2288283250
    ],
    [
        1234930,
        2273645000
    ],
    [
        1234920,
        2276081500
    ],
    [
        1234910,
        2282330000
    ],
    [
        1234900,
        2286479000
    ],
    [
        1234890,
        2294790000
    ],
    [
        1234870,
        2299860000
    ],
    [
        1234860,
        2302806250
    ],
    [
        1234840,
        2289017500
    ],
    [
        1234830,
        2294364500
    ],
    [
        1234820,
        2305738750
    ],
    [
        1234810,
        2309190000
    ],
    [
        1234800,
        2303166000
    ],
    [
        1234790,
        2301958750
    ],
    [
        1234780,
        2302852500
    ],
    [
        1234770,
        2305262000
    ],
    [
        1234760,
        2308955750
    ],
    [
        1234750,
        2309561000
    ],
    [
        1234740,
        2310457500
    ],
    [
        1234710,
        2282495000
    ],
    [
        1234690,
        2271440000
    ],
    [
        1234680,
        2270370250
    ],
    [
        1234670,
        2280650000
    ],
    [
        1234650,
        2280240000
    ],
    [
        1234640,
        2274184000
    ],
    [
        1234620,
        2272302500
    ],
    [
        1234610,
        2276147500
    ],
    [
        1234600,
        2281970000
    ],
    [
        1234590,
        2282000000
    ],
    [
        1234580,
        2284407500
    ],
    [
        1234560,
        2282000000
    ],
    [
        1234550,
        2281515000
    ],
    [
        1234540,
        2269050000
    ],
    [
        1234530,
        2264555000
    ],
    [
        1234520,
        2261020000
    ],
    [
        1234510,
        2258654000
    ],
    [
        1234500,
        2254368750
    ],
    [
        1234490,
        2252061000
    ],
    [
        1234480,
        2252000000
    ],
    [
        1234470,
        2258720000
    ],
    [
        1234440,
        2261500000
    ],
    [
        1234430,
        2265000000
    ],
    [
        1234420,
        2264684000
    ],
    [
        1234410,
        2265684000
    ],
    [
        1234400,
        2265500000
    ],
    [
        1234390,
        2261130500
    ],
    [
        1234380,
        2265115000
    ],
    [
        1234370,
        2267000000
    ],
    [
        1234360,
        2270496000
    ],
    [
        1234340,
        2290227500
    ],
    [
        1234330,
        2296549000
    ],
    [
        1234320,
        2298433500
    ],
    [
        1234310,
        2298007250
    ],
    [
        1234300,
        2294457000
    ],
    [
        1234280,
        2289644000
    ],
    [
        1234270,
        2277153250
    ],
    [
        1234250,
        2280512250
    ],
    [
        1234240,
        2286520000
    ],
    [
        1234220,
        2286630000
    ],
    [
        1234190,
        2278757750
    ],
    [
        1234180,
        2270520500
    ],
    [
        1234170,
        2267588750
    ],
    [
        1234160,
        2265345000
    ],
    [
        1234150,
        2270228750
    ],
    [
        1234140,
        2266182500
    ],
    [
        1234130,
        2274640000
    ],
    [
        1234120,
        2253000000
    ],
    [
        1234100,
        2243000000
    ],
    [
        1234090,
        2246580000
    ],
    [
        1234070,
        2249543750
    ],
    [
        1234060,
        2256886000
    ],
    [
        1234030,
        2293500000
    ],
    [
        1234020,
        2277617500
    ],
    [
        1234010,
        2268941250
    ],
    [
        1234000,
        2265895000
    ],
    [
        1233990,
        2264112250
    ],
    [
        1233980,
        2253001500
    ],
    [
        1233970,
        2247000000
    ],
    [
        1233960,
        2249770000
    ],
    [
        1233940,
        2264050000
    ],
    [
        1233930,
        2264450500
    ],
    [
        1233920,
        2267615000
    ],
    [
        1233910,
        2270403000
    ],
    [
        1233900,
        2273000000
    ],
    [
        1233890,
        2294768500
    ],
    [
        1233880,
        2295455000
    ],
    [
        1233870,
        2299500000
    ],
    [
        1233830,
        2301000000
    ],
    [
        1233820,
        2311765000
    ],
    [
        1233810,
        2312775000
    ],
    [
        1233790,
        2319704500
    ],
    [
        1233770,
        2320000000
    ],
    [
        1233760,
        2318072500
    ],
    [
        1233750,
        2316615000
    ],
    [
        1233740,
        2317220000
    ],
    [
        1233730,
        2320060000
    ],
    [
        1233710,
        2324500000
    ],
    [
        1233700,
        2346637500
    ],
    [
        1233690,
        2348255000
    ],
    [
        1233670,
        2349500000
    ],
    [
        1233650,
        2354000000
    ],
    [
        1233640,
        2354290000
    ],
    [
        1233630,
        2351606500
    ],
    [
        1233620,
        2350127500
    ],
    [
        1233610,
        2353110000
    ],
    [
        1233600,
        2355647500
    ],
    [
        1233590,
        2356717500
    ],
    [
        1233580,
        2358492500
    ],
    [
        1233570,
        2379005000
    ],
    [
        1233560,
        2380100000
    ],
    [
        1233550,
        2383191500
    ],
    [
        1233540,
        2396153750
    ],
    [
        1233530,
        2402530000
    ],
    [
        1233520,
        2403171500
    ],
    [
        1233510,
        2403532500
    ],
    [
        1233500,
        2400711500
    ],
    [
        1233480,
        2400265000
    ],
    [
        1233470,
        2399696250
    ],
    [
        1233460,
        2398540000
    ],
    [
        1233450,
        2404000000
    ],
    [
        1233440,
        2398000000
    ],
    [
        1233430,
        2393137500
    ],
    [
        1233410,
        2391639000
    ],
    [
        1233400,
        2391004000
    ],
    [
        1233390,
        2384110000
    ],
    [
        1233380,
        2390110000
    ],
    [
        1233370,
        2390425000
    ],
    [
        1233350,
        2396500000
    ],
    [
        1233340,
        2401990000
    ],
    [
        1233330,
        2405632500
    ],
    [
        1233320,
        2406517500
    ],
    [
        1233310,
        2405167500
    ],
    [
        1233290,
        2402015000
    ],
    [
        1233280,
        2399500000
    ],
    [
        1233270,
        2399386250
    ],
    [
        1233260,
        2398000000
    ],
    [
        1233250,
        2397500000
    ],
    [
        1233240,
        2423320000
    ],
    [
        1233220,
        2428068500
    ],
    [
        1233210,
        2433830000
    ],
    [
        1233200,
        2434258500
    ],
    [
        1233190,
        2437153000
    ],
    [
        1233180,
        2445655000
    ],
    [
        1233160,
        2449384000
    ],
    [
        1233150,
        2451599500
    ],
    [
        1233140,
        2455553750
    ],
    [
        1233130,
        2455490000
    ],
    [
        1233120,
        2454701250
    ],
    [
        1233110,
        2458736500
    ],
    [
        1233100,
        2460026000
    ],
    [
        1233090,
        2459308750
    ],
    [
        1233080,
        2456738750
    ],
    [
        1233060,
        2449202500
    ],
    [
        1233050,
        2481275000
    ],
    [
        1233040,
        2489000000
    ],
    [
        1233030,
        2495975000
    ],
    [
        1233020,
        2498000000
    ],
    [
        1233010,
        2489405000
    ],
    [
        1232990,
        2489000000
    ],
    [
        1232890,
        2482000000
    ],
    [
        1232880,
        2485790000
    ],
    [
        1232860,
        2498060000
    ],
    [
        1232730,
        2492870000
    ],
    [
        1232650,
        2505280000
    ],
    [
        1232640,
        2507525000
    ],
    [
        1232630,
        2510920000
    ],
    [
        1232620,
        2511941000
    ],
    [
        1232610,
        2508000000
    ],
    [
        1232600,
        2517390000
    ],
    [
        1232590,
        2517817000
    ],
    [
        1232570,
        2517390000
    ],
    [
        1232550,
        2521820000
    ],
    [
        1232540,
        2525235000
    ],
    [
        1232530,
        2537259000
    ],
    [
        1232520,
        2536444000
    ],
    [
        1232510,
        2542380000
    ],
    [
        1232480,
        2541000000
    ],
    [
        1232470,
        2534640000
    ],
    [
        1232450,
        2541960000
    ],
    [
        1232440,
        2539870000
    ],
    [
        1232420,
        2540482500
    ],
    [
        1232410,
        2527710000
    ],
    [
        1232350,
        2523000000
    ],
    [
        1232340,
        2526372500
    ],
    [
        1232320,
        2532823000
    ],
    [
        1232290,
        2522000000
    ],
    [
        1232270,
        2528060000
    ],
    [
        1232260,
        2527329000
    ],
    [
        1232250,
        2521820000
    ],
    [
        1232240,
        2521680000
    ],
    [
        1232230,
        2520430000
    ],
    [
        1232210,
        2519780000
    ],
    [
        1232200,
        2531110000
    ],
    [
        1232190,
        2536683000
    ],
    [
        1232180,
        2537422500
    ],
    [
        1232170,
        2535040000
    ],
    [
        1232160,
        2534980000
    ],
    [
        1232150,
        2531110000
    ],
    [
        1232140,
        2526000000
    ],
    [
        1232130,
        2525471000
    ],
    [
        1232120,
        2520000000
    ],
    [
        1232110,
        2522000000
    ],
    [
        1232100,
        2520000000
    ],
    [
        1232090,
        2515097500
    ],
    [
        1232080,
        2514717500
    ],
    [
        1232070,
        2523444000
    ],
    [
        1232050,
        2520360000
    ],
    [
        1232040,
        2513660000
    ],
    [
        1232030,
        2511245000
    ],
    [
        1232020,
        2513660000
    ],
    [
        1232010,
        2526500000
    ],
    [
        1231990,
        2513524000
    ],
    [
        1231970,
        2503310000
    ],
    [
        1231950,
        2504340000
    ],
    [
        1231940,
        2455337500
    ],
    [
        1231910,
        2452230000
    ],
    [
        1231890,
        2490000000
    ],
    [
        1231880,
        2495868000
    ],
    [
        1231850,
        2505000000
    ],
    [
        1231840,
        2518880000
    ],
    [
        1231820,
        2520330000
    ],
    [
        1231810,
        2512340000
    ],
    [
        1231800,
        2509000000
    ],
    [
        1231780,
        2510775000
    ],
    [
        1231760,
        2540530000
    ],
    [
        1231740,
        2543370000
    ],
    [
        1231730,
        2545837500
    ],
    [
        1231720,
        2547000000
    ],
    [
        1231710,
        2549309000
    ],
    [
        1231700,
        2542357500
    ],
    [
        1231680,
        2540000000
    ],
    [
        1231660,
        2552000000
    ],
    [
        1231650,
        2553576000
    ],
    [
        1231640,
        2550000000
    ],
    [
        1231630,
        2531110000
    ],
    [
        1231610,
        2529170000
    ],
    [
        1231600,
        2540606000
    ],
    [
        1231580,
        2568000000
    ],
    [
        1231570,
        2566193000
    ],
    [
        1231550,
        2567000000
    ],
    [
        1231540,
        2551880000
    ],
    [
        1231520,
        2562960000
    ],
    [
        1231510,
        2553330000
    ],
    [
        1231500,
        2534640000
    ],
    [
        1231490,
        2531110000
    ],
    [
        1231480,
        2525000000
    ],
    [
        1231470,
        2541176000
    ],
    [
        1231460,
        2546609000
    ],
    [
        1231440,
        2567410000
    ],
    [
        1231420,
        2558000000
    ],
    [
        1231410,
        2553330000
    ],
    [
        1231400,
        2524215000
    ],
    [
        1231390,
        2566871000
    ],
    [
        1231380,
        2581000000
    ],
    [
        1231360,
        2586900000
    ],
    [
        1231350,
        2581000000
    ],
    [
        1231340,
        2573690000
    ],
    [
        1231330,
        2575162500
    ],
    [
        1231320,
        2584100000
    ],
    [
        1231280,
        2586900000
    ],
    [
        1231240,
        2559000000
    ],
    [
        1231230,
        2554230000
    ],
    [
        1231220,
        2559000000
    ],
    [
        1231210,
        2561765000
    ],
    [
        1231190,
        2576120000
    ],
    [
        1231180,
        2586000000
    ],
    [
        1231160,
        2612670000
    ],
    [
        1231140,
        2613510000
    ],
    [
        1231130,
        2619580000
    ],
    [
        1231080,
        2626000000
    ],
    [
        1231060,
        2625000000
    ],
    [
        1231030,
        2626000000
    ],
    [
        1231010,
        2621000000
    ],
    [
        1230990,
        2615000000
    ],
    [
        1230970,
        2620051000
    ],
    [
        1230960,
        2625522500
    ],
    [
        1230950,
        2608000000
    ],
    [
        1230930,
        2606120000
    ],
    [
        1230900,
        2608000000
    ],
    [
        1230880,
        2596730000
    ],
    [
        1230870,
        2596527500
    ],
    [
        1230860,
        2596730000
    ],
    [
        1230850,
        2601000000
    ],
    [
        1230840,
        2593655000
    ],
    [
        1230780,
        2549000000
    ],
    [
        1230770,
        2545287000
    ],
    [
        1230760,
        2548000000
    ],
    [
        1230730,
        2548200000
    ],
    [
        1230720,
        2545000000
    ],
    [
        1230710,
        2540887500
    ],
    [
        1230670,
        2525000000
    ],
    [
        1230650,
        2522230000
    ],
    [
        1230600,
        2518000000
    ],
    [
        1230590,
        2502100000
    ],
    [
        1230570,
        2499000000
    ],
    [
        1230540,
        2490000000
    ],
    [
        1230530,
        2490640000
    ],
    [
        1230510,
        2487490000
    ],
    [
        1230480,
        2477000000
    ],
    [
        1230470,
        2478937500
    ],
    [
        1230460,
        2484691000
    ],
    [
        1230450,
        2491000000
    ],
    [
        1230440,
        2500815000
    ],
    [
        1230430,
        2499000000
    ],
    [
        1230420,
        2500000000
    ],
    [
        1230410,
        2500752500
    ],
    [
        1230400,
        2499000000
    ],
    [
        1230390,
        2495750000
    ],
    [
        1230380,
        2497000000
    ],
    [
        1230370,
        2495540000
    ],
    [
        1230360,
        2496618000
    ],
    [
        1230350,
        2497000000
    ],
    [
        1230340,
        2499000000
    ],
    [
        1230330,
        2497962500
    ],
    [
        1230320,
        2494500000
    ],
    [
        1230310,
        2477447500
    ],
    [
        1230300,
        2480977000
    ],
    [
        1230290,
        2509530000
    ],
    [
        1230280,
        2513003000
    ],
    [
        1230270,
        2509530000
    ],
    [
        1230260,
        2504030000
    ],
    [
        1230240,
        2498920000
    ],
    [
        1230220,
        2523337500
    ],
    [
        1230210,
        2528543000
    ],
    [
        1230200,
        2528000000
    ],
    [
        1230190,
        2525037500
    ],
    [
        1230180,
        2516080000
    ],
    [
        1230170,
        2536240000
    ],
    [
        1230160,
        2537282500
    ],
    [
        1230150,
        2538364000
    ],
    [
        1230140,
        2535192500
    ],
    [
        1230130,
        2525690000
    ],
    [
        1230120,
        2567410000
    ],
    [
        1230110,
        2581000000
    ],
    [
        1230100,
        2588440000
    ],
    [
        1230090,
        2592960000
    ],
    [
        1230080,
        2597690000
    ],
    [
        1230070,
        2608805000
    ],
    [
        1230060,
        2612430000
    ],
    [
        1230050,
        2610573000
    ],
    [
        1230030,
        2605000000
    ],
    [
        1230020,
        2607432500
    ],
    [
        1230010,
        2608510000
    ],
    [
        1229990,
        2608000000
    ],
    [
        1229980,
        2607000000
    ],
    [
        1229970,
        2601950000
    ],
    [
        1229960,
        2602430000
    ],
    [
        1229950,
        2600000000
    ],
    [
        1229940,
        2595439000
    ],
    [
        1229900,
        2574160000
    ],
    [
        1229890,
        2571940000
    ],
    [
        1229880,
        2596400000
    ],
    [
        1229870,
        2606879000
    ],
    [
        1229860,
        2611910000
    ],
    [
        1229850,
        2593000000
    ],
    [
        1229840,
        2575620000
    ],
    [
        1229830,
        2574473000
    ],
    [
        1229820,
        2593078000
    ],
    [
        1229810,
        2594420000
    ],
    [
        1229770,
        2601000000
    ],
    [
        1229760,
        2606894000
    ],
    [
        1229750,
        2614558000
    ],
    [
        1229740,
        2617080000
    ],
    [
        1229730,
        2614150000
    ],
    [
        1229720,
        2610770000
    ],
    [
        1229710,
        2606525000
    ],
    [
        1229700,
        2613916000
    ],
    [
        1229680,
        2619137500
    ],
    [
        1229670,
        2621421000
    ],
    [
        1229660,
        2612395000
    ],
    [
        1229640,
        2600400000
    ],
    [
        1229610,
        2617660000
    ],
    [
        1229580,
        2626000000
    ],
    [
        1229560,
        2626870000
    ],
    [
        1229510,
        2627510000
    ],
    [
        1229500,
        2631250000
    ],
    [
        1229490,
        2649889000
    ],
    [
        1229480,
        2695000000
    ],
    [
        1229470,
        2700000000
    ],
    [
        1229460,
        2701720000
    ],
    [
        1229450,
        2700560000
    ],
    [
        1229440,
        2695000000
    ],
    [
        1229430,
        2686275000
    ],
    [
        1229420,
        2665457500
    ],
    [
        1229400,
        2661670000
    ],
    [
        1229390,
        2670000000
    ],
    [
        1229380,
        2672570000
    ],
    [
        1229370,
        2672385000
    ],
    [
        1229360,
        2663522500
    ],
    [
        1229350,
        2661770000
    ],
    [
        1229340,
        2651000000
    ],
    [
        1229330,
        2645120000
    ],
    [
        1229320,
        2633800000
    ],
    [
        1229310,
        2628168000
    ],
    [
        1229300,
        2648000000
    ],
    [
        1229290,
        2653530000
    ],
    [
        1229280,
        2659000000
    ],
    [
        1229270,
        2658327500
    ],
    [
        1229260,
        2663350000
    ],
    [
        1229250,
        2657880000
    ],
    [
        1229240,
        2652770000
    ],
    [
        1229210,
        2667560000
    ],
    [
        1229180,
        2669520000
    ],
    [
        1229170,
        2680520000
    ],
    [
        1229150,
        2732000000
    ],
    [
        1229140,
        2735359000
    ],
    [
        1229130,
        2753610000
    ],
    [
        1229120,
        2756000000
    ],
    [
        1229110,
        2782600000
    ],
    [
        1229100,
        2762000000
    ],
    [
        1229090,
        2760608000
    ],
    [
        1229080,
        2748185000
    ],
    [
        1229070,
        2743550000
    ],
    [
        1229060,
        2766020000
    ],
    [
        1229050,
        2764500000
    ],
    [
        1229040,
        2770060000
    ],
    [
        1229000,
        2756000000
    ],
    [
        1228990,
        2755451000
    ],
    [
        1228980,
        2751972000
    ],
    [
        1228970,
        2750113000
    ],
    [
        1228960,
        2745322000
    ],
    [
        1228930,
        2732000000
    ],
    [
        1228910,
        2810255000
    ],
    [
        1228890,
        2732000000
    ],
    [
        1228850,
        2703000000
    ],
    [
        1228830,
        2701000000
    ],
    [
        1228810,
        2697310000
    ],
    [
        1228790,
        2701000000
    ],
    [
        1228760,
        2715760000
    ],
    [
        1228750,
        2720910000
    ],
    [
        1228740,
        2723000000
    ],
    [
        1228720,
        2722194000
    ],
    [
        1228710,
        2737000000
    ],
    [
        1228660,
        2738700000
    ],
    [
        1228650,
        2731930000
    ],
    [
        1228640,
        2729717000
    ],
    [
        1228630,
        2714333000
    ],
    [
        1228620,
        2697310000
    ],
    [
        1228610,
        2668670000
    ],
    [
        1228600,
        2665417500
    ],
    [
        1228590,
        2661771000
    ],
    [
        1228580,
        2643000000
    ],
    [
        1228560,
        2636280000
    ],
    [
        1228530,
        2643000000
    ],
    [
        1228510,
        2645471500
    ],
    [
        1228500,
        2647146000
    ],
    [
        1228490,
        2647150000
    ],
    [
        1228480,
        2651000000
    ],
    [
        1228460,
        2653000000
    ],
    [
        1228450,
        2631580000
    ],
    [
        1228440,
        2631016500
    ],
    [
        1228430,
        2626783500
    ],
    [
        1228420,
        2622160000
    ],
    [
        1228410,
        2621002500
    ],
    [
        1228400,
        2629579500
    ],
    [
        1228390,
        2627177500
    ],
    [
        1228380,
        2625780000
    ],
    [
        1228370,
        2622190000
    ],
    [
        1228360,
        2617312000
    ],
    [
        1228290,
        2620142000
    ],
    [
        1228270,
        2617000000
    ],
    [
        1228230,
        2681570000
    ],
    [
        1228220,
        2683607000
    ],
    [
        1228210,
        2686680000
    ],
    [
        1228150,
        2696000000
    ],
    [
        1228120,
        2697310000
    ],
    [
        1228100,
        2697875000
    ],
    [
        1228060,
        2697310000
    ],
    [
        1228050,
        2701830000
    ],
    [
        1228040,
        2703425000
    ],
    [
        1228030,
        2701910000
    ],
    [
        1228020,
        2704740000
    ],
    [
        1228010,
        2708050000
    ],
    [
        1227980,
        2711436000
    ],
    [
        1227970,
        2710000000
    ],
    [
        1227960,
        2706260000
    ],
    [
        1227950,
        2714515000
    ],
    [
        1227940,
        2718265000
    ],
    [
        1227930,
        2726000000
    ],
    [
        1227920,
        2731620000
    ],
    [
        1227910,
        2724119000
    ],
    [
        1227900,
        2721587500
    ],
    [
        1227890,
        2714000000
    ],
    [
        1227880,
        2706220000
    ],
    [
        1227860,
        2705460000
    ],
    [
        1227840,
        2706000000
    ],
    [
        1227830,
        2706220000
    ],
    [
        1227820,
        2709452500
    ],
    [
        1227810,
        2710480000
    ],
    [
        1227800,
        2707190000
    ],
    [
        1227790,
        2704600000
    ],
    [
        1227780,
        2699350000
    ],
    [
        1227770,
        2690630000
    ],
    [
        1227750,
        2683760000
    ],
    [
        1227720,
        2690900000
    ],
    [
        1227710,
        2682000000
    ],
    [
        1227700,
        2671045000
    ],
    [
        1227690,
        2670420000
    ],
    [
        1227670,
        2703000000
    ],
    [
        1227650,
        2704230000
    ],
    [
        1227640,
        2705000000
    ],
    [
        1227630,
        2707700000
    ],
    [
        1227620,
        2708000000
    ],
    [
        1227610,
        2713890000
    ],
    [
        1227600,
        2717740000
    ],
    [
        1227580,
        2715630000
    ],
    [
        1227570,
        2706220000
    ],
    [
        1227540,
        2714000000
    ],
    [
        1227510,
        2723330000
    ],
    [
        1227500,
        2731407500
    ],
    [
        1227470,
        2747880000
    ],
    [
        1227460,
        2749350000
    ],
    [
        1227440,
        2750000000
    ],
    [
        1227430,
        2744770000
    ],
    [
        1227420,
        2740424000
    ],
    [
        1227410,
        2741940000
    ],
    [
        1227370,
        2735100000
    ],
    [
        1227360,
        2732904000
    ],
    [
        1227350,
        2731620000
    ],
    [
        1227340,
        2728210000
    ],
    [
        1227330,
        2725595000
    ],
    [
        1227320,
        2723837500
    ],
    [
        1227310,
        2724000000
    ],
    [
        1227300,
        2730000000
    ],
    [
        1227290,
        2726113000
    ],
    [
        1227280,
        2726080000
    ],
    [
        1227270,
        2724000000
    ],
    [
        1227260,
        2722090000
    ],
    [
        1227250,
        2709000000
    ],
    [
        1227240,
        2712000000
    ],
    [
        1227230,
        2713110000
    ],
    [
        1227210,
        2716150000
    ],
    [
        1227180,
        2718287500
    ],
    [
        1227170,
        2724000000
    ],
    [
        1227160,
        2724330000
    ],
    [
        1227150,
        2724567500
    ],
    [
        1227140,
        2724000000
    ],
    [
        1227130,
        2721720000
    ],
    [
        1227120,
        2721560000
    ],
    [
        1227110,
        2724000000
    ],
    [
        1227080,
        2734000000
    ],
    [
        1227070,
        2736000000
    ],
    [
        1227060,
        2735850000
    ],
    [
        1227050,
        2733353000
    ],
    [
        1227040,
        2731620000
    ],
    [
        1227030,
        2734000000
    ],
    [
        1227020,
        2731620000
    ],
    [
        1227000,
        2730000000
    ],
    [
        1226990,
        2731552000
    ],
    [
        1226980,
        2736207500
    ],
    [
        1226970,
        2743123000
    ],
    [
        1226960,
        2738750000
    ],
    [
        1226950,
        2746687500
    ],
    [
        1226940,
        2765800000
    ],
    [
        1226930,
        2764000000
    ],
    [
        1226920,
        2742620000
    ],
    [
        1226910,
        2737292000
    ],
    [
        1226890,
        2731620000
    ],
    [
        1226880,
        2729227000
    ],
    [
        1226790,
        2745404500
    ],
    [
        1226780,
        2744925000
    ],
    [
        1226770,
        2753045000
    ],
    [
        1226760,
        2753734000
    ],
    [
        1226750,
        2745182500
    ],
    [
        1226730,
        2733461500
    ],
    [
        1226720,
        2732830000
    ],
    [
        1226710,
        2736675000
    ],
    [
        1226700,
        2743025000
    ],
    [
        1226690,
        2740000000
    ],
    [
        1226680,
        2735771000
    ],
    [
        1226670,
        2733440000
    ],
    [
        1226650,
        2733000000
    ],
    [
        1226640,
        2729208000
    ],
    [
        1226630,
        2725110000
    ],
    [
        1226620,
        2733610000
    ],
    [
        1226610,
        2734694000
    ],
    [
        1226590,
        2733380000
    ],
    [
        1226570,
        2747390000
    ],
    [
        1226560,
        2763260000
    ],
    [
        1226500,
        2723000000
    ],
    [
        1226490,
        2718862000
    ],
    [
        1226420,
        2713000000
    ],
    [
        1226370,
        2702000000
    ],
    [
        1226360,
        2698625000
    ],
    [
        1226340,
        2674310000
    ],
    [
        1226310,
        2672460000
    ],
    [
        1226290,
        2669380000
    ],
    [
        1226280,
        2671167500
    ],
    [
        1226260,
        2675000000
    ],
    [
        1226230,
        2678000000
    ],
    [
        1226220,
        2689405000
    ],
    [
        1226210,
        2689060000
    ],
    [
        1226200,
        2687730000
    ],
    [
        1226190,
        2686990000
    ],
    [
        1226180,
        2679855000
    ],
    [
        1226170,
        2687442500
    ],
    [
        1226160,
        2678000000
    ],
    [
        1226100,
        2666000000
    ],
    [
        1226080,
        2664000000
    ],
    [
        1226060,
        2656550000
    ],
    [
        1226050,
        2661775000
    ],
    [
        1226040,
        2662870000
    ],
    [
        1226030,
        2662297000
    ],
    [
        1226020,
        2656526000
    ],
    [
        1226010,
        2663243000
    ],
    [
        1226000,
        2664000000
    ],
    [
        1225980,
        2673000000
    ],
    [
        1225970,
        2672860000
    ],
    [
        1225960,
        2634450000
    ],
    [
        1225930,
        2592490000
    ],
    [
        1225920,
        2589000000
    ],
    [
        1225910,
        2588500000
    ],
    [
        1225900,
        2591000000
    ],
    [
        1225890,
        2588500000
    ],
    [
        1225880,
        2587835000
    ],
    [
        1225870,
        2585555000
    ],
    [
        1225840,
        2587560000
    ],
    [
        1225830,
        2581620000
    ],
    [
        1225820,
        2576000000
    ],
    [
        1225810,
        2575400000
    ],
    [
        1225800,
        2574000000
    ],
    [
        1225790,
        2574452500
    ],
    [
        1225780,
        2571000000
    ],
    [
        1225770,
        2562000000
    ],
    [
        1225750,
        2571000000
    ],
    [
        1225740,
        2567501000
    ],
    [
        1225730,
        2540943000
    ],
    [
        1225720,
        2539277500
    ],
    [
        1225710,
        2516230000
    ],
    [
        1225700,
        2511477000
    ],
    [
        1225680,
        2510660000
    ],
    [
        1225670,
        2507000000
    ],
    [
        1225650,
        2507487000
    ],
    [
        1225640,
        2507000000
    ],
    [
        1225630,
        2488680000
    ],
    [
        1225620,
        2481490000
    ],
    [
        1225610,
        2508180000
    ],
    [
        1225600,
        2511110000
    ],
    [
        1225590,
        2521150000
    ],
    [
        1225570,
        2527770000
    ],
    [
        1225560,
        2564540000
    ],
    [
        1225550,
        2578785000
    ],
    [
        1225540,
        2596452500
    ],
    [
        1225530,
        2609000000
    ],
    [
        1225520,
        2616040000
    ],
    [
        1225510,
        2613464000
    ],
    [
        1225500,
        2611550000
    ],
    [
        1225490,
        2613850000
    ],
    [
        1225480,
        2612880000
    ],
    [
        1225470,
        2616929000
    ],
    [
        1225460,
        2621400000
    ],
    [
        1225450,
        2625448000
    ],
    [
        1225440,
        2629008000
    ],
    [
        1225430,
        2626167500
    ],
    [
        1225410,
        2622826000
    ],
    [
        1225400,
        2623410000
    ],
    [
        1225390,
        2648770000
    ],
    [
        1225360,
        2649337500
    ],
    [
        1225350,
        2629000000
    ],
    [
        1225290,
        2642340000
    ],
    [
        1225280,
        2655840000
    ],
    [
        1225230,
        2490000000
    ],
    [
        1225220,
        2482950000
    ],
    [
        1225200,
        2473500000
    ],
    [
        1225170,
        2470775000
    ],
    [
        1225150,
        2451436000
    ],
    [
        1225140,
        2440130000
    ],
    [
        1225120,
        2437000000
    ],
    [
        1225100,
        2438280000
    ],
    [
        1225090,
        2439280000
    ],
    [
        1225080,
        2447700000
    ],
    [
        1225070,
        2442850000
    ],
    [
        1225060,
        2442700000
    ],
    [
        1225040,
        2438850000
    ],
    [
        1225030,
        2439642000
    ],
    [
        1225020,
        2440000000
    ],
    [
        1225010,
        2440140000
    ],
    [
        1224980,
        2436390000
    ],
    [
        1224970,
        2433240000
    ],
    [
        1224950,
        2434030000
    ],
    [
        1224940,
        2438000000
    ],
    [
        1224930,
        2436500000
    ],
    [
        1224920,
        2431581000
    ],
    [
        1224910,
        2430052500
    ],
    [
        1224900,
        2439620000
    ],
    [
        1224890,
        2439860000
    ],
    [
        1224880,
        2449110000
    ],
    [
        1224870,
        2467000000
    ],
    [
        1224850,
        2468000000
    ],
    [
        1224840,
        2466132500
    ],
    [
        1224820,
        2463743000
    ],
    [
        1224810,
        2466132500
    ],
    [
        1224800,
        2465382500
    ],
    [
        1224780,
        2466139000
    ],
    [
        1224770,
        2453075000
    ],
    [
        1224760,
        2452852000
    ],
    [
        1224750,
        2453075000
    ],
    [
        1224740,
        2443345000
    ],
    [
        1224730,
        2439620000
    ],
    [
        1224720,
        2437307000
    ],
    [
        1224710,
        2443215000
    ],
    [
        1224700,
        2444310000
    ],
    [
        1224690,
        2447670000
    ],
    [
        1224680,
        2455000000
    ],
    [
        1224660,
        2456300000
    ],
    [
        1224640,
        2458230000
    ],
    [
        1224630,
        2456190000
    ],
    [
        1224620,
        2454485000
    ],
    [
        1224600,
        2453075000
    ],
    [
        1224590,
        2461210000
    ],
    [
        1224580,
        2461510000
    ],
    [
        1224560,
        2459562500
    ],
    [
        1224550,
        2447630000
    ],
    [
        1224540,
        2444000000
    ],
    [
        1224520,
        2432130000
    ],
    [
        1224510,
        2436269000
    ],
    [
        1224500,
        2437000000
    ],
    [
        1224490,
        2444000000
    ],
    [
        1224470,
        2444485000
    ],
    [
        1224450,
        2444000000
    ],
    [
        1224430,
        2464470000
    ],
    [
        1224420,
        2496916000
    ],
    [
        1224400,
        2500170000
    ],
    [
        1224380,
        2503000000
    ],
    [
        1224370,
        2509260000
    ],
    [
        1224360,
        2512000000
    ],
    [
        1224340,
        2516151000
    ],
    [
        1224320,
        2523000000
    ],
    [
        1224270,
        2542510000
    ],
    [
        1224260,
        2545540000
    ],
    [
        1224240,
        2545728000
    ],
    [
        1224220,
        2546880000
    ],
    [
        1224210,
        2543000000
    ],
    [
        1224190,
        2544080000
    ],
    [
        1224180,
        2540858000
    ],
    [
        1224170,
        2535830000
    ],
    [
        1224160,
        2543212500
    ],
    [
        1224150,
        2555980000
    ],
    [
        1224140,
        2562320000
    ],
    [
        1224130,
        2560960000
    ],
    [
        1224100,
        2553320000
    ],
    [
        1224090,
        2546316000
    ],
    [
        1224080,
        2527506000
    ],
    [
        1224060,
        2524000000
    ],
    [
        1224040,
        2526770000
    ],
    [
        1224010,
        2542000000
    ],
    [
        1224000,
        2528410000
    ],
    [
        1223980,
        2591580000
    ],
    [
        1223970,
        2595540000
    ],
    [
        1223960,
        2600000000
    ],
    [
        1223950,
        2601169000
    ],
    [
        1223940,
        2601440000
    ],
    [
        1223930,
        2612000000
    ],
    [
        1223920,
        2612080000
    ],
    [
        1223910,
        2612000000
    ],
    [
        1223900,
        2608265000
    ],
    [
        1223890,
        2595470000
    ],
    [
        1223880,
        2603332000
    ],
    [
        1223870,
        2618000000
    ],
    [
        1223790,
        2742970000
    ],
    [
        1223780,
        2743000000
    ],
    [
        1223770,
        2746271000
    ],
    [
        1223760,
        2748080000
    ],
    [
        1223750,
        2747113000
    ],
    [
        1223730,
        2738780000
    ],
    [
        1223720,
        2760160000
    ],
    [
        1223700,
        2761000000
    ],
    [
        1223680,
        2760344500
    ],
    [
        1223670,
        2760080000
    ],
    [
        1223660,
        2758745000
    ],
    [
        1223640,
        2759930000
    ],
    [
        1223630,
        2759660000
    ],
    [
        1223620,
        2755755000
    ],
    [
        1223610,
        2750535000
    ],
    [
        1223570,
        2762395000
    ],
    [
        1223560,
        2761521250
    ],
    [
        1223540,
        2761230000
    ],
    [
        1223530,
        2765085000
    ],
    [
        1223510,
        2765517000
    ],
    [
        1223500,
        2762000000
    ],
    [
        1223490,
        2760015000
    ],
    [
        1223480,
        2760300000
    ],
    [
        1223470,
        2757754250
    ],
    [
        1223450,
        2733700000
    ],
    [
        1223440,
        2732904500
    ],
    [
        1223420,
        2729670000
    ],
    [
        1223410,
        2729495000
    ],
    [
        1223400,
        2736133500
    ],
    [
        1223380,
        2740990000
    ],
    [
        1223370,
        2739976000
    ],
    [
        1223360,
        2739751750
    ],
    [
        1223350,
        2738786500
    ],
    [
        1223340,
        2737131500
    ],
    [
        1223330,
        2733490000
    ],
    [
        1223310,
        2732705000
    ],
    [
        1223280,
        2733765000
    ],
    [
        1223270,
        2731500000
    ],
    [
        1223240,
        2731760000
    ],
    [
        1223230,
        2733301250
    ],
    [
        1223210,
        2732622000
    ],
    [
        1223200,
        2731000000
    ],
    [
        1223190,
        2728781250
    ],
    [
        1223180,
        2727536250
    ],
    [
        1223170,
        2727524000
    ],
    [
        1223160,
        2724570000
    ],
    [
        1223150,
        2726842500
    ],
    [
        1223140,
        2725601250
    ],
    [
        1223130,
        2725031250
    ],
    [
        1223110,
        2725513500
    ],
    [
        1223080,
        2724000000
    ],
    [
        1223070,
        2729378750
    ],
    [
        1223050,
        2746166250
    ],
    [
        1223040,
        2748426250
    ],
    [
        1223020,
        2753648250
    ],
    [
        1222950,
        2740090000
    ],
    [
        1222940,
        2739425000
    ],
    [
        1222920,
        2736910000
    ],
    [
        1222900,
        2742301250
    ],
    [
        1222890,
        2737180000
    ],
    [
        1222880,
        2746141250
    ],
    [
        1222870,
        2748720000
    ],
    [
        1222860,
        2750135000
    ],
    [
        1222850,
        2750948750
    ],
    [
        1222830,
        2750373750
    ],
    [
        1222820,
        2746000000
    ],
    [
        1222800,
        2719015000
    ],
    [
        1222790,
        2730661500
    ],
    [
        1222780,
        2743908000
    ],
    [
        1222760,
        2745380500
    ],
    [
        1222750,
        2744305000
    ],
    [
        1222740,
        2743360000
    ],
    [
        1222710,
        2745580000
    ],
    [
        1222700,
        2744243750
    ],
    [
        1222690,
        2723845000
    ],
    [
        1222680,
        2727042500
    ],
    [
        1222670,
        2725886250
    ],
    [
        1222640,
        2710000000
    ],
    [
        1222630,
        2721507000
    ],
    [
        1222620,
        2748305000
    ],
    [
        1222610,
        2766320000
    ],
    [
        1222600,
        2772215000
    ],
    [
        1222590,
        2788000000
    ],
    [
        1222580,
        2791080000
    ],
    [
        1222570,
        2787206250
    ],
    [
        1222560,
        2776045000
    ],
    [
        1222540,
        2775090000
    ],
    [
        1222530,
        2774110000
    ],
    [
        1222520,
        2772085000
    ],
    [
        1222510,
        2769285000
    ],
    [
        1222500,
        2767470000
    ],
    [
        1222490,
        2768103750
    ],
    [
        1222480,
        2783060000
    ],
    [
        1222470,
        2787630000
    ],
    [
        1222460,
        2799443750
    ],
    [
        1222450,
        2801103750
    ],
    [
        1222440,
        2801969500
    ],
    [
        1222430,
        2799882500
    ],
    [
        1222420,
        2808200000
    ],
    [
        1222410,
        2815075000
    ],
    [
        1222390,
        2806668750
    ],
    [
        1222380,
        2805503000
    ],
    [
        1222350,
        2796710000
    ],
    [
        1222340,
        2799300000
    ],
    [
        1222330,
        2805660000
    ],
    [
        1222320,
        2804177000
    ],
    [
        1222300,
        2765960000
    ],
    [
        1222290,
        2760680000
    ],
    [
        1222270,
        2739000000
    ],
    [
        1222260,
        2731360000
    ],
    [
        1222250,
        2729000000
    ],
    [
        1222240,
        2696315000
    ],
    [
        1222230,
        2688480000
    ],
    [
        1222220,
        2684010000
    ],
    [
        1222210,
        2686000000
    ],
    [
        1222190,
        2688480000
    ],
    [
        1222180,
        2691210000
    ],
    [
        1222170,
        2701932500
    ],
    [
        1222150,
        2705170000
    ],
    [
        1222140,
        2706000000
    ],
    [
        1222130,
        2708677500
    ],
    [
        1222120,
        2710710000
    ],
    [
        1222100,
        2711250000
    ],
    [
        1222080,
        2706000000
    ],
    [
        1222070,
        2711250000
    ],
    [
        1222040,
        2719930000
    ],
    [
        1222020,
        2730000000
    ],
    [
        1222010,
        2734190000
    ],
    [
        1222000,
        2730420000
    ],
    [
        1221990,
        2721057500
    ],
    [
        1221980,
        2701660000
    ],
    [
        1221970,
        2693000000
    ],
    [
        1221960,
        2698280000
    ],
    [
        1221950,
        2693000000
    ],
    [
        1221930,
        2691677500
    ],
    [
        1221920,
        2700740000
    ],
    [
        1221910,
        2702375000
    ],
    [
        1221900,
        2706605000
    ],
    [
        1221890,
        2708450000
    ],
    [
        1221880,
        2707270000
    ],
    [
        1221870,
        2707871000
    ],
    [
        1221860,
        2707270000
    ],
    [
        1221850,
        2702850000
    ],
    [
        1221840,
        2701522500
    ],
    [
        1221820,
        2693397500
    ],
    [
        1221800,
        2688800000
    ],
    [
        1221790,
        2682690000
    ],
    [
        1221780,
        2685887000
    ],
    [
        1221770,
        2688000000
    ],
    [
        1221760,
        2681102500
    ],
    [
        1221750,
        2663000000
    ],
    [
        1221730,
        2666000000
    ],
    [
        1221720,
        2666670000
    ],
    [
        1221710,
        2666535000
    ],
    [
        1221700,
        2660870000
    ],
    [
        1221690,
        2694000000
    ],
    [
        1221680,
        2698430000
    ],
    [
        1221670,
        2719000000
    ],
    [
        1221660,
        2725350000
    ],
    [
        1221650,
        2730561000
    ],
    [
        1221630,
        2730323000
    ],
    [
        1221620,
        2728132500
    ],
    [
        1221610,
        2728532000
    ],
    [
        1221600,
        2725491000
    ],
    [
        1221590,
        2720183000
    ],
    [
        1221580,
        2719000000
    ],
    [
        1221560,
        2732000000
    ],
    [
        1221550,
        2730850000
    ],
    [
        1221540,
        2721413000
    ],
    [
        1221530,
        2719230000
    ],
    [
        1221520,
        2717603000
    ],
    [
        1221510,
        2722090000
    ],
    [
        1221500,
        2724000000
    ],
    [
        1221490,
        2727612500
    ],
    [
        1221470,
        2745000000
    ],
    [
        1221460,
        2745230000
    ],
    [
        1221450,
        2748945000
    ],
    [
        1221440,
        2747482000
    ],
    [
        1221430,
        2748257500
    ],
    [
        1221420,
        2737000000
    ],
    [
        1221410,
        2731000000
    ],
    [
        1221400,
        2731500000
    ],
    [
        1221390,
        2728164000
    ],
    [
        1221370,
        2727195000
    ],
    [
        1221360,
        2721660000
    ],
    [
        1221340,
        2721200000
    ],
    [
        1221330,
        2724470000
    ],
    [
        1221320,
        2721660000
    ],
    [
        1221310,
        2720000000
    ],
    [
        1221300,
        2721660000
    ],
    [
        1221290,
        2725817500
    ],
    [
        1221280,
        2724870000
    ],
    [
        1221270,
        2721950000
    ],
    [
        1221260,
        2693960000
    ],
    [
        1221240,
        2688920000
    ],
    [
        1221220,
        2718150000
    ],
    [
        1221210,
        2734330000
    ],
    [
        1221200,
        2739000000
    ],
    [
        1221180,
        2739511000
    ],
    [
        1221170,
        2742000000
    ],
    [
        1221080,
        2840000000
    ],
    [
        1221070,
        2840843000
    ],
    [
        1221050,
        2851865000
    ],
    [
        1221040,
        2848040000
    ],
    [
        1221020,
        2888810000
    ],
    [
        1221010,
        2900000000
    ],
    [
        1221000,
        2948640000
    ],
    [
        1220990,
        2951000000
    ],
    [
        1220980,
        2955000000
    ],
    [
        1220960,
        2951000000
    ],
    [
        1220950,
        2949327500
    ],
    [
        1220940,
        2952660000
    ],
    [
        1220910,
        2955000000
    ],
    [
        1220900,
        2955391250
    ],
    [
        1220890,
        2952878500
    ],
    [
        1220880,
        2968875000
    ],
    [
        1220870,
        2974590000
    ],
    [
        1220860,
        2986160000
    ],
    [
        1220850,
        2991504000
    ],
    [
        1220840,
        2991527500
    ],
    [
        1220830,
        2998000000
    ],
    [
        1220820,
        2994030000
    ],
    [
        1220790,
        2998000000
    ],
    [
        1220780,
        2994471000
    ],
    [
        1220770,
        2986490000
    ],
    [
        1220760,
        3012000000
    ],
    [
        1220750,
        3010000000
    ],
    [
        1220740,
        3012000000
    ],
    [
        1220720,
        3004370000
    ],
    [
        1220710,
        3005150000
    ],
    [
        1220700,
        3005790000
    ],
    [
        1220690,
        3009820000
    ],
    [
        1220680,
        3006610000
    ],
    [
        1220670,
        3011755000
    ],
    [
        1220650,
        3004078000
    ],
    [
        1220640,
        3003032500
    ],
    [
        1220630,
        2987000000
    ],
    [
        1220620,
        2994030000
    ],
    [
        1220610,
        3001000000
    ],
    [
        1220600,
        3001547000
    ],
    [
        1220580,
        3002000000
    ],
    [
        1220570,
        3001000000
    ],
    [
        1220560,
        2999607500
    ],
    [
        1220550,
        2993290000
    ],
    [
        1220540,
        2985745000
    ],
    [
        1220530,
        2978435000
    ],
    [
        1220520,
        2973070000
    ],
    [
        1220510,
        2967000000
    ],
    [
        1220490,
        2954233000
    ],
    [
        1220470,
        2947000000
    ],
    [
        1220460,
        2941870000
    ],
    [
        1220450,
        2943740000
    ],
    [
        1220440,
        2949000000
    ],
    [
        1220430,
        2954770000
    ],
    [
        1220420,
        2950670000
    ],
    [
        1220400,
        2952080000
    ],
    [
        1220390,
        2943490000
    ],
    [
        1220380,
        2944032500
    ],
    [
        1220370,
        2949000000
    ],
    [
        1220360,
        2948830000
    ],
    [
        1220350,
        2952967500
    ],
    [
        1220330,
        2949000000
    ],
    [
        1220320,
        2946450000
    ],
    [
        1220310,
        2939980000
    ],
    [
        1220300,
        2934050000
    ],
    [
        1220290,
        2928032000
    ],
    [
        1220280,
        2927555000
    ],
    [
        1220270,
        2926000000
    ],
    [
        1220260,
        2948895000
    ],
    [
        1220250,
        2941775000
    ],
    [
        1220230,
        2932020000
    ],
    [
        1220200,
        2926000000
    ],
    [
        1220180,
        2912000000
    ],
    [
        1220170,
        2920109000
    ],
    [
        1220160,
        2916340000
    ],
    [
        1220150,
        2926000000
    ],
    [
        1220140,
        2914921000
    ],
    [
        1220130,
        2919007500
    ],
    [
        1220120,
        2912788000
    ],
    [
        1220110,
        2903360000
    ],
    [
        1220100,
        2898337500
    ],
    [
        1220080,
        2897890000
    ],
    [
        1220070,
        2891170000
    ],
    [
        1220050,
        2885292500
    ],
    [
        1220040,
        2879600000
    ],
    [
        1220030,
        2884939000
    ],
    [
        1220020,
        2881922500
    ],
    [
        1220010,
        2876819000
    ],
    [
        1220000,
        2866370000
    ],
    [
        1219990,
        2853700000
    ],
    [
        1219980,
        2857720000
    ],
    [
        1219970,
        2864835000
    ],
    [
        1219960,
        2876603000
    ],
    [
        1219940,
        2895000000
    ],
    [
        1219890,
        2918000000
    ],
    [
        1219880,
        2921510000
    ],
    [
        1219860,
        2923347500
    ],
    [
        1219850,
        2919000000
    ],
    [
        1219820,
        2922420000
    ],
    [
        1219810,
        2922940000
    ],
    [
        1219760,
        2914000000
    ],
    [
        1219750,
        2913232000
    ],
    [
        1219740,
        2913600000
    ],
    [
        1219730,
        2919392500
    ],
    [
        1219720,
        2919311000
    ],
    [
        1219710,
        2917756000
    ],
    [
        1219690,
        2930000000
    ],
    [
        1219680,
        2935540000
    ],
    [
        1219670,
        2936152000
    ],
    [
        1219660,
        2958452500
    ],
    [
        1219640,
        2971220000
    ],
    [
        1219630,
        2979122500
    ],
    [
        1219610,
        2994030000
    ],
    [
        1219600,
        2998550000
    ],
    [
        1219580,
        3000340000
    ],
    [
        1219570,
        2997079000
    ],
    [
        1219560,
        2993442000
    ],
    [
        1219550,
        2997345000
    ],
    [
        1219540,
        2998532000
    ],
    [
        1219530,
        2994685000
    ],
    [
        1219520,
        2996070000
    ],
    [
        1219510,
        2991450000
    ],
    [
        1219500,
        2991540500
    ],
    [
        1219490,
        2996070000
    ],
    [
        1219480,
        2991535000
    ],
    [
        1219470,
        2997685000
    ],
    [
        1219460,
        2992245000
    ],
    [
        1219450,
        2981610000
    ],
    [
        1219440,
        2983042000
    ],
    [
        1219430,
        2915540000
    ],
    [
        1219420,
        2912353000
    ],
    [
        1219410,
        2912551000
    ],
    [
        1219400,
        2910000000
    ],
    [
        1219390,
        2893250000
    ],
    [
        1219380,
        2909270000
    ],
    [
        1219370,
        2910000000
    ],
    [
        1219360,
        2995140000
    ],
    [
        1219350,
        3013000000
    ],
    [
        1219340,
        3019500000
    ],
    [
        1219330,
        3018870000
    ],
    [
        1219310,
        3013000000
    ],
    [
        1219300,
        3018550000
    ],
    [
        1219290,
        3037160000
    ],
    [
        1219260,
        3040000000
    ],
    [
        1219250,
        3042000000
    ],
    [
        1219230,
        3045829000
    ],
    [
        1219220,
        3042000000
    ],
    [
        1219200,
        3040000000
    ],
    [
        1219190,
        3048333000
    ],
    [
        1219180,
        3049000000
    ],
    [
        1219140,
        3047000000
    ],
    [
        1219080,
        3039190000
    ],
    [
        1219070,
        3009437500
    ],
    [
        1219060,
        3003432500
    ],
    [
        1219040,
        3002450000
    ],
    [
        1219030,
        3004000000
    ],
    [
        1219020,
        3012620000
    ],
    [
        1219010,
        3013039000
    ],
    [
        1219000,
        3017000000
    ],
    [
        1218990,
        3020168000
    ],
    [
        1218980,
        3020000000
    ],
    [
        1218970,
        3018137000
    ],
    [
        1218950,
        3016000000
    ],
    [
        1218940,
        3010913000
    ],
    [
        1218930,
        3011493000
    ],
    [
        1218920,
        3016000000
    ],
    [
        1218910,
        3020000000
    ],
    [
        1218900,
        3034167500
    ],
    [
        1218890,
        3030580000
    ],
    [
        1218880,
        3031000000
    ],
    [
        1218870,
        3048550000
    ],
    [
        1218860,
        3049000000
    ],
    [
        1218850,
        3046240000
    ],
    [
        1218840,
        3053846000
    ],
    [
        1218830,
        3045232500
    ],
    [
        1218820,
        3037500000
    ],
    [
        1218810,
        3038000000
    ],
    [
        1218800,
        3049700000
    ],
    [
        1218790,
        3067890000
    ],
    [
        1218780,
        3043216000
    ],
    [
        1218770,
        3040000000
    ],
    [
        1218760,
        3039000000
    ],
    [
        1218750,
        3027315000
    ],
    [
        1218710,
        3026000000
    ],
    [
        1218700,
        3026200000
    ],
    [
        1218690,
        3026061000
    ],
    [
        1218680,
        3026385000
    ],
    [
        1218670,
        3026750000
    ],
    [
        1218660,
        3033210000
    ],
    [
        1218640,
        3034000000
    ],
    [
        1218630,
        3038000000
    ],
    [
        1218620,
        3034272500
    ],
    [
        1218610,
        3039395000
    ],
    [
        1218600,
        3040000000
    ],
    [
        1218590,
        3042682000
    ],
    [
        1218580,
        3038000000
    ],
    [
        1218560,
        3030000000
    ],
    [
        1218550,
        3032000000
    ],
    [
        1218540,
        3031638000
    ],
    [
        1218530,
        3033522000
    ],
    [
        1218490,
        3040000000
    ],
    [
        1218480,
        3042000000
    ],
    [
        1218470,
        3049342500
    ],
    [
        1218460,
        3049495000
    ],
    [
        1218450,
        3046990000
    ],
    [
        1218440,
        3045000000
    ],
    [
        1218430,
        3041217500
    ],
    [
        1218420,
        3040537500
    ],
    [
        1218410,
        3041000000
    ],
    [
        1218400,
        3042453000
    ],
    [
        1218390,
        3036055000
    ],
    [
        1218380,
        3027602500
    ],
    [
        1218370,
        3027000000
    ],
    [
        1218360,
        3027738000
    ],
    [
        1218350,
        3030430000
    ],
    [
        1218330,
        3031590000
    ],
    [
        1218320,
        3033347000
    ],
    [
        1218300,
        3037000000
    ],
    [
        1218290,
        3041630000
    ],
    [
        1218270,
        3077530000
    ],
    [
        1218260,
        3084400000
    ],
    [
        1218250,
        3090700000
    ],
    [
        1218240,
        3093607500
    ],
    [
        1218230,
        3095487500
    ],
    [
        1218220,
        3077000000
    ],
    [
        1218210,
        3065110000
    ],
    [
        1218200,
        3077000000
    ],
    [
        1218190,
        3081000000
    ],
    [
        1218180,
        3079780000
    ],
    [
        1218170,
        3085487000
    ],
    [
        1218160,
        3089000000
    ],
    [
        1218150,
        3092571000
    ],
    [
        1218140,
        3098548000
    ],
    [
        1218130,
        3110932000
    ],
    [
        1218120,
        3101940000
    ],
    [
        1218030,
        3030000000
    ],
    [
        1218010,
        3029000000
    ],
    [
        1217890,
        2938470000
    ],
    [
        1217840,
        2925000000
    ],
    [
        1217830,
        2924227500
    ],
    [
        1217820,
        2924252500
    ],
    [
        1217800,
        2936283000
    ],
    [
        1217790,
        2937132500
    ],
    [
        1217780,
        2924804000
    ],
    [
        1217770,
        2915343000
    ],
    [
        1217760,
        2921703000
    ],
    [
        1217750,
        2926990000
    ],
    [
        1217740,
        2935186000
    ],
    [
        1217730,
        2939732500
    ],
    [
        1217720,
        2943341000
    ],
    [
        1217710,
        2933237000
    ],
    [
        1217700,
        2934242000
    ],
    [
        1217690,
        2937601000
    ],
    [
        1217680,
        2946580000
    ],
    [
        1217670,
        2947210000
    ],
    [
        1217660,
        2953000000
    ],
    [
        1217630,
        2920710000
    ],
    [
        1217610,
        2919000000
    ],
    [
        1217600,
        2920710000
    ],
    [
        1217590,
        2904540000
    ],
    [
        1217570,
        2890920000
    ],
    [
        1217560,
        2895660000
    ],
    [
        1217550,
        2905000000
    ],
    [
        1217540,
        2884000000
    ],
    [
        1217530,
        2874400000
    ],
    [
        1217520,
        2873250000
    ],
    [
        1217500,
        2874400000
    ],
    [
        1217490,
        2862890000
    ],
    [
        1217480,
        2856770000
    ],
    [
        1217460,
        2859000000
    ],
    [
        1217440,
        2853000000
    ],
    [
        1217420,
        2855660000
    ],
    [
        1217410,
        2863330000
    ],
    [
        1217400,
        2869992000
    ],
    [
        1217390,
        2888958000
    ],
    [
        1217380,
        2900000000
    ],
    [
        1217370,
        2914950000
    ],
    [
        1217360,
        2915000000
    ],
    [
        1217350,
        2914950000
    ],
    [
        1217340,
        2911361000
    ],
    [
        1217330,
        2915000000
    ],
    [
        1217320,
        2913917000
    ],
    [
        1217260,
        2889000000
    ],
    [
        1217220,
        2883820000
    ],
    [
        1217210,
        2883000000
    ],
    [
        1217200,
        2879000000
    ],
    [
        1217170,
        2878000000
    ],
    [
        1217160,
        2879000000
    ],
    [
        1217150,
        2878000000
    ],
    [
        1217140,
        2877567500
    ],
    [
        1217100,
        2860000000
    ],
    [
        1217090,
        2856399000
    ],
    [
        1217070,
        2812000000
    ],
    [
        1217060,
        2808000000
    ],
    [
        1217050,
        2805640000
    ],
    [
        1217030,
        2795750000
    ],
    [
        1217020,
        2794651000
    ],
    [
        1217010,
        2800000000
    ],
    [
        1216980,
        2806670000
    ],
    [
        1216970,
        2812000000
    ],
    [
        1216890,
        2809000000
    ],
    [
        1216880,
        2807027500
    ],
    [
        1216870,
        2810740000
    ],
    [
        1216860,
        2819000000
    ],
    [
        1216830,
        2839730000
    ],
    [
        1216800,
        2843000000
    ],
    [
        1216790,
        2846020000
    ],
    [
        1216770,
        2887560000
    ],
    [
        1216750,
        2892000000
    ],
    [
        1216740,
        2895722000
    ],
    [
        1216730,
        2905000000
    ],
    [
        1216720,
        2893000000
    ],
    [
        1216710,
        2881723000
    ],
    [
        1216700,
        2877850000
    ],
    [
        1216690,
        2877000000
    ],
    [
        1216660,
        2873550000
    ],
    [
        1216650,
        2872670000
    ],
    [
        1216640,
        2869652500
    ],
    [
        1216630,
        2868770000
    ],
    [
        1216600,
        2908000000
    ],
    [
        1216580,
        2912000000
    ],
    [
        1216570,
        2911060000
    ],
    [
        1216560,
        2911367000
    ],
    [
        1216550,
        2910415000
    ],
    [
        1216500,
        2912102500
    ],
    [
        1216470,
        2908000000
    ],
    [
        1216460,
        2911540000
    ],
    [
        1216450,
        2923000000
    ],
    [
        1216430,
        2917480000
    ],
    [
        1216410,
        2924000000
    ],
    [
        1216400,
        2930000000
    ],
    [
        1216380,
        3019990000
    ],
    [
        1216350,
        3020000000
    ],
    [
        1216320,
        3030000000
    ],
    [
        1216300,
        3032930000
    ],
    [
        1216290,
        3039488000
    ],
    [
        1216280,
        3051000000
    ],
    [
        1216270,
        3077000000
    ],
    [
        1216250,
        3081390000
    ],
    [
        1216240,
        3077000000
    ],
    [
        1216230,
        3055185000
    ],
    [
        1216220,
        3055000000
    ],
    [
        1216210,
        3054742000
    ],
    [
        1216200,
        3055000000
    ],
    [
        1216190,
        3058000000
    ],
    [
        1216180,
        3056300000
    ],
    [
        1216170,
        3059000000
    ],
    [
        1216160,
        3066000000
    ],
    [
        1216150,
        3068130000
    ],
    [
        1216140,
        3082632000
    ],
    [
        1216130,
        3082000000
    ],
    [
        1216120,
        3083032500
    ],
    [
        1216110,
        3050590000
    ],
    [
        1216100,
        3049865000
    ],
    [
        1216080,
        3049000000
    ],
    [
        1216070,
        3041000000
    ],
    [
        1216060,
        3043580000
    ],
    [
        1216050,
        3050097000
    ],
    [
        1216030,
        3054000000
    ],
    [
        1216020,
        3057550000
    ],
    [
        1216010,
        3054000000
    ],
    [
        1216000,
        3046150000
    ],
    [
        1215990,
        3041345000
    ],
    [
        1215980,
        3023200000
    ],
    [
        1215970,
        3015915000
    ],
    [
        1215960,
        3012023000
    ],
    [
        1215950,
        3002000000
    ],
    [
        1215940,
        2995430000
    ],
    [
        1215920,
        2991000000
    ],
    [
        1215910,
        2985010000
    ],
    [
        1215900,
        2991000000
    ],
    [
        1215890,
        3017210000
    ],
    [
        1215870,
        3032000000
    ],
    [
        1215860,
        3042250000
    ],
    [
        1215850,
        3048020000
    ],
    [
        1215840,
        3049000000
    ],
    [
        1215830,
        3050535000
    ],
    [
        1215810,
        3049330000
    ],
    [
        1215800,
        3054627000
    ],
    [
        1215780,
        3043000000
    ],
    [
        1215770,
        3048000000
    ],
    [
        1215760,
        3049256000
    ],
    [
        1215740,
        3064630000
    ],
    [
        1215730,
        3068264000
    ],
    [
        1215710,
        3079608000
    ],
    [
        1215700,
        3082000000
    ],
    [
        1215690,
        3101222500
    ],
    [
        1215680,
        3117443000
    ],
    [
        1215670,
        3119000000
    ],
    [
        1215660,
        3119080000
    ],
    [
        1215640,
        3119000000
    ],
    [
        1215630,
        3099000000
    ],
    [
        1215610,
        3085000000
    ],
    [
        1215600,
        3088750000
    ],
    [
        1215590,
        3094000000
    ],
    [
        1215580,
        3098790000
    ],
    [
        1215570,
        3119080000
    ],
    [
        1215560,
        3119575000
    ],
    [
        1215550,
        3127000000
    ],
    [
        1215540,
        3129000000
    ],
    [
        1215490,
        3150000000
    ],
    [
        1215480,
        3150380000
    ],
    [
        1215470,
        3151630000
    ],
    [
        1215460,
        3154930000
    ],
    [
        1215450,
        3154915000
    ],
    [
        1215440,
        3158510000
    ],
    [
        1215430,
        3165070000
    ],
    [
        1215420,
        3155445000
    ],
    [
        1215410,
        3166660000
    ],
    [
        1215390,
        3182210000
    ],
    [
        1215360,
        3151000000
    ],
    [
        1215350,
        3160395000
    ],
    [
        1215290,
        3168020000
    ],
    [
        1215260,
        3082000000
    ],
    [
        1215240,
        3063690000
    ],
    [
        1215230,
        3034000000
    ],
    [
        1215210,
        3023170000
    ],
    [
        1215170,
        2981000000
    ],
    [
        1215160,
        2973887000
    ],
    [
        1215150,
        2971000000
    ],
    [
        1215140,
        2965670000
    ],
    [
        1215130,
        2971000000
    ],
    [
        1215120,
        2971810000
    ],
    [
        1215110,
        2967627500
    ],
    [
        1215100,
        2970987500
    ],
    [
        1215090,
        2987620000
    ],
    [
        1215070,
        3020340000
    ],
    [
        1215060,
        3000650000
    ],
    [
        1215050,
        2988000000
    ],
    [
        1215040,
        2981000000
    ],
    [
        1215030,
        2966784000
    ],
    [
        1215020,
        2954000000
    ],
    [
        1215010,
        2945795000
    ],
    [
        1214980,
        2950050000
    ],
    [
        1214960,
        2948000000
    ],
    [
        1214900,
        2951000000
    ],
    [
        1214890,
        2960635500
    ],
    [
        1214870,
        2965730000
    ],
    [
        1214840,
        2973356250
    ],
    [
        1214780,
        2972810000
    ],
    [
        1214770,
        2980163500
    ],
    [
        1214730,
        3001930000
    ],
    [
        1214710,
        2988060000
    ],
    [
        1214690,
        2978000000
    ],
    [
        1214680,
        2976000000
    ],
    [
        1214670,
        2961322500
    ],
    [
        1214660,
        2944340000
    ],
    [
        1214620,
        2938850000
    ],
    [
        1214600,
        2926440000
    ],
    [
        1214590,
        2921030000
    ],
    [
        1214560,
        2910000000
    ],
    [
        1214550,
        2986630000
    ],
    [
        1214520,
        2993000000
    ],
    [
        1214500,
        2982810000
    ],
    [
        1214490,
        2974000000
    ],
    [
        1214480,
        2966060000
    ],
    [
        1214470,
        2966000000
    ],
    [
        1214460,
        2969642000
    ],
    [
        1214440,
        2970778000
    ],
    [
        1214430,
        2977091250
    ],
    [
        1214420,
        2978096250
    ],
    [
        1214390,
        2978005000
    ],
    [
        1214370,
        2980095000
    ],
    [
        1214340,
        2979390000
    ],
    [
        1214330,
        2980385000
    ],
    [
        1214310,
        2997960000
    ],
    [
        1214300,
        3000385000
    ],
    [
        1214290,
        3002025000
    ],
    [
        1214280,
        3002990000
    ],
    [
        1214270,
        3003085000
    ],
    [
        1214260,
        3001000000
    ],
    [
        1214240,
        3000000000
    ],
    [
        1214220,
        3001000000
    ],
    [
        1214210,
        2963821250
    ],
    [
        1214200,
        2961916250
    ],
    [
        1214190,
        2958560000
    ],
    [
        1214180,
        2962970000
    ],
    [
        1214170,
        2965000000
    ],
    [
        1214160,
        2962970000
    ],
    [
        1214150,
        2945000000
    ],
    [
        1214140,
        2944005000
    ],
    [
        1214130,
        2943263750
    ],
    [
        1214120,
        2942716250
    ],
    [
        1214100,
        2945000000
    ],
    [
        1214090,
        2961705000
    ],
    [
        1214070,
        2967685000
    ],
    [
        1214060,
        2973810000
    ],
    [
        1214050,
        2975302500
    ],
    [
        1214040,
        2977001250
    ],
    [
        1214030,
        2974225000
    ],
    [
        1214010,
        2967595000
    ],
    [
        1214000,
        2967100000
    ],
    [
        1213990,
        2967365000
    ],
    [
        1213980,
        2968296250
    ],
    [
        1213970,
        2952018500
    ],
    [
        1213960,
        2946715000
    ],
    [
        1213950,
        2966604000
    ],
    [
        1213940,
        3010639500
    ],
    [
        1213930,
        3014000000
    ],
    [
        1213920,
        3026721000
    ],
    [
        1213890,
        3026616000
    ],
    [
        1213880,
        3017260000
    ],
    [
        1213870,
        3016716000
    ],
    [
        1213860,
        3034584500
    ],
    [
        1213850,
        3034336250
    ],
    [
        1213840,
        3035759250
    ],
    [
        1213830,
        3039046250
    ],
    [
        1213820,
        3043210500
    ],
    [
        1213810,
        3031571250
    ],
    [
        1213780,
        3025605000
    ],
    [
        1213770,
        3022830000
    ],
    [
        1213760,
        3021648750
    ],
    [
        1213750,
        2999037750
    ],
    [
        1213740,
        2998296250
    ],
    [
        1213730,
        2999555000
    ],
    [
        1213720,
        3007315000
    ],
    [
        1213710,
        3022900000
    ],
    [
        1213700,
        3025000000
    ],
    [
        1213680,
        3025020000
    ],
    [
        1213650,
        3025000000
    ],
    [
        1213630,
        3001500000
    ],
    [
        1213620,
        2995000000
    ],
    [
        1213610,
        2991400000
    ],
    [
        1213600,
        2990036500
    ],
    [
        1213590,
        2990800000
    ],
    [
        1213580,
        2999561000
    ],
    [
        1213570,
        3000117500
    ],
    [
        1213560,
        3006040000
    ],
    [
        1213540,
        3003310000
    ],
    [
        1213530,
        2999210000
    ],
    [
        1213500,
        2944796000
    ],
    [
        1213490,
        2944260000
    ],
    [
        1213470,
        2944640000
    ],
    [
        1213460,
        2978542500
    ],
    [
        1213450,
        2978038000
    ],
    [
        1213420,
        2992820000
    ],
    [
        1213410,
        3000988000
    ],
    [
        1213400,
        2996250000
    ],
    [
        1213380,
        2966287500
    ],
    [
        1213370,
        2987766000
    ],
    [
        1213360,
        2991770000
    ],
    [
        1213340,
        3013730000
    ],
    [
        1213330,
        2991770000
    ],
    [
        1213320,
        2999732500
    ],
    [
        1213300,
        3049220000
    ],
    [
        1213200,
        2919130000
    ],
    [
        1213160,
        2901160000
    ],
    [
        1213150,
        2911070000
    ],
    [
        1213140,
        2919130000
    ],
    [
        1213100,
        2890000000
    ],
    [
        1213090,
        2882000000
    ],
    [
        1213080,
        2879000000
    ],
    [
        1213030,
        2873000000
    ],
    [
        1213020,
        2849597000
    ],
    [
        1213010,
        2829633000
    ],
    [
        1213000,
        2831015000
    ],
    [
        1212990,
        2830180000
    ],
    [
        1212980,
        2821909000
    ],
    [
        1212970,
        2821000000
    ],
    [
        1212960,
        2819150000
    ],
    [
        1212940,
        2815110000
    ],
    [
        1212910,
        2813000000
    ],
    [
        1212900,
        2813860000
    ],
    [
        1212870,
        2815000000
    ],
    [
        1212850,
        2813860000
    ],
    [
        1212840,
        2810182500
    ],
    [
        1212830,
        2821660000
    ],
    [
        1212820,
        2817106000
    ],
    [
        1212810,
        2795000000
    ],
    [
        1212800,
        2793000000
    ],
    [
        1212790,
        2792035000
    ],
    [
        1212770,
        2789220000
    ],
    [
        1212760,
        2787954000
    ],
    [
        1212750,
        2792560000
    ],
    [
        1212740,
        2816400000
    ],
    [
        1212680,
        2826000000
    ],
    [
        1212670,
        2795000000
    ],
    [
        1212650,
        2793000000
    ],
    [
        1212640,
        2792900000
    ],
    [
        1212630,
        2789890000
    ],
    [
        1212620,
        2789010000
    ],
    [
        1212580,
        2793000000
    ],
    [
        1212570,
        2792900000
    ],
    [
        1212520,
        2753000000
    ],
    [
        1212510,
        2745640000
    ],
    [
        1212490,
        2741360000
    ],
    [
        1212480,
        2740662500
    ],
    [
        1212470,
        2728310000
    ],
    [
        1212460,
        2728120000
    ],
    [
        1212450,
        2727675000
    ],
    [
        1212440,
        2726202500
    ],
    [
        1212430,
        2729240000
    ],
    [
        1212420,
        2730000000
    ],
    [
        1212410,
        2738000000
    ],
    [
        1212390,
        2741590000
    ],
    [
        1212370,
        2732000000
    ],
    [
        1212360,
        2726470000
    ],
    [
        1212350,
        2726110000
    ],
    [
        1212320,
        2697000000
    ],
    [
        1212310,
        2693130000
    ],
    [
        1212290,
        2693000000
    ],
    [
        1212280,
        2690000000
    ],
    [
        1212270,
        2681650000
    ],
    [
        1212260,
        2683045000
    ],
    [
        1212250,
        2680305000
    ],
    [
        1212240,
        2675602500
    ],
    [
        1212230,
        2675255000
    ],
    [
        1212220,
        2674560000
    ],
    [
        1212210,
        2673848750
    ],
    [
        1212200,
        2671563750
    ],
    [
        1212190,
        2671219000
    ],
    [
        1212180,
        2672018750
    ],
    [
        1212170,
        2675607250
    ],
    [
        1212160,
        2675361000
    ],
    [
        1212150,
        2685403000
    ],
    [
        1212140,
        2686000000
    ],
    [
        1212130,
        2687873000
    ],
    [
        1212120,
        2691150000
    ],
    [
        1212110,
        2670370000
    ],
    [
        1212100,
        2670800000
    ],
    [
        1212070,
        2664532500
    ],
    [
        1212060,
        2664780000
    ],
    [
        1212050,
        2674000000
    ],
    [
        1212030,
        2680710000
    ],
    [
        1212020,
        2676817500
    ],
    [
        1211990,
        2682000000
    ],
    [
        1211980,
        2685500000
    ],
    [
        1211970,
        2686050000
    ],
    [
        1211960,
        2694209000
    ],
    [
        1211950,
        2698955000
    ],
    [
        1211890,
        2610000000
    ],
    [
        1211850,
        2609130000
    ],
    [
        1211840,
        2606775000
    ],
    [
        1211830,
        2602850000
    ],
    [
        1211810,
        2584865000
    ],
    [
        1211800,
        2580950000
    ],
    [
        1211790,
        2575625000
    ],
    [
        1211780,
        2573070000
    ],
    [
        1211770,
        2581311500
    ],
    [
        1211760,
        2591347500
    ],
    [
        1211750,
        2603230000
    ],
    [
        1211740,
        2607620000
    ],
    [
        1211730,
        2606900000
    ],
    [
        1211720,
        2609261250
    ],
    [
        1211710,
        2608276250
    ],
    [
        1211700,
        2600722500
    ],
    [
        1211690,
        2601867000
    ],
    [
        1211680,
        2607004500
    ],
    [
        1211670,
        2608804000
    ],
    [
        1211660,
        2621245000
    ],
    [
        1211630,
        2622285000
    ],
    [
        1211620,
        2622370000
    ],
    [
        1211610,
        2622290000
    ],
    [
        1211600,
        2621845000
    ],
    [
        1211590,
        2621905000
    ],
    [
        1211580,
        2620870000
    ],
    [
        1211570,
        2624843750
    ],
    [
        1211560,
        2631435000
    ],
    [
        1211550,
        2629771000
    ],
    [
        1211540,
        2627000000
    ],
    [
        1211530,
        2628925000
    ],
    [
        1211510,
        2628960000
    ],
    [
        1211490,
        2626980000
    ],
    [
        1211460,
        2618350000
    ],
    [
        1211450,
        2611412500
    ],
    [
        1211440,
        2610731250
    ],
    [
        1211430,
        2612511250
    ],
    [
        1211420,
        2614777500
    ],
    [
        1211400,
        2614298750
    ],
    [
        1211390,
        2613860000
    ],
    [
        1211380,
        2616161500
    ],
    [
        1211350,
        2600680000
    ],
    [
        1211340,
        2597595000
    ],
    [
        1211330,
        2594670000
    ],
    [
        1211320,
        2589229500
    ],
    [
        1211300,
        2573280000
    ],
    [
        1211290,
        2568370500
    ],
    [
        1211280,
        2555663000
    ],
    [
        1211270,
        2553191250
    ],
    [
        1211260,
        2555781750
    ],
    [
        1211240,
        2556081250
    ],
    [
        1211230,
        2557350000
    ],
    [
        1211220,
        2556210000
    ],
    [
        1211210,
        2556316250
    ],
    [
        1211200,
        2559071000
    ],
    [
        1211190,
        2564460000
    ],
    [
        1211180,
        2567159000
    ],
    [
        1211170,
        2579691000
    ],
    [
        1211160,
        2579777500
    ],
    [
        1211130,
        2573725000
    ],
    [
        1211110,
        2571545000
    ],
    [
        1211100,
        2566975000
    ],
    [
        1211080,
        2561275000
    ],
    [
        1211070,
        2569027500
    ],
    [
        1211060,
        2569590000
    ],
    [
        1211050,
        2570792500
    ],
    [
        1211040,
        2570410000
    ],
    [
        1211020,
        2567470000
    ],
    [
        1211010,
        2568200000
    ],
    [
        1210980,
        2571040000
    ],
    [
        1210890,
        2543570000
    ],
    [
        1210880,
        2541970000
    ],
    [
        1210870,
        2536740000
    ],
    [
        1210850,
        2526010000
    ],
    [
        1210840,
        2524965000
    ],
    [
        1210830,
        2495941000
    ],
    [
        1210820,
        2489450000
    ],
    [
        1210810,
        2485000000
    ],
    [
        1210800,
        2488953500
    ],
    [
        1210790,
        2492805000
    ],
    [
        1210780,
        2495880000
    ],
    [
        1210760,
        2496000000
    ],
    [
        1210750,
        2495644000
    ],
    [
        1210740,
        2499054500
    ],
    [
        1210730,
        2509095000
    ],
    [
        1210720,
        2510102500
    ],
    [
        1210710,
        2515091250
    ],
    [
        1210700,
        2528215000
    ],
    [
        1210690,
        2528540000
    ],
    [
        1210680,
        2525953750
    ],
    [
        1210670,
        2527793500
    ],
    [
        1210660,
        2529000000
    ],
    [
        1210650,
        2527751250
    ],
    [
        1210640,
        2525785000
    ],
    [
        1210630,
        2522212500
    ],
    [
        1210620,
        2522720000
    ],
    [
        1210600,
        2515000000
    ],
    [
        1210590,
        2511965000
    ],
    [
        1210580,
        2513690000
    ],
    [
        1210570,
        2552759000
    ],
    [
        1210560,
        2580690000
    ],
    [
        1210550,
        2590595000
    ],
    [
        1210540,
        2598554000
    ],
    [
        1210530,
        2593934500
    ],
    [
        1210500,
        2541850000
    ],
    [
        1210490,
        2534630000
    ],
    [
        1210480,
        2539310000
    ],
    [
        1210470,
        2532395000
    ],
    [
        1210440,
        2524220000
    ],
    [
        1210420,
        2520000000
    ],
    [
        1210390,
        2519000000
    ],
    [
        1210380,
        2514670000
    ],
    [
        1210370,
        2514832500
    ],
    [
        1210360,
        2516377500
    ],
    [
        1210340,
        2505410000
    ],
    [
        1210330,
        2510000000
    ],
    [
        1210320,
        2513334000
    ],
    [
        1210310,
        2524975000
    ],
    [
        1210300,
        2521531000
    ],
    [
        1210290,
        2519000000
    ],
    [
        1210280,
        2510000000
    ],
    [
        1210270,
        2505410000
    ],
    [
        1210260,
        2498730000
    ],
    [
        1210250,
        2493527500
    ],
    [
        1210200,
        2505410000
    ],
    [
        1210190,
        2510000000
    ],
    [
        1210170,
        2526000000
    ],
    [
        1210150,
        2522000000
    ],
    [
        1210140,
        2521850000
    ],
    [
        1210130,
        2522000000
    ],
    [
        1210120,
        2527188000
    ],
    [
        1210110,
        2525985000
    ],
    [
        1210080,
        2529000000
    ],
    [
        1210070,
        2529825000
    ],
    [
        1210050,
        2527360000
    ],
    [
        1210030,
        2522000000
    ],
    [
        1210020,
        2519611000
    ],
    [
        1210010,
        2513000000
    ],
    [
        1210000,
        2507758000
    ],
    [
        1209990,
        2509067000
    ],
    [
        1209980,
        2509770000
    ],
    [
        1209960,
        2510000000
    ],
    [
        1209950,
        2491355000
    ],
    [
        1209940,
        2487757000
    ],
    [
        1209930,
        2477724000
    ],
    [
        1209920,
        2472000000
    ],
    [
        1209910,
        2474650000
    ],
    [
        1209900,
        2475452000
    ],
    [
        1209890,
        2476232500
    ],
    [
        1209880,
        2473950000
    ],
    [
        1209870,
        2476337500
    ],
    [
        1209860,
        2475907000
    ],
    [
        1209850,
        2466990000
    ],
    [
        1209830,
        2477872500
    ],
    [
        1209820,
        2473234000
    ],
    [
        1209810,
        2478010000
    ],
    [
        1209800,
        2472380000
    ],
    [
        1209780,
        2469006000
    ],
    [
        1209750,
        2467000000
    ],
    [
        1209740,
        2467699000
    ],
    [
        1209730,
        2496410000
    ],
    [
        1209720,
        2499547500
    ],
    [
        1209710,
        2503000000
    ],
    [
        1209690,
        2507000000
    ],
    [
        1209680,
        2506507500
    ],
    [
        1209670,
        2510611000
    ],
    [
        1209660,
        2515000000
    ],
    [
        1209630,
        2510000000
    ],
    [
        1209620,
        2522000000
    ],
    [
        1209610,
        2522670000
    ],
    [
        1209590,
        2529770000
    ],
    [
        1209580,
        2528000000
    ],
    [
        1209570,
        2531767000
    ],
    [
        1209560,
        2539000000
    ],
    [
        1209510,
        2536000000
    ],
    [
        1209500,
        2559860000
    ],
    [
        1209480,
        2564985000
    ],
    [
        1209470,
        2584890000
    ],
    [
        1209450,
        2586330000
    ],
    [
        1209440,
        2586990000
    ],
    [
        1209430,
        2587000000
    ],
    [
        1209420,
        2595570000
    ],
    [
        1209410,
        2596620000
    ],
    [
        1209400,
        2596340000
    ],
    [
        1209390,
        2589000000
    ],
    [
        1209380,
        2588250000
    ],
    [
        1209370,
        2588000000
    ],
    [
        1209340,
        2584890000
    ],
    [
        1209320,
        2582450000
    ],
    [
        1209310,
        2582000000
    ],
    [
        1209300,
        2583830000
    ],
    [
        1209280,
        2582000000
    ],
    [
        1209270,
        2585000000
    ],
    [
        1209260,
        2597740000
    ],
    [
        1209250,
        2600153000
    ],
    [
        1209240,
        2584890000
    ],
    [
        1209230,
        2581860000
    ],
    [
        1209170,
        2570000000
    ],
    [
        1209160,
        2584870000
    ],
    [
        1209150,
        2584890000
    ],
    [
        1209130,
        2591000000
    ],
    [
        1209120,
        2586170000
    ],
    [
        1209070,
        2730000000
    ],
    [
        1209050,
        2733430000
    ],
    [
        1209030,
        2741000000
    ],
    [
        1209010,
        2742360000
    ],
    [
        1209000,
        2741000000
    ],
    [
        1208990,
        2740000000
    ],
    [
        1208980,
        2739760000
    ],
    [
        1208970,
        2740000000
    ],
    [
        1208950,
        2738690000
    ],
    [
        1208940,
        2735537500
    ],
    [
        1208930,
        2736715000
    ],
    [
        1208920,
        2735945000
    ],
    [
        1208900,
        2725000000
    ],
    [
        1208890,
        2726200000
    ],
    [
        1208880,
        2726955000
    ],
    [
        1208870,
        2729474000
    ],
    [
        1208860,
        2725405000
    ],
    [
        1208850,
        2733430000
    ],
    [
        1208840,
        2734000000
    ],
    [
        1208470,
        2736000000
    ],
    [
        1208460,
        2737682500
    ],
    [
        1208450,
        2737630000
    ],
    [
        1208440,
        2738000000
    ],
    [
        1208420,
        2737212000
    ],
    [
        1208410,
        2740900000
    ],
    [
        1208400,
        2746000000
    ],
    [
        1208390,
        2748450000
    ],
    [
        1208380,
        2752505000
    ],
    [
        1208370,
        2752870000
    ],
    [
        1208340,
        2750000000
    ],
    [
        1208320,
        2749000000
    ],
    [
        1208270,
        2735000000
    ],
    [
        1208250,
        2733297500
    ],
    [
        1208240,
        2729174000
    ],
    [
        1208230,
        2738420000
    ],
    [
        1208210,
        2735000000
    ],
    [
        1208200,
        2728850000
    ],
    [
        1208190,
        2709637000
    ],
    [
        1208180,
        2706250000
    ],
    [
        1208170,
        2712014000
    ],
    [
        1208160,
        2711038000
    ],
    [
        1208150,
        2703155000
    ],
    [
        1208140,
        2701350000
    ],
    [
        1208130,
        2703090000
    ],
    [
        1208110,
        2710962500
    ],
    [
        1208100,
        2707640000
    ],
    [
        1208090,
        2708060000
    ],
    [
        1208080,
        2710450000
    ],
    [
        1208070,
        2711350000
    ],
    [
        1208060,
        2703576000
    ],
    [
        1208050,
        2697000000
    ],
    [
        1208040,
        2690846750
    ],
    [
        1208030,
        2691597000
    ],
    [
        1208020,
        2688850000
    ],
    [
        1208010,
        2687382000
    ],
    [
        1207990,
        2697000000
    ],
    [
        1207980,
        2699910000
    ],
    [
        1207910,
        2709553000
    ],
    [
        1207900,
        2711430000
    ],
    [
        1207890,
        2713647500
    ],
    [
        1207880,
        2722500000
    ],
    [
        1207870,
        2725375000
    ],
    [
        1207860,
        2727640000
    ],
    [
        1207850,
        2725598750
    ],
    [
        1207840,
        2723035000
    ],
    [
        1207830,
        2723995500
    ],
    [
        1207820,
        2724680000
    ],
    [
        1207810,
        2733000000
    ],
    [
        1207790,
        2709232500
    ],
    [
        1207780,
        2711932500
    ],
    [
        1207770,
        2709501000
    ],
    [
        1207760,
        2702540000
    ],
    [
        1207750,
        2708630000
    ],
    [
        1207740,
        2712835000
    ],
    [
        1207690,
        2736000000
    ],
    [
        1207680,
        2740373000
    ],
    [
        1207660,
        2730710000
    ],
    [
        1207640,
        2730000000
    ],
    [
        1207630,
        2731202500
    ],
    [
        1207620,
        2742000000
    ],
    [
        1207610,
        2741688000
    ],
    [
        1207600,
        2740000000
    ],
    [
        1207590,
        2730000000
    ],
    [
        1207580,
        2725572000
    ],
    [
        1207570,
        2718197000
    ],
    [
        1207560,
        2724580000
    ],
    [
        1207550,
        2727387500
    ],
    [
        1207540,
        2724420000
    ],
    [
        1207520,
        2710900000
    ],
    [
        1207480,
        2732000000
    ],
    [
        1207470,
        2732785000
    ],
    [
        1207460,
        2732636000
    ],
    [
        1207440,
        2776000000
    ],
    [
        1207430,
        2786890000
    ],
    [
        1207420,
        2812000000
    ],
    [
        1207400,
        2808770000
    ],
    [
        1207390,
        2802410000
    ],
    [
        1207380,
        2805000000
    ],
    [
        1207370,
        2802030000
    ],
    [
        1207360,
        2802912000
    ],
    [
        1207350,
        2805485000
    ],
    [
        1207340,
        2807000000
    ],
    [
        1207320,
        2786890000
    ],
    [
        1207300,
        2783540000
    ],
    [
        1207290,
        2783000000
    ],
    [
        1207280,
        2780000000
    ],
    [
        1207270,
        2782260000
    ],
    [
        1207260,
        2780000000
    ],
    [
        1207250,
        2776000000
    ],
    [
        1207240,
        2777600000
    ],
    [
        1207230,
        2779528000
    ],
    [
        1207220,
        2787000000
    ],
    [
        1207210,
        2787450000
    ],
    [
        1207200,
        2787830000
    ],
    [
        1207190,
        2786890000
    ],
    [
        1207170,
        2784000000
    ],
    [
        1207150,
        2786890000
    ],
    [
        1207140,
        2793330000
    ],
    [
        1207130,
        2792395000
    ],
    [
        1207120,
        2775870000
    ],
    [
        1207110,
        2770285000
    ],
    [
        1207100,
        2764910000
    ],
    [
        1207090,
        2764000000
    ],
    [
        1207080,
        2762465000
    ],
    [
        1207070,
        2762150000
    ],
    [
        1207050,
        2767085000
    ],
    [
        1207040,
        2764000000
    ],
    [
        1207030,
        2774244000
    ],
    [
        1207010,
        2772780000
    ],
    [
        1207000,
        2775457000
    ],
    [
        1206990,
        2771602500
    ],
    [
        1206980,
        2777481000
    ],
    [
        1206960,
        2785000000
    ],
    [
        1206940,
        2786890000
    ],
    [
        1206920,
        2785000000
    ],
    [
        1206910,
        2785170000
    ],
    [
        1206890,
        2783000000
    ],
    [
        1206880,
        2786890000
    ],
    [
        1206860,
        2794417000
    ],
    [
        1206850,
        2802000000
    ],
    [
        1206840,
        2800030000
    ],
    [
        1206830,
        2799617500
    ],
    [
        1206820,
        2799587500
    ],
    [
        1206810,
        2801795000
    ],
    [
        1206800,
        2809630000
    ],
    [
        1206790,
        2814950000
    ],
    [
        1206770,
        2813000000
    ],
    [
        1206760,
        2811740000
    ],
    [
        1206750,
        2792000000
    ],
    [
        1206740,
        2789800000
    ],
    [
        1206720,
        2788320000
    ],
    [
        1206710,
        2792265000
    ],
    [
        1206700,
        2798132000
    ],
    [
        1206690,
        2814951000
    ],
    [
        1206680,
        2831969000
    ],
    [
        1206670,
        2835000000
    ],
    [
        1206660,
        2837000000
    ],
    [
        1206650,
        2834520000
    ],
    [
        1206640,
        2837000000
    ],
    [
        1206610,
        2829000000
    ],
    [
        1206600,
        2828190000
    ],
    [
        1206590,
        2823150000
    ],
    [
        1206580,
        2822605000
    ],
    [
        1206570,
        2830870000
    ],
    [
        1206560,
        2823500000
    ],
    [
        1206550,
        2817447500
    ],
    [
        1206540,
        2808164500
    ],
    [
        1206520,
        2786650000
    ],
    [
        1206480,
        2766000000
    ],
    [
        1206470,
        2757430000
    ],
    [
        1206460,
        2748145000
    ],
    [
        1206450,
        2748840000
    ],
    [
        1206440,
        2705360000
    ],
    [
        1206420,
        2701000000
    ],
    [
        1206410,
        2697118000
    ],
    [
        1206400,
        2692250000
    ],
    [
        1206390,
        2698162500
    ],
    [
        1206380,
        2703415000
    ],
    [
        1206370,
        2702000000
    ],
    [
        1206360,
        2702210000
    ],
    [
        1206350,
        2702000000
    ],
    [
        1206340,
        2696000000
    ],
    [
        1206330,
        2695382500
    ],
    [
        1206320,
        2694077000
    ],
    [
        1206310,
        2693190000
    ],
    [
        1206300,
        2705000000
    ],
    [
        1206280,
        2701660000
    ],
    [
        1206240,
        2723000000
    ],
    [
        1206230,
        2729280000
    ],
    [
        1206210,
        2732000000
    ],
    [
        1206200,
        2724420000
    ],
    [
        1206180,
        2723000000
    ],
    [
        1206170,
        2724832000
    ],
    [
        1206160,
        2728650000
    ],
    [
        1206150,
        2730674000
    ],
    [
        1206140,
        2732867500
    ],
    [
        1206130,
        2732532000
    ],
    [
        1206120,
        2725880000
    ],
    [
        1206110,
        2722733000
    ],
    [
        1206100,
        2722726000
    ],
    [
        1206090,
        2731260000
    ],
    [
        1206080,
        2731730000
    ],
    [
        1206070,
        2739390000
    ],
    [
        1206060,
        2739825000
    ],
    [
        1206050,
        2739935000
    ],
    [
        1206030,
        2741000000
    ],
    [
        1206000,
        2737530000
    ],
    [
        1205990,
        2723020000
    ],
    [
        1205980,
        2723000000
    ],
    [
        1205970,
        2723560000
    ],
    [
        1205960,
        2719000000
    ],
    [
        1205950,
        2716700000
    ],
    [
        1205940,
        2716785000
    ],
    [
        1205920,
        2716700000
    ],
    [
        1205900,
        2699470000
    ],
    [
        1205890,
        2696380000
    ],
    [
        1205880,
        2696046000
    ],
    [
        1205870,
        2682290000
    ],
    [
        1205850,
        2686000000
    ],
    [
        1205830,
        2743000000
    ],
    [
        1205810,
        2751000000
    ],
    [
        1205800,
        2751835000
    ],
    [
        1205770,
        2745580000
    ],
    [
        1205760,
        2751212500
    ],
    [
        1205740,
        2782000000
    ],
    [
        1205730,
        2781912500
    ],
    [
        1205720,
        2788760000
    ],
    [
        1205710,
        2780000000
    ],
    [
        1205700,
        2761670000
    ],
    [
        1205690,
        2763910000
    ],
    [
        1205680,
        2792335000
    ],
    [
        1205670,
        2794100000
    ],
    [
        1205660,
        2794996000
    ],
    [
        1205650,
        2796000000
    ],
    [
        1205640,
        2796120000
    ],
    [
        1205630,
        2801000000
    ],
    [
        1205620,
        2838797000
    ],
    [
        1205610,
        2876800000
    ],
    [
        1205600,
        2878840000
    ],
    [
        1205590,
        2871700000
    ],
    [
        1205580,
        2884767500
    ],
    [
        1205570,
        2898590000
    ],
    [
        1205560,
        2896562500
    ],
    [
        1205540,
        2917000000
    ],
    [
        1205530,
        2888980000
    ],
    [
        1205520,
        2886000000
    ],
    [
        1205470,
        2861000000
    ],
    [
        1205460,
        2852000000
    ],
    [
        1205440,
        2838000000
    ],
    [
        1205430,
        2827000000
    ],
    [
        1205420,
        2838000000
    ],
    [
        1205410,
        2840570000
    ],
    [
        1205400,
        2833070000
    ],
    [
        1205390,
        2824727500
    ],
    [
        1205370,
        2826320000
    ],
    [
        1205360,
        2831000000
    ],
    [
        1205340,
        2814650000
    ],
    [
        1205330,
        2795000000
    ],
    [
        1205320,
        2767755000
    ],
    [
        1205310,
        2776000000
    ],
    [
        1205300,
        2776752500
    ],
    [
        1205290,
        2832150000
    ],
    [
        1205280,
        2816000000
    ],
    [
        1205250,
        2815907500
    ],
    [
        1205240,
        2817328000
    ],
    [
        1205230,
        2797864000
    ],
    [
        1205210,
        2774000000
    ],
    [
        1205200,
        2766695000
    ],
    [
        1205180,
        2763400000
    ],
    [
        1205170,
        2774000000
    ],
    [
        1205160,
        2776000000
    ],
    [
        1205150,
        2775540000
    ],
    [
        1205140,
        2763990500
    ],
    [
        1205120,
        2770586250
    ],
    [
        1205090,
        2752000000
    ],
    [
        1205070,
        2743425000
    ],
    [
        1205060,
        2743000000
    ],
    [
        1205050,
        2732160500
    ],
    [
        1205040,
        2723679250
    ],
    [
        1205030,
        2751734000
    ],
    [
        1205020,
        2752048500
    ],
    [
        1205000,
        2751653500
    ],
    [
        1204990,
        2753000000
    ],
    [
        1204980,
        2756945000
    ],
    [
        1204960,
        2757200000
    ],
    [
        1204950,
        2755835000
    ],
    [
        1204930,
        2774320000
    ],
    [
        1204920,
        2773888750
    ],
    [
        1204910,
        2772685000
    ],
    [
        1204900,
        2772370000
    ],
    [
        1204890,
        2774338750
    ],
    [
        1204880,
        2776907500
    ],
    [
        1204870,
        2761492000
    ],
    [
        1204860,
        2762030000
    ],
    [
        1204850,
        2776121000
    ],
    [
        1204840,
        2778273750
    ],
    [
        1204830,
        2779810000
    ],
    [
        1204800,
        2774885000
    ],
    [
        1204780,
        2773670000
    ],
    [
        1204760,
        2739000000
    ],
    [
        1204730,
        2733610000
    ],
    [
        1204720,
        2721740000
    ],
    [
        1204700,
        2719271250
    ],
    [
        1204690,
        2719140000
    ],
    [
        1204680,
        2718146250
    ],
    [
        1204670,
        2718755500
    ],
    [
        1204660,
        2709193750
    ],
    [
        1204640,
        2705080000
    ],
    [
        1204620,
        2702580000
    ],
    [
        1204610,
        2700816250
    ],
    [
        1204600,
        2705376250
    ],
    [
        1204590,
        2704056250
    ],
    [
        1204580,
        2703931250
    ],
    [
        1204570,
        2701428750
    ],
    [
        1204540,
        2699759000
    ],
    [
        1204530,
        2700641000
    ],
    [
        1204520,
        2701815000
    ],
    [
        1204510,
        2699955000
    ],
    [
        1204500,
        2699570000
    ],
    [
        1204490,
        2684800000
    ],
    [
        1204470,
        2683320000
    ],
    [
        1204460,
        2681021250
    ],
    [
        1204450,
        2682275000
    ],
    [
        1204430,
        2686550000
    ],
    [
        1204420,
        2690072500
    ],
    [
        1204410,
        2689465000
    ],
    [
        1204400,
        2684000000
    ],
    [
        1204390,
        2684454000
    ],
    [
        1204380,
        2682804500
    ],
    [
        1204370,
        2686820000
    ],
    [
        1204360,
        2682723500
    ],
    [
        1204350,
        2682101500
    ],
    [
        1204340,
        2689985000
    ],
    [
        1204330,
        2691000000
    ],
    [
        1204320,
        2691215500
    ],
    [
        1204300,
        2703140000
    ],
    [
        1204290,
        2687320000
    ],
    [
        1204280,
        2678831500
    ],
    [
        1204270,
        2679817500
    ],
    [
        1204260,
        2693925000
    ],
    [
        1204250,
        2704125000
    ],
    [
        1204240,
        2710108750
    ],
    [
        1204230,
        2709205500
    ],
    [
        1204220,
        2702401250
    ],
    [
        1204210,
        2700582750
    ],
    [
        1204200,
        2701834750
    ],
    [
        1204190,
        2700527500
    ],
    [
        1204180,
        2713033000
    ],
    [
        1204170,
        2716530000
    ],
    [
        1204160,
        2719500000
    ],
    [
        1204150,
        2722201000
    ],
    [
        1204140,
        2722217500
    ],
    [
        1204130,
        2719357000
    ],
    [
        1204120,
        2718880000
    ],
    [
        1204110,
        2723000000
    ],
    [
        1204100,
        2721000000
    ],
    [
        1204090,
        2719757500
    ],
    [
        1204080,
        2723000000
    ],
    [
        1204060,
        2706000000
    ],
    [
        1204050,
        2702660000
    ],
    [
        1204040,
        2694030000
    ],
    [
        1204030,
        2700000000
    ],
    [
        1204010,
        2688000000
    ],
    [
        1204000,
        2688052500
    ],
    [
        1203990,
        2690900000
    ],
    [
        1203970,
        2709050000
    ],
    [
        1203960,
        2710550000
    ],
    [
        1203950,
        2712565000
    ],
    [
        1203860,
        2700000000
    ],
    [
        1203850,
        2697800000
    ],
    [
        1203820,
        2697000000
    ],
    [
        1203810,
        2690430000
    ],
    [
        1203800,
        2695214500
    ],
    [
        1203790,
        2694715000
    ],
    [
        1203780,
        2699374000
    ],
    [
        1203770,
        2699380000
    ],
    [
        1203760,
        2699365000
    ],
    [
        1203750,
        2722024500
    ],
    [
        1203740,
        2724585000
    ],
    [
        1203730,
        2722917500
    ],
    [
        1203720,
        2722551500
    ],
    [
        1203710,
        2734000000
    ],
    [
        1203700,
        2779573750
    ],
    [
        1203690,
        2781086500
    ],
    [
        1203680,
        2789190000
    ],
    [
        1203660,
        2789913750
    ],
    [
        1203650,
        2773960000
    ],
    [
        1203640,
        2759000000
    ],
    [
        1203630,
        2753890500
    ],
    [
        1203620,
        2751953750
    ],
    [
        1203610,
        2753892000
    ],
    [
        1203600,
        2756070000
    ],
    [
        1203590,
        2748070000
    ],
    [
        1203570,
        2739801250
    ],
    [
        1203560,
        2771696000
    ],
    [
        1203550,
        2786106250
    ],
    [
        1203540,
        2785110000
    ],
    [
        1203530,
        2774715000
    ],
    [
        1203520,
        2770210000
    ],
    [
        1203510,
        2760215000
    ],
    [
        1203490,
        2748605000
    ],
    [
        1203470,
        2741000000
    ],
    [
        1203460,
        2739829000
    ],
    [
        1203450,
        2740645000
    ],
    [
        1203440,
        2741000000
    ],
    [
        1203430,
        2740697500
    ],
    [
        1203420,
        2741715000
    ],
    [
        1203410,
        2742991250
    ],
    [
        1203400,
        2738595500
    ],
    [
        1203390,
        2753929000
    ],
    [
        1203380,
        2766267500
    ],
    [
        1203370,
        2767947500
    ],
    [
        1203360,
        2772154500
    ],
    [
        1203350,
        2775767500
    ],
    [
        1203340,
        2776150000
    ],
    [
        1203330,
        2776781250
    ],
    [
        1203320,
        2795977500
    ],
    [
        1203310,
        2796260000
    ],
    [
        1203280,
        2780265000
    ],
    [
        1203270,
        2777625000
    ],
    [
        1203260,
        2777000000
    ],
    [
        1203250,
        2776390000
    ],
    [
        1203240,
        2778120000
    ],
    [
        1203230,
        2777110000
    ],
    [
        1203220,
        2778606250
    ],
    [
        1203210,
        2780230000
    ],
    [
        1203200,
        2779395000
    ],
    [
        1203190,
        2775813500
    ],
    [
        1203180,
        2776426250
    ],
    [
        1203170,
        2771237500
    ],
    [
        1203140,
        2778125000
    ],
    [
        1203130,
        2790311000
    ],
    [
        1203120,
        2790943500
    ],
    [
        1203110,
        2796735000
    ],
    [
        1203100,
        2799769500
    ],
    [
        1203090,
        2807486000
    ],
    [
        1203070,
        2791490000
    ],
    [
        1203060,
        2790342500
    ],
    [
        1203050,
        2790050000
    ],
    [
        1203040,
        2788300000
    ],
    [
        1203030,
        2779994750
    ],
    [
        1203010,
        2778280000
    ],
    [
        1203000,
        2770000000
    ],
    [
        1202990,
        2766517500
    ],
    [
        1202980,
        2765737500
    ],
    [
        1202970,
        2725450000
    ],
    [
        1202930,
        2722200000
    ],
    [
        1202920,
        2720000000
    ],
    [
        1202910,
        2719000000
    ],
    [
        1202900,
        2714907000
    ],
    [
        1202890,
        2713292000
    ],
    [
        1202880,
        2708385000
    ],
    [
        1202870,
        2693076250
    ],
    [
        1202860,
        2690500000
    ],
    [
        1202850,
        2683875500
    ],
    [
        1202840,
        2675220750
    ],
    [
        1202830,
        2685200500
    ],
    [
        1202820,
        2695615000
    ],
    [
        1202810,
        2696705000
    ],
    [
        1202800,
        2723000000
    ],
    [
        1202780,
        2725450000
    ],
    [
        1202760,
        2723000000
    ],
    [
        1202750,
        2715340000
    ],
    [
        1202740,
        2723020000
    ],
    [
        1202730,
        2703000000
    ],
    [
        1202710,
        2701970000
    ],
    [
        1202700,
        2696336000
    ],
    [
        1202690,
        2679780000
    ],
    [
        1202590,
        2663030000
    ],
    [
        1202580,
        2648000000
    ],
    [
        1202560,
        2657000000
    ],
    [
        1202540,
        2704390000
    ],
    [
        1202530,
        2710890000
    ],
    [
        1202500,
        2715000000
    ],
    [
        1202480,
        2717000000
    ],
    [
        1202470,
        2758685000
    ],
    [
        1202460,
        2758440000
    ],
    [
        1202450,
        2754100000
    ],
    [
        1202420,
        2739467500
    ],
    [
        1202390,
        2750440000
    ],
    [
        1202380,
        2738606250
    ],
    [
        1202360,
        2752945000
    ],
    [
        1202350,
        2755312500
    ],
    [
        1202340,
        2761865000
    ],
    [
        1202320,
        2768210000
    ],
    [
        1202310,
        2759030000
    ],
    [
        1202290,
        2743269000
    ],
    [
        1202280,
        2757645000
    ],
    [
        1202250,
        2772005000
    ],
    [
        1202230,
        2774360000
    ],
    [
        1202220,
        2776000000
    ],
    [
        1202210,
        2774652000
    ],
    [
        1202190,
        2776578250
    ],
    [
        1202180,
        2796930000
    ],
    [
        1202160,
        2802345000
    ],
    [
        1202150,
        2806482000
    ],
    [
        1202140,
        2794486000
    ],
    [
        1202130,
        2797076000
    ],
    [
        1202090,
        2799080000
    ],
    [
        1202080,
        2797965000
    ],
    [
        1202060,
        2824900000
    ],
    [
        1202050,
        2794536000
    ],
    [
        1202040,
        2793765000
    ],
    [
        1202030,
        2793205500
    ],
    [
        1202020,
        2804550000
    ],
    [
        1202010,
        2825000000
    ],
    [
        1202000,
        2826555000
    ],
    [
        1201990,
        2823702500
    ],
    [
        1201980,
        2824572500
    ],
    [
        1201970,
        2830198000
    ],
    [
        1201950,
        2834053750
    ],
    [
        1201930,
        2843859500
    ],
    [
        1201920,
        2815370000
    ],
    [
        1201890,
        2785020000
    ],
    [
        1201870,
        2777499500
    ],
    [
        1201860,
        2783965000
    ],
    [
        1201820,
        2792945000
    ],
    [
        1201810,
        2794797500
    ],
    [
        1201800,
        2795495000
    ],
    [
        1201790,
        2794440000
    ],
    [
        1201770,
        2798669500
    ],
    [
        1201760,
        2806843500
    ],
    [
        1201750,
        2754785000
    ],
    [
        1201740,
        2748160000
    ],
    [
        1201720,
        2744160000
    ],
    [
        1201710,
        2737220000
    ],
    [
        1201690,
        2761477500
    ],
    [
        1201670,
        2804085000
    ],
    [
        1201580,
        2827110000
    ],
    [
        1201570,
        2823570000
    ],
    [
        1201550,
        2780452500
    ],
    [
        1201530,
        2795865000
    ],
    [
        1201490,
        2816853333
    ],
    [
        1201460,
        2804640000
    ],
    [
        1201450,
        2818890000
    ],
    [
        1201440,
        2819760000
    ],
    [
        1201420,
        2831807500
    ],
    [
        1201410,
        2833398750
    ],
    [
        1201400,
        2831331250
    ],
    [
        1201380,
        2832961250
    ],
    [
        1201360,
        2836000000
    ],
    [
        1201350,
        2831870000
    ],
    [
        1201320,
        2821623500
    ],
    [
        1201310,
        2815368000
    ],
    [
        1201290,
        2815316500
    ],
    [
        1201280,
        2817100000
    ],
    [
        1201270,
        2829370000
    ],
    [
        1201260,
        2834370000
    ],
    [
        1201240,
        2834870000
    ],
    [
        1201200,
        2840000000
    ],
    [
        1201190,
        2833825000
    ],
    [
        1201170,
        2816050000
    ],
    [
        1201160,
        2805200000
    ],
    [
        1201150,
        2831000000
    ],
    [
        1201120,
        2819029000
    ],
    [
        1201110,
        2826427000
    ],
    [
        1201080,
        2834553000
    ],
    [
        1201050,
        2871866500
    ],
    [
        1201020,
        2878336250
    ],
    [
        1201010,
        2882435000
    ],
    [
        1200980,
        2867990000
    ],
    [
        1200930,
        2850720000
    ],
    [
        1200910,
        2856085000
    ],
    [
        1200890,
        2853950000
    ],
    [
        1200850,
        2838220000
    ],
    [
        1200830,
        2833601000
    ],
    [
        1200820,
        2823860000
    ],
    [
        1200780,
        2814250000
    ],
    [
        1200690,
        2835197000
    ],
    [
        1200660,
        2799900000
    ],
    [
        1200650,
        2795900000
    ],
    [
        1200640,
        2763279000
    ],
    [
        1200630,
        2753000000
    ],
    [
        1200620,
        2722432500
    ],
    [
        1200600,
        2721933000
    ],
    [
        1200590,
        2724597500
    ],
    [
        1200580,
        2731949000
    ],
    [
        1200560,
        2730500000
    ],
    [
        1200550,
        2731260000
    ],
    [
        1200540,
        2738161250
    ],
    [
        1200510,
        2735731250
    ],
    [
        1200500,
        2739976250
    ],
    [
        1200490,
        2735105000
    ],
    [
        1200460,
        2743180000
    ],
    [
        1200430,
        2769275000
    ],
    [
        1200420,
        2789263750
    ],
    [
        1200400,
        2789412500
    ],
    [
        1200370,
        2795842000
    ],
    [
        1200360,
        2806102000
    ],
    [
        1200330,
        2789815000
    ],
    [
        1200320,
        2786835000
    ],
    [
        1200310,
        2776995000
    ],
    [
        1200290,
        2805985000
    ],
    [
        1200280,
        2807912500
    ],
    [
        1200270,
        2810260000
    ],
    [
        1200260,
        2827588333
    ],
    [
        1200250,
        2839905333
    ],
    [
        1200110,
        2866000000
    ],
    [
        1200080,
        2882970000
    ],
    [
        1200060,
        2887000000
    ],
    [
        1200030,
        2882970000
    ],
    [
        1200020,
        2857672500
    ],
    [
        1199990,
        2855870000
    ],
    [
        1199960,
        2855820000
    ],
    [
        1199940,
        2871897500
    ],
    [
        1199930,
        2858420000
    ],
    [
        1199890,
        2887000000
    ],
    [
        1199880,
        2901542500
    ],
    [
        1199830,
        2887000000
    ],
    [
        1199820,
        2909570000
    ],
    [
        1199810,
        2954540000
    ],
    [
        1199780,
        2892000000
    ],
    [
        1199760,
        2887000000
    ],
    [
        1199720,
        2807612500
    ],
    [
        1199710,
        2783450000
    ],
    [
        1199670,
        2881990000
    ],
    [
        1199590,
        2887000000
    ],
    [
        1199580,
        2873000000
    ],
    [
        1199560,
        2860000000
    ],
    [
        1199550,
        2857885000
    ],
    [
        1199490,
        2688000000
    ],
    [
        1199150,
        2644990000
    ],
    [
        1199110,
        2625500000
    ],
    [
        1199070,
        2613000000
    ],
    [
        1199030,
        2607890000
    ],
    [
        1198970,
        2602820000
    ],
    [
        1198960,
        2589680000
    ],
    [
        1198940,
        2580657500
    ],
    [
        1198930,
        2571335000
    ],
    [
        1198910,
        2571100000
    ],
    [
        1198880,
        2568241000
    ],
    [
        1198870,
        2571100000
    ],
    [
        1198860,
        2572000000
    ],
    [
        1198850,
        2582085000
    ],
    [
        1198790,
        2572000000
    ],
    [
        1198780,
        2564640000
    ],
    [
        1198750,
        2557000000
    ],
    [
        1198740,
        2553700000
    ],
    [
        1198710,
        2550200000
    ],
    [
        1198690,
        2544600000
    ],
    [
        1198660,
        2539765000
    ],
    [
        1198630,
        2542156000
    ],
    [
        1198610,
        2545295000
    ],
    [
        1198600,
        2548095000
    ],
    [
        1198560,
        2547915000
    ],
    [
        1198550,
        2558545000
    ],
    [
        1198540,
        2566307000
    ],
    [
        1198530,
        2555677000
    ],
    [
        1198510,
        2536225000
    ],
    [
        1198500,
        2529747500
    ],
    [
        1198480,
        2519026000
    ],
    [
        1198470,
        2512712750
    ],
    [
        1198460,
        2514970250
    ],
    [
        1198450,
        2512936250
    ],
    [
        1198420,
        2515184000
    ],
    [
        1198400,
        2512936250
    ],
    [
        1198390,
        2497026000
    ],
    [
        1198380,
        2487138500
    ],
    [
        1198370,
        2492112500
    ],
    [
        1198360,
        2508434500
    ],
    [
        1198350,
        2513009500
    ],
    [
        1198340,
        2515575000
    ],
    [
        1198310,
        2509822500
    ],
    [
        1198260,
        2512902500
    ],
    [
        1198240,
        2487000000
    ],
    [
        1198220,
        2393000000
    ],
    [
        1198100,
        2391500000
    ],
    [
        1198070,
        2381000000
    ],
    [
        1197990,
        2347387500
    ],
    [
        1197980,
        2348000000
    ],
    [
        1197970,
        2341252000
    ],
    [
        1197960,
        2348000000
    ],
    [
        1197930,
        2388000000
    ],
    [
        1197920,
        2373930000
    ],
    [
        1197910,
        2371112000
    ],
    [
        1197890,
        2364000000
    ],
    [
        1197880,
        2362000000
    ],
    [
        1197860,
        2373930000
    ],
    [
        1197840,
        2387000000
    ],
    [
        1197830,
        2375000000
    ],
    [
        1197820,
        2368015000
    ],
    [
        1197780,
        2355972500
    ],
    [
        1197730,
        2367157500
    ],
    [
        1197700,
        2367621000
    ],
    [
        1197690,
        2359000000
    ],
    [
        1197670,
        2349690000
    ],
    [
        1197640,
        2343000000
    ],
    [
        1197630,
        2341000000
    ],
    [
        1197620,
        2336266000
    ],
    [
        1197590,
        2302000000
    ],
    [
        1197570,
        2294990000
    ],
    [
        1197520,
        2291000000
    ],
    [
        1197470,
        2285740000
    ],
    [
        1197440,
        2291000000
    ],
    [
        1197430,
        2294990000
    ],
    [
        1197400,
        2299000000
    ],
    [
        1197360,
        2294990000
    ],
    [
        1197350,
        2289157500
    ],
    [
        1197340,
        2286260000
    ],
    [
        1197260,
        2289157500
    ],
    [
        1196880,
        2286260000
    ],
    [
        1196830,
        2289157500
    ],
    [
        1196800,
        2294990000
    ],
    [
        1196750,
        2202000000
    ],
    [
        1196740,
        2192000000
    ],
    [
        1196730,
        2174580000
    ],
    [
        1196700,
        2154865000
    ],
    [
        1196680,
        2162040000
    ],
    [
        1196640,
        2110575000
    ],
    [
        1196610,
        2100500000
    ],
    [
        1196600,
        2085855000
    ],
    [
        1196590,
        2082000000
    ],
    [
        1196580,
        2078500000
    ],
    [
        1196570,
        2074415000
    ],
    [
        1196550,
        2081185000
    ],
    [
        1196540,
        2070167500
    ],
    [
        1196530,
        2064500000
    ],
    [
        1196510,
        2057382500
    ],
    [
        1196450,
        2032000000
    ],
    [
        1196410,
        2031500000
    ],
    [
        1196380,
        2036851500
    ],
    [
        1196350,
        2021000000
    ],
    [
        1196320,
        2035329000
    ],
    [
        1196310,
        2034400000
    ],
    [
        1196290,
        2046570000
    ],
    [
        1196250,
        2065645000
    ],
    [
        1196240,
        2067753750
    ],
    [
        1196230,
        2071258750
    ],
    [
        1196220,
        2093186500
    ],
    [
        1196180,
        2164751500
    ],
    [
        1196170,
        2158041000
    ],
    [
        1196160,
        2159650000
    ],
    [
        1196140,
        2226565000
    ],
    [
        1196020,
        2228000000
    ],
    [
        1195990,
        2239031500
    ],
    [
        1195980,
        2243435000
    ],
    [
        1195960,
        2251190000
    ],
    [
        1195920,
        2251865000
    ],
    [
        1195910,
        2263060000
    ],
    [
        1195890,
        2265080000
    ],
    [
        1195870,
        2256690000
    ],
    [
        1195860,
        2255504000
    ],
    [
        1195840,
        2259098750
    ],
    [
        1195810,
        2269908750
    ],
    [
        1195800,
        2269581250
    ],
    [
        1195790,
        2277531250
    ],
    [
        1195780,
        2286638750
    ],
    [
        1195770,
        2297189250
    ],
    [
        1195760,
        2298585750
    ],
    [
        1195750,
        2316740000
    ],
    [
        1195740,
        2285083750
    ],
    [
        1195720,
        2280571250
    ],
    [
        1195450,
        2240500000
    ],
    [
        1195440,
        2227715000
    ],
    [
        1195390,
        2226949000
    ],
    [
        1195370,
        2224610000
    ],
    [
        1195340,
        2223575000
    ],
    [
        1195320,
        2226895000
    ],
    [
        1195310,
        2226565000
    ],
    [
        1195290,
        2222500000
    ],
    [
        1195270,
        2223065000
    ],
    [
        1195260,
        2225065000
    ],
    [
        1195240,
        2228500000
    ],
    [
        1195230,
        2226565000
    ],
    [
        1195220,
        2233203750
    ],
    [
        1195210,
        2233280000
    ],
    [
        1195200,
        2226000000
    ],
    [
        1195190,
        2235885500
    ],
    [
        1195080,
        2276261000
    ],
    [
        1195070,
        2280230000
    ],
    [
        1195040,
        2270000000
    ],
    [
        1195010,
        2269470000
    ],
    [
        1195000,
        2270000000
    ],
    [
        1194970,
        2284000000
    ],
    [
        1194960,
        2299227500
    ],
    [
        1194940,
        2284000000
    ],
    [
        1194890,
        2301330000
    ],
    [
        1194870,
        2303130000
    ],
    [
        1194860,
        2303472500
    ],
    [
        1194850,
        2309068750
    ],
    [
        1194840,
        2314603750
    ],
    [
        1194830,
        2324931250
    ],
    [
        1194820,
        2331880000
    ],
    [
        1194810,
        2305465000
    ],
    [
        1194800,
        2303130000
    ],
    [
        1194780,
        2302951250
    ],
    [
        1194770,
        2302867000
    ],
    [
        1194730,
        2300650000
    ],
    [
        1194720,
        2302144500
    ],
    [
        1194700,
        2303437500
    ],
    [
        1194410,
        2305465000
    ],
    [
        1194390,
        2303130000
    ],
    [
        1194380,
        2302865000
    ],
    [
        1194360,
        2301077500
    ],
    [
        1194340,
        2281775000
    ],
    [
        1194310,
        2263686250
    ],
    [
        1194270,
        2258407250
    ],
    [
        1194260,
        2258731000
    ],
    [
        1194240,
        2265730000
    ],
    [
        1194210,
        2272455000
    ],
    [
        1194200,
        2247280000
    ],
    [
        1194190,
        2245117000
    ],
    [
        1194180,
        2243000000
    ],
    [
        1194170,
        2231499000
    ],
    [
        1194160,
        2218776250
    ],
    [
        1194150,
        2221500000
    ],
    [
        1194140,
        2223297000
    ],
    [
        1194130,
        2226611250
    ],
    [
        1194120,
        2227161000
    ],
    [
        1194110,
        2243615000
    ],
    [
        1194090,
        2271049000
    ],
    [
        1194080,
        2272836000
    ],
    [
        1194070,
        2295175000
    ],
    [
        1194050,
        2295785000
    ],
    [
        1194040,
        2293960000
    ],
    [
        1194010,
        2274175000
    ],
    [
        1193960,
        2255000000
    ],
    [
        1193950,
        2254440000
    ],
    [
        1193940,
        2252440000
    ],
    [
        1193930,
        2252150000
    ],
    [
        1193920,
        2251902500
    ],
    [
        1193910,
        2247395000
    ],
    [
        1193900,
        2236160000
    ],
    [
        1193880,
        2228500000
    ],
    [
        1193850,
        2228000000
    ],
    [
        1193820,
        2254650000
    ],
    [
        1193810,
        2255400000
    ],
    [
        1193800,
        2249128000
    ],
    [
        1193790,
        2238083000
    ],
    [
        1193730,
        2196665000
    ],
    [
        1193680,
        2144394000
    ],
    [
        1193660,
        2142435000
    ],
    [
        1193650,
        2129936250
    ],
    [
        1193640,
        2129845000
    ],
    [
        1193620,
        2129136500
    ],
    [
        1193600,
        2144000000
    ],
    [
        1193590,
        2144680000
    ],
    [
        1193580,
        2159705000
    ],
    [
        1193570,
        2152965000
    ],
    [
        1193560,
        2165625000
    ],
    [
        1193550,
        2169159000
    ],
    [
        1193540,
        2171797500
    ],
    [
        1193520,
        2184297500
    ],
    [
        1193480,
        2195000000
    ],
    [
        1193470,
        2197390000
    ],
    [
        1193450,
        2227727500
    ],
    [
        1193440,
        2225225000
    ],
    [
        1193420,
        2144350000
    ],
    [
        1193410,
        2146941000
    ],
    [
        1193380,
        2150000000
    ],
    [
        1193370,
        2153030000
    ],
    [
        1193360,
        2164452500
    ],
    [
        1193350,
        2170000000
    ],
    [
        1193340,
        2210510000
    ],
    [
        1193320,
        2211175000
    ],
    [
        1193290,
        2240000000
    ],
    [
        1193280,
        2244452000
    ],
    [
        1193260,
        2278831000
    ],
    [
        1193250,
        2284997500
    ],
    [
        1193240,
        2277000000
    ],
    [
        1193220,
        2258770000
    ],
    [
        1193210,
        2256205000
    ],
    [
        1193200,
        2240000000
    ],
    [
        1193190,
        2207012500
    ],
    [
        1193140,
        2121643000
    ],
    [
        1193110,
        2129612500
    ],
    [
        1193100,
        2131434000
    ],
    [
        1193090,
        2132775000
    ],
    [
        1192950,
        2273000000
    ],
    [
        1192940,
        2273673000
    ],
    [
        1192930,
        2282322500
    ],
    [
        1192920,
        2291073000
    ],
    [
        1192850,
        2273000000
    ],
    [
        1192840,
        2282152500
    ],
    [
        1192810,
        2284000000
    ],
    [
        1192790,
        2297155000
    ],
    [
        1192780,
        2283160000
    ],
    [
        1192770,
        2301055000
    ],
    [
        1192710,
        2398000000
    ],
    [
        1192690,
        2404000000
    ],
    [
        1192680,
        2405339000
    ],
    [
        1192670,
        2411757000
    ],
    [
        1192660,
        2412000000
    ],
    [
        1192650,
        2415005000
    ],
    [
        1192630,
        2448480000
    ],
    [
        1192620,
        2455964000
    ],
    [
        1192520,
        2445000000
    ],
    [
        1192500,
        2435251250
    ],
    [
        1192490,
        2425567500
    ],
    [
        1192460,
        2451617500
    ],
    [
        1192430,
        2455942500
    ],
    [
        1192400,
        2455773750
    ],
    [
        1192390,
        2460872500
    ],
    [
        1192370,
        2472617500
    ],
    [
        1192360,
        2466062000
    ],
    [
        1192340,
        2475877000
    ],
    [
        1192330,
        2472946250
    ],
    [
        1192320,
        2502565000
    ],
    [
        1192300,
        2502736250
    ],
    [
        1192290,
        2576236250
    ],
    [
        1192270,
        2670358000
    ],
    [
        1192230,
        2692775000
    ],
    [
        1192210,
        2697035000
    ],
    [
        1192190,
        2691821000
    ],
    [
        1192180,
        2672240000
    ],
    [
        1192150,
        2683759000
    ],
    [
        1192130,
        2694240000
    ],
    [
        1192120,
        2699103500
    ],
    [
        1192070,
        2700937500
    ],
    [
        1192060,
        2700875000
    ],
    [
        1192040,
        2692480000
    ],
    [
        1191990,
        2702400000
    ],
    [
        1191980,
        2720000000
    ],
    [
        1191950,
        2729500000
    ],
    [
        1191940,
        2728000000
    ],
    [
        1191910,
        2736882500
    ],
    [
        1191900,
        2718660000
    ],
    [
        1191890,
        2702400000
    ],
    [
        1191880,
        2688094000
    ],
    [
        1191870,
        2677814000
    ],
    [
        1191860,
        2677944000
    ],
    [
        1191850,
        2676860000
    ],
    [
        1191830,
        2674560000
    ],
    [
        1191810,
        2677944000
    ],
    [
        1191800,
        2657681000
    ],
    [
        1191780,
        2638350000
    ],
    [
        1191760,
        2642840000
    ],
    [
        1191730,
        2623910000
    ],
    [
        1191700,
        2702400000
    ],
    [
        1191670,
        2710775000
    ],
    [
        1191650,
        2757000000
    ],
    [
        1191640,
        2775920000
    ],
    [
        1191630,
        2765000000
    ],
    [
        1191610,
        2758793000
    ],
    [
        1191600,
        2757000000
    ],
    [
        1191540,
        2758000000
    ],
    [
        1191530,
        2757000000
    ],
    [
        1191510,
        2755000000
    ],
    [
        1191500,
        2738772500
    ],
    [
        1191480,
        2738000000
    ],
    [
        1191450,
        2739000000
    ],
    [
        1191440,
        2728340000
    ],
    [
        1191410,
        2722000000
    ],
    [
        1191400,
        2721000000
    ],
    [
        1191380,
        2713080000
    ],
    [
        1191370,
        2679640000
    ],
    [
        1191350,
        2679000000
    ],
    [
        1191320,
        2670000000
    ],
    [
        1191300,
        2670577500
    ],
    [
        1191250,
        2676000000
    ],
    [
        1191190,
        2683000000
    ],
    [
        1191170,
        2701000000
    ],
    [
        1191150,
        2702400000
    ],
    [
        1191140,
        2701994000
    ],
    [
        1191130,
        2698230000
    ],
    [
        1191110,
        2702400000
    ],
    [
        1191100,
        2738970000
    ],
    [
        1191060,
        2757000000
    ],
    [
        1191020,
        2831980000
    ],
    [
        1191010,
        2839000000
    ],
    [
        1190980,
        2840410000
    ],
    [
        1190960,
        2842802500
    ],
    [
        1190950,
        2840410000
    ],
    [
        1190940,
        2855656500
    ],
    [
        1190920,
        2861551500
    ],
    [
        1190910,
        2851264500
    ],
    [
        1190900,
        2850018750
    ],
    [
        1190890,
        2848308500
    ],
    [
        1190790,
        2893068750
    ],
    [
        1190780,
        2900075000
    ],
    [
        1190770,
        2907188000
    ],
    [
        1190760,
        2900678000
    ],
    [
        1190750,
        2910613000
    ],
    [
        1190740,
        2927000000
    ],
    [
        1190730,
        2970980000
    ],
    [
        1190720,
        3015707500
    ],
    [
        1190710,
        3017242500
    ],
    [
        1190700,
        3038230000
    ],
    [
        1190690,
        3048134000
    ],
    [
        1190670,
        3065000000
    ],
    [
        1190610,
        3065550000
    ],
    [
        1190600,
        3065490000
    ],
    [
        1190590,
        3073850000
    ],
    [
        1190540,
        3076840000
    ],
    [
        1190530,
        3076000000
    ],
    [
        1190520,
        3069950000
    ],
    [
        1190500,
        3069262500
    ],
    [
        1190470,
        3108320000
    ],
    [
        1190460,
        3105668000
    ],
    [
        1190450,
        3103195000
    ],
    [
        1190430,
        3103721500
    ],
    [
        1190420,
        3100721500
    ],
    [
        1190410,
        3098548000
    ],
    [
        1190400,
        3094500000
    ],
    [
        1190380,
        3063315000
    ],
    [
        1190370,
        3059700000
    ],
    [
        1190350,
        3048611500
    ],
    [
        1190340,
        3041315000
    ],
    [
        1190330,
        3031282500
    ],
    [
        1190280,
        3013322500
    ],
    [
        1190250,
        2990950000
    ],
    [
        1190230,
        2983450000
    ],
    [
        1190210,
        2967416250
    ],
    [
        1190170,
        2955000000
    ],
    [
        1190150,
        2951876000
    ],
    [
        1190130,
        2957560000
    ],
    [
        1190120,
        2960944500
    ],
    [
        1190110,
        2962565750
    ],
    [
        1190100,
        2960681250
    ],
    [
        1190090,
        2962335750
    ],
    [
        1190070,
        2958500000
    ],
    [
        1190060,
        2957447500
    ],
    [
        1190040,
        2952101250
    ],
    [
        1190020,
        2950636250
    ],
    [
        1189970,
        2944101250
    ],
    [
        1189960,
        2942690500
    ],
    [
        1189940,
        2936075000
    ],
    [
        1189880,
        2931575000
    ],
    [
        1189860,
        2931389000
    ],
    [
        1189850,
        2933219500
    ],
    [
        1189830,
        2936000000
    ],
    [
        1189800,
        2927120000
    ],
    [
        1189790,
        2907320000
    ],
    [
        1189780,
        2899239500
    ],
    [
        1189750,
        2898090000
    ],
    [
        1189710,
        2897621250
    ],
    [
        1189700,
        2888731250
    ],
    [
        1189690,
        2886611250
    ],
    [
        1189680,
        2885531250
    ],
    [
        1189670,
        2885000000
    ],
    [
        1189650,
        2885531250
    ],
    [
        1189640,
        2883310500
    ],
    [
        1189620,
        2876460000
    ],
    [
        1189590,
        2874153000
    ],
    [
        1189580,
        2875327000
    ],
    [
        1189560,
        2867940000
    ],
    [
        1189550,
        2867379000
    ],
    [
        1189530,
        2862889000
    ],
    [
        1189520,
        2863320000
    ],
    [
        1189510,
        2865236000
    ],
    [
        1189500,
        2866000000
    ],
    [
        1189480,
        2865662500
    ],
    [
        1189470,
        2862000000
    ],
    [
        1189460,
        2860056000
    ],
    [
        1189450,
        2860000000
    ],
    [
        1189400,
        2859000000
    ],
    [
        1189370,
        2860000000
    ],
    [
        1189360,
        2852390000
    ],
    [
        1189300,
        2867967000
    ],
    [
        1189160,
        2883070000
    ],
    [
        1189140,
        2889390000
    ],
    [
        1189130,
        2883070000
    ],
    [
        1189100,
        2890162000
    ],
    [
        1189080,
        2890480000
    ],
    [
        1189070,
        2891400000
    ],
    [
        1189050,
        2892750000
    ],
    [
        1189040,
        2897601000
    ],
    [
        1189010,
        2905933750
    ],
    [
        1188970,
        2909440000
    ],
    [
        1188950,
        2917560000
    ],
    [
        1188920,
        2921305000
    ],
    [
        1188900,
        2927745000
    ],
    [
        1188810,
        2931000000
    ],
    [
        1188800,
        2934000000
    ],
    [
        1188790,
        2935127000
    ],
    [
        1188750,
        2980446000
    ],
    [
        1188730,
        2971284000
    ],
    [
        1188720,
        2969070000
    ],
    [
        1188670,
        2941690000
    ],
    [
        1188650,
        2943122000
    ],
    [
        1188640,
        2941690000
    ],
    [
        1188630,
        2943122000
    ],
    [
        1188590,
        2934000000
    ],
    [
        1188560,
        2932490000
    ],
    [
        1188550,
        2931000000
    ],
    [
        1188530,
        2927511000
    ],
    [
        1188520,
        2991000000
    ],
    [
        1188070,
        2993257000
    ],
    [
        1188050,
        2997000000
    ],
    [
        1188030,
        3018890000
    ],
    [
        1188020,
        3020997000
    ],
    [
        1188010,
        3018890000
    ],
    [
        1188000,
        3030000000
    ],
    [
        1187990,
        3068534000
    ],
    [
        1187970,
        3070150000
    ],
    [
        1187960,
        3073020000
    ],
    [
        1187940,
        3075000000
    ],
    [
        1187930,
        3073020000
    ],
    [
        1187920,
        3074350000
    ],
    [
        1187910,
        3075000000
    ],
    [
        1187900,
        3071180000
    ],
    [
        1187890,
        3075000000
    ],
    [
        1187880,
        3077737000
    ],
    [
        1187870,
        3075000000
    ],
    [
        1187860,
        3071180000
    ],
    [
        1187850,
        3073080000
    ],
    [
        1187840,
        3071180000
    ],
    [
        1187830,
        3070690000
    ],
    [
        1187780,
        3072680000
    ],
    [
        1187750,
        3075000000
    ],
    [
        1187740,
        3082686000
    ],
    [
        1187710,
        3112100000
    ],
    [
        1187680,
        3113000000
    ],
    [
        1187650,
        3109990000
    ],
    [
        1187640,
        3109000000
    ],
    [
        1187630,
        3093000000
    ],
    [
        1187620,
        3081112000
    ],
    [
        1187600,
        3046000000
    ],
    [
        1187590,
        3033220000
    ],
    [
        1187580,
        3022747500
    ],
    [
        1187570,
        3013000000
    ],
    [
        1187560,
        3011000000
    ],
    [
        1187550,
        3004722000
    ],
    [
        1187540,
        3002680000
    ],
    [
        1187530,
        3004722000
    ],
    [
        1187520,
        3010000000
    ],
    [
        1187510,
        3014000000
    ],
    [
        1187500,
        3019890000
    ],
    [
        1187490,
        3023070000
    ],
    [
        1187480,
        3021000000
    ],
    [
        1187470,
        3012340000
    ],
    [
        1187460,
        3012000000
    ],
    [
        1187430,
        3010000000
    ],
    [
        1187420,
        3007503000
    ],
    [
        1187400,
        2993000000
    ],
    [
        1187390,
        2993350000
    ],
    [
        1187380,
        2997547500
    ],
    [
        1187360,
        2981000000
    ],
    [
        1187350,
        2982000000
    ],
    [
        1187330,
        2994000000
    ],
    [
        1187320,
        3000000000
    ],
    [
        1187310,
        2992409000
    ],
    [
        1187300,
        3006690000
    ],
    [
        1187290,
        2996000000
    ],
    [
        1187280,
        3005260000
    ],
    [
        1187270,
        2990130000
    ],
    [
        1187260,
        2996000000
    ],
    [
        1187250,
        2997581000
    ],
    [
        1187240,
        3003927000
    ],
    [
        1187230,
        3008930000
    ],
    [
        1187220,
        3008440000
    ],
    [
        1187210,
        3004770000
    ],
    [
        1187200,
        3006385000
    ],
    [
        1187190,
        2995860000
    ],
    [
        1187170,
        2989647500
    ],
    [
        1187160,
        2985868000
    ],
    [
        1187150,
        3004737500
    ],
    [
        1187140,
        3019623000
    ],
    [
        1187130,
        3024337000
    ],
    [
        1187050,
        3074640000
    ],
    [
        1186970,
        3109000000
    ],
    [
        1186950,
        3111700000
    ],
    [
        1186910,
        3126000000
    ],
    [
        1186890,
        3122452000
    ],
    [
        1186880,
        3120710000
    ],
    [
        1186850,
        3119000000
    ],
    [
        1186830,
        3120000000
    ],
    [
        1186780,
        3187000000
    ],
    [
        1186770,
        3227790000
    ],
    [
        1186760,
        3232667500
    ],
    [
        1186700,
        3238000000
    ],
    [
        1186660,
        3266620000
    ],
    [
        1186650,
        3263190000
    ],
    [
        1186640,
        3239320000
    ],
    [
        1186630,
        3233000000
    ],
    [
        1186610,
        3229361000
    ],
    [
        1186600,
        3229479000
    ],
    [
        1186590,
        3227790000
    ],
    [
        1186490,
        3263560000
    ],
    [
        1186470,
        3265143000
    ],
    [
        1186440,
        3284670000
    ],
    [
        1186430,
        3290000000
    ],
    [
        1186410,
        3294560000
    ],
    [
        1186400,
        3296320000
    ],
    [
        1186380,
        3309000000
    ],
    [
        1186360,
        3313000000
    ],
    [
        1186350,
        3319320000
    ],
    [
        1186330,
        3325879000
    ],
    [
        1186280,
        3300000000
    ],
    [
        1186270,
        3294447500
    ],
    [
        1186210,
        3276400000
    ],
    [
        1186200,
        3287380000
    ],
    [
        1186170,
        3191000000
    ],
    [
        1186160,
        3183000000
    ],
    [
        1186140,
        3166310000
    ],
    [
        1186130,
        3183000000
    ],
    [
        1186120,
        3166310000
    ],
    [
        1186110,
        3165000000
    ],
    [
        1186100,
        3155420000
    ],
    [
        1186090,
        3157803000
    ],
    [
        1186080,
        3155420000
    ],
    [
        1186070,
        3170890000
    ],
    [
        1186040,
        3183000000
    ],
    [
        1185970,
        3191000000
    ],
    [
        1185960,
        3190368000
    ],
    [
        1185950,
        3190190000
    ],
    [
        1185930,
        3183000000
    ],
    [
        1185920,
        3182090000
    ],
    [
        1185890,
        3182115000
    ],
    [
        1185880,
        3181840000
    ],
    [
        1185870,
        3167967000
    ],
    [
        1185860,
        3166247500
    ],
    [
        1185850,
        3162840000
    ],
    [
        1185840,
        3162280000
    ],
    [
        1185820,
        3171249000
    ],
    [
        1185810,
        3172000000
    ],
    [
        1185800,
        3178880000
    ],
    [
        1185750,
        3210180000
    ],
    [
        1185730,
        3213870000
    ],
    [
        1185710,
        3200897500
    ],
    [
        1185700,
        3213000000
    ],
    [
        1185670,
        3215510000
    ],
    [
        1185630,
        3217865000
    ],
    [
        1185620,
        3225555000
    ],
    [
        1185590,
        3224875000
    ],
    [
        1185580,
        3219067000
    ],
    [
        1185570,
        3219723250
    ],
    [
        1185550,
        3219334500
    ],
    [
        1185540,
        3225339000
    ],
    [
        1185530,
        3220265250
    ],
    [
        1185500,
        3217961250
    ],
    [
        1185490,
        3221409000
    ],
    [
        1185470,
        3237316250
    ],
    [
        1185460,
        3227876250
    ],
    [
        1185450,
        3217761000
    ],
    [
        1185440,
        3219060000
    ],
    [
        1185430,
        3219739000
    ],
    [
        1185420,
        3222144000
    ],
    [
        1185410,
        3222689000
    ],
    [
        1185380,
        3233500000
    ],
    [
        1185370,
        3232500000
    ],
    [
        1185360,
        3230700000
    ],
    [
        1185350,
        3230138750
    ],
    [
        1185340,
        3237667500
    ],
    [
        1185320,
        3245795000
    ],
    [
        1185310,
        3252795000
    ],
    [
        1185300,
        3260500000
    ],
    [
        1185280,
        3263135000
    ],
    [
        1185240,
        3265635000
    ],
    [
        1185210,
        3266495500
    ],
    [
        1185190,
        3262560000
    ],
    [
        1185170,
        3262000000
    ],
    [
        1185160,
        3276990000
    ],
    [
        1185150,
        3278952500
    ],
    [
        1185140,
        3268594500
    ],
    [
        1185120,
        3265380750
    ],
    [
        1185110,
        3257455000
    ],
    [
        1185100,
        3255130000
    ],
    [
        1185090,
        3253620000
    ],
    [
        1185080,
        3250176250
    ],
    [
        1185070,
        3247125000
    ],
    [
        1185060,
        3243130000
    ],
    [
        1185050,
        3242202500
    ],
    [
        1185040,
        3240280000
    ],
    [
        1185030,
        3227136250
    ],
    [
        1185010,
        3226500000
    ],
    [
        1185000,
        3223500000
    ],
    [
        1184990,
        3226500000
    ],
    [
        1184980,
        3227272500
    ],
    [
        1184970,
        3228260000
    ],
    [
        1184950,
        3293338000
    ],
    [
        1184920,
        3346987000
    ],
    [
        1184680,
        3347822000
    ],
    [
        1184670,
        3348511500
    ],
    [
        1184660,
        3364525000
    ],
    [
        1184650,
        3365560000
    ],
    [
        1184640,
        3364525000
    ],
    [
        1184630,
        3370860000
    ],
    [
        1184590,
        3376500000
    ],
    [
        1184560,
        3375930000
    ],
    [
        1184550,
        3372430000
    ],
    [
        1184530,
        3368500000
    ],
    [
        1184520,
        3368000000
    ],
    [
        1184510,
        3367653750
    ],
    [
        1184500,
        3378122500
    ],
    [
        1184480,
        3390620000
    ],
    [
        1184470,
        3393243750
    ],
    [
        1184460,
        3390743750
    ],
    [
        1184450,
        3395500000
    ],
    [
        1184440,
        3400727500
    ],
    [
        1184430,
        3396606000
    ],
    [
        1184420,
        3397500000
    ],
    [
        1184390,
        3399828000
    ],
    [
        1184370,
        3403000000
    ],
    [
        1184360,
        3403920000
    ],
    [
        1184330,
        3404760000
    ],
    [
        1184310,
        3403000000
    ],
    [
        1184300,
        3404862000
    ],
    [
        1184280,
        3405280000
    ],
    [
        1184270,
        3407032500
    ],
    [
        1184250,
        3411789000
    ],
    [
        1184240,
        3427810000
    ],
    [
        1184210,
        3436000000
    ],
    [
        1184190,
        3391942500
    ],
    [
        1184160,
        3386230000
    ],
    [
        1184150,
        3376000000
    ],
    [
        1184130,
        3374217500
    ],
    [
        1184110,
        3382176000
    ],
    [
        1184100,
        3376480000
    ],
    [
        1184090,
        3378055000
    ],
    [
        1184060,
        3389000000
    ],
    [
        1184050,
        3384020000
    ],
    [
        1184030,
        3376000000
    ],
    [
        1184010,
        3374000000
    ],
    [
        1183990,
        3372410000
    ],
    [
        1183960,
        3388640000
    ],
    [
        1183950,
        3394800000
    ],
    [
        1183940,
        3397000000
    ],
    [
        1183930,
        3395900000
    ],
    [
        1183920,
        3396307500
    ],
    [
        1183910,
        3396265000
    ],
    [
        1183900,
        3397572500
    ],
    [
        1183890,
        3396807500
    ],
    [
        1183880,
        3394900000
    ],
    [
        1183860,
        3396003750
    ],
    [
        1183850,
        3381637500
    ],
    [
        1183820,
        3374785000
    ],
    [
        1183810,
        3379416250
    ],
    [
        1183800,
        3380137500
    ],
    [
        1183770,
        3362175000
    ],
    [
        1183740,
        3359492500
    ],
    [
        1183730,
        3354595000
    ],
    [
        1183690,
        3351910000
    ],
    [
        1183670,
        3349045000
    ],
    [
        1183640,
        3363915000
    ],
    [
        1183630,
        3363500000
    ],
    [
        1183610,
        3364000000
    ],
    [
        1183590,
        3372135000
    ],
    [
        1183580,
        3376351250
    ],
    [
        1183570,
        3378133250
    ],
    [
        1183550,
        3384445000
    ],
    [
        1183540,
        3383445000
    ],
    [
        1183520,
        3382570000
    ],
    [
        1183510,
        3384955000
    ],
    [
        1183490,
        3380130000
    ],
    [
        1183480,
        3376130000
    ],
    [
        1183470,
        3369893750
    ],
    [
        1183420,
        3368631750
    ],
    [
        1183410,
        3369893750
    ],
    [
        1183400,
        3372083750
    ],
    [
        1183380,
        3372606250
    ],
    [
        1183370,
        3375135000
    ],
    [
        1183360,
        3375635000
    ],
    [
        1183350,
        3376520000
    ],
    [
        1183340,
        3378507500
    ],
    [
        1183320,
        3380135000
    ],
    [
        1183310,
        3377558000
    ],
    [
        1183300,
        3379923000
    ],
    [
        1183290,
        3382500000
    ],
    [
        1183280,
        3394558750
    ],
    [
        1183260,
        3397905000
    ],
    [
        1183240,
        3396971250
    ],
    [
        1183230,
        3396471250
    ],
    [
        1183210,
        3395491000
    ],
    [
        1183190,
        3396490500
    ],
    [
        1183170,
        3397490000
    ],
    [
        1183150,
        3391680000
    ],
    [
        1183120,
        3396040000
    ],
    [
        1183110,
        3392930000
    ],
    [
        1183090,
        3393817000
    ],
    [
        1183080,
        3392930000
    ],
    [
        1183070,
        3408386250
    ],
    [
        1183060,
        3409201500
    ],
    [
        1183030,
        3411000000
    ],
    [
        1183020,
        3416812500
    ],
    [
        1183010,
        3417472500
    ],
    [
        1182990,
        3418577000
    ],
    [
        1182980,
        3419251750
    ],
    [
        1182890,
        3450924000
    ],
    [
        1182870,
        3454478750
    ],
    [
        1182860,
        3454040000
    ],
    [
        1182850,
        3454477500
    ],
    [
        1182840,
        3447530000
    ],
    [
        1182830,
        3444000000
    ],
    [
        1182810,
        3449231250
    ],
    [
        1182800,
        3451530000
    ],
    [
        1182760,
        3451990000
    ],
    [
        1182730,
        3456845000
    ],
    [
        1182720,
        3464676000
    ],
    [
        1182700,
        3466676000
    ],
    [
        1182660,
        3462645000
    ],
    [
        1182650,
        3462267500
    ],
    [
        1182640,
        3460467500
    ],
    [
        1182630,
        3466112000
    ],
    [
        1182620,
        3471613750
    ],
    [
        1182610,
        3474970000
    ],
    [
        1182600,
        3490829500
    ],
    [
        1182590,
        3492147500
    ],
    [
        1182580,
        3473157500
    ],
    [
        1182510,
        3403000000
    ],
    [
        1182490,
        3401605000
    ],
    [
        1182450,
        3399415000
    ],
    [
        1182440,
        3384500000
    ],
    [
        1182420,
        3374485000
    ],
    [
        1182400,
        3371780500
    ],
    [
        1182390,
        3372591000
    ],
    [
        1182380,
        3370970000
    ],
    [
        1182320,
        3391000000
    ],
    [
        1182280,
        3390000000
    ],
    [
        1182260,
        3388340000
    ],
    [
        1182240,
        3387445000
    ],
    [
        1182190,
        3389131000
    ],
    [
        1182150,
        3362760000
    ],
    [
        1182130,
        3345650000
    ],
    [
        1182100,
        3338975000
    ],
    [
        1182070,
        3337195000
    ],
    [
        1182060,
        3344498000
    ],
    [
        1182040,
        3345465000
    ],
    [
        1182020,
        3353897500
    ],
    [
        1182010,
        3359497500
    ],
    [
        1181960,
        3347000000
    ],
    [
        1181930,
        3344270000
    ],
    [
        1181920,
        3347000000
    ],
    [
        1181870,
        3340110000
    ],
    [
        1181840,
        3339595000
    ],
    [
        1181830,
        3340110000
    ],
    [
        1181780,
        3347000000
    ],
    [
        1181760,
        3341450000
    ],
    [
        1181750,
        3334910000
    ],
    [
        1181730,
        3326000000
    ],
    [
        1181710,
        3324144000
    ],
    [
        1181690,
        3326000000
    ],
    [
        1181680,
        3326452500
    ],
    [
        1181650,
        3329000000
    ],
    [
        1181630,
        3325250000
    ],
    [
        1181610,
        3313000000
    ],
    [
        1181600,
        3317750000
    ],
    [
        1181590,
        3312000000
    ],
    [
        1181580,
        3317272000
    ],
    [
        1181570,
        3312000000
    ],
    [
        1181560,
        3301000000
    ],
    [
        1181550,
        3297955000
    ],
    [
        1181540,
        3291000000
    ],
    [
        1181530,
        3300000000
    ],
    [
        1181520,
        3301000000
    ],
    [
        1181510,
        3306252500
    ],
    [
        1181470,
        3301000000
    ],
    [
        1181450,
        3283000000
    ],
    [
        1181420,
        3301000000
    ],
    [
        1181410,
        3289420000
    ],
    [
        1181390,
        3286269000
    ],
    [
        1181380,
        3283000000
    ],
    [
        1181360,
        3286269000
    ],
    [
        1181350,
        3287870000
    ],
    [
        1181340,
        3288000000
    ],
    [
        1181320,
        3298000000
    ],
    [
        1181310,
        3294780000
    ],
    [
        1181280,
        3271000000
    ],
    [
        1181260,
        3260540000
    ],
    [
        1181250,
        3257457500
    ],
    [
        1181240,
        3240390000
    ],
    [
        1181220,
        3235000000
    ],
    [
        1181200,
        3231000000
    ],
    [
        1181190,
        3229260000
    ],
    [
        1181170,
        3240930000
    ],
    [
        1181130,
        3231000000
    ],
    [
        1181100,
        3227472000
    ],
    [
        1181090,
        3204000000
    ],
    [
        1181080,
        3216985000
    ],
    [
        1181070,
        3224500000
    ],
    [
        1181060,
        3231000000
    ],
    [
        1181040,
        3212190000
    ],
    [
        1180990,
        3170000000
    ],
    [
        1180970,
        3169000000
    ],
    [
        1180930,
        3153460000
    ],
    [
        1180920,
        3163332500
    ],
    [
        1180910,
        3164000000
    ],
    [
        1180900,
        3163332500
    ],
    [
        1180890,
        3168240000
    ],
    [
        1180880,
        3163332500
    ],
    [
        1180870,
        3153460000
    ],
    [
        1180860,
        3155778000
    ],
    [
        1180840,
        3150930000
    ],
    [
        1180830,
        3149046000
    ],
    [
        1180800,
        3148000000
    ],
    [
        1180790,
        3136000000
    ],
    [
        1180780,
        3142395000
    ],
    [
        1180740,
        3148000000
    ],
    [
        1180730,
        3188630000
    ],
    [
        1180700,
        3193924000
    ],
    [
        1180690,
        3221000000
    ],
    [
        1180680,
        3224000000
    ],
    [
        1180660,
        3225617000
    ],
    [
        1180640,
        3234031000
    ],
    [
        1180620,
        3259890000
    ],
    [
        1180600,
        3275000000
    ],
    [
        1180570,
        3276000000
    ],
    [
        1180530,
        3281380000
    ],
    [
        1180520,
        3276935000
    ],
    [
        1180500,
        3275000000
    ],
    [
        1180490,
        3291000000
    ],
    [
        1180480,
        3295250000
    ],
    [
        1180470,
        3292000000
    ],
    [
        1180460,
        3291000000
    ],
    [
        1180450,
        3290556000
    ],
    [
        1180440,
        3288832500
    ],
    [
        1180430,
        3273000000
    ],
    [
        1180420,
        3271170000
    ],
    [
        1180400,
        3266855000
    ],
    [
        1180390,
        3261295000
    ],
    [
        1180380,
        3262710000
    ],
    [
        1180370,
        3259890000
    ],
    [
        1180350,
        3264000000
    ],
    [
        1180340,
        3259460000
    ],
    [
        1180320,
        3264000000
    ],
    [
        1180310,
        3260390000
    ],
    [
        1180300,
        3252000000
    ],
    [
        1180290,
        3251000000
    ],
    [
        1180280,
        3250000000
    ],
    [
        1180270,
        3249000000
    ],
    [
        1180260,
        3248375000
    ],
    [
        1180240,
        3250000000
    ],
    [
        1180230,
        3243520000
    ],
    [
        1180220,
        3240510000
    ],
    [
        1180210,
        3238000000
    ],
    [
        1180200,
        3231000000
    ],
    [
        1180190,
        3242430000
    ],
    [
        1180180,
        3246390000
    ],
    [
        1180170,
        3248000000
    ],
    [
        1180150,
        3243470000
    ],
    [
        1180140,
        3244777500
    ],
    [
        1180130,
        3248113000
    ],
    [
        1180120,
        3238000000
    ],
    [
        1180110,
        3234740000
    ],
    [
        1180100,
        3235000000
    ],
    [
        1180090,
        3234740000
    ],
    [
        1180080,
        3231035000
    ],
    [
        1180050,
        3231000000
    ],
    [
        1180040,
        3292870000
    ],
    [
        1179810,
        3293570000
    ],
    [
        1179790,
        3294285000
    ],
    [
        1179780,
        3300658000
    ],
    [
        1179760,
        3301800000
    ],
    [
        1179740,
        3303080000
    ],
    [
        1179730,
        3306986000
    ],
    [
        1179720,
        3306912500
    ],
    [
        1179700,
        3311253750
    ],
    [
        1179680,
        3306738750
    ],
    [
        1179670,
        3301420000
    ],
    [
        1179650,
        3303500000
    ],
    [
        1179640,
        3316500000
    ],
    [
        1179620,
        3324072500
    ],
    [
        1179600,
        3352820000
    ],
    [
        1179590,
        3362496250
    ],
    [
        1179570,
        3323675000
    ],
    [
        1179560,
        3320175000
    ],
    [
        1179540,
        3312920000
    ],
    [
        1179520,
        3453000000
    ],
    [
        1179470,
        3465170000
    ],
    [
        1179460,
        3475340000
    ],
    [
        1179450,
        3469947500
    ],
    [
        1179440,
        3467755000
    ],
    [
        1179430,
        3444500000
    ],
    [
        1179420,
        3443000000
    ],
    [
        1179410,
        3439993000
    ],
    [
        1179400,
        3431770000
    ],
    [
        1179390,
        3426670000
    ],
    [
        1179380,
        3424790000
    ],
    [
        1179370,
        3419938750
    ],
    [
        1179360,
        3424247000
    ],
    [
        1179350,
        3425457000
    ],
    [
        1179340,
        3426000000
    ],
    [
        1179310,
        3416666250
    ],
    [
        1179300,
        3416800000
    ],
    [
        1179280,
        3411000000
    ],
    [
        1179270,
        3415333000
    ],
    [
        1179260,
        3429732000
    ],
    [
        1179240,
        3428490000
    ],
    [
        1179180,
        3463000000
    ],
    [
        1179150,
        3464000000
    ],
    [
        1179130,
        3472000000
    ],
    [
        1179120,
        3469024500
    ],
    [
        1179110,
        3475000000
    ],
    [
        1179100,
        3478790000
    ],
    [
        1179060,
        3479790000
    ],
    [
        1179050,
        3481000000
    ],
    [
        1179040,
        3483750000
    ],
    [
        1179030,
        3481000000
    ],
    [
        1179020,
        3479790000
    ],
    [
        1179010,
        3480000000
    ],
    [
        1178990,
        3482270000
    ],
    [
        1178980,
        3487000000
    ],
    [
        1178970,
        3487397500
    ],
    [
        1178960,
        3489205000
    ],
    [
        1178950,
        3492000000
    ],
    [
        1178930,
        3492705000
    ],
    [
        1178910,
        3493000000
    ],
    [
        1178900,
        3490153750
    ],
    [
        1178890,
        3485978750
    ],
    [
        1178870,
        3482417500
    ],
    [
        1178860,
        3479500000
    ],
    [
        1178850,
        3478500000
    ],
    [
        1178840,
        3479000000
    ],
    [
        1178830,
        3486907500
    ],
    [
        1178810,
        3483937500
    ],
    [
        1178800,
        3483415000
    ],
    [
        1178760,
        3479000000
    ],
    [
        1178750,
        3483468000
    ],
    [
        1178740,
        3477218750
    ],
    [
        1178710,
        3502237500
    ],
    [
        1178700,
        3504286250
    ],
    [
        1178690,
        3516668750
    ],
    [
        1178680,
        3521245000
    ],
    [
        1178670,
        3528405000
    ],
    [
        1178660,
        3533766250
    ],
    [
        1178640,
        3547450000
    ],
    [
        1178610,
        3547807000
    ],
    [
        1178600,
        3567715500
    ],
    [
        1178580,
        3573403000
    ],
    [
        1178550,
        3569385000
    ],
    [
        1178540,
        3573871250
    ],
    [
        1178510,
        3574666250
    ],
    [
        1178500,
        3579555000
    ],
    [
        1178490,
        3581055000
    ],
    [
        1178470,
        3583880000
    ],
    [
        1178460,
        3581055000
    ],
    [
        1178450,
        3579370000
    ],
    [
        1178430,
        3575937500
    ],
    [
        1178400,
        3568505000
    ],
    [
        1178390,
        3566931250
    ],
    [
        1178380,
        3567997500
    ],
    [
        1178360,
        3564397500
    ],
    [
        1178350,
        3550171250
    ],
    [
        1178330,
        3559235000
    ],
    [
        1178320,
        3553525000
    ],
    [
        1178310,
        3536935500
    ],
    [
        1178300,
        3518500000
    ],
    [
        1178290,
        3514790000
    ],
    [
        1178280,
        3513061250
    ],
    [
        1178270,
        3512322000
    ],
    [
        1178260,
        3491046250
    ],
    [
        1178240,
        3479000000
    ],
    [
        1178210,
        3477103750
    ],
    [
        1178200,
        3474045000
    ],
    [
        1178190,
        3471500000
    ],
    [
        1178180,
        3472370000
    ],
    [
        1178170,
        3475830000
    ],
    [
        1178160,
        3482000000
    ],
    [
        1178150,
        3486525000
    ],
    [
        1178140,
        3486745000
    ],
    [
        1178130,
        3484920000
    ],
    [
        1178110,
        3513511250
    ],
    [
        1178100,
        3495460000
    ],
    [
        1178090,
        3497450000
    ],
    [
        1178080,
        3468775000
    ],
    [
        1178070,
        3457410000
    ],
    [
        1178060,
        3456135000
    ],
    [
        1178050,
        3455630000
    ],
    [
        1178040,
        3451565000
    ],
    [
        1178020,
        3446185000
    ],
    [
        1178010,
        3441042500
    ],
    [
        1178000,
        3432795000
    ],
    [
        1177990,
        3438803500
    ],
    [
        1177980,
        3430900000
    ],
    [
        1177970,
        3447000000
    ],
    [
        1177960,
        3447757500
    ],
    [
        1177950,
        3461052500
    ],
    [
        1177940,
        3458452500
    ],
    [
        1177930,
        3448329500
    ],
    [
        1177920,
        3443880000
    ],
    [
        1177910,
        3444177500
    ],
    [
        1177900,
        3440059000
    ],
    [
        1177890,
        3448059000
    ],
    [
        1177880,
        3446279500
    ],
    [
        1177860,
        3455085500
    ],
    [
        1177850,
        3450158750
    ],
    [
        1177830,
        3385000000
    ],
    [
        1177820,
        3377950000
    ],
    [
        1177790,
        3378372500
    ],
    [
        1177780,
        3369000000
    ],
    [
        1177770,
        3368320000
    ],
    [
        1177760,
        3365240000
    ],
    [
        1177740,
        3363267500
    ],
    [
        1177730,
        3365204000
    ],
    [
        1177720,
        3365326500
    ],
    [
        1177700,
        3323728750
    ],
    [
        1177660,
        3316905000
    ],
    [
        1177640,
        3319790000
    ],
    [
        1177630,
        3319446000
    ],
    [
        1177620,
        3316015000
    ],
    [
        1177600,
        3308071250
    ],
    [
        1177570,
        3307635000
    ],
    [
        1177540,
        3283275000
    ],
    [
        1177520,
        3284680000
    ],
    [
        1177500,
        3266940000
    ],
    [
        1177490,
        3265260000
    ],
    [
        1177480,
        3265077500
    ],
    [
        1177470,
        3265337500
    ],
    [
        1177460,
        3265520000
    ],
    [
        1177440,
        3278680000
    ],
    [
        1177430,
        3290105000
    ],
    [
        1177420,
        3296215000
    ],
    [
        1177410,
        3301620000
    ],
    [
        1177390,
        3300500000
    ],
    [
        1177370,
        3293827500
    ],
    [
        1177360,
        3296105000
    ],
    [
        1177350,
        3288500000
    ],
    [
        1177340,
        3287935500
    ],
    [
        1177330,
        3286935500
    ],
    [
        1177310,
        3301000000
    ],
    [
        1177290,
        3300518500
    ],
    [
        1177280,
        3299571000
    ],
    [
        1177260,
        3289325000
    ],
    [
        1177250,
        3289320000
    ],
    [
        1177240,
        3297670000
    ],
    [
        1177230,
        3285995000
    ],
    [
        1177220,
        3281510000
    ],
    [
        1177210,
        3281565000
    ],
    [
        1177200,
        3281185000
    ],
    [
        1177190,
        3283735000
    ],
    [
        1177180,
        3282235000
    ],
    [
        1177170,
        3285162500
    ],
    [
        1177160,
        3284246250
    ],
    [
        1177150,
        3286995000
    ],
    [
        1177140,
        3292930000
    ],
    [
        1177130,
        3294269000
    ],
    [
        1177120,
        3298327500
    ],
    [
        1177110,
        3304987500
    ],
    [
        1177090,
        3302340000
    ],
    [
        1177070,
        3301240000
    ],
    [
        1177050,
        3297840000
    ],
    [
        1177040,
        3300313750
    ],
    [
        1177030,
        3304253750
    ],
    [
        1177020,
        3283144000
    ],
    [
        1177010,
        3296450000
    ],
    [
        1177000,
        3298499000
    ],
    [
        1176960,
        3310500000
    ],
    [
        1176950,
        3308940000
    ],
    [
        1176940,
        3282160000
    ],
    [
        1176900,
        3275000000
    ],
    [
        1176890,
        3260028750
    ],
    [
        1176880,
        3251160000
    ],
    [
        1176860,
        3250000000
    ],
    [
        1176850,
        3254978750
    ],
    [
        1176840,
        3256000000
    ],
    [
        1176770,
        3250000000
    ],
    [
        1176760,
        3258245000
    ],
    [
        1176750,
        3265996250
    ],
    [
        1176740,
        3271250000
    ],
    [
        1176730,
        3272980000
    ],
    [
        1176720,
        3273810000
    ],
    [
        1176710,
        3273655000
    ],
    [
        1176700,
        3271785000
    ],
    [
        1176690,
        3266683750
    ],
    [
        1176670,
        3272260000
    ],
    [
        1176660,
        3270945000
    ],
    [
        1176650,
        3267423750
    ],
    [
        1176620,
        3249500000
    ],
    [
        1176600,
        3234000000
    ],
    [
        1176590,
        3233135000
    ],
    [
        1176570,
        3203500000
    ],
    [
        1176560,
        3210500000
    ],
    [
        1176540,
        3217855000
    ],
    [
        1176530,
        3211530000
    ],
    [
        1176510,
        3205210000
    ],
    [
        1176500,
        3191672500
    ],
    [
        1176490,
        3189150000
    ],
    [
        1176480,
        3172635000
    ],
    [
        1176470,
        3157500000
    ],
    [
        1176460,
        3148192250
    ],
    [
        1176450,
        3148903500
    ],
    [
        1176440,
        3154500000
    ],
    [
        1176420,
        3168166250
    ],
    [
        1176410,
        3170930000
    ],
    [
        1176400,
        3157280000
    ],
    [
        1176390,
        3156185000
    ],
    [
        1176380,
        3154496250
    ],
    [
        1176370,
        3155832500
    ],
    [
        1176280,
        3204000000
    ],
    [
        1176270,
        3203840000
    ],
    [
        1176260,
        3202248500
    ],
    [
        1176210,
        3167000000
    ],
    [
        1176200,
        3166995000
    ],
    [
        1176190,
        3160272000
    ],
    [
        1176180,
        3137329500
    ],
    [
        1176160,
        3133270000
    ],
    [
        1176130,
        3130305000
    ],
    [
        1176120,
        3152375000
    ],
    [
        1176110,
        3166707500
    ],
    [
        1176100,
        3175012000
    ],
    [
        1176090,
        3180002000
    ],
    [
        1176080,
        3186281250
    ],
    [
        1176070,
        3187481250
    ],
    [
        1176060,
        3190185000
    ],
    [
        1176050,
        3180115000
    ],
    [
        1176040,
        3174702500
    ],
    [
        1176030,
        3173132500
    ],
    [
        1176020,
        3174230000
    ],
    [
        1176000,
        3176577500
    ],
    [
        1175990,
        3176847500
    ],
    [
        1175980,
        3181445000
    ],
    [
        1175970,
        3183000000
    ],
    [
        1175940,
        3167495000
    ],
    [
        1175930,
        3166387500
    ],
    [
        1175920,
        3159536500
    ],
    [
        1175900,
        3165345000
    ],
    [
        1175890,
        3161075000
    ],
    [
        1175880,
        3158674500
    ],
    [
        1175870,
        3162270000
    ],
    [
        1175850,
        3172001250
    ],
    [
        1175830,
        3175175000
    ],
    [
        1175820,
        3174000000
    ],
    [
        1175810,
        3170270000
    ],
    [
        1175780,
        3154145000
    ],
    [
        1175770,
        3170190000
    ],
    [
        1175750,
        3175716250
    ],
    [
        1175740,
        3173080000
    ],
    [
        1175720,
        3172660000
    ],
    [
        1175710,
        3175947000
    ],
    [
        1175690,
        3177660000
    ],
    [
        1175670,
        3169430000
    ],
    [
        1175660,
        3164770000
    ],
    [
        1175650,
        3161500000
    ],
    [
        1175640,
        3161992500
    ],
    [
        1175630,
        3169430000
    ],
    [
        1175600,
        3159875000
    ],
    [
        1175570,
        3155830000
    ],
    [
        1175560,
        3142650000
    ],
    [
        1175540,
        3135794500
    ],
    [
        1175530,
        3132000000
    ],
    [
        1175510,
        3128400000
    ],
    [
        1175500,
        3131000000
    ],
    [
        1175490,
        3132310500
    ],
    [
        1175480,
        3133465500
    ],
    [
        1175470,
        3133842500
    ],
    [
        1175460,
        3144668000
    ],
    [
        1175450,
        3153088750
    ],
    [
        1175440,
        3160500000
    ],
    [
        1175430,
        3152896250
    ],
    [
        1175420,
        3145635000
    ],
    [
        1175400,
        3137500000
    ],
    [
        1175370,
        3133393750
    ],
    [
        1175360,
        3140720000
    ],
    [
        1175350,
        3140936250
    ],
    [
        1175340,
        3141720000
    ],
    [
        1175330,
        3144000000
    ],
    [
        1175320,
        3147000000
    ],
    [
        1175310,
        3144000000
    ],
    [
        1175300,
        3142068500
    ],
    [
        1175290,
        3150550000
    ],
    [
        1175280,
        3152757500
    ],
    [
        1175270,
        3154286250
    ],
    [
        1175260,
        3153435000
    ],
    [
        1175250,
        3153000000
    ],
    [
        1175230,
        3126760000
    ],
    [
        1175220,
        3119380000
    ],
    [
        1175210,
        3112955000
    ],
    [
        1175200,
        3114066500
    ],
    [
        1175190,
        3115955000
    ],
    [
        1175180,
        3118000000
    ],
    [
        1175170,
        3119380000
    ],
    [
        1175160,
        3125500000
    ],
    [
        1175150,
        3135550000
    ],
    [
        1175110,
        3131500000
    ],
    [
        1175100,
        3123500000
    ],
    [
        1175080,
        3123212500
    ],
    [
        1175070,
        3116030000
    ],
    [
        1175060,
        3112730000
    ],
    [
        1175040,
        3085320000
    ],
    [
        1175030,
        3097737500
    ],
    [
        1175020,
        3141785000
    ],
    [
        1175000,
        3160280000
    ],
    [
        1174990,
        3176577500
    ],
    [
        1174970,
        3118810000
    ],
    [
        1174960,
        3076000000
    ],
    [
        1174950,
        3069000000
    ],
    [
        1174940,
        3049410000
    ],
    [
        1174930,
        3045000000
    ],
    [
        1174890,
        3069790000
    ],
    [
        1174870,
        3071080000
    ],
    [
        1174860,
        3078000000
    ],
    [
        1174830,
        3071000000
    ],
    [
        1174820,
        3078891000
    ],
    [
        1174810,
        3087490000
    ],
    [
        1174800,
        3107360000
    ],
    [
        1174780,
        3120017500
    ],
    [
        1174770,
        3126557000
    ],
    [
        1174760,
        3130820000
    ],
    [
        1174740,
        3143000000
    ],
    [
        1174730,
        3144140000
    ],
    [
        1174720,
        3207403000
    ],
    [
        1174700,
        3227060000
    ],
    [
        1174690,
        3231055000
    ],
    [
        1174670,
        3259000000
    ],
    [
        1174660,
        3280866000
    ],
    [
        1174650,
        3292920000
    ],
    [
        1174640,
        3290000000
    ],
    [
        1174610,
        3293200000
    ],
    [
        1174580,
        3340680000
    ],
    [
        1174560,
        3340000000
    ],
    [
        1174530,
        3340680000
    ],
    [
        1174480,
        3344000000
    ],
    [
        1174470,
        3353760000
    ],
    [
        1174460,
        3354260000
    ],
    [
        1174450,
        3359939000
    ],
    [
        1174420,
        3362000000
    ],
    [
        1174400,
        3347740000
    ],
    [
        1174340,
        3342000000
    ],
    [
        1174330,
        3343291000
    ],
    [
        1174320,
        3335000000
    ],
    [
        1174310,
        3327000000
    ],
    [
        1174300,
        3328850000
    ],
    [
        1174290,
        3323178000
    ],
    [
        1174280,
        3315760000
    ],
    [
        1174270,
        3323000000
    ],
    [
        1174260,
        3327730000
    ],
    [
        1174250,
        3327910000
    ],
    [
        1174210,
        3332290000
    ],
    [
        1174200,
        3325930000
    ],
    [
        1174190,
        3312059000
    ],
    [
        1174180,
        3304480000
    ],
    [
        1174150,
        3281199000
    ],
    [
        1174140,
        3281000000
    ],
    [
        1174130,
        3279000000
    ],
    [
        1174120,
        3275210000
    ],
    [
        1174110,
        3279830000
    ],
    [
        1174090,
        3291000000
    ],
    [
        1174080,
        3294000000
    ],
    [
        1174060,
        3294857000
    ],
    [
        1174050,
        3295527000
    ],
    [
        1174040,
        3302058000
    ],
    [
        1174030,
        3306000000
    ],
    [
        1174020,
        3311000000
    ],
    [
        1173980,
        3312000000
    ],
    [
        1173960,
        3299640000
    ],
    [
        1173900,
        3312000000
    ],
    [
        1173880,
        3319850000
    ],
    [
        1173860,
        3317000000
    ],
    [
        1173850,
        3327000000
    ],
    [
        1173840,
        3338800000
    ],
    [
        1173830,
        3330175000
    ],
    [
        1173810,
        3322340000
    ],
    [
        1173800,
        3325000000
    ],
    [
        1173790,
        3324750000
    ],
    [
        1173780,
        3319300000
    ],
    [
        1173770,
        3328461000
    ],
    [
        1173760,
        3340680000
    ],
    [
        1173750,
        3341000000
    ],
    [
        1173740,
        3343000000
    ],
    [
        1173730,
        3346602500
    ],
    [
        1173720,
        3350600000
    ],
    [
        1173710,
        3349470000
    ],
    [
        1173690,
        3357000000
    ],
    [
        1173680,
        3356752500
    ],
    [
        1173670,
        3372960000
    ],
    [
        1173660,
        3374000000
    ],
    [
        1173650,
        3371106000
    ],
    [
        1173620,
        3342000000
    ],
    [
        1173610,
        3341500000
    ],
    [
        1173600,
        3340840000
    ],
    [
        1173580,
        3341340000
    ],
    [
        1173570,
        3357300000
    ],
    [
        1173560,
        3358320000
    ],
    [
        1173550,
        3363000000
    ],
    [
        1173540,
        3358320000
    ],
    [
        1173530,
        3358000000
    ],
    [
        1173520,
        3358320000
    ],
    [
        1173510,
        3358000000
    ],
    [
        1173500,
        3346168000
    ],
    [
        1173490,
        3350000000
    ],
    [
        1173480,
        3359820000
    ],
    [
        1173470,
        3353000000
    ],
    [
        1173440,
        3360000000
    ],
    [
        1173430,
        3283000000
    ],
    [
        1173410,
        3256000000
    ],
    [
        1173390,
        3248220000
    ],
    [
        1173380,
        3243750000
    ],
    [
        1173370,
        3232000000
    ],
    [
        1173290,
        3237710000
    ],
    [
        1173280,
        3236000000
    ],
    [
        1173250,
        3232000000
    ],
    [
        1173240,
        3229752500
    ],
    [
        1173230,
        3255180000
    ],
    [
        1173210,
        3260740000
    ],
    [
        1173200,
        3284000000
    ],
    [
        1173180,
        3279000000
    ],
    [
        1173170,
        3271000000
    ],
    [
        1173160,
        3265910000
    ],
    [
        1173140,
        3266000000
    ],
    [
        1173130,
        3267780000
    ],
    [
        1173110,
        3291000000
    ],
    [
        1173100,
        3237000000
    ],
    [
        1173080,
        3234922500
    ],
    [
        1173050,
        3233608000
    ],
    [
        1173040,
        3214200000
    ],
    [
        1173020,
        3214145000
    ],
    [
        1173010,
        3211000000
    ],
    [
        1173000,
        3219000000
    ],
    [
        1172990,
        3224000000
    ],
    [
        1172980,
        3233027500
    ],
    [
        1172970,
        3232012000
    ],
    [
        1172950,
        3211000000
    ],
    [
        1172940,
        3232012000
    ],
    [
        1172930,
        3234531000
    ],
    [
        1172920,
        3234635000
    ],
    [
        1172900,
        3211000000
    ],
    [
        1172890,
        3207301000
    ],
    [
        1172880,
        3213490000
    ],
    [
        1172860,
        3211000000
    ],
    [
        1172850,
        3210000000
    ],
    [
        1172840,
        3208920000
    ],
    [
        1172820,
        3222000000
    ],
    [
        1172810,
        3225860000
    ],
    [
        1172790,
        3231350000
    ],
    [
        1172760,
        3219000000
    ],
    [
        1172740,
        3227000000
    ],
    [
        1172730,
        3222440000
    ],
    [
        1172710,
        3244467500
    ],
    [
        1172700,
        3246770000
    ],
    [
        1172690,
        3247980000
    ],
    [
        1172680,
        3256235000
    ],
    [
        1172640,
        3234400000
    ],
    [
        1172600,
        3226000000
    ],
    [
        1172590,
        3245315000
    ],
    [
        1172580,
        3247110000
    ],
    [
        1172570,
        3240620000
    ],
    [
        1172560,
        3238000000
    ],
    [
        1172550,
        3242000000
    ],
    [
        1172540,
        3251030000
    ],
    [
        1172520,
        3228150000
    ],
    [
        1172500,
        3221000000
    ],
    [
        1172490,
        3203180000
    ],
    [
        1172470,
        3198000000
    ],
    [
        1172460,
        3203410000
    ],
    [
        1172440,
        3204000000
    ],
    [
        1172420,
        3235807500
    ],
    [
        1172410,
        3204000000
    ],
    [
        1172390,
        3195548000
    ],
    [
        1172380,
        3195000000
    ],
    [
        1172370,
        3204000000
    ],
    [
        1172360,
        3209070000
    ],
    [
        1172350,
        3214000000
    ],
    [
        1172330,
        3224390000
    ],
    [
        1172310,
        3251609000
    ],
    [
        1172300,
        3253000000
    ],
    [
        1172270,
        3270000000
    ],
    [
        1172250,
        3252334000
    ],
    [
        1172230,
        3251180000
    ],
    [
        1172220,
        3239471000
    ],
    [
        1172190,
        3138000000
    ],
    [
        1172160,
        3126000000
    ],
    [
        1172150,
        3125587000
    ],
    [
        1172140,
        3117243750
    ],
    [
        1172130,
        3114604000
    ],
    [
        1172120,
        3112000000
    ],
    [
        1172110,
        3109184000
    ],
    [
        1172100,
        3103182500
    ],
    [
        1172080,
        3119000000
    ],
    [
        1172070,
        3138000000
    ],
    [
        1172060,
        3152000000
    ],
    [
        1172040,
        3142000000
    ],
    [
        1172030,
        3180000000
    ],
    [
        1172020,
        3228465000
    ],
    [
        1172010,
        3198550000
    ],
    [
        1172000,
        3182270000
    ],
    [
        1171980,
        3180000000
    ],
    [
        1171950,
        3329000000
    ],
    [
        1171940,
        3341299000
    ],
    [
        1171930,
        3341600000
    ],
    [
        1171920,
        3345530000
    ],
    [
        1171910,
        3349880000
    ],
    [
        1171900,
        3359050000
    ],
    [
        1171890,
        3365150000
    ],
    [
        1171880,
        3371000000
    ],
    [
        1171870,
        3385040000
    ],
    [
        1171850,
        3371000000
    ],
    [
        1171840,
        3385792500
    ],
    [
        1171830,
        3391280000
    ],
    [
        1171790,
        3450000000
    ],
    [
        1171780,
        3476000000
    ],
    [
        1171760,
        3481376000
    ],
    [
        1171750,
        3487000000
    ],
    [
        1171730,
        3505000000
    ],
    [
        1171720,
        3526000000
    ],
    [
        1171700,
        3522810000
    ],
    [
        1171690,
        3526000000
    ],
    [
        1171660,
        3527000000
    ],
    [
        1171650,
        3529540000
    ],
    [
        1171630,
        3534764000
    ],
    [
        1171620,
        3541000000
    ],
    [
        1171610,
        3541650000
    ],
    [
        1171600,
        3540240000
    ],
    [
        1171590,
        3543300000
    ],
    [
        1171580,
        3542030000
    ],
    [
        1171570,
        3541840000
    ],
    [
        1171560,
        3542030000
    ],
    [
        1171550,
        3541840000
    ],
    [
        1171520,
        3586950000
    ],
    [
        1171500,
        3597000000
    ],
    [
        1171490,
        3598535000
    ],
    [
        1171480,
        3597000000
    ],
    [
        1171470,
        3595970000
    ],
    [
        1171450,
        3588000000
    ],
    [
        1171440,
        3588863000
    ],
    [
        1171430,
        3597000000
    ],
    [
        1171420,
        3609090000
    ],
    [
        1171410,
        3607050000
    ],
    [
        1171400,
        3600230000
    ],
    [
        1171340,
        3597000000
    ],
    [
        1171330,
        3602000000
    ],
    [
        1171320,
        3606110000
    ],
    [
        1171310,
        3602000000
    ],
    [
        1171290,
        3603120000
    ],
    [
        1171280,
        3602000000
    ],
    [
        1171240,
        3588000000
    ],
    [
        1171230,
        3590479000
    ],
    [
        1171220,
        3596590000
    ],
    [
        1171200,
        3590455000
    ],
    [
        1171150,
        3588000000
    ],
    [
        1171140,
        3573580000
    ],
    [
        1171130,
        3573000000
    ],
    [
        1171120,
        3571166000
    ],
    [
        1171110,
        3561000000
    ],
    [
        1171100,
        3556640000
    ],
    [
        1171090,
        3556000000
    ],
    [
        1171080,
        3556962500
    ],
    [
        1171070,
        3552500000
    ],
    [
        1171060,
        3539220000
    ],
    [
        1171050,
        3561000000
    ],
    [
        1171040,
        3573120000
    ],
    [
        1171030,
        3564130000
    ],
    [
        1171020,
        3561000000
    ],
    [
        1171010,
        3562000000
    ],
    [
        1171000,
        3583830000
    ],
    [
        1170990,
        3590000000
    ],
    [
        1170970,
        3596160000
    ],
    [
        1170960,
        3618462500
    ],
    [
        1170950,
        3620172000
    ],
    [
        1170940,
        3619245000
    ],
    [
        1170930,
        3629900000
    ],
    [
        1170910,
        3635100000
    ],
    [
        1170900,
        3632335000
    ],
    [
        1170890,
        3629900000
    ],
    [
        1170880,
        3596000000
    ],
    [
        1170870,
        3578000000
    ],
    [
        1170840,
        3565305000
    ],
    [
        1170810,
        3574525000
    ],
    [
        1170790,
        3541000000
    ],
    [
        1170780,
        3542080000
    ],
    [
        1170770,
        3550000000
    ],
    [
        1170760,
        3579000000
    ],
    [
        1170750,
        3596260000
    ],
    [
        1170740,
        3600980000
    ],
    [
        1170730,
        3601000000
    ],
    [
        1170720,
        3640510000
    ],
    [
        1170710,
        3641096000
    ],
    [
        1170700,
        3642410000
    ],
    [
        1170690,
        3640752500
    ],
    [
        1170680,
        3641640000
    ],
    [
        1170670,
        3642467000
    ],
    [
        1170660,
        3649000000
    ],
    [
        1170650,
        3659120000
    ],
    [
        1170640,
        3655970000
    ],
    [
        1170630,
        3636420000
    ],
    [
        1170620,
        3628000000
    ],
    [
        1170610,
        3625692000
    ],
    [
        1170600,
        3663000000
    ],
    [
        1170580,
        3665070000
    ],
    [
        1170570,
        3662737000
    ],
    [
        1170560,
        3644450000
    ],
    [
        1170550,
        3636000000
    ],
    [
        1170540,
        3629557500
    ],
    [
        1170520,
        3636000000
    ],
    [
        1170510,
        3640880000
    ],
    [
        1170490,
        3674483000
    ],
    [
        1170480,
        3692000000
    ],
    [
        1170460,
        3699585000
    ],
    [
        1170450,
        3704187500
    ],
    [
        1170380,
        3694000000
    ],
    [
        1170370,
        3693000000
    ],
    [
        1170340,
        3664000000
    ],
    [
        1170330,
        3679310000
    ],
    [
        1170320,
        3709000000
    ],
    [
        1170310,
        3718926000
    ],
    [
        1170300,
        3725682500
    ],
    [
        1170290,
        3748335000
    ],
    [
        1170260,
        3771000000
    ],
    [
        1170140,
        3816000000
    ],
    [
        1170130,
        3814750000
    ],
    [
        1170120,
        3808440000
    ],
    [
        1170110,
        3805530000
    ],
    [
        1170100,
        3789000000
    ],
    [
        1170090,
        3777650000
    ],
    [
        1170080,
        3774555000
    ],
    [
        1170060,
        3814000000
    ],
    [
        1170050,
        3819000000
    ],
    [
        1170030,
        3820328000
    ],
    [
        1170020,
        3819444000
    ],
    [
        1170010,
        3842000000
    ],
    [
        1169990,
        3894330000
    ],
    [
        1169980,
        3894019000
    ],
    [
        1169970,
        3894330000
    ],
    [
        1169960,
        3895542500
    ],
    [
        1169950,
        3904570000
    ],
    [
        1169940,
        3886220000
    ],
    [
        1169930,
        3878000000
    ],
    [
        1169920,
        3877640000
    ],
    [
        1169910,
        3842000000
    ],
    [
        1169890,
        3813530000
    ],
    [
        1169870,
        3799276000
    ],
    [
        1169840,
        3728650000
    ],
    [
        1169820,
        3701130000
    ],
    [
        1169810,
        3691330000
    ],
    [
        1169790,
        3683000000
    ],
    [
        1169780,
        3659582500
    ],
    [
        1169740,
        3666000000
    ],
    [
        1169730,
        3683000000
    ],
    [
        1169650,
        3701130000
    ],
    [
        1169630,
        3696480000
    ],
    [
        1169620,
        3742020000
    ],
    [
        1169610,
        3746375000
    ],
    [
        1169580,
        3790740000
    ],
    [
        1169520,
        3901912000
    ],
    [
        1169500,
        3938842500
    ],
    [
        1169490,
        3967000000
    ],
    [
        1169380,
        3981000000
    ],
    [
        1169350,
        3993960000
    ],
    [
        1169340,
        4000140000
    ],
    [
        1169330,
        4032000000
    ],
    [
        1169290,
        4042030000
    ],
    [
        1169270,
        4049000000
    ],
    [
        1169250,
        4042030000
    ],
    [
        1169230,
        4016340000
    ],
    [
        1169160,
        4011720000
    ],
    [
        1169150,
        4001880000
    ],
    [
        1169130,
        4000532500
    ],
    [
        1169120,
        4000899000
    ],
    [
        1169110,
        4005000000
    ],
    [
        1169100,
        4009290000
    ],
    [
        1169090,
        4005000000
    ],
    [
        1169080,
        4003440000
    ],
    [
        1169060,
        3997859500
    ],
    [
        1169020,
        3984000000
    ],
    [
        1169010,
        3968632000
    ],
    [
        1169000,
        3963232000
    ],
    [
        1168990,
        3949892500
    ],
    [
        1168980,
        3948992500
    ],
    [
        1168970,
        3861500000
    ],
    [
        1168960,
        3858992500
    ],
    [
        1168950,
        3852007500
    ],
    [
        1168940,
        3850863750
    ],
    [
        1168920,
        3848793000
    ],
    [
        1168910,
        3846359500
    ],
    [
        1168900,
        3846155000
    ],
    [
        1168890,
        3846218750
    ],
    [
        1168880,
        3846000000
    ],
    [
        1168870,
        3830345000
    ],
    [
        1168860,
        3826301500
    ],
    [
        1168850,
        3828801500
    ],
    [
        1168840,
        3844000000
    ],
    [
        1168830,
        3846097500
    ],
    [
        1168820,
        3838367500
    ],
    [
        1168810,
        3826000000
    ],
    [
        1168800,
        3820383750
    ],
    [
        1168790,
        3813383750
    ],
    [
        1168780,
        3788643500
    ],
    [
        1168770,
        3781205000
    ],
    [
        1168760,
        3781401500
    ],
    [
        1168750,
        3810078750
    ],
    [
        1168730,
        3853500000
    ],
    [
        1168720,
        3850375000
    ],
    [
        1168700,
        3856128750
    ],
    [
        1168690,
        3857541250
    ],
    [
        1168680,
        3814540000
    ],
    [
        1168670,
        3832000000
    ],
    [
        1168660,
        3800856000
    ],
    [
        1168650,
        3800000000
    ],
    [
        1168640,
        3797080000
    ],
    [
        1168590,
        3751439000
    ],
    [
        1168560,
        3786000000
    ],
    [
        1168550,
        3748010000
    ],
    [
        1168540,
        3751998000
    ],
    [
        1168520,
        3769000000
    ],
    [
        1168510,
        3762000000
    ],
    [
        1168500,
        3760780000
    ],
    [
        1168480,
        3745440000
    ],
    [
        1168470,
        3713157000
    ],
    [
        1168460,
        3699790000
    ],
    [
        1168450,
        3697000000
    ],
    [
        1168430,
        3675600000
    ],
    [
        1168370,
        3744000000
    ],
    [
        1168360,
        3777000000
    ],
    [
        1168350,
        3790730000
    ],
    [
        1168330,
        3801018000
    ],
    [
        1168310,
        3816000000
    ],
    [
        1168290,
        3800000000
    ],
    [
        1168280,
        3798835000
    ],
    [
        1168260,
        3785000000
    ],
    [
        1168250,
        3784925000
    ],
    [
        1168240,
        3782000000
    ],
    [
        1168220,
        3784925000
    ],
    [
        1168180,
        3782000000
    ],
    [
        1168160,
        3790141000
    ],
    [
        1168150,
        3756000000
    ],
    [
        1168140,
        3747035000
    ],
    [
        1168130,
        3743692500
    ],
    [
        1168110,
        3732000000
    ],
    [
        1168100,
        3737000000
    ],
    [
        1168080,
        3749099000
    ],
    [
        1168060,
        3741040000
    ],
    [
        1168050,
        3762590000
    ],
    [
        1168030,
        3763335000
    ],
    [
        1168000,
        3809000000
    ],
    [
        1167960,
        3812770000
    ],
    [
        1167950,
        3820076000
    ],
    [
        1167930,
        3826226000
    ],
    [
        1167920,
        3888590000
    ],
    [
        1167910,
        3892000000
    ],
    [
        1167900,
        3899412500
    ],
    [
        1167890,
        3888590000
    ],
    [
        1167880,
        3892000000
    ],
    [
        1167870,
        3892320000
    ],
    [
        1167850,
        3892000000
    ],
    [
        1167840,
        3881327500
    ],
    [
        1167830,
        3890792000
    ],
    [
        1167810,
        3892000000
    ],
    [
        1167800,
        3901000000
    ],
    [
        1167790,
        3906308000
    ],
    [
        1167780,
        3927000000
    ],
    [
        1167770,
        3925950000
    ],
    [
        1167760,
        3915317500
    ],
    [
        1167750,
        3879000000
    ],
    [
        1167730,
        3813000000
    ],
    [
        1167720,
        3843000000
    ],
    [
        1167710,
        3860000000
    ],
    [
        1167690,
        3974000000
    ],
    [
        1167680,
        3993857500
    ],
    [
        1167670,
        4096070000
    ],
    [
        1167660,
        4097690000
    ],
    [
        1167600,
        4098115000
    ],
    [
        1167590,
        4109655000
    ],
    [
        1167580,
        4120000000
    ],
    [
        1167570,
        4120680000
    ],
    [
        1167560,
        4126868750
    ],
    [
        1167550,
        4128380000
    ],
    [
        1167540,
        4239000000
    ],
    [
        1167530,
        4270105250
    ],
    [
        1167520,
        4280262750
    ],
    [
        1167510,
        4301500000
    ],
    [
        1167500,
        4314325000
    ],
    [
        1167490,
        4319638750
    ],
    [
        1167460,
        4323665000
    ],
    [
        1167450,
        4320150000
    ],
    [
        1167440,
        4323515000
    ],
    [
        1167430,
        4328180000
    ],
    [
        1167420,
        4373220000
    ],
    [
        1167410,
        4404765000
    ],
    [
        1167400,
        4436205000
    ],
    [
        1167390,
        4418848750
    ],
    [
        1167360,
        4386000000
    ],
    [
        1167350,
        4394858000
    ],
    [
        1167340,
        4417686500
    ],
    [
        1167330,
        4454095000
    ],
    [
        1167320,
        4457360000
    ],
    [
        1167310,
        4463000000
    ],
    [
        1167300,
        4457360000
    ],
    [
        1167290,
        4445741250
    ],
    [
        1167270,
        4440741250
    ],
    [
        1167260,
        4438991250
    ],
    [
        1167250,
        4440365000
    ],
    [
        1167230,
        4438165000
    ],
    [
        1167190,
        4377500000
    ],
    [
        1167180,
        4350313750
    ],
    [
        1167160,
        4329000000
    ],
    [
        1167140,
        4308500000
    ],
    [
        1167130,
        4308081500
    ],
    [
        1167120,
        4307535000
    ],
    [
        1167110,
        4308000000
    ],
    [
        1167090,
        4289695000
    ],
    [
        1167070,
        4295590000
    ],
    [
        1167060,
        4303550000
    ],
    [
        1167050,
        4305526000
    ],
    [
        1167040,
        4303550000
    ],
    [
        1167010,
        4302515000
    ],
    [
        1166980,
        4345000000
    ],
    [
        1166970,
        4346868000
    ],
    [
        1166960,
        4350000000
    ],
    [
        1166950,
        4357337500
    ],
    [
        1166940,
        4371950000
    ],
    [
        1166920,
        4376192500
    ],
    [
        1166910,
        4390000000
    ],
    [
        1166900,
        4388777500
    ],
    [
        1166860,
        4389000000
    ],
    [
        1166840,
        4367000000
    ],
    [
        1166830,
        4350147500
    ],
    [
        1166810,
        4355140000
    ],
    [
        1166760,
        4367000000
    ],
    [
        1166750,
        4389000000
    ],
    [
        1166720,
        4367000000
    ],
    [
        1166690,
        4344413000
    ],
    [
        1166680,
        4342347500
    ],
    [
        1166670,
        4341000000
    ],
    [
        1166660,
        4333040000
    ],
    [
        1166650,
        4303353000
    ],
    [
        1166640,
        4297322500
    ],
    [
        1166610,
        4296000000
    ],
    [
        1166600,
        4304000000
    ],
    [
        1166590,
        4307390000
    ],
    [
        1166520,
        4317030000
    ],
    [
        1166510,
        4277000000
    ],
    [
        1166490,
        4263000000
    ],
    [
        1166480,
        4259835000
    ],
    [
        1166460,
        4259000000
    ],
    [
        1166440,
        4254000000
    ],
    [
        1166430,
        4252000000
    ],
    [
        1166420,
        4251150000
    ],
    [
        1166410,
        4248380000
    ],
    [
        1166400,
        4265000000
    ],
    [
        1166380,
        4248380000
    ],
    [
        1166360,
        4225000000
    ],
    [
        1166350,
        4223000000
    ],
    [
        1166340,
        4187980000
    ],
    [
        1166330,
        4180000000
    ],
    [
        1166320,
        4187980000
    ],
    [
        1166310,
        4196000000
    ],
    [
        1166270,
        4197000000
    ],
    [
        1166260,
        4220000000
    ],
    [
        1166240,
        4218255000
    ],
    [
        1166230,
        4220000000
    ],
    [
        1166210,
        4219310000
    ],
    [
        1166200,
        4220140000
    ],
    [
        1166190,
        4222000000
    ],
    [
        1166170,
        4220000000
    ],
    [
        1166160,
        4209523500
    ],
    [
        1166150,
        4190177500
    ],
    [
        1166130,
        4196953500
    ],
    [
        1166120,
        4197000000
    ],
    [
        1166110,
        4219679500
    ],
    [
        1166100,
        4218239500
    ],
    [
        1166090,
        4213979500
    ],
    [
        1166080,
        4219679500
    ],
    [
        1166070,
        4228440000
    ],
    [
        1166060,
        4241000000
    ],
    [
        1166050,
        4246735000
    ],
    [
        1166030,
        4232500000
    ],
    [
        1166020,
        4282500000
    ],
    [
        1165990,
        4283949000
    ],
    [
        1165980,
        4279449000
    ],
    [
        1165950,
        4257498750
    ],
    [
        1165940,
        4252072500
    ],
    [
        1165930,
        4261035000
    ],
    [
        1165920,
        4236912000
    ],
    [
        1165910,
        4234410000
    ],
    [
        1165900,
        4172986000
    ],
    [
        1165880,
        4162066000
    ],
    [
        1165870,
        4142495000
    ],
    [
        1165860,
        4138995000
    ],
    [
        1165850,
        4150089500
    ],
    [
        1165830,
        4142907500
    ],
    [
        1165800,
        4118547500
    ],
    [
        1165790,
        4117720000
    ],
    [
        1165770,
        4117877500
    ],
    [
        1165760,
        4081250000
    ],
    [
        1165750,
        4058793500
    ],
    [
        1165740,
        4047713500
    ],
    [
        1165730,
        4040000000
    ],
    [
        1165720,
        4013145000
    ],
    [
        1165710,
        4011959000
    ],
    [
        1165700,
        4013145000
    ],
    [
        1165690,
        4013645000
    ],
    [
        1165670,
        4016530750
    ],
    [
        1165660,
        4018335000
    ],
    [
        1165630,
        4039000000
    ],
    [
        1165620,
        4042083750
    ],
    [
        1165600,
        4060780000
    ],
    [
        1165590,
        4054460000
    ],
    [
        1165580,
        4040843000
    ],
    [
        1165560,
        4025373000
    ],
    [
        1165490,
        3975831250
    ],
    [
        1165460,
        3955941250
    ],
    [
        1165450,
        3975000000
    ],
    [
        1165440,
        3954315000
    ],
    [
        1165430,
        3943122000
    ],
    [
        1165420,
        3937307000
    ],
    [
        1165400,
        3926835000
    ],
    [
        1165390,
        3921936250
    ],
    [
        1165360,
        3920000000
    ],
    [
        1165350,
        3896427500
    ],
    [
        1165330,
        3893427500
    ],
    [
        1165320,
        3895000000
    ],
    [
        1165310,
        3890960000
    ],
    [
        1165300,
        3888460000
    ],
    [
        1165290,
        3882500000
    ],
    [
        1165270,
        3889090000
    ],
    [
        1165260,
        3882410000
    ],
    [
        1165240,
        3867706000
    ],
    [
        1165230,
        3913841250
    ],
    [
        1165210,
        3914000000
    ],
    [
        1165200,
        3914271500
    ],
    [
        1165190,
        3918939500
    ],
    [
        1165180,
        3923120000
    ],
    [
        1165160,
        3916683750
    ],
    [
        1165140,
        3914000000
    ],
    [
        1165130,
        3920921500
    ],
    [
        1165110,
        3935941250
    ],
    [
        1165100,
        3941015000
    ],
    [
        1165090,
        3941500000
    ],
    [
        1165070,
        3943320000
    ],
    [
        1165050,
        3994301500
    ],
    [
        1165040,
        3995060000
    ],
    [
        1165030,
        3983023750
    ],
    [
        1165020,
        3973955000
    ],
    [
        1165010,
        3975735000
    ],
    [
        1165000,
        3994465000
    ],
    [
        1164990,
        3998615000
    ],
    [
        1164980,
        3994465000
    ],
    [
        1164960,
        4001000000
    ],
    [
        1164950,
        4002000000
    ],
    [
        1164940,
        4001795250
    ],
    [
        1164920,
        3998879000
    ],
    [
        1164910,
        3996000000
    ],
    [
        1164900,
        3980620000
    ],
    [
        1164870,
        3979595000
    ],
    [
        1164840,
        3978957000
    ],
    [
        1164820,
        3955190000
    ],
    [
        1164810,
        3948069000
    ],
    [
        1164780,
        3925401250
    ],
    [
        1164770,
        3955378000
    ],
    [
        1164760,
        4013000000
    ],
    [
        1164750,
        4017520000
    ],
    [
        1164740,
        4024020000
    ],
    [
        1164710,
        4026988750
    ],
    [
        1164700,
        4022975500
    ],
    [
        1164690,
        4025520000
    ],
    [
        1164680,
        4022020000
    ],
    [
        1164650,
        4022000000
    ],
    [
        1164640,
        4023925500
    ],
    [
        1164620,
        4023000500
    ],
    [
        1164610,
        4028716000
    ],
    [
        1164600,
        4038961250
    ],
    [
        1164590,
        4044020000
    ],
    [
        1164580,
        4084080000
    ],
    [
        1164570,
        4120455000
    ],
    [
        1164560,
        4123455000
    ],
    [
        1164550,
        4120910000
    ],
    [
        1164540,
        4136000000
    ],
    [
        1164530,
        4131000000
    ],
    [
        1164510,
        4126000000
    ],
    [
        1164470,
        4076045000
    ],
    [
        1164460,
        4063710000
    ],
    [
        1164450,
        4058117500
    ],
    [
        1164440,
        4049775500
    ],
    [
        1164430,
        4043415000
    ],
    [
        1164420,
        4014985000
    ],
    [
        1164400,
        4017067000
    ],
    [
        1164390,
        4036907750
    ],
    [
        1164380,
        4040146250
    ],
    [
        1164370,
        4041335000
    ],
    [
        1164360,
        4042783000
    ],
    [
        1164330,
        4055579000
    ],
    [
        1164310,
        4045488750
    ],
    [
        1164290,
        4049410000
    ],
    [
        1164280,
        4035230000
    ],
    [
        1164260,
        4035815000
    ],
    [
        1164250,
        4038585000
    ],
    [
        1164240,
        4027686250
    ],
    [
        1164230,
        4028613500
    ],
    [
        1164220,
        4082000000
    ],
    [
        1164210,
        4122275000
    ],
    [
        1164170,
        4137244500
    ],
    [
        1164160,
        4159840000
    ],
    [
        1164150,
        4170725000
    ],
    [
        1164140,
        4100161000
    ],
    [
        1164130,
        4102221000
    ],
    [
        1164120,
        4113400000
    ],
    [
        1164110,
        4117550000
    ],
    [
        1164100,
        4128235000
    ],
    [
        1164090,
        4124500000
    ],
    [
        1163980,
        4102000000
    ],
    [
        1163970,
        4094022500
    ],
    [
        1163960,
        4088275000
    ],
    [
        1163950,
        4086266000
    ],
    [
        1163940,
        4091022500
    ],
    [
        1163930,
        4088965000
    ],
    [
        1163920,
        4095950000
    ],
    [
        1163910,
        4096595000
    ],
    [
        1163900,
        4088978000
    ],
    [
        1163890,
        4096858750
    ],
    [
        1163880,
        4094450000
    ],
    [
        1163870,
        4099656250
    ],
    [
        1163860,
        4118858000
    ],
    [
        1163850,
        4132858000
    ],
    [
        1163830,
        4141500000
    ],
    [
        1163780,
        4156000000
    ],
    [
        1163770,
        4160500000
    ],
    [
        1163760,
        4165500000
    ],
    [
        1163750,
        4124220000
    ],
    [
        1163720,
        4116521500
    ],
    [
        1163710,
        4145877000
    ],
    [
        1163700,
        4152878750
    ],
    [
        1163680,
        4154440000
    ],
    [
        1163650,
        4202500000
    ],
    [
        1163640,
        4200936000
    ],
    [
        1163620,
        4199803500
    ],
    [
        1163610,
        4199932250
    ],
    [
        1163590,
        4183436000
    ],
    [
        1163580,
        4156315000
    ],
    [
        1163560,
        4132670500
    ],
    [
        1163550,
        4125000000
    ],
    [
        1163520,
        4093848750
    ],
    [
        1163510,
        4097260000
    ],
    [
        1163500,
        4091655000
    ],
    [
        1163490,
        4094115000
    ],
    [
        1163480,
        4026280000
    ],
    [
        1163470,
        4024217500
    ],
    [
        1163460,
        4024855000
    ],
    [
        1163440,
        4036280000
    ],
    [
        1163430,
        4040280000
    ],
    [
        1163410,
        4032705000
    ],
    [
        1163360,
        4025600000
    ],
    [
        1163350,
        3993780000
    ],
    [
        1163340,
        3965000000
    ],
    [
        1163330,
        3961302500
    ],
    [
        1163300,
        3952905000
    ],
    [
        1163270,
        3949810000
    ],
    [
        1163240,
        3923920000
    ],
    [
        1163230,
        3910617500
    ],
    [
        1163210,
        3908000000
    ],
    [
        1163200,
        3917417000
    ],
    [
        1163190,
        3924000000
    ],
    [
        1163170,
        3929387000
    ],
    [
        1163160,
        3931000000
    ],
    [
        1163150,
        3931950000
    ],
    [
        1163140,
        3912000000
    ],
    [
        1163130,
        3893437000
    ],
    [
        1163100,
        3892000000
    ],
    [
        1163090,
        3889010000
    ],
    [
        1163070,
        3887859000
    ],
    [
        1163060,
        3889000000
    ],
    [
        1163050,
        3889010000
    ],
    [
        1163040,
        3894000000
    ],
    [
        1163030,
        3894100000
    ],
    [
        1163020,
        3897000000
    ],
    [
        1163010,
        3891000000
    ],
    [
        1162980,
        3884770000
    ],
    [
        1162970,
        3883740000
    ],
    [
        1162960,
        3881000000
    ],
    [
        1162950,
        3878000000
    ],
    [
        1162920,
        3871000000
    ],
    [
        1162910,
        3866317000
    ],
    [
        1162890,
        3878060000
    ],
    [
        1162880,
        3878470000
    ],
    [
        1162860,
        3873216000
    ],
    [
        1162850,
        3871000000
    ],
    [
        1162830,
        3872600000
    ],
    [
        1162800,
        3877000000
    ],
    [
        1162790,
        3874580000
    ],
    [
        1162770,
        3861200000
    ],
    [
        1162760,
        3852616000
    ],
    [
        1162750,
        3849725000
    ],
    [
        1162740,
        3852616000
    ],
    [
        1162730,
        3856470000
    ],
    [
        1162720,
        3876000000
    ],
    [
        1162700,
        3884000000
    ],
    [
        1162690,
        3891000000
    ],
    [
        1162670,
        3891610000
    ],
    [
        1162660,
        3892000000
    ],
    [
        1162650,
        3897000000
    ],
    [
        1162640,
        3897945000
    ],
    [
        1162620,
        3898000000
    ],
    [
        1162610,
        3901000000
    ],
    [
        1162600,
        3907000000
    ],
    [
        1162590,
        3914110000
    ],
    [
        1162580,
        3902552500
    ],
    [
        1162550,
        3916857000
    ],
    [
        1162530,
        3938000000
    ],
    [
        1162520,
        3957000000
    ],
    [
        1162510,
        3964826000
    ],
    [
        1162490,
        3977560000
    ],
    [
        1162480,
        3983000000
    ],
    [
        1162470,
        3963000000
    ],
    [
        1162460,
        3951000000
    ],
    [
        1162440,
        3944000000
    ],
    [
        1162430,
        3949810000
    ],
    [
        1162420,
        3951000000
    ],
    [
        1162410,
        3949810000
    ],
    [
        1162380,
        3933410000
    ],
    [
        1162370,
        3948000000
    ],
    [
        1162340,
        3962712500
    ],
    [
        1162330,
        3967000000
    ],
    [
        1162290,
        3953690000
    ],
    [
        1162280,
        3944000000
    ],
    [
        1162260,
        3943000000
    ],
    [
        1162250,
        3955000000
    ],
    [
        1162240,
        3957840000
    ],
    [
        1162200,
        3959000000
    ],
    [
        1162190,
        3952702000
    ],
    [
        1162180,
        3955850000
    ],
    [
        1162170,
        3964000000
    ],
    [
        1162140,
        3988420000
    ],
    [
        1162130,
        3984132500
    ],
    [
        1162120,
        3982000000
    ],
    [
        1162100,
        3940380000
    ],
    [
        1162080,
        3949250000
    ],
    [
        1162060,
        3970000000
    ],
    [
        1162050,
        3975577000
    ],
    [
        1162020,
        3985650000
    ],
    [
        1162010,
        3967860000
    ],
    [
        1162000,
        3972000000
    ],
    [
        1161950,
        3958000000
    ],
    [
        1161940,
        3963093750
    ],
    [
        1161920,
        3977445000
    ],
    [
        1161910,
        3981000000
    ],
    [
        1161900,
        3985288750
    ],
    [
        1161890,
        3988922500
    ],
    [
        1161880,
        3993425000
    ],
    [
        1161850,
        3998000000
    ],
    [
        1161840,
        3987000000
    ],
    [
        1161810,
        3921550000
    ],
    [
        1161790,
        3903000000
    ],
    [
        1161770,
        3909970000
    ],
    [
        1161760,
        3918815000
    ],
    [
        1161740,
        3900000000
    ],
    [
        1161730,
        3874404000
    ],
    [
        1161720,
        3875470000
    ],
    [
        1161710,
        3883000000
    ],
    [
        1161680,
        3900000000
    ],
    [
        1161640,
        3905000000
    ],
    [
        1161630,
        3908366000
    ],
    [
        1161620,
        3906492500
    ],
    [
        1161590,
        3896000000
    ],
    [
        1161580,
        3897000000
    ],
    [
        1161570,
        3899412000
    ],
    [
        1161560,
        3945920000
    ],
    [
        1161550,
        3933290000
    ],
    [
        1161540,
        3980067500
    ],
    [
        1161520,
        3982481000
    ],
    [
        1161510,
        3983357500
    ],
    [
        1161500,
        3978630000
    ],
    [
        1161450,
        3972890000
    ],
    [
        1161440,
        3965395000
    ],
    [
        1161420,
        3953708000
    ],
    [
        1161410,
        3930320000
    ],
    [
        1161400,
        3944000000
    ],
    [
        1161380,
        3950549000
    ],
    [
        1161370,
        3964255000
    ],
    [
        1161350,
        3969860000
    ],
    [
        1161340,
        3961641000
    ],
    [
        1161320,
        3960000000
    ],
    [
        1161310,
        3944000000
    ],
    [
        1161290,
        3925000000
    ],
    [
        1161280,
        3911409000
    ],
    [
        1161250,
        3884000000
    ],
    [
        1161240,
        3859000000
    ],
    [
        1161220,
        3793000000
    ],
    [
        1161180,
        3790000000
    ],
    [
        1161140,
        3804710000
    ],
    [
        1161110,
        3776740000
    ],
    [
        1161100,
        3767000000
    ],
    [
        1161090,
        3762000000
    ],
    [
        1161080,
        3736000000
    ],
    [
        1161070,
        3720930000
    ],
    [
        1161050,
        3679260000
    ],
    [
        1161040,
        3669259000
    ],
    [
        1161010,
        3676000000
    ],
    [
        1161000,
        3677247500
    ],
    [
        1160990,
        3687000000
    ],
    [
        1160980,
        3689910000
    ],
    [
        1160970,
        3685450000
    ],
    [
        1160940,
        3765000000
    ],
    [
        1160930,
        3775000000
    ],
    [
        1160920,
        3786000000
    ],
    [
        1160900,
        3791964000
    ],
    [
        1160890,
        3786000000
    ],
    [
        1160880,
        3780400000
    ],
    [
        1160870,
        3776578000
    ],
    [
        1160860,
        3782402500
    ],
    [
        1160830,
        3818000000
    ],
    [
        1160790,
        3867000000
    ],
    [
        1160780,
        3873185000
    ],
    [
        1160770,
        3875000000
    ],
    [
        1160750,
        3873000000
    ],
    [
        1160700,
        3867000000
    ],
    [
        1160690,
        3859000000
    ],
    [
        1160680,
        3787000000
    ],
    [
        1160670,
        3781060000
    ],
    [
        1160660,
        3775000000
    ],
    [
        1160650,
        3771000000
    ],
    [
        1160630,
        3770000000
    ],
    [
        1160620,
        3775000000
    ],
    [
        1160610,
        3755000000
    ],
    [
        1160590,
        3754113000
    ],
    [
        1160560,
        3753000000
    ],
    [
        1160550,
        3754000000
    ],
    [
        1160540,
        3750440000
    ],
    [
        1160530,
        3750000000
    ],
    [
        1160520,
        3752362000
    ],
    [
        1160480,
        3759130000
    ],
    [
        1160470,
        3760000000
    ],
    [
        1160430,
        3767000000
    ],
    [
        1160400,
        3765000000
    ],
    [
        1160390,
        3661755000
    ],
    [
        1160370,
        3659000000
    ],
    [
        1160360,
        3654130000
    ],
    [
        1160350,
        3665960000
    ],
    [
        1160340,
        3681000000
    ],
    [
        1160320,
        3689264000
    ],
    [
        1160310,
        3694070000
    ],
    [
        1160300,
        3690000000
    ],
    [
        1160280,
        3689000000
    ],
    [
        1160250,
        3700223000
    ],
    [
        1160240,
        3705000000
    ],
    [
        1160230,
        3706000000
    ],
    [
        1160220,
        3705000000
    ],
    [
        1160210,
        3706018000
    ],
    [
        1160190,
        3708167000
    ],
    [
        1160180,
        3684323000
    ],
    [
        1160140,
        3683000000
    ],
    [
        1160130,
        3678596000
    ],
    [
        1160120,
        3678000000
    ],
    [
        1160110,
        3678084000
    ],
    [
        1160100,
        3683900000
    ],
    [
        1160090,
        3686305000
    ],
    [
        1160070,
        3700000000
    ],
    [
        1160060,
        3698890000
    ],
    [
        1160030,
        3701634000
    ],
    [
        1160020,
        3711142500
    ],
    [
        1160010,
        3713944000
    ],
    [
        1160000,
        3731000000
    ],
    [
        1159990,
        3740220000
    ],
    [
        1159970,
        3752000000
    ],
    [
        1159960,
        3742000000
    ],
    [
        1159940,
        3741480000
    ],
    [
        1159930,
        3739100000
    ],
    [
        1159920,
        3736390000
    ],
    [
        1159910,
        3734000000
    ],
    [
        1159900,
        3731000000
    ],
    [
        1159890,
        3733340000
    ],
    [
        1159840,
        3752000000
    ],
    [
        1159820,
        3744900000
    ],
    [
        1159810,
        3737760000
    ],
    [
        1159790,
        3737000000
    ],
    [
        1159780,
        3749000000
    ],
    [
        1159770,
        3765192000
    ],
    [
        1159750,
        3752000000
    ],
    [
        1159740,
        3749000000
    ],
    [
        1159730,
        3756292500
    ],
    [
        1159700,
        3757910000
    ],
    [
        1159690,
        3751122000
    ],
    [
        1159680,
        3761510000
    ],
    [
        1159670,
        3763755000
    ],
    [
        1159660,
        3754972750
    ],
    [
        1159650,
        3763475000
    ],
    [
        1159640,
        3766000000
    ],
    [
        1159630,
        3763475000
    ],
    [
        1159620,
        3754012500
    ],
    [
        1159600,
        3749000000
    ],
    [
        1159590,
        3741205000
    ],
    [
        1159580,
        3743670000
    ],
    [
        1159560,
        3727490000
    ],
    [
        1159550,
        3720630000
    ],
    [
        1159540,
        3710630000
    ],
    [
        1159530,
        3707000000
    ],
    [
        1159520,
        3714630000
    ],
    [
        1159510,
        3728000000
    ],
    [
        1159500,
        3728070000
    ],
    [
        1159490,
        3719700000
    ],
    [
        1159480,
        3718000000
    ],
    [
        1159470,
        3714623000
    ],
    [
        1159450,
        3715000000
    ],
    [
        1159430,
        3716265000
    ],
    [
        1159420,
        3734000000
    ],
    [
        1159410,
        3743180000
    ],
    [
        1159400,
        3741836000
    ],
    [
        1159380,
        3761597500
    ],
    [
        1159370,
        3761127500
    ],
    [
        1159360,
        3755510000
    ],
    [
        1159350,
        3744550000
    ],
    [
        1159290,
        3700485000
    ],
    [
        1159270,
        3691883000
    ],
    [
        1159260,
        3690970000
    ],
    [
        1159250,
        3687560000
    ],
    [
        1159240,
        3679500000
    ],
    [
        1159230,
        3689700000
    ],
    [
        1159220,
        3698000000
    ],
    [
        1159210,
        3698275000
    ],
    [
        1159200,
        3689700000
    ],
    [
        1159190,
        3692157000
    ],
    [
        1159180,
        3689000000
    ],
    [
        1159160,
        3702000000
    ],
    [
        1159150,
        3726471000
    ],
    [
        1159140,
        3739000000
    ],
    [
        1159130,
        3733902500
    ],
    [
        1159110,
        3723300000
    ],
    [
        1159100,
        3722405000
    ],
    [
        1159070,
        3719000000
    ],
    [
        1159030,
        3714230000
    ],
    [
        1159000,
        3701565000
    ],
    [
        1158970,
        3706000000
    ],
    [
        1158950,
        3703360000
    ],
    [
        1158940,
        3682880000
    ],
    [
        1158920,
        3677000000
    ],
    [
        1158910,
        3683000000
    ],
    [
        1158900,
        3669135000
    ],
    [
        1158890,
        3691000000
    ],
    [
        1158880,
        3698000000
    ],
    [
        1158870,
        3704000000
    ],
    [
        1158860,
        3698000000
    ],
    [
        1158850,
        3691000000
    ],
    [
        1158840,
        3688000000
    ],
    [
        1158830,
        3680600000
    ],
    [
        1158810,
        3674000000
    ],
    [
        1158780,
        3685170000
    ],
    [
        1158770,
        3705000000
    ],
    [
        1158760,
        3725171000
    ],
    [
        1158750,
        3747830000
    ],
    [
        1158740,
        3749056000
    ],
    [
        1158730,
        3775000000
    ],
    [
        1158700,
        3805900000
    ],
    [
        1158680,
        3815000000
    ],
    [
        1158670,
        3806509000
    ],
    [
        1158660,
        3832000000
    ],
    [
        1158640,
        3842000000
    ],
    [
        1158630,
        3858000000
    ],
    [
        1158620,
        3796150000
    ],
    [
        1158610,
        3791870000
    ],
    [
        1158590,
        3780000000
    ],
    [
        1158580,
        3775181000
    ],
    [
        1158570,
        3777688000
    ],
    [
        1158560,
        3777000000
    ],
    [
        1158530,
        3812000000
    ],
    [
        1158520,
        3828725000
    ],
    [
        1158510,
        3812000000
    ],
    [
        1158500,
        3806770000
    ],
    [
        1158480,
        3812000000
    ],
    [
        1158440,
        3842000000
    ],
    [
        1158430,
        3841000000
    ],
    [
        1158410,
        3847060000
    ],
    [
        1158400,
        3848045000
    ],
    [
        1158390,
        3846486000
    ],
    [
        1158380,
        3849000000
    ],
    [
        1158370,
        3862000000
    ],
    [
        1158360,
        3867000000
    ],
    [
        1158350,
        3866980000
    ],
    [
        1158330,
        3858000000
    ],
    [
        1158310,
        3861000000
    ],
    [
        1158280,
        3887070000
    ],
    [
        1158270,
        3865000000
    ],
    [
        1158260,
        3864080000
    ],
    [
        1158250,
        3856902000
    ],
    [
        1158240,
        3864080000
    ],
    [
        1158230,
        3851930000
    ],
    [
        1158210,
        3840660000
    ],
    [
        1158200,
        3868000000
    ],
    [
        1158190,
        3863613000
    ],
    [
        1158180,
        3869450000
    ],
    [
        1158170,
        3842090000
    ],
    [
        1158160,
        3837702500
    ],
    [
        1158150,
        3841867250
    ],
    [
        1158140,
        3883490000
    ],
    [
        1158130,
        3799273750
    ],
    [
        1158100,
        3780133750
    ],
    [
        1158090,
        3794775500
    ],
    [
        1158080,
        3822355000
    ],
    [
        1158070,
        3882989000
    ],
    [
        1158060,
        3880492500
    ],
    [
        1158050,
        3870390000
    ],
    [
        1158020,
        3877799000
    ],
    [
        1158010,
        3873750000
    ],
    [
        1158000,
        3871050000
    ],
    [
        1157990,
        3861120500
    ],
    [
        1157980,
        3859340000
    ],
    [
        1157970,
        3895497000
    ],
    [
        1157920,
        3906565000
    ],
    [
        1157890,
        3847340000
    ],
    [
        1157880,
        3827080000
    ],
    [
        1157870,
        3827000000
    ],
    [
        1157860,
        3825157000
    ],
    [
        1157790,
        3837072500
    ],
    [
        1157760,
        3811176000
    ],
    [
        1157750,
        3811000000
    ],
    [
        1157740,
        3806533750
    ],
    [
        1157730,
        3811000000
    ],
    [
        1157710,
        3810000000
    ],
    [
        1157700,
        3800035000
    ],
    [
        1157680,
        3779146250
    ],
    [
        1157670,
        3797634750
    ],
    [
        1157660,
        3817705000
    ],
    [
        1157650,
        3822105000
    ],
    [
        1157630,
        3824373750
    ],
    [
        1157610,
        3844000000
    ],
    [
        1157600,
        3771235000
    ],
    [
        1157590,
        3765915000
    ],
    [
        1157580,
        3787320000
    ],
    [
        1157570,
        3755574000
    ],
    [
        1157560,
        3742596500
    ],
    [
        1157550,
        3722932500
    ],
    [
        1157530,
        3721000000
    ],
    [
        1157520,
        3696753500
    ],
    [
        1157490,
        3690385000
    ],
    [
        1157480,
        3677568000
    ],
    [
        1157460,
        3691000000
    ],
    [
        1157440,
        3697053000
    ],
    [
        1157430,
        3700000000
    ],
    [
        1157420,
        3656881000
    ],
    [
        1157410,
        3668524500
    ],
    [
        1157400,
        3674524500
    ],
    [
        1157390,
        3675070000
    ],
    [
        1157370,
        3677751250
    ],
    [
        1157350,
        3684375000
    ],
    [
        1157320,
        3691000000
    ],
    [
        1157310,
        3680101500
    ],
    [
        1157290,
        3670462250
    ],
    [
        1157270,
        3630718750
    ],
    [
        1157260,
        3649375000
    ],
    [
        1157250,
        3673465000
    ],
    [
        1157230,
        3674512500
    ],
    [
        1157220,
        3691465000
    ],
    [
        1157210,
        3705150000
    ],
    [
        1157200,
        3701150000
    ],
    [
        1157190,
        3706046250
    ],
    [
        1157180,
        3676127500
    ],
    [
        1157150,
        3664000000
    ],
    [
        1157120,
        3672240000
    ],
    [
        1157100,
        3660000000
    ],
    [
        1157090,
        3696000000
    ],
    [
        1157080,
        3655000000
    ],
    [
        1157060,
        3696000000
    ],
    [
        1157040,
        3717000000
    ],
    [
        1157020,
        3722000000
    ],
    [
        1156990,
        3735410000
    ],
    [
        1156980,
        3751000000
    ],
    [
        1156950,
        3774990000
    ],
    [
        1156920,
        3793000000
    ],
    [
        1156910,
        3794000000
    ],
    [
        1156900,
        3790000000
    ],
    [
        1156890,
        3786827000
    ],
    [
        1156880,
        3783300000
    ],
    [
        1156870,
        3790000000
    ],
    [
        1156860,
        3792604000
    ],
    [
        1156840,
        3799937500
    ],
    [
        1156820,
        3782365000
    ],
    [
        1156810,
        3791310000
    ],
    [
        1156780,
        3766000000
    ],
    [
        1156770,
        3761207500
    ],
    [
        1156750,
        3761783000
    ],
    [
        1156730,
        3742482500
    ],
    [
        1156720,
        3764833000
    ],
    [
        1156640,
        3789000000
    ],
    [
        1156630,
        3802000000
    ],
    [
        1156620,
        3798000000
    ],
    [
        1156610,
        3796957500
    ],
    [
        1156590,
        3785787500
    ],
    [
        1156580,
        3770000000
    ],
    [
        1156570,
        3768065000
    ],
    [
        1156550,
        3768207500
    ],
    [
        1156540,
        3761890000
    ],
    [
        1156530,
        3769502500
    ],
    [
        1156510,
        3764245000
    ],
    [
        1156480,
        3745030000
    ],
    [
        1156470,
        3729980000
    ],
    [
        1156450,
        3692109000
    ],
    [
        1156430,
        3685827500
    ],
    [
        1156420,
        3691500000
    ],
    [
        1156410,
        3688680000
    ],
    [
        1156390,
        3720800000
    ],
    [
        1156380,
        3728000000
    ],
    [
        1156370,
        3729980000
    ],
    [
        1156330,
        3802000000
    ],
    [
        1156300,
        3823710000
    ],
    [
        1156270,
        3837000000
    ],
    [
        1156260,
        3917410000
    ],
    [
        1156250,
        3940000000
    ],
    [
        1156240,
        3948036000
    ],
    [
        1156230,
        3952452500
    ],
    [
        1156220,
        3951000000
    ],
    [
        1156210,
        3940000000
    ],
    [
        1156200,
        3916470000
    ],
    [
        1156190,
        3921000000
    ],
    [
        1156170,
        3940000000
    ],
    [
        1156160,
        3968481000
    ],
    [
        1156130,
        3990900000
    ],
    [
        1156120,
        3990024000
    ],
    [
        1156100,
        3988730000
    ],
    [
        1156080,
        4077000000
    ],
    [
        1156070,
        4062960000
    ],
    [
        1156060,
        4061107000
    ],
    [
        1156050,
        4062195000
    ],
    [
        1156040,
        4077000000
    ],
    [
        1156030,
        4075000000
    ],
    [
        1156020,
        4075925000
    ],
    [
        1156010,
        4070340000
    ],
    [
        1156000,
        4060000000
    ],
    [
        1155990,
        4069048000
    ],
    [
        1155980,
        4076375000
    ],
    [
        1155970,
        4077000000
    ],
    [
        1155960,
        4077270000
    ],
    [
        1155930,
        4077000000
    ],
    [
        1155920,
        4096019750
    ],
    [
        1155910,
        4096252500
    ],
    [
        1155900,
        4110875000
    ],
    [
        1155890,
        4100662500
    ],
    [
        1155870,
        4087803750
    ],
    [
        1155860,
        4098405000
    ],
    [
        1155850,
        4106267000
    ],
    [
        1155830,
        4110270000
    ],
    [
        1155810,
        4118465000
    ],
    [
        1155800,
        4118845000
    ],
    [
        1155790,
        4118486250
    ],
    [
        1155780,
        4120000000
    ],
    [
        1155770,
        4108892500
    ],
    [
        1155760,
        4099272500
    ],
    [
        1155740,
        4097955000
    ],
    [
        1155730,
        4098687500
    ],
    [
        1155710,
        4115500000
    ],
    [
        1155700,
        4116000000
    ],
    [
        1155690,
        4131424250
    ],
    [
        1155680,
        4132198750
    ],
    [
        1155670,
        4145021000
    ],
    [
        1155660,
        4161213000
    ],
    [
        1155650,
        4166196250
    ],
    [
        1155640,
        4142000000
    ],
    [
        1155620,
        4128770500
    ],
    [
        1155610,
        4125375500
    ],
    [
        1155600,
        4127947500
    ],
    [
        1155590,
        4132455000
    ],
    [
        1155580,
        4122875000
    ],
    [
        1155570,
        4122673000
    ],
    [
        1155560,
        4104959500
    ],
    [
        1155540,
        4099992500
    ],
    [
        1155530,
        4107000000
    ],
    [
        1155510,
        4103000000
    ],
    [
        1155500,
        4092320000
    ],
    [
        1155490,
        4096460000
    ],
    [
        1155480,
        4112000000
    ],
    [
        1155460,
        4129000000
    ],
    [
        1155450,
        4132000000
    ],
    [
        1155440,
        4128410000
    ],
    [
        1155430,
        4124194000
    ],
    [
        1155410,
        4152967500
    ],
    [
        1155300,
        4105000000
    ],
    [
        1155280,
        4088220000
    ],
    [
        1155270,
        4041000000
    ],
    [
        1155260,
        4039190000
    ],
    [
        1155200,
        4030000000
    ],
    [
        1155160,
        3990000000
    ],
    [
        1155150,
        3978817500
    ],
    [
        1155140,
        3959808000
    ],
    [
        1155130,
        3838000000
    ],
    [
        1155100,
        3834567000
    ],
    [
        1155090,
        3796980000
    ],
    [
        1155070,
        3796000000
    ],
    [
        1155030,
        3795000000
    ],
    [
        1155020,
        3800120000
    ],
    [
        1155000,
        3797000000
    ],
    [
        1154980,
        3796000000
    ],
    [
        1154970,
        3797000000
    ],
    [
        1154960,
        3796000000
    ],
    [
        1154940,
        3788660000
    ],
    [
        1154930,
        3783000000
    ],
    [
        1154920,
        3777000000
    ],
    [
        1154900,
        3772745000
    ],
    [
        1154890,
        3777570000
    ],
    [
        1154860,
        3771020000
    ],
    [
        1154840,
        3758000000
    ],
    [
        1154830,
        3759000000
    ],
    [
        1154820,
        3767892500
    ],
    [
        1154800,
        3773180000
    ],
    [
        1154790,
        3776578000
    ],
    [
        1154780,
        3801000000
    ],
    [
        1154770,
        3799320000
    ],
    [
        1154760,
        3804000000
    ],
    [
        1154750,
        3804425000
    ],
    [
        1154740,
        3804000000
    ],
    [
        1154730,
        3812105000
    ],
    [
        1154720,
        3796159000
    ],
    [
        1154710,
        3775380000
    ],
    [
        1154700,
        3771965000
    ],
    [
        1154690,
        3796655000
    ],
    [
        1154670,
        3806578000
    ],
    [
        1154660,
        3828035000
    ],
    [
        1154630,
        3831500000
    ],
    [
        1154610,
        3829000000
    ],
    [
        1154600,
        3831657500
    ],
    [
        1154580,
        3843588500
    ],
    [
        1154570,
        3842626000
    ],
    [
        1154560,
        3837251500
    ],
    [
        1154550,
        3841189000
    ],
    [
        1154540,
        3850570000
    ],
    [
        1154530,
        3855180000
    ],
    [
        1154510,
        3854280500
    ],
    [
        1154500,
        3855215500
    ],
    [
        1154480,
        3811380000
    ],
    [
        1154470,
        3803675000
    ],
    [
        1154460,
        3799490000
    ],
    [
        1154440,
        3796000000
    ],
    [
        1154430,
        3792190000
    ],
    [
        1154400,
        3763515000
    ],
    [
        1154390,
        3762126500
    ],
    [
        1154380,
        3749251250
    ],
    [
        1154360,
        3745990000
    ],
    [
        1154350,
        3744990000
    ],
    [
        1154340,
        3740490000
    ],
    [
        1154330,
        3738000000
    ],
    [
        1154310,
        3737495000
    ],
    [
        1154300,
        3732451500
    ],
    [
        1154290,
        3741375000
    ],
    [
        1154280,
        3738440000
    ],
    [
        1154270,
        3736727750
    ],
    [
        1154260,
        3731230000
    ],
    [
        1154250,
        3727000000
    ],
    [
        1154240,
        3727590000
    ],
    [
        1154230,
        3727000000
    ],
    [
        1154210,
        3726000000
    ],
    [
        1154200,
        3728684500
    ],
    [
        1154190,
        3740000000
    ],
    [
        1154170,
        3746308000
    ],
    [
        1154160,
        3745000000
    ],
    [
        1154140,
        3736650000
    ],
    [
        1154130,
        3715500000
    ],
    [
        1154050,
        3696985750
    ],
    [
        1154040,
        3690646250
    ],
    [
        1154030,
        3699907000
    ],
    [
        1154020,
        3720765000
    ],
    [
        1154010,
        3702155000
    ],
    [
        1154000,
        3685000000
    ],
    [
        1153990,
        3674303000
    ],
    [
        1153980,
        3670780000
    ],
    [
        1153960,
        3669780000
    ],
    [
        1153950,
        3669000000
    ],
    [
        1153940,
        3667500000
    ],
    [
        1153930,
        3670280000
    ],
    [
        1153890,
        3667155000
    ],
    [
        1153880,
        3663510000
    ],
    [
        1153870,
        3661000000
    ],
    [
        1153860,
        3663690000
    ],
    [
        1153840,
        3674000000
    ],
    [
        1153820,
        3674288500
    ],
    [
        1153810,
        3663390000
    ],
    [
        1153800,
        3665348500
    ],
    [
        1153780,
        3666531000
    ],
    [
        1153770,
        3657686250
    ],
    [
        1153760,
        3667335000
    ],
    [
        1153740,
        3684335000
    ],
    [
        1153710,
        3703770000
    ],
    [
        1153680,
        3785385000
    ],
    [
        1153670,
        3785695000
    ],
    [
        1153660,
        3788378750
    ],
    [
        1153640,
        3787183500
    ],
    [
        1153630,
        3792310000
    ],
    [
        1153610,
        3792000000
    ],
    [
        1153600,
        3833000000
    ],
    [
        1153570,
        3839150000
    ],
    [
        1153560,
        3834000000
    ],
    [
        1153550,
        3828763750
    ],
    [
        1153540,
        3820870000
    ],
    [
        1153520,
        3835763750
    ],
    [
        1153510,
        3833700000
    ],
    [
        1153490,
        3846380000
    ],
    [
        1153480,
        3845760000
    ],
    [
        1153470,
        3844130000
    ],
    [
        1153460,
        3846603750
    ],
    [
        1153450,
        3847130000
    ],
    [
        1153440,
        3845899000
    ],
    [
        1153420,
        3848630000
    ],
    [
        1153410,
        3850394000
    ],
    [
        1153400,
        3852663750
    ],
    [
        1153390,
        3853425000
    ],
    [
        1153380,
        3860385000
    ],
    [
        1153370,
        3860405000
    ],
    [
        1153360,
        3856868750
    ],
    [
        1153330,
        3848865000
    ],
    [
        1153320,
        3846860000
    ],
    [
        1153310,
        3844000000
    ],
    [
        1153300,
        3842000000
    ],
    [
        1153290,
        3795000000
    ],
    [
        1153280,
        3780000000
    ],
    [
        1153260,
        3788750000
    ],
    [
        1153190,
        3796320000
    ],
    [
        1153160,
        3826875000
    ],
    [
        1153150,
        3829000000
    ],
    [
        1153140,
        3829500000
    ],
    [
        1153130,
        3829000000
    ],
    [
        1153110,
        3823250000
    ],
    [
        1153090,
        3819000000
    ],
    [
        1153060,
        3816925000
    ],
    [
        1153050,
        3818925000
    ],
    [
        1153020,
        3789940000
    ],
    [
        1153010,
        3769000000
    ],
    [
        1152990,
        3775007500
    ],
    [
        1152980,
        3773193750
    ],
    [
        1152970,
        3762413500
    ],
    [
        1152950,
        3789375000
    ],
    [
        1152940,
        3790565000
    ],
    [
        1152930,
        3792937500
    ],
    [
        1152920,
        3801460000
    ],
    [
        1152910,
        3813490000
    ],
    [
        1152890,
        3812220000
    ],
    [
        1152870,
        3811101000
    ],
    [
        1152860,
        3816876500
    ],
    [
        1152840,
        3829555000
    ],
    [
        1152830,
        3826111500
    ],
    [
        1152820,
        3827430250
    ],
    [
        1152810,
        3830000000
    ],
    [
        1152800,
        3828208750
    ],
    [
        1152780,
        3827732500
    ],
    [
        1152770,
        3826000000
    ],
    [
        1152760,
        3852685000
    ],
    [
        1152750,
        3853000000
    ],
    [
        1152720,
        3838000000
    ],
    [
        1152710,
        3834134000
    ],
    [
        1152700,
        3832597750
    ],
    [
        1152690,
        3835445000
    ],
    [
        1152680,
        3838669000
    ],
    [
        1152660,
        3859475000
    ],
    [
        1152650,
        3871163750
    ],
    [
        1152630,
        3885775000
    ],
    [
        1152620,
        3858500000
    ],
    [
        1152580,
        3857000000
    ],
    [
        1152560,
        3789940000
    ],
    [
        1152520,
        3772065000
    ],
    [
        1152510,
        3765477500
    ],
    [
        1152500,
        3767126500
    ],
    [
        1152490,
        3761180000
    ],
    [
        1152480,
        3737414500
    ],
    [
        1152460,
        3734107000
    ],
    [
        1152450,
        3707943500
    ],
    [
        1152440,
        3698070000
    ],
    [
        1152430,
        3698390000
    ],
    [
        1152420,
        3710215000
    ],
    [
        1152410,
        3700308750
    ],
    [
        1152400,
        3690000000
    ],
    [
        1152390,
        3691023000
    ],
    [
        1152380,
        3697059000
    ],
    [
        1152370,
        3731415000
    ],
    [
        1152350,
        3747092500
    ],
    [
        1152330,
        3766000000
    ],
    [
        1152310,
        3744132500
    ],
    [
        1152300,
        3747603500
    ],
    [
        1152290,
        3744500000
    ],
    [
        1152280,
        3743500000
    ],
    [
        1152270,
        3735160000
    ],
    [
        1152250,
        3728325000
    ],
    [
        1152240,
        3737629500
    ],
    [
        1152230,
        3734000000
    ],
    [
        1152220,
        3748000000
    ],
    [
        1152210,
        3780575000
    ],
    [
        1152180,
        3790455000
    ],
    [
        1152170,
        3787801250
    ],
    [
        1152160,
        3777000000
    ],
    [
        1152150,
        3774990000
    ],
    [
        1152140,
        3771120000
    ],
    [
        1152120,
        3771000000
    ],
    [
        1152110,
        3762050000
    ],
    [
        1152080,
        3762000000
    ],
    [
        1152060,
        3771000000
    ],
    [
        1152040,
        3789000000
    ],
    [
        1152020,
        3789120000
    ],
    [
        1152010,
        3777150000
    ],
    [
        1151990,
        3760860000
    ],
    [
        1151980,
        3764447500
    ],
    [
        1151970,
        3743300000
    ],
    [
        1151960,
        3802000000
    ],
    [
        1151940,
        3831580000
    ],
    [
        1151930,
        3840750000
    ],
    [
        1151910,
        3841900000
    ],
    [
        1151900,
        3843305000
    ],
    [
        1151890,
        3839500000
    ],
    [
        1151880,
        3843815000
    ],
    [
        1151860,
        3858331750
    ],
    [
        1151850,
        3853645000
    ],
    [
        1151840,
        3844440000
    ],
    [
        1151810,
        3841140000
    ],
    [
        1151800,
        3872985000
    ],
    [
        1151790,
        3884380500
    ],
    [
        1151780,
        3889725500
    ],
    [
        1151760,
        3893000000
    ],
    [
        1151750,
        3889342500
    ],
    [
        1151690,
        3906500000
    ],
    [
        1151680,
        3903916500
    ],
    [
        1151670,
        3899000000
    ],
    [
        1151660,
        3897846000
    ],
    [
        1151650,
        3895220000
    ],
    [
        1151640,
        3883403500
    ],
    [
        1151630,
        3864485000
    ],
    [
        1151600,
        3850700000
    ],
    [
        1151580,
        3854685250
    ],
    [
        1151570,
        3857254000
    ],
    [
        1151560,
        3847000000
    ],
    [
        1151550,
        3849000000
    ],
    [
        1151530,
        3847000000
    ],
    [
        1151520,
        3843029500
    ],
    [
        1151490,
        3841529500
    ],
    [
        1151480,
        3851976500
    ],
    [
        1151460,
        3849582500
    ],
    [
        1151450,
        3856260000
    ],
    [
        1151430,
        3859806000
    ],
    [
        1151420,
        3860605000
    ],
    [
        1151410,
        3904480000
    ],
    [
        1151400,
        3906500000
    ],
    [
        1151380,
        3907000000
    ],
    [
        1151370,
        3912887500
    ],
    [
        1151360,
        3911852500
    ],
    [
        1151350,
        3910608000
    ],
    [
        1151320,
        3903000000
    ],
    [
        1151310,
        3895528750
    ],
    [
        1151290,
        3894683750
    ],
    [
        1151280,
        3895246000
    ],
    [
        1151270,
        3895378000
    ],
    [
        1151260,
        3896780000
    ],
    [
        1151250,
        3911000000
    ],
    [
        1151240,
        3911949250
    ],
    [
        1151230,
        3909360000
    ],
    [
        1151220,
        3913492000
    ],
    [
        1151190,
        3919145500
    ],
    [
        1151180,
        3910865500
    ],
    [
        1151170,
        3905226250
    ],
    [
        1151150,
        3917515000
    ],
    [
        1151120,
        3967567500
    ],
    [
        1151100,
        4018610000
    ],
    [
        1151090,
        4016535000
    ],
    [
        1151050,
        4009070000
    ],
    [
        1151040,
        4007195000
    ],
    [
        1151030,
        3994615000
    ],
    [
        1151020,
        4008655000
    ],
    [
        1151000,
        4033745000
    ],
    [
        1150990,
        3997245000
    ],
    [
        1150970,
        3958315000
    ],
    [
        1150960,
        3957250000
    ],
    [
        1150950,
        3947421250
    ],
    [
        1150940,
        3950405000
    ],
    [
        1150930,
        3945085000
    ],
    [
        1150920,
        3936515000
    ],
    [
        1150900,
        3923130000
    ],
    [
        1150890,
        3927855000
    ],
    [
        1150880,
        3927756250
    ],
    [
        1150870,
        3924831250
    ],
    [
        1150860,
        3921135000
    ],
    [
        1150850,
        3892801000
    ],
    [
        1150830,
        3880000000
    ],
    [
        1150820,
        3872682500
    ],
    [
        1150810,
        3897371000
    ],
    [
        1150790,
        3910005000
    ],
    [
        1150770,
        3928000000
    ],
    [
        1150760,
        3930507500
    ],
    [
        1150730,
        3927949000
    ],
    [
        1150720,
        3891500000
    ],
    [
        1150710,
        3877227500
    ],
    [
        1150690,
        3874000000
    ],
    [
        1150680,
        3853766500
    ],
    [
        1150670,
        3852343000
    ],
    [
        1150660,
        3856495000
    ],
    [
        1150630,
        3877000000
    ],
    [
        1150620,
        3859890000
    ],
    [
        1150610,
        3863815000
    ],
    [
        1150600,
        3864000000
    ],
    [
        1150590,
        3865355000
    ],
    [
        1150570,
        3862000000
    ],
    [
        1150550,
        3864985000
    ],
    [
        1150520,
        3866468750
    ],
    [
        1150510,
        3862660000
    ],
    [
        1150500,
        3862056000
    ],
    [
        1150490,
        3854820000
    ],
    [
        1150480,
        3839005000
    ],
    [
        1150470,
        3841207000
    ],
    [
        1150460,
        3830288000
    ],
    [
        1150450,
        3862185000
    ],
    [
        1150440,
        3864185000
    ],
    [
        1150430,
        3868720000
    ],
    [
        1150420,
        3872585000
    ],
    [
        1150240,
        4075962500
    ],
    [
        1150230,
        4108550000
    ],
    [
        1150220,
        4111050000
    ],
    [
        1150210,
        4128345000
    ],
    [
        1150200,
        4115125000
    ],
    [
        1150170,
        4111270000
    ],
    [
        1150140,
        4096755000
    ],
    [
        1150110,
        4148500000
    ],
    [
        1150070,
        4032779500
    ],
    [
        1150060,
        4100200000
    ],
    [
        1150050,
        4135422000
    ],
    [
        1150040,
        4144995500
    ],
    [
        1150030,
        4099418000
    ],
    [
        1150010,
        4096735000
    ],
    [
        1150000,
        4093500000
    ],
    [
        1149980,
        4085903750
    ],
    [
        1149970,
        4062240000
    ],
    [
        1149950,
        4045355000
    ],
    [
        1149920,
        4060575000
    ],
    [
        1149910,
        4079075000
    ],
    [
        1149890,
        4049000000
    ],
    [
        1149880,
        4036500000
    ],
    [
        1149870,
        4026961250
    ],
    [
        1149840,
        4024461250
    ],
    [
        1149820,
        4023278500
    ],
    [
        1149810,
        3998395000
    ],
    [
        1149800,
        4028232500
    ],
    [
        1149780,
        3935025000
    ],
    [
        1149740,
        3828668500
    ],
    [
        1149210,
        3828000000
    ],
    [
        1149200,
        3823595000
    ],
    [
        1149180,
        3815720000
    ],
    [
        1149170,
        3763000000
    ],
    [
        1149140,
        3760500000
    ],
    [
        1149110,
        3751000000
    ],
    [
        1149090,
        3758626250
    ],
    [
        1149070,
        3763707500
    ],
    [
        1149060,
        3707531000
    ],
    [
        1149040,
        3706970000
    ],
    [
        1148900,
        3639635000
    ],
    [
        1148890,
        3626180500
    ],
    [
        1148870,
        3621355000
    ],
    [
        1148860,
        3620160000
    ],
    [
        1148850,
        3616000000
    ],
    [
        1148840,
        3617000000
    ],
    [
        1148820,
        3616680000
    ],
    [
        1148810,
        3617372500
    ],
    [
        1148800,
        3616120000
    ],
    [
        1148780,
        3591645000
    ],
    [
        1148770,
        3590210000
    ],
    [
        1148760,
        3596500000
    ],
    [
        1148750,
        3587500000
    ],
    [
        1148740,
        3585150500
    ],
    [
        1148730,
        3579000000
    ],
    [
        1148710,
        3594573750
    ],
    [
        1148700,
        3595421000
    ],
    [
        1148690,
        3629635000
    ],
    [
        1148670,
        3631280000
    ],
    [
        1148660,
        3633572500
    ],
    [
        1148650,
        3626736000
    ],
    [
        1148640,
        3625326000
    ],
    [
        1148630,
        3626410000
    ],
    [
        1148610,
        3619245000
    ],
    [
        1148600,
        3609413500
    ],
    [
        1148590,
        3602740000
    ],
    [
        1148570,
        3598112500
    ],
    [
        1148560,
        3634000000
    ],
    [
        1148540,
        3635500000
    ],
    [
        1148530,
        3636000000
    ],
    [
        1148520,
        3641086250
    ],
    [
        1148500,
        3648565000
    ],
    [
        1148490,
        3646460000
    ],
    [
        1148480,
        3645705000
    ],
    [
        1148470,
        3650000000
    ],
    [
        1148460,
        3644377000
    ],
    [
        1148440,
        3671180000
    ],
    [
        1148430,
        3681231250
    ],
    [
        1148410,
        3702760000
    ],
    [
        1148400,
        3688000000
    ],
    [
        1148390,
        3657106250
    ],
    [
        1148380,
        3640030000
    ],
    [
        1148370,
        3638035000
    ],
    [
        1148340,
        3614000000
    ],
    [
        1148330,
        3560500000
    ],
    [
        1148300,
        3549963500
    ],
    [
        1148290,
        3556043500
    ],
    [
        1148270,
        3552715000
    ],
    [
        1148250,
        3544030000
    ],
    [
        1148170,
        3549892500
    ],
    [
        1148150,
        3535315000
    ],
    [
        1148120,
        3533000000
    ],
    [
        1148080,
        3529370000
    ],
    [
        1148070,
        3524860000
    ],
    [
        1148050,
        3512500000
    ],
    [
        1148030,
        3522160000
    ],
    [
        1148020,
        3521000000
    ],
    [
        1148010,
        3488995000
    ],
    [
        1147980,
        3480000000
    ],
    [
        1147950,
        3473880000
    ],
    [
        1147940,
        3471815000
    ],
    [
        1147930,
        3469346250
    ],
    [
        1147920,
        3467875000
    ],
    [
        1147910,
        3452850000
    ],
    [
        1147890,
        3434855000
    ],
    [
        1147880,
        3432855000
    ],
    [
        1147860,
        3439098500
    ],
    [
        1147850,
        3442730000
    ],
    [
        1147840,
        3464000000
    ],
    [
        1147780,
        3490175000
    ],
    [
        1147770,
        3482350000
    ],
    [
        1147760,
        3465500000
    ],
    [
        1147750,
        3457974500
    ],
    [
        1147740,
        3493876250
    ],
    [
        1147730,
        3451000000
    ],
    [
        1147720,
        3450035000
    ],
    [
        1147710,
        3448535000
    ],
    [
        1147700,
        3446658750
    ],
    [
        1147690,
        3434730000
    ],
    [
        1147660,
        3421705000
    ],
    [
        1147650,
        3412000000
    ],
    [
        1147640,
        3410000000
    ],
    [
        1147630,
        3416265000
    ],
    [
        1147620,
        3420450000
    ],
    [
        1147590,
        3422000000
    ],
    [
        1147570,
        3351510000
    ],
    [
        1147560,
        3347150000
    ],
    [
        1147550,
        3335000000
    ],
    [
        1147530,
        3239000000
    ],
    [
        1147520,
        3218000000
    ],
    [
        1147480,
        3214840000
    ],
    [
        1147470,
        3207304000
    ],
    [
        1147460,
        3203000000
    ],
    [
        1147430,
        3192310000
    ],
    [
        1147420,
        3182000000
    ],
    [
        1147400,
        3177780000
    ],
    [
        1147390,
        3125370000
    ],
    [
        1147380,
        3115500000
    ],
    [
        1147370,
        3109670250
    ],
    [
        1147360,
        3115500000
    ],
    [
        1147340,
        3117700000
    ],
    [
        1147330,
        3110813750
    ],
    [
        1147320,
        3107548750
    ],
    [
        1147310,
        3109620000
    ],
    [
        1147300,
        3113965000
    ],
    [
        1147290,
        3106777500
    ],
    [
        1147280,
        3098547500
    ],
    [
        1147270,
        3077270000
    ],
    [
        1147260,
        3026110000
    ],
    [
        1147240,
        3019000000
    ],
    [
        1147230,
        3033532000
    ],
    [
        1147200,
        3036510000
    ],
    [
        1147190,
        3035990000
    ],
    [
        1147180,
        3036065000
    ],
    [
        1147170,
        3036232500
    ],
    [
        1147160,
        3054617500
    ],
    [
        1147150,
        3056827500
    ],
    [
        1147130,
        3061000000
    ],
    [
        1146990,
        3122000000
    ],
    [
        1146970,
        3152405000
    ],
    [
        1146960,
        3155000000
    ],
    [
        1146940,
        3155500000
    ],
    [
        1146930,
        3155000000
    ],
    [
        1146920,
        3157255000
    ],
    [
        1146910,
        3156257500
    ],
    [
        1146900,
        3154405000
    ],
    [
        1146880,
        3153255000
    ],
    [
        1146870,
        3138195000
    ],
    [
        1146850,
        3122862000
    ],
    [
        1146840,
        3129183750
    ],
    [
        1146830,
        3130520000
    ],
    [
        1146800,
        3188135000
    ],
    [
        1146790,
        3191635000
    ],
    [
        1146770,
        3188070000
    ],
    [
        1146760,
        3184043750
    ],
    [
        1146740,
        3182570000
    ],
    [
        1146730,
        3182151250
    ],
    [
        1146710,
        3179900000
    ],
    [
        1146690,
        3174400000
    ],
    [
        1146680,
        3166580000
    ],
    [
        1146660,
        3168980000
    ],
    [
        1146650,
        3170085000
    ],
    [
        1146630,
        3174080000
    ],
    [
        1146620,
        3171000000
    ],
    [
        1146600,
        3168855000
    ],
    [
        1146580,
        3169000000
    ],
    [
        1146570,
        3185321250
    ],
    [
        1146550,
        3189110750
    ],
    [
        1146540,
        3181633750
    ],
    [
        1146530,
        3179233750
    ],
    [
        1146520,
        3181215000
    ],
    [
        1146510,
        3192363000
    ],
    [
        1146490,
        3201000000
    ],
    [
        1146480,
        3216295500
    ],
    [
        1146450,
        3226735000
    ],
    [
        1146440,
        3221016500
    ],
    [
        1146420,
        3210500000
    ],
    [
        1146410,
        3209927500
    ],
    [
        1146400,
        3201000000
    ],
    [
        1146370,
        3219650000
    ],
    [
        1146350,
        3220916000
    ],
    [
        1146340,
        3220982000
    ],
    [
        1146330,
        3241455000
    ],
    [
        1146320,
        3244047000
    ],
    [
        1146310,
        3233160000
    ],
    [
        1146300,
        3216084000
    ],
    [
        1146290,
        3252401000
    ],
    [
        1146280,
        3253001000
    ],
    [
        1146270,
        3258221000
    ],
    [
        1146190,
        3283865000
    ],
    [
        1146180,
        3283975000
    ],
    [
        1146170,
        3284000000
    ],
    [
        1146160,
        3281910000
    ],
    [
        1146150,
        3271244500
    ],
    [
        1146140,
        3261500000
    ],
    [
        1146120,
        3254045000
    ],
    [
        1146110,
        3250976250
    ],
    [
        1146100,
        3253716250
    ],
    [
        1146090,
        3253000000
    ],
    [
        1146080,
        3252000000
    ],
    [
        1146070,
        3258173750
    ],
    [
        1146060,
        3263031750
    ],
    [
        1146040,
        3257765000
    ],
    [
        1146030,
        3257181250
    ],
    [
        1146020,
        3258946250
    ],
    [
        1146010,
        3254345000
    ],
    [
        1146000,
        3246500000
    ],
    [
        1145990,
        3242403750
    ],
    [
        1145970,
        3250590000
    ],
    [
        1145960,
        3253020000
    ],
    [
        1145720,
        3247845000
    ],
    [
        1145710,
        3256010000
    ],
    [
        1145700,
        3256485750
    ],
    [
        1145670,
        3257500000
    ],
    [
        1145660,
        3257000000
    ],
    [
        1145630,
        3243345000
    ],
    [
        1145620,
        3236650000
    ],
    [
        1145600,
        3230000000
    ],
    [
        1145590,
        3230166250
    ],
    [
        1145580,
        3230131500
    ],
    [
        1145570,
        3229801250
    ],
    [
        1145550,
        3229734250
    ],
    [
        1145540,
        3238035000
    ],
    [
        1145520,
        3245430000
    ],
    [
        1145510,
        3253450500
    ],
    [
        1145480,
        3253658750
    ],
    [
        1145470,
        3253085000
    ],
    [
        1145460,
        3253000000
    ],
    [
        1145450,
        3252640000
    ],
    [
        1145440,
        3252220000
    ],
    [
        1145430,
        3273760000
    ],
    [
        1145410,
        3266636500
    ],
    [
        1145400,
        3242500000
    ],
    [
        1145380,
        3235500000
    ],
    [
        1145370,
        3234771000
    ],
    [
        1145350,
        3227665000
    ],
    [
        1145340,
        3225620000
    ],
    [
        1145330,
        3224000000
    ],
    [
        1145320,
        3234590000
    ],
    [
        1145300,
        3242641250
    ],
    [
        1145290,
        3233467500
    ],
    [
        1145260,
        3283500000
    ],
    [
        1145240,
        3323000000
    ],
    [
        1145160,
        3324092000
    ],
    [
        1145140,
        3321953500
    ],
    [
        1145130,
        3316295000
    ],
    [
        1145120,
        3313941250
    ],
    [
        1145100,
        3316644000
    ],
    [
        1145090,
        3319901250
    ],
    [
        1145080,
        3316925000
    ],
    [
        1145060,
        3324957500
    ],
    [
        1145050,
        3336420000
    ],
    [
        1145040,
        3337560000
    ],
    [
        1145030,
        3331610000
    ],
    [
        1145000,
        3324000000
    ],
    [
        1144990,
        3327540000
    ],
    [
        1144980,
        3327000000
    ],
    [
        1144970,
        3328329000
    ],
    [
        1144960,
        3326360000
    ],
    [
        1144950,
        3332258000
    ],
    [
        1144930,
        3334000000
    ],
    [
        1144920,
        3324840000
    ],
    [
        1144900,
        3334420000
    ],
    [
        1144890,
        3334000000
    ],
    [
        1144880,
        3338090000
    ],
    [
        1144860,
        3341920000
    ],
    [
        1144850,
        3347000000
    ],
    [
        1144650,
        3356810000
    ],
    [
        1144630,
        3347010000
    ],
    [
        1144410,
        3393000000
    ],
    [
        1144400,
        3391566000
    ],
    [
        1144380,
        3394000000
    ],
    [
        1144370,
        3429000000
    ],
    [
        1144230,
        3454000000
    ],
    [
        1144220,
        3429000000
    ],
    [
        1144210,
        3403620000
    ],
    [
        1144190,
        3404090000
    ],
    [
        1144180,
        3403620000
    ],
    [
        1144150,
        3406000000
    ],
    [
        1144140,
        3409650000
    ],
    [
        1144120,
        3435000000
    ],
    [
        1144070,
        3364000000
    ],
    [
        1144050,
        3415000000
    ],
    [
        1144040,
        3412257000
    ],
    [
        1144030,
        3425000000
    ],
    [
        1144020,
        3420000000
    ],
    [
        1144000,
        3425000000
    ],
    [
        1143990,
        3383330000
    ],
    [
        1143980,
        3386000000
    ],
    [
        1143860,
        3391000000
    ],
    [
        1143850,
        3414650000
    ],
    [
        1143840,
        3391000000
    ],
    [
        1143830,
        3388440000
    ],
    [
        1143820,
        3357430000
    ],
    [
        1143810,
        3390250000
    ],
    [
        1143790,
        3391000000
    ],
    [
        1143760,
        3368510000
    ],
    [
        1143750,
        3346102500
    ],
    [
        1143720,
        3334000000
    ],
    [
        1143710,
        3305012000
    ],
    [
        1143690,
        3288000000
    ],
    [
        1143670,
        3249000000
    ],
    [
        1143660,
        3244690000
    ],
    [
        1143640,
        3208000000
    ],
    [
        1143630,
        3198240000
    ],
    [
        1143610,
        3159520000
    ],
    [
        1143600,
        3179000000
    ],
    [
        1143590,
        3224000000
    ],
    [
        1143560,
        3224410000
    ],
    [
        1143550,
        3228160000
    ],
    [
        1143520,
        3331780000
    ],
    [
        1143510,
        3351220000
    ],
    [
        1143500,
        3488830000
    ],
    [
        1143480,
        3496602500
    ],
    [
        1143470,
        3499000000
    ],
    [
        1143460,
        3548440000
    ],
    [
        1143440,
        3386770000
    ],
    [
        1143430,
        3352000000
    ],
    [
        1143420,
        3341510000
    ],
    [
        1143410,
        3348630000
    ],
    [
        1143400,
        3316000000
    ],
    [
        1143390,
        3313560000
    ],
    [
        1143370,
        3215689000
    ],
    [
        1143360,
        3234750000
    ],
    [
        1143350,
        3288654000
    ],
    [
        1143340,
        3307000000
    ],
    [
        1143310,
        3315000000
    ],
    [
        1143290,
        3317760000
    ],
    [
        1143280,
        3351140000
    ],
    [
        1143270,
        3330835000
    ],
    [
        1143260,
        3325000000
    ],
    [
        1143250,
        3320830000
    ],
    [
        1143240,
        3317945000
    ],
    [
        1143220,
        3282000000
    ],
    [
        1143070,
        3277840000
    ],
    [
        1143050,
        3266740000
    ],
    [
        1143040,
        3257000000
    ],
    [
        1143030,
        3244130000
    ],
    [
        1143010,
        3225084000
    ],
    [
        1143000,
        3223000000
    ],
    [
        1142980,
        3169720000
    ],
    [
        1142970,
        3166000000
    ],
    [
        1142950,
        3203000000
    ],
    [
        1142930,
        3206340000
    ],
    [
        1142920,
        3223000000
    ],
    [
        1142910,
        3272350000
    ],
    [
        1142900,
        3278000000
    ],
    [
        1142870,
        3337819000
    ],
    [
        1142860,
        3371000000
    ],
    [
        1142840,
        3370610000
    ],
    [
        1142830,
        3408650000
    ],
    [
        1142820,
        3426000000
    ],
    [
        1142810,
        3385170000
    ],
    [
        1142760,
        3374000000
    ],
    [
        1142740,
        3364580000
    ],
    [
        1142730,
        3356000000
    ],
    [
        1142720,
        3352000000
    ],
    [
        1142700,
        3329000000
    ],
    [
        1142690,
        3328765000
    ],
    [
        1142680,
        3328464000
    ],
    [
        1142660,
        3338000000
    ],
    [
        1142650,
        3300100000
    ],
    [
        1142640,
        3299000000
    ],
    [
        1142630,
        3257690000
    ],
    [
        1142620,
        3242000000
    ],
    [
        1142600,
        3203052000
    ],
    [
        1142590,
        3198550000
    ],
    [
        1142560,
        3195000000
    ],
    [
        1142550,
        3229695000
    ],
    [
        1142540,
        3239310000
    ],
    [
        1142530,
        3239530000
    ],
    [
        1142520,
        3248000000
    ],
    [
        1142510,
        3244595000
    ],
    [
        1142500,
        3245144250
    ],
    [
        1142490,
        3231090000
    ],
    [
        1142480,
        3196875000
    ],
    [
        1142460,
        3213500000
    ],
    [
        1142450,
        3230885500
    ],
    [
        1142440,
        3230975500
    ],
    [
        1142430,
        3234385500
    ],
    [
        1142420,
        3237860500
    ],
    [
        1142380,
        3239000000
    ],
    [
        1142370,
        3242842500
    ],
    [
        1142360,
        3246325000
    ],
    [
        1142350,
        3246938750
    ],
    [
        1142220,
        3249000000
    ],
    [
        1142200,
        3249630000
    ],
    [
        1142190,
        3240617500
    ],
    [
        1142180,
        3236431250
    ],
    [
        1142070,
        3279620000
    ],
    [
        1142060,
        3315908500
    ],
    [
        1142030,
        3335965000
    ],
    [
        1141990,
        3384000000
    ],
    [
        1141960,
        3329000000
    ],
    [
        1141950,
        3251500000
    ],
    [
        1141740,
        3206515000
    ],
    [
        1141730,
        3205989000
    ],
    [
        1141710,
        3189000000
    ],
    [
        1141540,
        3228002500
    ],
    [
        1141520,
        3229000000
    ],
    [
        1141510,
        3220500000
    ],
    [
        1141480,
        3219000000
    ],
    [
        1141470,
        3218195500
    ],
    [
        1141460,
        3217920000
    ],
    [
        1141420,
        3168995000
    ],
    [
        1141400,
        3158970000
    ],
    [
        1141360,
        3150500000
    ],
    [
        1141350,
        3150296500
    ],
    [
        1141340,
        3134428750
    ],
    [
        1141310,
        3129000000
    ],
    [
        1141280,
        3131705000
    ],
    [
        1141270,
        3133500000
    ],
    [
        1141250,
        3132510000
    ],
    [
        1141230,
        3131390000
    ],
    [
        1141220,
        3132945000
    ],
    [
        1141210,
        3132333500
    ],
    [
        1141190,
        3137500000
    ],
    [
        1141180,
        3143911250
    ],
    [
        1141170,
        3147411000
    ],
    [
        1141160,
        3141493750
    ],
    [
        1141140,
        3139000000
    ],
    [
        1141120,
        3135000000
    ],
    [
        1141100,
        3135248750
    ],
    [
        1141090,
        3136878750
    ],
    [
        1141070,
        3159473750
    ],
    [
        1141060,
        3161310000
    ],
    [
        1141040,
        3088740000
    ],
    [
        1141030,
        3086525000
    ],
    [
        1141010,
        3083000000
    ],
    [
        1140980,
        2866000000
    ],
    [
        1140970,
        2863940000
    ],
    [
        1140960,
        2850430000
    ],
    [
        1140950,
        2786280000
    ],
    [
        1140940,
        2757325000
    ],
    [
        1140890,
        2728000000
    ],
    [
        1140880,
        2710095000
    ],
    [
        1140870,
        2707219500
    ],
    [
        1140860,
        2697608750
    ],
    [
        1140850,
        2699671000
    ],
    [
        1140840,
        2696500000
    ],
    [
        1140830,
        2696000000
    ],
    [
        1140820,
        2694631000
    ],
    [
        1140810,
        2696047000
    ],
    [
        1140800,
        2687181250
    ],
    [
        1140790,
        2687720000
    ],
    [
        1140780,
        2694502500
    ],
    [
        1140770,
        2700647000
    ],
    [
        1140760,
        2701971666
    ],
    [
        1140740,
        2697000000
    ],
    [
        1140730,
        2706500000
    ],
    [
        1140710,
        2723000000
    ],
    [
        1140700,
        2731608500
    ],
    [
        1140690,
        2751797000
    ],
    [
        1140680,
        2751955750
    ],
    [
        1140670,
        2747850000
    ],
    [
        1140660,
        2745790000
    ],
    [
        1140650,
        2744195000
    ],
    [
        1140640,
        2740224000
    ],
    [
        1140630,
        2732228000
    ],
    [
        1140620,
        2730870000
    ],
    [
        1140600,
        2731000000
    ],
    [
        1140580,
        2780000000
    ],
    [
        1140570,
        2782000000
    ],
    [
        1140560,
        2779677500
    ],
    [
        1140540,
        2776605750
    ],
    [
        1140530,
        2777454500
    ],
    [
        1140520,
        2784112500
    ],
    [
        1140510,
        2787965000
    ],
    [
        1140500,
        2789255000
    ],
    [
        1140490,
        2781121250
    ],
    [
        1140470,
        2779443000
    ],
    [
        1140460,
        2783643000
    ],
    [
        1140450,
        2789045000
    ],
    [
        1140430,
        2790000000
    ],
    [
        1140410,
        2788502500
    ],
    [
        1140400,
        2793172000
    ],
    [
        1140380,
        2793687500
    ],
    [
        1140300,
        2783595000
    ],
    [
        1140290,
        2781500000
    ],
    [
        1140260,
        2781325000
    ],
    [
        1140230,
        2781535000
    ],
    [
        1140220,
        2778297000
    ],
    [
        1140190,
        2784450000
    ],
    [
        1140180,
        2786840000
    ],
    [
        1140170,
        2792595000
    ],
    [
        1140150,
        2795000000
    ],
    [
        1140140,
        2794105000
    ],
    [
        1139970,
        2791509000
    ],
    [
        1139960,
        2789914000
    ],
    [
        1139890,
        2788392500
    ],
    [
        1139880,
        2785425000
    ],
    [
        1139870,
        2781000000
    ],
    [
        1139860,
        2780000000
    ],
    [
        1139850,
        2771785000
    ],
    [
        1139840,
        2768959000
    ],
    [
        1139830,
        2771066000
    ],
    [
        1139820,
        2776507500
    ],
    [
        1139810,
        2777169500
    ],
    [
        1139800,
        2788460000
    ],
    [
        1139790,
        2788907500
    ],
    [
        1139780,
        2795842000
    ],
    [
        1139770,
        2804497000
    ],
    [
        1139760,
        2825200000
    ],
    [
        1139750,
        2829114500
    ],
    [
        1139740,
        2834385000
    ],
    [
        1139730,
        2837375000
    ],
    [
        1139720,
        2831350000
    ],
    [
        1139710,
        2792533750
    ],
    [
        1139690,
        2784239500
    ],
    [
        1139680,
        2768135000
    ],
    [
        1139670,
        2756000000
    ],
    [
        1139660,
        2745771250
    ],
    [
        1139650,
        2721715000
    ],
    [
        1139640,
        2718802500
    ],
    [
        1139630,
        2708500000
    ],
    [
        1139620,
        2707500000
    ],
    [
        1139610,
        2707785000
    ],
    [
        1139600,
        2706000000
    ],
    [
        1139590,
        2677632500
    ],
    [
        1139570,
        2676583500
    ],
    [
        1139560,
        2671900000
    ],
    [
        1139530,
        2652000000
    ],
    [
        1139510,
        2722460000
    ],
    [
        1139480,
        2734275000
    ],
    [
        1139470,
        2725210000
    ],
    [
        1139450,
        2740682500
    ],
    [
        1139440,
        2748935000
    ],
    [
        1139430,
        2739906000
    ],
    [
        1139420,
        2749985000
    ],
    [
        1139400,
        2751013500
    ],
    [
        1139390,
        2743029000
    ],
    [
        1139380,
        2735625000
    ],
    [
        1139370,
        2735665000
    ],
    [
        1139360,
        2731625000
    ],
    [
        1139350,
        2733000000
    ],
    [
        1139340,
        2752000000
    ],
    [
        1139330,
        2761000000
    ],
    [
        1139300,
        2751000000
    ],
    [
        1139290,
        2745000000
    ],
    [
        1139280,
        2730000000
    ],
    [
        1139270,
        2729580000
    ],
    [
        1139250,
        2721600000
    ],
    [
        1139240,
        2745000000
    ],
    [
        1139230,
        2726005000
    ],
    [
        1139220,
        2720960000
    ],
    [
        1139210,
        2629000000
    ],
    [
        1139200,
        2621491000
    ],
    [
        1138720,
        2614277500
    ],
    [
        1138710,
        2618310000
    ],
    [
        1138700,
        2624201000
    ],
    [
        1138690,
        2628170000
    ],
    [
        1138680,
        2629000000
    ],
    [
        1138670,
        2615835000
    ],
    [
        1138660,
        2609000000
    ],
    [
        1138650,
        2606000000
    ],
    [
        1138640,
        2616000000
    ],
    [
        1138610,
        2627000000
    ],
    [
        1138600,
        2606000000
    ],
    [
        1138580,
        2618310000
    ],
    [
        1138560,
        2629000000
    ],
    [
        1138540,
        2628000000
    ],
    [
        1138530,
        2655430000
    ],
    [
        1138520,
        2660000000
    ],
    [
        1138510,
        2660594000
    ],
    [
        1138500,
        2660000000
    ],
    [
        1138490,
        2629440000
    ],
    [
        1138480,
        2621192000
    ],
    [
        1138470,
        2607000000
    ],
    [
        1138450,
        2605390000
    ],
    [
        1138440,
        2611000000
    ],
    [
        1138420,
        2622665000
    ],
    [
        1138410,
        2622445000
    ],
    [
        1138400,
        2634840000
    ],
    [
        1138380,
        2628000000
    ],
    [
        1138370,
        2624390000
    ],
    [
        1138350,
        2609550000
    ],
    [
        1138340,
        2607150000
    ],
    [
        1138330,
        2622305000
    ],
    [
        1138310,
        2666445000
    ],
    [
        1138200,
        2666785000
    ],
    [
        1138190,
        2715289000
    ],
    [
        1138180,
        2699796750
    ],
    [
        1138170,
        2686738000
    ],
    [
        1138160,
        2691930000
    ],
    [
        1138150,
        2688345000
    ],
    [
        1138130,
        2689561500
    ],
    [
        1138120,
        2689736500
    ],
    [
        1138110,
        2695217500
    ],
    [
        1138090,
        2728415000
    ],
    [
        1137980,
        2893995000
    ],
    [
        1137970,
        2887615000
    ],
    [
        1137960,
        2885720000
    ],
    [
        1137950,
        2884225000
    ],
    [
        1137940,
        2884725000
    ],
    [
        1137930,
        2889075000
    ],
    [
        1137920,
        2893750000
    ],
    [
        1137910,
        2912780000
    ],
    [
        1137900,
        2921000000
    ],
    [
        1137890,
        2929240000
    ],
    [
        1137880,
        2931680000
    ],
    [
        1137870,
        2929240000
    ],
    [
        1137850,
        2920080000
    ],
    [
        1137840,
        2920165000
    ],
    [
        1137830,
        2915485000
    ],
    [
        1137820,
        2920000000
    ],
    [
        1137810,
        2920506250
    ],
    [
        1137790,
        2938121000
    ],
    [
        1137780,
        2948257500
    ],
    [
        1137760,
        2959543000
    ],
    [
        1137750,
        2971323750
    ],
    [
        1137690,
        2967748750
    ],
    [
        1137680,
        2974530000
    ],
    [
        1137670,
        2974830000
    ],
    [
        1137660,
        2925487000
    ],
    [
        1137650,
        2906197500
    ],
    [
        1137640,
        2891605000
    ],
    [
        1137620,
        2903000000
    ],
    [
        1137610,
        2903922000
    ],
    [
        1137600,
        2898465000
    ],
    [
        1137590,
        2896965000
    ],
    [
        1137580,
        2903000000
    ],
    [
        1137560,
        2917250000
    ],
    [
        1137550,
        2918692500
    ],
    [
        1137530,
        2928917250
    ],
    [
        1137510,
        2927850000
    ],
    [
        1137500,
        2915020000
    ],
    [
        1137490,
        2917741500
    ],
    [
        1137480,
        2917945000
    ],
    [
        1137470,
        2917796500
    ],
    [
        1137460,
        2917565000
    ],
    [
        1137450,
        2917498500
    ],
    [
        1137440,
        2911642500
    ],
    [
        1137420,
        2906036500
    ],
    [
        1137410,
        2904450000
    ],
    [
        1137400,
        2905000000
    ],
    [
        1137390,
        2904125000
    ],
    [
        1137380,
        2902565000
    ],
    [
        1137370,
        2893730000
    ],
    [
        1137360,
        2893000000
    ],
    [
        1137350,
        2892675000
    ],
    [
        1137340,
        2892444000
    ],
    [
        1137330,
        2897495000
    ],
    [
        1137320,
        2902000000
    ],
    [
        1137310,
        2904283750
    ],
    [
        1137300,
        2910656750
    ],
    [
        1137290,
        2910247500
    ],
    [
        1137280,
        2939805000
    ],
    [
        1137270,
        2946765000
    ],
    [
        1137250,
        2958500000
    ],
    [
        1137240,
        2973705000
    ],
    [
        1137230,
        2977830000
    ],
    [
        1137210,
        2986090000
    ],
    [
        1137200,
        2988894750
    ],
    [
        1137190,
        2991018500
    ],
    [
        1137180,
        2990749250
    ],
    [
        1137170,
        2986388000
    ],
    [
        1137160,
        2984105000
    ],
    [
        1137150,
        2989671750
    ],
    [
        1137120,
        2994015000
    ],
    [
        1137110,
        2995020750
    ],
    [
        1137100,
        2994102000
    ],
    [
        1137090,
        3000250000
    ],
    [
        1137080,
        3000901250
    ],
    [
        1137070,
        3001000000
    ],
    [
        1137060,
        3003115000
    ],
    [
        1137040,
        3005770000
    ],
    [
        1137030,
        3006000000
    ],
    [
        1137010,
        3007401000
    ],
    [
        1136990,
        3006000000
    ],
    [
        1136980,
        3004000000
    ],
    [
        1136970,
        3008160000
    ],
    [
        1136960,
        3008733000
    ],
    [
        1136940,
        3006769000
    ],
    [
        1136920,
        2997000000
    ],
    [
        1136910,
        3000000000
    ],
    [
        1136900,
        3002000000
    ],
    [
        1136890,
        3009190000
    ],
    [
        1136860,
        3016000000
    ],
    [
        1136850,
        3024330000
    ],
    [
        1136840,
        3011000000
    ],
    [
        1136830,
        3009000000
    ],
    [
        1136810,
        2971000000
    ],
    [
        1136790,
        2945230000
    ],
    [
        1136780,
        2941250000
    ],
    [
        1136760,
        2941000000
    ],
    [
        1136750,
        2941413000
    ],
    [
        1136730,
        2931810000
    ],
    [
        1136720,
        2930500000
    ],
    [
        1136710,
        2930000000
    ],
    [
        1136690,
        2931350000
    ],
    [
        1136680,
        2932737000
    ],
    [
        1136660,
        2936237000
    ],
    [
        1136650,
        2937550000
    ],
    [
        1136620,
        2943000000
    ],
    [
        1136590,
        2934130000
    ],
    [
        1136570,
        2932500000
    ],
    [
        1136560,
        2931723750
    ],
    [
        1136540,
        2927000000
    ],
    [
        1136530,
        2924610000
    ],
    [
        1136520,
        2919570000
    ],
    [
        1136510,
        2918000000
    ],
    [
        1136500,
        2917720000
    ],
    [
        1136480,
        2916530000
    ],
    [
        1136460,
        2910000000
    ],
    [
        1136450,
        2905150000
    ],
    [
        1136440,
        2902269000
    ],
    [
        1136430,
        2895903000
    ],
    [
        1136420,
        2892413000
    ],
    [
        1136410,
        2890000000
    ],
    [
        1136400,
        2887905500
    ],
    [
        1136390,
        2886699500
    ],
    [
        1136380,
        2894673500
    ],
    [
        1136290,
        2899918500
    ],
    [
        1136280,
        2905639500
    ],
    [
        1136270,
        2906598750
    ],
    [
        1136260,
        2909981250
    ],
    [
        1136250,
        2911695000
    ],
    [
        1136240,
        2906410000
    ],
    [
        1136230,
        2905125000
    ],
    [
        1136220,
        2903253750
    ],
    [
        1136210,
        2906398750
    ],
    [
        1136200,
        2907518750
    ],
    [
        1136190,
        2903810000
    ],
    [
        1136180,
        2899415000
    ],
    [
        1136170,
        2896932500
    ],
    [
        1136160,
        2895786500
    ],
    [
        1136150,
        2890933000
    ],
    [
        1136140,
        2889122500
    ],
    [
        1136130,
        2890854750
    ],
    [
        1136120,
        2898665000
    ],
    [
        1136110,
        2899670500
    ],
    [
        1136100,
        2901907500
    ],
    [
        1136090,
        2902704500
    ],
    [
        1136080,
        2911590000
    ],
    [
        1136050,
        2922462500
    ],
    [
        1136020,
        2942425000
    ],
    [
        1136010,
        2943620000
    ],
    [
        1136000,
        2936500000
    ],
    [
        1135980,
        2935720000
    ],
    [
        1135970,
        2934513750
    ],
    [
        1135950,
        2941178750
    ],
    [
        1135940,
        2953000000
    ],
    [
        1135920,
        2960660000
    ],
    [
        1135910,
        2966660000
    ],
    [
        1135890,
        2971882500
    ],
    [
        1135880,
        2972440000
    ],
    [
        1135870,
        2975520000
    ],
    [
        1135850,
        2972883750
    ],
    [
        1135840,
        2971470250
    ],
    [
        1135830,
        2974507500
    ],
    [
        1135810,
        2982472500
    ],
    [
        1135800,
        2986010000
    ],
    [
        1135790,
        2980000000
    ],
    [
        1135780,
        2979580000
    ],
    [
        1135770,
        2974640000
    ],
    [
        1135760,
        2973378250
    ],
    [
        1135740,
        2968835000
    ],
    [
        1135730,
        2964920000
    ],
    [
        1135710,
        2952529500
    ],
    [
        1135700,
        2951059500
    ],
    [
        1135680,
        2944338750
    ],
    [
        1135670,
        2944410750
    ],
    [
        1135640,
        2931582500
    ],
    [
        1135630,
        2946265500
    ],
    [
        1135620,
        2945880500
    ],
    [
        1135600,
        2937380500
    ],
    [
        1135580,
        2921285750
    ],
    [
        1135570,
        2919547000
    ],
    [
        1135560,
        2939930000
    ],
    [
        1135550,
        2945502500
    ],
    [
        1135540,
        2945510000
    ],
    [
        1135520,
        2954516250
    ],
    [
        1135510,
        2953222500
    ],
    [
        1135500,
        2952052500
    ],
    [
        1135490,
        2954007000
    ],
    [
        1135470,
        2954448500
    ],
    [
        1135460,
        2957167500
    ],
    [
        1135450,
        2971205000
    ],
    [
        1135430,
        2971700500
    ],
    [
        1135420,
        2972136000
    ],
    [
        1135400,
        2980440000
    ],
    [
        1135390,
        2979036250
    ],
    [
        1135380,
        2988152500
    ],
    [
        1135370,
        2987086250
    ],
    [
        1135360,
        2975000000
    ],
    [
        1135340,
        2972960000
    ],
    [
        1135330,
        2970000000
    ],
    [
        1135300,
        2963120000
    ],
    [
        1135290,
        2953000000
    ],
    [
        1135190,
        2954000000
    ],
    [
        1135180,
        2950900000
    ],
    [
        1135170,
        2964100000
    ],
    [
        1135160,
        2965000000
    ],
    [
        1135140,
        2966000000
    ],
    [
        1135130,
        2965000000
    ],
    [
        1135100,
        2961000000
    ],
    [
        1135080,
        2959090000
    ],
    [
        1135060,
        2985000000
    ],
    [
        1135040,
        2987000000
    ],
    [
        1135010,
        2958330000
    ],
    [
        1135000,
        2949024000
    ],
    [
        1134990,
        2946667500
    ],
    [
        1134980,
        2935559000
    ],
    [
        1134960,
        2938000000
    ],
    [
        1134930,
        2930535000
    ],
    [
        1134910,
        2950000000
    ],
    [
        1134900,
        2937842500
    ],
    [
        1134890,
        2933812000
    ],
    [
        1134870,
        2939560000
    ],
    [
        1134860,
        2916000000
    ],
    [
        1134850,
        2914000000
    ],
    [
        1134840,
        2905331000
    ],
    [
        1134820,
        2901075000
    ],
    [
        1134810,
        2914000000
    ],
    [
        1134750,
        2916000000
    ],
    [
        1134740,
        2910490000
    ],
    [
        1134720,
        2904000000
    ],
    [
        1134710,
        2903572500
    ],
    [
        1134700,
        2903000000
    ],
    [
        1134630,
        2894000000
    ],
    [
        1134590,
        2872000000
    ],
    [
        1134580,
        2863480000
    ],
    [
        1134530,
        2842000000
    ],
    [
        1134520,
        2837700000
    ],
    [
        1134510,
        2835140000
    ],
    [
        1134500,
        2824092000
    ],
    [
        1134480,
        2816000000
    ],
    [
        1134470,
        2828740000
    ],
    [
        1134460,
        2836420000
    ],
    [
        1134450,
        2830393000
    ],
    [
        1134440,
        2813950000
    ],
    [
        1134430,
        2816490000
    ],
    [
        1134420,
        2835140000
    ],
    [
        1134410,
        2902399000
    ],
    [
        1134400,
        2917091000
    ],
    [
        1134390,
        2898000000
    ],
    [
        1134380,
        2893544000
    ],
    [
        1134370,
        2887000000
    ],
    [
        1134360,
        2894000000
    ],
    [
        1134350,
        2893532000
    ],
    [
        1134340,
        2890000000
    ],
    [
        1134310,
        2894000000
    ],
    [
        1134290,
        2914510000
    ],
    [
        1134280,
        2925970000
    ],
    [
        1134260,
        2930042500
    ],
    [
        1134230,
        2935000000
    ],
    [
        1134220,
        2938965000
    ],
    [
        1134210,
        2951234000
    ],
    [
        1134200,
        2954070000
    ],
    [
        1134190,
        2958010000
    ],
    [
        1134180,
        2918230000
    ],
    [
        1134170,
        2904787500
    ],
    [
        1134160,
        2895172500
    ],
    [
        1134150,
        2891672500
    ],
    [
        1134140,
        2890465000
    ],
    [
        1134130,
        2896005000
    ],
    [
        1134120,
        2907830000
    ],
    [
        1134100,
        2914739500
    ],
    [
        1134090,
        2913092500
    ],
    [
        1134080,
        2902000000
    ],
    [
        1134070,
        2899297500
    ],
    [
        1134060,
        2905636250
    ],
    [
        1134050,
        2902461250
    ],
    [
        1134040,
        2864670000
    ],
    [
        1134030,
        2854760000
    ],
    [
        1134020,
        2852670000
    ],
    [
        1134010,
        2850045000
    ],
    [
        1134000,
        2846031250
    ],
    [
        1133990,
        2850475000
    ],
    [
        1133980,
        2845515500
    ],
    [
        1133960,
        2876000000
    ],
    [
        1133950,
        2878013000
    ],
    [
        1133940,
        2892838500
    ],
    [
        1133930,
        2943471500
    ],
    [
        1133920,
        2937471500
    ],
    [
        1133910,
        2937265000
    ],
    [
        1133890,
        2895410000
    ],
    [
        1133880,
        2927448750
    ],
    [
        1133870,
        2982500000
    ],
    [
        1133860,
        2983016250
    ],
    [
        1133850,
        2984725000
    ],
    [
        1133830,
        2980500000
    ],
    [
        1133810,
        2971520000
    ],
    [
        1133800,
        2968520000
    ],
    [
        1133790,
        2975110000
    ],
    [
        1133780,
        2978110000
    ],
    [
        1133770,
        2981000000
    ],
    [
        1133750,
        2968500000
    ],
    [
        1133740,
        2959175000
    ],
    [
        1133690,
        2941645000
    ],
    [
        1133680,
        2937660000
    ],
    [
        1133670,
        2933732000
    ],
    [
        1133650,
        2923000000
    ],
    [
        1133640,
        2928767500
    ],
    [
        1133630,
        2928500000
    ],
    [
        1133620,
        2927704500
    ],
    [
        1133600,
        2955500000
    ],
    [
        1133590,
        2956000000
    ],
    [
        1133580,
        2952910000
    ],
    [
        1133530,
        2949335000
    ],
    [
        1133520,
        2953715000
    ],
    [
        1133500,
        2903920000
    ],
    [
        1133490,
        2895920000
    ],
    [
        1133480,
        2870560000
    ],
    [
        1133460,
        2866000000
    ],
    [
        1133450,
        2868851000
    ],
    [
        1133440,
        2859715000
    ],
    [
        1133430,
        2855215000
    ],
    [
        1133420,
        2876215000
    ],
    [
        1133410,
        2894500000
    ],
    [
        1133400,
        2895000000
    ],
    [
        1133370,
        2899500000
    ],
    [
        1133340,
        2898780000
    ],
    [
        1133310,
        2905500000
    ],
    [
        1133300,
        2905190000
    ],
    [
        1133290,
        2899500000
    ],
    [
        1133280,
        2898565000
    ],
    [
        1133270,
        2896270000
    ],
    [
        1133260,
        2894000000
    ],
    [
        1133250,
        2895770000
    ],
    [
        1133240,
        2895261500
    ],
    [
        1133230,
        2894000000
    ],
    [
        1133210,
        2895261500
    ],
    [
        1133200,
        2896090000
    ],
    [
        1133180,
        2898140000
    ],
    [
        1133170,
        2906000000
    ],
    [
        1133160,
        2911631250
    ],
    [
        1133140,
        2921000000
    ],
    [
        1133130,
        2947425000
    ],
    [
        1133120,
        2951052000
    ],
    [
        1133110,
        2953000000
    ],
    [
        1133100,
        2949500000
    ],
    [
        1133090,
        2948108500
    ],
    [
        1133080,
        2952000000
    ],
    [
        1133060,
        2927000000
    ],
    [
        1133040,
        2919585000
    ],
    [
        1133030,
        2911475000
    ],
    [
        1133010,
        2923285000
    ],
    [
        1133000,
        2927000000
    ],
    [
        1132990,
        2915500000
    ],
    [
        1132970,
        2910000000
    ],
    [
        1132960,
        2911970000
    ],
    [
        1132910,
        2910000000
    ],
    [
        1132900,
        2883280000
    ],
    [
        1132890,
        2884886500
    ],
    [
        1132880,
        2886715000
    ],
    [
        1132870,
        2856540000
    ],
    [
        1132830,
        2853325000
    ],
    [
        1132820,
        2837333750
    ],
    [
        1132800,
        2828347750
    ],
    [
        1132790,
        2811730000
    ],
    [
        1132780,
        2827500000
    ],
    [
        1132760,
        2839570000
    ],
    [
        1132750,
        2839500000
    ],
    [
        1132740,
        2845000000
    ],
    [
        1132730,
        2848260000
    ],
    [
        1132720,
        2857215000
    ],
    [
        1132710,
        2855969500
    ],
    [
        1132700,
        2851819500
    ],
    [
        1132690,
        2852414500
    ],
    [
        1132670,
        2846000000
    ],
    [
        1132660,
        2852335000
    ],
    [
        1132650,
        2857975000
    ],
    [
        1132640,
        2859633000
    ],
    [
        1132630,
        2860360000
    ],
    [
        1132620,
        2856796250
    ],
    [
        1132610,
        2855151250
    ],
    [
        1132600,
        2863275000
    ],
    [
        1132590,
        2864477000
    ],
    [
        1132580,
        2873679000
    ],
    [
        1132570,
        2860742500
    ],
    [
        1132560,
        2850800500
    ],
    [
        1132550,
        2850000000
    ],
    [
        1132540,
        2851281500
    ],
    [
        1132530,
        2855181500
    ],
    [
        1132520,
        2841745000
    ],
    [
        1132510,
        2833490000
    ],
    [
        1132500,
        2830487000
    ],
    [
        1132490,
        2832000000
    ],
    [
        1132480,
        2831197500
    ],
    [
        1132470,
        2836460000
    ],
    [
        1132460,
        2832377000
    ],
    [
        1132450,
        2822000000
    ],
    [
        1132440,
        2838792500
    ],
    [
        1132430,
        2845475500
    ],
    [
        1132420,
        2828455000
    ],
    [
        1132410,
        2825867500
    ],
    [
        1132400,
        2847545000
    ],
    [
        1132390,
        2875165000
    ],
    [
        1132290,
        2976385000
    ],
    [
        1132280,
        2964063250
    ],
    [
        1132270,
        2955991000
    ],
    [
        1132260,
        2955000000
    ],
    [
        1132250,
        2954677500
    ],
    [
        1132240,
        2954500000
    ],
    [
        1132230,
        2959605000
    ],
    [
        1132220,
        2960065000
    ],
    [
        1132210,
        2961500000
    ],
    [
        1132200,
        2964000000
    ],
    [
        1132190,
        2967287500
    ],
    [
        1132180,
        2968557500
    ],
    [
        1132170,
        2967145000
    ],
    [
        1132160,
        2945810500
    ],
    [
        1132150,
        2943580000
    ],
    [
        1132140,
        2943672500
    ],
    [
        1132130,
        2942871250
    ],
    [
        1132120,
        2943591250
    ],
    [
        1132110,
        2943877500
    ],
    [
        1132100,
        2957170000
    ],
    [
        1132090,
        2974000000
    ],
    [
        1132080,
        2978445000
    ],
    [
        1132040,
        2986870000
    ],
    [
        1132030,
        2976205000
    ],
    [
        1132020,
        2985460000
    ],
    [
        1132010,
        2983275000
    ],
    [
        1132000,
        2998190000
    ],
    [
        1131990,
        3003670000
    ],
    [
        1131980,
        3006500000
    ],
    [
        1131960,
        3001000000
    ],
    [
        1131950,
        2986000000
    ],
    [
        1131940,
        2995415000
    ],
    [
        1131930,
        3001000000
    ],
    [
        1131920,
        3005240000
    ],
    [
        1131910,
        3007817500
    ],
    [
        1131900,
        3007500000
    ],
    [
        1131890,
        3015255000
    ],
    [
        1131880,
        3018345000
    ],
    [
        1131870,
        3017646000
    ],
    [
        1131850,
        3016932000
    ],
    [
        1131830,
        3018568750
    ],
    [
        1131820,
        3019658750
    ],
    [
        1131810,
        3021000000
    ],
    [
        1131800,
        3022000000
    ],
    [
        1131790,
        3027734000
    ],
    [
        1131780,
        3029961250
    ],
    [
        1131770,
        3026419000
    ],
    [
        1131750,
        3021860000
    ],
    [
        1131740,
        3018185000
    ],
    [
        1131730,
        3021860000
    ],
    [
        1131710,
        3019500000
    ],
    [
        1131700,
        3020500000
    ],
    [
        1131690,
        3021082000
    ],
    [
        1131670,
        3017725000
    ],
    [
        1131660,
        3016000000
    ],
    [
        1131650,
        3009017000
    ],
    [
        1131640,
        3004348000
    ],
    [
        1131630,
        3002546250
    ],
    [
        1131620,
        3002611250
    ],
    [
        1131610,
        2999611250
    ],
    [
        1131600,
        3002611250
    ],
    [
        1131590,
        3006165000
    ],
    [
        1131570,
        3010673750
    ],
    [
        1131560,
        3015641250
    ],
    [
        1131550,
        3023500000
    ],
    [
        1131540,
        3022496500
    ],
    [
        1131530,
        3028000000
    ],
    [
        1131520,
        3040721250
    ],
    [
        1131510,
        3043587000
    ],
    [
        1131500,
        3046378500
    ],
    [
        1131490,
        3059310000
    ],
    [
        1131480,
        3044015000
    ],
    [
        1131470,
        3034785000
    ],
    [
        1131460,
        3028240000
    ],
    [
        1131450,
        3021174500
    ],
    [
        1131440,
        3019695000
    ],
    [
        1131430,
        3016951500
    ],
    [
        1131420,
        3006302000
    ],
    [
        1131400,
        3006000000
    ],
    [
        1131390,
        3018500000
    ],
    [
        1131380,
        3039685000
    ],
    [
        1131370,
        3040522500
    ],
    [
        1131350,
        3047175000
    ],
    [
        1131340,
        3037685000
    ],
    [
        1131330,
        3040353500
    ],
    [
        1131320,
        3044491250
    ],
    [
        1131290,
        3055000000
    ],
    [
        1131280,
        3060930750
    ],
    [
        1131270,
        3068773750
    ],
    [
        1131260,
        3058142500
    ],
    [
        1131250,
        3060982500
    ],
    [
        1131240,
        3057180000
    ],
    [
        1131230,
        3050002500
    ],
    [
        1131220,
        3044787500
    ],
    [
        1131210,
        3037287500
    ],
    [
        1131200,
        3044315000
    ],
    [
        1131190,
        3044385000
    ],
    [
        1131180,
        3054400000
    ],
    [
        1131170,
        3059530000
    ],
    [
        1131160,
        3061455000
    ],
    [
        1131090,
        3048349000
    ],
    [
        1131080,
        3034120000
    ],
    [
        1131070,
        3033367000
    ],
    [
        1131060,
        3028585000
    ],
    [
        1131050,
        3035250000
    ],
    [
        1131040,
        3034340000
    ],
    [
        1131030,
        3033570000
    ],
    [
        1131020,
        3032115000
    ],
    [
        1131010,
        3024185000
    ],
    [
        1131000,
        3021300000
    ],
    [
        1130990,
        3034925000
    ],
    [
        1130980,
        3037395000
    ],
    [
        1130970,
        3038000000
    ],
    [
        1130960,
        3044408500
    ],
    [
        1130950,
        3044818500
    ],
    [
        1130940,
        3038142500
    ],
    [
        1130920,
        3077000000
    ],
    [
        1130910,
        3083470000
    ],
    [
        1130900,
        3084030000
    ],
    [
        1130890,
        3083480000
    ],
    [
        1130880,
        3081135000
    ],
    [
        1130870,
        3063640000
    ],
    [
        1130860,
        3059000000
    ],
    [
        1130850,
        3017540000
    ],
    [
        1130840,
        3003000000
    ],
    [
        1130820,
        2993000000
    ],
    [
        1130810,
        2999307500
    ],
    [
        1130790,
        3004000000
    ],
    [
        1130780,
        3015400000
    ],
    [
        1130770,
        3004000000
    ],
    [
        1130760,
        3000000000
    ],
    [
        1130750,
        2983000000
    ],
    [
        1130740,
        2982815000
    ],
    [
        1130730,
        2985850000
    ],
    [
        1130720,
        2986990000
    ],
    [
        1130710,
        2991960000
    ],
    [
        1130700,
        2999873000
    ],
    [
        1130680,
        3001560000
    ],
    [
        1130670,
        3003615000
    ],
    [
        1130660,
        3001560000
    ],
    [
        1130640,
        2996700000
    ],
    [
        1130630,
        2986955000
    ],
    [
        1130610,
        3059000000
    ],
    [
        1130600,
        3069000000
    ],
    [
        1130590,
        3069096000
    ],
    [
        1130570,
        3064530000
    ],
    [
        1130560,
        3073900000
    ],
    [
        1130510,
        3107805000
    ],
    [
        1130490,
        3107000000
    ],
    [
        1130480,
        3115330000
    ],
    [
        1130470,
        3120040000
    ],
    [
        1130450,
        3118000000
    ],
    [
        1130430,
        3114110000
    ],
    [
        1130410,
        3107270000
    ],
    [
        1130390,
        3101580000
    ],
    [
        1130380,
        3109752500
    ],
    [
        1130370,
        3110119000
    ],
    [
        1130360,
        3098608000
    ],
    [
        1130350,
        3097275000
    ],
    [
        1130340,
        3090500000
    ],
    [
        1130330,
        3065790000
    ],
    [
        1130310,
        3064000000
    ],
    [
        1130300,
        3065790000
    ],
    [
        1130290,
        3070180000
    ],
    [
        1130280,
        3073235000
    ],
    [
        1130270,
        3060000000
    ],
    [
        1130260,
        3059000000
    ],
    [
        1130250,
        3058980000
    ],
    [
        1130240,
        3047311000
    ],
    [
        1130230,
        3057862500
    ],
    [
        1130220,
        3060080000
    ],
    [
        1130210,
        3062530000
    ],
    [
        1130200,
        3065942500
    ],
    [
        1130190,
        3056210000
    ],
    [
        1130180,
        3096000000
    ],
    [
        1130150,
        3104460000
    ],
    [
        1130130,
        3111000000
    ],
    [
        1130120,
        3122207500
    ],
    [
        1130100,
        3145000000
    ],
    [
        1130090,
        3176000000
    ],
    [
        1130080,
        3181000000
    ],
    [
        1130060,
        3183570000
    ],
    [
        1130050,
        3208799000
    ],
    [
        1130040,
        3224000000
    ],
    [
        1130030,
        3234000000
    ],
    [
        1130020,
        3240000000
    ],
    [
        1130010,
        3239000000
    ],
    [
        1130000,
        3238700000
    ],
    [
        1129980,
        3232000000
    ],
    [
        1129960,
        3218710000
    ],
    [
        1129950,
        3241200000
    ],
    [
        1129930,
        3263000000
    ],
    [
        1129920,
        3268220000
    ],
    [
        1129910,
        3266000000
    ],
    [
        1129880,
        3250485000
    ],
    [
        1129870,
        3260000000
    ],
    [
        1129860,
        3308032500
    ],
    [
        1129850,
        3301750000
    ],
    [
        1129840,
        3299407500
    ],
    [
        1129830,
        3288100000
    ],
    [
        1129780,
        3320301500
    ],
    [
        1129770,
        3304020000
    ],
    [
        1129760,
        3291500000
    ],
    [
        1129750,
        3297500000
    ],
    [
        1129730,
        3288795000
    ],
    [
        1129720,
        3292785000
    ],
    [
        1129710,
        3311940000
    ],
    [
        1129700,
        3309380000
    ],
    [
        1129690,
        3308777500
    ],
    [
        1129680,
        3311547500
    ],
    [
        1129650,
        3312245000
    ],
    [
        1129640,
        3296342500
    ],
    [
        1129630,
        3302000000
    ],
    [
        1129620,
        3315000000
    ],
    [
        1129610,
        3314923750
    ],
    [
        1129600,
        3317565000
    ],
    [
        1129590,
        3326183000
    ],
    [
        1129580,
        3335030000
    ],
    [
        1129570,
        3341000000
    ],
    [
        1129550,
        3330000000
    ],
    [
        1129540,
        3321325000
    ],
    [
        1129530,
        3319870000
    ],
    [
        1129520,
        3324109000
    ],
    [
        1129510,
        3328205000
    ],
    [
        1129500,
        3319160000
    ],
    [
        1129490,
        3313000000
    ],
    [
        1129470,
        3312492500
    ],
    [
        1129460,
        3316295000
    ],
    [
        1129450,
        3330853750
    ],
    [
        1129440,
        3339117750
    ],
    [
        1129430,
        3345735000
    ],
    [
        1129420,
        3351644500
    ],
    [
        1129330,
        3236600000
    ],
    [
        1129300,
        3232000000
    ],
    [
        1129280,
        3230500000
    ],
    [
        1129260,
        3225000000
    ],
    [
        1129250,
        3216832500
    ],
    [
        1129220,
        3206550000
    ],
    [
        1129210,
        3208690500
    ],
    [
        1129200,
        3200260000
    ],
    [
        1129180,
        3243877250
    ],
    [
        1129170,
        3288000000
    ],
    [
        1129160,
        3309574500
    ],
    [
        1129150,
        3323509500
    ],
    [
        1129140,
        3333060000
    ],
    [
        1129130,
        3334446250
    ],
    [
        1129100,
        3348350000
    ],
    [
        1129080,
        3346000000
    ],
    [
        1129040,
        3313000000
    ],
    [
        1129030,
        3311415000
    ],
    [
        1129010,
        3313000000
    ],
    [
        1128950,
        3263000000
    ],
    [
        1128940,
        3207760000
    ],
    [
        1128910,
        3196260000
    ],
    [
        1128900,
        3199603500
    ],
    [
        1128890,
        3199867250
    ],
    [
        1128880,
        3208000000
    ],
    [
        1128870,
        3208710000
    ],
    [
        1128850,
        3210500000
    ],
    [
        1128840,
        3210158000
    ],
    [
        1128830,
        3204760000
    ],
    [
        1128820,
        3193260000
    ],
    [
        1128790,
        3184077500
    ],
    [
        1128780,
        3182346250
    ],
    [
        1128770,
        3182607250
    ],
    [
        1128750,
        3174085000
    ],
    [
        1128740,
        3176585000
    ],
    [
        1128730,
        3163850500
    ],
    [
        1128710,
        3163000000
    ],
    [
        1128700,
        3141598750
    ],
    [
        1128690,
        3143760500
    ],
    [
        1128680,
        3149768750
    ],
    [
        1128670,
        3146830000
    ],
    [
        1128650,
        3140500000
    ],
    [
        1128640,
        3142026500
    ],
    [
        1128630,
        3143000000
    ],
    [
        1128620,
        3134038750
    ],
    [
        1128610,
        3121543500
    ],
    [
        1128600,
        3116400000
    ],
    [
        1128590,
        3124000000
    ],
    [
        1128580,
        3120960000
    ],
    [
        1128570,
        3111299000
    ],
    [
        1128560,
        3114163750
    ],
    [
        1128550,
        3115415250
    ],
    [
        1128540,
        3114580000
    ],
    [
        1128530,
        3117141250
    ],
    [
        1128520,
        3112823750
    ],
    [
        1128510,
        3124218000
    ],
    [
        1128500,
        3135405000
    ],
    [
        1128490,
        3143000000
    ],
    [
        1128480,
        3144000000
    ],
    [
        1128460,
        3143000000
    ],
    [
        1128450,
        3138863750
    ],
    [
        1128440,
        3133565750
    ],
    [
        1128430,
        3127759000
    ],
    [
        1128420,
        3129299000
    ],
    [
        1128410,
        3115000000
    ],
    [
        1128400,
        3114500000
    ],
    [
        1128390,
        3114785000
    ],
    [
        1128380,
        3116535000
    ],
    [
        1128290,
        3154865000
    ],
    [
        1128270,
        3106512000
    ],
    [
        1128260,
        3022930000
    ],
    [
        1128250,
        3015143000
    ],
    [
        1128240,
        3008143000
    ],
    [
        1128230,
        3022000000
    ],
    [
        1128220,
        3033755000
    ],
    [
        1128200,
        3032403750
    ],
    [
        1128190,
        3030378750
    ],
    [
        1128180,
        3029926250
    ],
    [
        1128170,
        3031000000
    ],
    [
        1128160,
        3032480000
    ],
    [
        1128150,
        3042196500
    ],
    [
        1128140,
        3043150000
    ],
    [
        1128130,
        3031865000
    ],
    [
        1128120,
        3027000000
    ],
    [
        1128110,
        3028207000
    ],
    [
        1128090,
        3030500000
    ],
    [
        1128080,
        3018000000
    ],
    [
        1128070,
        3024465000
    ],
    [
        1128050,
        3031000000
    ],
    [
        1128040,
        3033990000
    ],
    [
        1128030,
        3042010000
    ],
    [
        1128010,
        3038150000
    ],
    [
        1127990,
        3031000000
    ],
    [
        1127970,
        3020025000
    ],
    [
        1127960,
        3016083750
    ],
    [
        1127950,
        2971000000
    ],
    [
        1127930,
        2969000000
    ],
    [
        1127890,
        2876220000
    ],
    [
        1127880,
        2876150000
    ],
    [
        1127870,
        2870330000
    ],
    [
        1127860,
        2859867500
    ],
    [
        1127850,
        2876220000
    ],
    [
        1127840,
        2879340000
    ],
    [
        1127830,
        2880000000
    ],
    [
        1127820,
        2883000000
    ],
    [
        1127810,
        2885177500
    ],
    [
        1127800,
        2883000000
    ],
    [
        1127790,
        2894400000
    ],
    [
        1127780,
        2933280000
    ],
    [
        1127770,
        2958292000
    ],
    [
        1127760,
        2960035000
    ],
    [
        1127750,
        2974472000
    ],
    [
        1127740,
        2975535000
    ],
    [
        1127730,
        2986000000
    ],
    [
        1127720,
        2997881500
    ],
    [
        1127710,
        2999882000
    ],
    [
        1127700,
        2996126250
    ],
    [
        1127690,
        2972036250
    ],
    [
        1127680,
        2991935500
    ],
    [
        1127660,
        2908005000
    ],
    [
        1127650,
        2910005000
    ],
    [
        1127640,
        2908175000
    ],
    [
        1127620,
        2946520000
    ],
    [
        1127610,
        2951290000
    ],
    [
        1127600,
        2939507500
    ],
    [
        1127590,
        2923627500
    ],
    [
        1127580,
        2883540000
    ],
    [
        1127570,
        2887185000
    ],
    [
        1127520,
        2905000000
    ],
    [
        1127510,
        2882549000
    ],
    [
        1127500,
        2873532750
    ],
    [
        1127490,
        2901251500
    ],
    [
        1127470,
        2913200000
    ],
    [
        1127460,
        2906000000
    ],
    [
        1127450,
        2901455000
    ],
    [
        1127440,
        2912217250
    ],
    [
        1127430,
        2934000000
    ],
    [
        1127420,
        2946802500
    ],
    [
        1127400,
        2962000000
    ],
    [
        1127390,
        3000500000
    ],
    [
        1127380,
        3008982500
    ],
    [
        1127360,
        3011500000
    ],
    [
        1127350,
        3009310000
    ],
    [
        1127320,
        3046224500
    ],
    [
        1127310,
        3054227500
    ],
    [
        1127290,
        3070000000
    ],
    [
        1127280,
        3087000000
    ],
    [
        1127270,
        3091500000
    ],
    [
        1127260,
        3087311250
    ],
    [
        1127250,
        3085295000
    ],
    [
        1127240,
        3083431250
    ],
    [
        1127220,
        3071950000
    ],
    [
        1127210,
        3079200000
    ],
    [
        1127200,
        3078000000
    ],
    [
        1127190,
        3077450000
    ],
    [
        1127180,
        3085282500
    ],
    [
        1127160,
        3067000000
    ],
    [
        1127130,
        3056475000
    ],
    [
        1127120,
        3035890000
    ],
    [
        1127110,
        3000617500
    ],
    [
        1127100,
        3007575000
    ],
    [
        1127090,
        3006046250
    ],
    [
        1127080,
        3031401000
    ],
    [
        1127070,
        3032009000
    ],
    [
        1127050,
        2976260000
    ],
    [
        1127040,
        3028736250
    ],
    [
        1127030,
        3065573000
    ],
    [
        1127020,
        3120672000
    ],
    [
        1126990,
        3132565000
    ],
    [
        1126980,
        3135390000
    ],
    [
        1126970,
        3093722500
    ],
    [
        1126960,
        3100910000
    ],
    [
        1126950,
        3093722500
    ],
    [
        1126940,
        3105255000
    ],
    [
        1126930,
        3120755000
    ],
    [
        1126910,
        3125000000
    ],
    [
        1126900,
        3099500000
    ],
    [
        1126890,
        3082150000
    ],
    [
        1126880,
        3078758750
    ],
    [
        1126870,
        3100988250
    ],
    [
        1126850,
        3106563750
    ],
    [
        1126840,
        3109000000
    ],
    [
        1126830,
        3139000000
    ],
    [
        1126810,
        3120252500
    ],
    [
        1126800,
        3091323500
    ],
    [
        1126770,
        3130066250
    ],
    [
        1126760,
        3146245000
    ],
    [
        1126750,
        3157926250
    ],
    [
        1126740,
        3153327500
    ],
    [
        1126730,
        3162792500
    ],
    [
        1126720,
        3166875000
    ],
    [
        1126710,
        3168875000
    ],
    [
        1126700,
        3147478000
    ],
    [
        1126690,
        3128160000
    ],
    [
        1126680,
        3125880000
    ],
    [
        1126660,
        3107730000
    ],
    [
        1126650,
        3121880000
    ],
    [
        1126640,
        3114850000
    ],
    [
        1126630,
        3109551250
    ],
    [
        1126620,
        3114850000
    ],
    [
        1126610,
        3116842500
    ],
    [
        1126590,
        3110495000
    ],
    [
        1126580,
        3101645000
    ],
    [
        1126570,
        3110280000
    ],
    [
        1126560,
        3133707500
    ],
    [
        1126550,
        3137336250
    ],
    [
        1126540,
        3196755000
    ],
    [
        1126520,
        3213500000
    ],
    [
        1126510,
        3245415000
    ],
    [
        1126500,
        3253415000
    ],
    [
        1126490,
        3260500000
    ],
    [
        1126480,
        3336015500
    ],
    [
        1126460,
        3375000000
    ],
    [
        1126450,
        3377192750
    ],
    [
        1126440,
        3367287500
    ],
    [
        1126420,
        3378680000
    ],
    [
        1126410,
        3391000000
    ],
    [
        1126400,
        3391820000
    ],
    [
        1126380,
        3419459000
    ],
    [
        1126360,
        3382895500
    ],
    [
        1126350,
        3392906000
    ],
    [
        1126330,
        3431035000
    ],
    [
        1126310,
        3432869000
    ],
    [
        1126300,
        3432834000
    ],
    [
        1126290,
        3430236000
    ],
    [
        1126280,
        3427334000
    ],
    [
        1126270,
        3423045000
    ],
    [
        1126260,
        3410018000
    ],
    [
        1126240,
        3404483500
    ],
    [
        1126230,
        3406346250
    ],
    [
        1126220,
        3406957500
    ],
    [
        1126210,
        3438957500
    ],
    [
        1126170,
        3472045000
    ],
    [
        1126160,
        3469344500
    ],
    [
        1126150,
        3463334000
    ],
    [
        1126140,
        3468500000
    ],
    [
        1126130,
        3469304000
    ],
    [
        1126110,
        3470000000
    ],
    [
        1126100,
        3494000000
    ],
    [
        1126090,
        3499290000
    ],
    [
        1126080,
        3502000000
    ],
    [
        1126070,
        3533975000
    ],
    [
        1126060,
        3539975000
    ],
    [
        1126050,
        3543000000
    ],
    [
        1126040,
        3574915000
    ],
    [
        1126030,
        3578410000
    ],
    [
        1126020,
        3595297500
    ],
    [
        1126010,
        3617500000
    ],
    [
        1126000,
        3627500000
    ],
    [
        1125990,
        3623000000
    ],
    [
        1125960,
        3605320000
    ],
    [
        1125950,
        3584795000
    ],
    [
        1125930,
        3580225000
    ],
    [
        1125920,
        3581636000
    ],
    [
        1125910,
        3579302500
    ],
    [
        1125900,
        3572418250
    ],
    [
        1125890,
        3556672000
    ],
    [
        1125880,
        3556404750
    ],
    [
        1125840,
        3462000000
    ],
    [
        1125820,
        3460000000
    ],
    [
        1125810,
        3449596500
    ],
    [
        1125800,
        3450295000
    ],
    [
        1125790,
        3471500000
    ],
    [
        1125780,
        3474000000
    ],
    [
        1125770,
        3472305500
    ],
    [
        1125760,
        3454701250
    ],
    [
        1125740,
        3330000000
    ],
    [
        1125730,
        3333542500
    ],
    [
        1125690,
        3359000000
    ],
    [
        1125680,
        3370223750
    ],
    [
        1125660,
        3390136250
    ],
    [
        1125650,
        3379651250
    ],
    [
        1125640,
        3358073000
    ],
    [
        1125630,
        3369515000
    ],
    [
        1125620,
        3379290500
    ],
    [
        1125600,
        3430500000
    ],
    [
        1125580,
        3431000000
    ],
    [
        1125560,
        3418070000
    ],
    [
        1125540,
        3415500000
    ],
    [
        1125530,
        3410436250
    ],
    [
        1125520,
        3411000000
    ],
    [
        1125500,
        3412570000
    ],
    [
        1125490,
        3400000000
    ],
    [
        1125480,
        3399360000
    ],
    [
        1125470,
        3397857500
    ],
    [
        1125460,
        3336912500
    ],
    [
        1125440,
        3276637500
    ],
    [
        1125430,
        3272602500
    ],
    [
        1125420,
        3276016250
    ],
    [
        1125410,
        3267150750
    ],
    [
        1125400,
        3265701000
    ],
    [
        1125390,
        3241864500
    ],
    [
        1125350,
        3228000000
    ],
    [
        1125340,
        3227085000
    ],
    [
        1125330,
        3224362000
    ],
    [
        1125320,
        3216965000
    ],
    [
        1125310,
        3205617500
    ],
    [
        1125300,
        3205021000
    ],
    [
        1125280,
        3203151000
    ],
    [
        1125260,
        3176335000
    ],
    [
        1125250,
        3168000000
    ],
    [
        1125240,
        3156902500
    ],
    [
        1125230,
        3159781000
    ],
    [
        1125220,
        3166277000
    ],
    [
        1125210,
        3175500000
    ],
    [
        1125200,
        3180839000
    ],
    [
        1125190,
        3173910000
    ],
    [
        1125170,
        3171730000
    ],
    [
        1125160,
        3172000000
    ],
    [
        1125150,
        3165500000
    ],
    [
        1125140,
        3164685000
    ],
    [
        1125130,
        3141039500
    ],
    [
        1125120,
        3141000000
    ],
    [
        1125110,
        3152556500
    ],
    [
        1125100,
        3141000000
    ],
    [
        1125090,
        3097164500
    ],
    [
        1125080,
        3071480000
    ],
    [
        1125070,
        3060842000
    ],
    [
        1125060,
        3045873500
    ],
    [
        1125050,
        3029373500
    ],
    [
        1125040,
        3012480000
    ],
    [
        1125030,
        2995596500
    ],
    [
        1125020,
        2989000000
    ],
    [
        1125010,
        2952260000
    ],
    [
        1125000,
        2944325000
    ],
    [
        1124990,
        2934565000
    ],
    [
        1124970,
        2924000000
    ],
    [
        1124960,
        2928299000
    ],
    [
        1124950,
        2937181250
    ],
    [
        1124940,
        2931626250
    ],
    [
        1124930,
        2927971250
    ],
    [
        1124920,
        2918718500
    ],
    [
        1124910,
        2922109750
    ],
    [
        1124900,
        2872052250
    ],
    [
        1124880,
        2896000000
    ],
    [
        1124840,
        2939500000
    ],
    [
        1124830,
        2942000000
    ],
    [
        1124810,
        3009125000
    ],
    [
        1124800,
        3030000000
    ],
    [
        1124790,
        3041687500
    ],
    [
        1124780,
        3040237500
    ],
    [
        1124770,
        3015125000
    ],
    [
        1124760,
        3014125000
    ],
    [
        1124750,
        3052510000
    ],
    [
        1124740,
        3052585000
    ],
    [
        1124730,
        3067585000
    ],
    [
        1124700,
        3071959000
    ],
    [
        1124690,
        3090000000
    ],
    [
        1124680,
        3099921250
    ],
    [
        1124670,
        3097182000
    ],
    [
        1124660,
        3071100000
    ],
    [
        1124650,
        3060387000
    ],
    [
        1124640,
        3046180000
    ],
    [
        1124630,
        3036882000
    ],
    [
        1124610,
        3040500000
    ],
    [
        1124590,
        3034925000
    ],
    [
        1124580,
        3021915000
    ],
    [
        1124570,
        3036265000
    ],
    [
        1124560,
        3046602500
    ],
    [
        1124540,
        3056356500
    ],
    [
        1124530,
        2976050500
    ],
    [
        1124520,
        2965458000
    ],
    [
        1124500,
        2954605000
    ],
    [
        1124450,
        3242530000
    ],
    [
        1124440,
        3251500000
    ],
    [
        1124430,
        3311632000
    ],
    [
        1124420,
        3332442000
    ],
    [
        1124410,
        3345158250
    ],
    [
        1124390,
        3332355000
    ],
    [
        1124370,
        3323108000
    ],
    [
        1124360,
        3344853000
    ],
    [
        1124350,
        3344061000
    ],
    [
        1124340,
        3352500000
    ],
    [
        1124310,
        3370000000
    ],
    [
        1124300,
        3373000000
    ],
    [
        1124270,
        3363469000
    ],
    [
        1124260,
        3374645000
    ],
    [
        1124240,
        3374748750
    ],
    [
        1124230,
        3370169500
    ],
    [
        1124220,
        3344423750
    ],
    [
        1124200,
        3335000000
    ],
    [
        1124190,
        3340000000
    ],
    [
        1124180,
        3375000000
    ],
    [
        1124170,
        3500041000
    ],
    [
        1124160,
        3501818500
    ],
    [
        1124150,
        3506041000
    ],
    [
        1124140,
        3517860000
    ],
    [
        1124120,
        3518000000
    ],
    [
        1124100,
        3510701500
    ],
    [
        1124090,
        3496495000
    ],
    [
        1124060,
        3494000000
    ],
    [
        1124050,
        3508870000
    ],
    [
        1124040,
        3538045000
    ],
    [
        1124020,
        3556045000
    ],
    [
        1124010,
        3566000000
    ],
    [
        1124000,
        3556455000
    ],
    [
        1123990,
        3553592500
    ],
    [
        1123970,
        3541176250
    ],
    [
        1123960,
        3521743750
    ],
    [
        1123950,
        3510679000
    ],
    [
        1123940,
        3521932500
    ],
    [
        1123930,
        3519985000
    ],
    [
        1123920,
        3543603000
    ],
    [
        1123910,
        3553510000
    ],
    [
        1123890,
        3559510000
    ],
    [
        1123880,
        3579185000
    ],
    [
        1123870,
        3579260000
    ],
    [
        1123860,
        3595478000
    ],
    [
        1123850,
        3611225000
    ],
    [
        1123840,
        3616000000
    ],
    [
        1123830,
        3616565000
    ],
    [
        1123820,
        3622165000
    ],
    [
        1123810,
        3622700000
    ],
    [
        1123790,
        3623000000
    ],
    [
        1123780,
        3622625000
    ],
    [
        1123770,
        3622165000
    ],
    [
        1123760,
        3620257750
    ],
    [
        1123740,
        3602027000
    ],
    [
        1123730,
        3585000000
    ],
    [
        1123720,
        3577500000
    ],
    [
        1123710,
        3586560000
    ],
    [
        1123700,
        3600038750
    ],
    [
        1123680,
        3696555000
    ],
    [
        1123670,
        3697322500
    ],
    [
        1123650,
        3738285000
    ],
    [
        1123640,
        3761178750
    ],
    [
        1123630,
        3782500000
    ],
    [
        1123590,
        3789700000
    ],
    [
        1123580,
        3793500000
    ],
    [
        1123570,
        3803066000
    ],
    [
        1123560,
        3806486000
    ],
    [
        1123550,
        3833500000
    ],
    [
        1123540,
        3837065000
    ],
    [
        1123530,
        3839720000
    ],
    [
        1123520,
        3844245500
    ],
    [
        1123510,
        3845562500
    ],
    [
        1123500,
        3843114750
    ],
    [
        1123490,
        3851540000
    ],
    [
        1123480,
        3854905000
    ],
    [
        1123460,
        3850005000
    ],
    [
        1123450,
        3849377000
    ],
    [
        1123440,
        3849202500
    ],
    [
        1123430,
        3850000000
    ],
    [
        1123420,
        3849000000
    ],
    [
        1123410,
        3853205000
    ],
    [
        1123400,
        3853943750
    ],
    [
        1123380,
        3850000000
    ],
    [
        1123370,
        3851000000
    ],
    [
        1123360,
        3853507500
    ],
    [
        1123350,
        3854022500
    ],
    [
        1123340,
        3848440000
    ],
    [
        1123330,
        3846283750
    ],
    [
        1123320,
        3845283750
    ],
    [
        1123310,
        3848463750
    ],
    [
        1123300,
        3857770000
    ],
    [
        1123290,
        3853000000
    ],
    [
        1123270,
        3844000000
    ],
    [
        1123250,
        3841951000
    ],
    [
        1123240,
        3847475000
    ],
    [
        1123210,
        3852000000
    ],
    [
        1123200,
        3851147500
    ],
    [
        1123190,
        3858322500
    ],
    [
        1123180,
        3860962500
    ],
    [
        1123170,
        3861583750
    ],
    [
        1123150,
        3861851250
    ],
    [
        1123130,
        3874073750
    ],
    [
        1123120,
        3873650250
    ],
    [
        1123110,
        3886340000
    ],
    [
        1123090,
        3888775000
    ],
    [
        1123080,
        3884335000
    ],
    [
        1123060,
        3882830000
    ],
    [
        1123050,
        3878198750
    ],
    [
        1123040,
        3884298750
    ],
    [
        1123030,
        3882830000
    ],
    [
        1123020,
        3881329500
    ],
    [
        1123010,
        3874821250
    ],
    [
        1122990,
        3881500000
    ],
    [
        1122980,
        3882830000
    ],
    [
        1122950,
        3881830000
    ],
    [
        1122940,
        3876830000
    ],
    [
        1122930,
        3864033500
    ],
    [
        1122920,
        3855000000
    ],
    [
        1122910,
        3833595000
    ],
    [
        1122900,
        3822022500
    ],
    [
        1122890,
        3809000000
    ],
    [
        1122880,
        3802261000
    ],
    [
        1122870,
        3801958000
    ],
    [
        1122840,
        3843475000
    ],
    [
        1122830,
        3843297500
    ],
    [
        1122820,
        3844000000
    ],
    [
        1122800,
        3846782000
    ],
    [
        1122790,
        3857821000
    ],
    [
        1122780,
        3853485000
    ],
    [
        1122760,
        3852340000
    ],
    [
        1122750,
        3844795500
    ],
    [
        1122740,
        3840795000
    ],
    [
        1122730,
        3838822500
    ],
    [
        1122720,
        3835000000
    ],
    [
        1122710,
        3832727750
    ],
    [
        1122700,
        3833186000
    ],
    [
        1122690,
        3834200000
    ],
    [
        1122670,
        3842210000
    ],
    [
        1122660,
        3849615000
    ],
    [
        1122650,
        3867382000
    ],
    [
        1122640,
        3871382000
    ],
    [
        1122630,
        3872729000
    ],
    [
        1122620,
        3872690000
    ],
    [
        1122600,
        3872026000
    ],
    [
        1122590,
        3878097500
    ],
    [
        1122570,
        3880000000
    ],
    [
        1122560,
        3866470000
    ],
    [
        1122550,
        3860085000
    ],
    [
        1122540,
        3858000000
    ],
    [
        1122530,
        3859890000
    ],
    [
        1122520,
        3859385000
    ],
    [
        1122510,
        3858352000
    ],
    [
        1122500,
        3855170000
    ],
    [
        1122490,
        3848800000
    ],
    [
        1122480,
        3835000000
    ],
    [
        1122470,
        3836127500
    ],
    [
        1122460,
        3839627500
    ],
    [
        1122450,
        3848920000
    ],
    [
        1122440,
        3850360000
    ],
    [
        1122430,
        3838495000
    ],
    [
        1122420,
        3830000000
    ],
    [
        1122410,
        3828790000
    ],
    [
        1122400,
        3826260000
    ],
    [
        1122390,
        3823900000
    ],
    [
        1122380,
        3824537500
    ],
    [
        1122370,
        3827640000
    ],
    [
        1122360,
        3829140000
    ],
    [
        1122350,
        3831803750
    ],
    [
        1122340,
        3832658750
    ],
    [
        1122330,
        3834825000
    ],
    [
        1122320,
        3834000000
    ],
    [
        1122310,
        3833400000
    ],
    [
        1122300,
        3829994000
    ],
    [
        1122290,
        3850758000
    ],
    [
        1122280,
        3861573500
    ],
    [
        1122270,
        3864435000
    ],
    [
        1122260,
        3860805000
    ],
    [
        1122250,
        3857615000
    ],
    [
        1122240,
        3866798750
    ],
    [
        1122230,
        3875666000
    ],
    [
        1122210,
        3881500000
    ],
    [
        1122200,
        3887500000
    ],
    [
        1122190,
        3887000000
    ],
    [
        1122170,
        3868000000
    ],
    [
        1122160,
        3863342500
    ],
    [
        1122150,
        3857795000
    ],
    [
        1122140,
        3855623750
    ],
    [
        1122130,
        3862400000
    ],
    [
        1122120,
        3870000000
    ],
    [
        1122110,
        3888500000
    ],
    [
        1122090,
        3905340000
    ],
    [
        1122080,
        3908759500
    ],
    [
        1122070,
        3897568750
    ],
    [
        1122060,
        3898568750
    ],
    [
        1122050,
        3903325000
    ],
    [
        1122040,
        3910310000
    ],
    [
        1122030,
        3903405750
    ],
    [
        1122020,
        3917109500
    ],
    [
        1122010,
        3925000000
    ],
    [
        1122000,
        3939435000
    ],
    [
        1121990,
        3942181250
    ],
    [
        1121980,
        3942257500
    ],
    [
        1121970,
        3950542500
    ],
    [
        1121960,
        3959338000
    ],
    [
        1121890,
        3995851250
    ],
    [
        1121880,
        3996000000
    ],
    [
        1121820,
        3949025000
    ],
    [
        1121810,
        3951525000
    ],
    [
        1121800,
        3948303750
    ],
    [
        1121790,
        3943764250
    ],
    [
        1121780,
        3932865000
    ],
    [
        1121770,
        3927533750
    ],
    [
        1121750,
        3923193750
    ],
    [
        1121740,
        3918633000
    ],
    [
        1121730,
        3925781250
    ],
    [
        1121720,
        3919072500
    ],
    [
        1121710,
        3917148750
    ],
    [
        1121700,
        3913946250
    ],
    [
        1121690,
        3913548750
    ],
    [
        1121680,
        3909826250
    ],
    [
        1121670,
        3926225000
    ],
    [
        1121660,
        3933205000
    ],
    [
        1121650,
        3940500000
    ],
    [
        1121640,
        3976444750
    ],
    [
        1121630,
        3983201000
    ],
    [
        1121580,
        3906705000
    ],
    [
        1121570,
        3877038750
    ],
    [
        1121560,
        3862368000
    ],
    [
        1121550,
        3861893000
    ],
    [
        1121540,
        3869895000
    ],
    [
        1121530,
        3883515000
    ],
    [
        1121520,
        3878015000
    ],
    [
        1121510,
        3871140000
    ],
    [
        1121500,
        3851000000
    ],
    [
        1121470,
        3827500000
    ],
    [
        1121450,
        3833000000
    ],
    [
        1121440,
        3840458000
    ],
    [
        1121410,
        3822000000
    ],
    [
        1121380,
        3822724000
    ],
    [
        1121370,
        3839043750
    ],
    [
        1121360,
        3820843000
    ],
    [
        1121340,
        3816111250
    ],
    [
        1121330,
        3788750500
    ],
    [
        1121320,
        3785441250
    ],
    [
        1121300,
        3814500000
    ],
    [
        1121290,
        3815141000
    ],
    [
        1121270,
        3817063750
    ],
    [
        1121260,
        3817866250
    ],
    [
        1121250,
        3817220000
    ],
    [
        1121240,
        3817278750
    ],
    [
        1121230,
        3819468750
    ],
    [
        1121220,
        3820000000
    ],
    [
        1121210,
        3822049500
    ],
    [
        1121200,
        3823256250
    ],
    [
        1121180,
        3827000000
    ],
    [
        1121170,
        3833322250
    ],
    [
        1121160,
        3827000000
    ],
    [
        1121150,
        3819945000
    ],
    [
        1121140,
        3813940000
    ],
    [
        1121130,
        3813289500
    ],
    [
        1121120,
        3819686250
    ],
    [
        1121110,
        3820430000
    ],
    [
        1121100,
        3823587500
    ],
    [
        1121090,
        3833857500
    ],
    [
        1121080,
        3847099000
    ],
    [
        1121070,
        3848249500
    ],
    [
        1121060,
        3853260000
    ],
    [
        1121050,
        3856595000
    ],
    [
        1121040,
        3860595000
    ],
    [
        1121030,
        3863000000
    ],
    [
        1121020,
        3884032000
    ],
    [
        1121010,
        3881667500
    ],
    [
        1121000,
        3874142500
    ],
    [
        1120980,
        3866691500
    ],
    [
        1120960,
        3881704000
    ],
    [
        1120950,
        3900000000
    ],
    [
        1120940,
        3899647500
    ],
    [
        1120930,
        3899265000
    ],
    [
        1120910,
        3900000000
    ],
    [
        1120900,
        3902245000
    ],
    [
        1120890,
        3919553750
    ],
    [
        1120870,
        3923815000
    ],
    [
        1120860,
        3927141500
    ],
    [
        1120850,
        3925000000
    ],
    [
        1120840,
        3929705000
    ],
    [
        1120830,
        3928621250
    ],
    [
        1120820,
        3928121250
    ],
    [
        1120810,
        3929840000
    ],
    [
        1120800,
        3927458750
    ],
    [
        1120790,
        3923708500
    ],
    [
        1120780,
        3923595000
    ],
    [
        1120770,
        3929555000
    ],
    [
        1120760,
        3936660000
    ],
    [
        1120750,
        3933880000
    ],
    [
        1120740,
        3935940000
    ],
    [
        1120730,
        3929031500
    ],
    [
        1120720,
        3929425500
    ],
    [
        1120700,
        3925005000
    ],
    [
        1120690,
        3926793750
    ],
    [
        1120670,
        3919493750
    ],
    [
        1120660,
        3918000000
    ],
    [
        1120640,
        3912371500
    ],
    [
        1120630,
        3906810000
    ],
    [
        1120620,
        3904200000
    ],
    [
        1120590,
        3916778000
    ],
    [
        1120570,
        3925410000
    ],
    [
        1120560,
        3914000000
    ],
    [
        1120550,
        3911716250
    ],
    [
        1120540,
        3908527500
    ],
    [
        1120530,
        3910311250
    ],
    [
        1120520,
        3907811250
    ],
    [
        1120510,
        3909262000
    ],
    [
        1120490,
        3906500000
    ],
    [
        1120480,
        3916388750
    ],
    [
        1120470,
        3924979000
    ],
    [
        1120460,
        3928567500
    ],
    [
        1120430,
        3933000000
    ],
    [
        1120400,
        3915500000
    ],
    [
        1120380,
        3914000000
    ],
    [
        1120370,
        3927475000
    ],
    [
        1120360,
        3936941000
    ],
    [
        1120350,
        3952642500
    ],
    [
        1120340,
        3950336000
    ],
    [
        1120330,
        3932071750
    ],
    [
        1120320,
        3934538750
    ],
    [
        1120310,
        3953000000
    ],
    [
        1120300,
        3946807500
    ],
    [
        1120290,
        3947215000
    ],
    [
        1120280,
        3942105000
    ],
    [
        1120270,
        3939099500
    ],
    [
        1120260,
        3937105000
    ],
    [
        1120250,
        3934000000
    ],
    [
        1120240,
        3924000000
    ],
    [
        1120230,
        3923410000
    ],
    [
        1120220,
        3923038750
    ],
    [
        1120210,
        3924000000
    ],
    [
        1120190,
        3923410000
    ],
    [
        1120160,
        3925000000
    ],
    [
        1120130,
        3927695000
    ],
    [
        1120120,
        3930507500
    ],
    [
        1120110,
        3928695000
    ],
    [
        1120100,
        3928142000
    ],
    [
        1120090,
        3931195000
    ],
    [
        1120080,
        3931765000
    ],
    [
        1120060,
        3907520000
    ],
    [
        1120050,
        3907130000
    ],
    [
        1120040,
        3905893750
    ],
    [
        1120030,
        3914000000
    ],
    [
        1120020,
        3915008000
    ],
    [
        1120010,
        3915426250
    ],
    [
        1120000,
        3908695000
    ],
    [
        1119990,
        3913500000
    ],
    [
        1119980,
        3916087750
    ],
    [
        1119960,
        3919000000
    ],
    [
        1119950,
        3928114000
    ],
    [
        1119940,
        3931690000
    ],
    [
        1119880,
        3946930000
    ],
    [
        1119870,
        3930724000
    ],
    [
        1119850,
        3918000000
    ],
    [
        1119830,
        3951500000
    ],
    [
        1119800,
        3955000000
    ],
    [
        1119790,
        3957625000
    ],
    [
        1119780,
        3964000000
    ],
    [
        1119770,
        3970480000
    ],
    [
        1119760,
        3974442000
    ],
    [
        1119750,
        3968052000
    ],
    [
        1119730,
        3964000000
    ],
    [
        1119550,
        3914521250
    ],
    [
        1119430,
        3916042500
    ],
    [
        1119000,
        3917021250
    ],
    [
        1118990,
        3914521250
    ],
    [
        1118980,
        3913000000
    ],
    [
        1118970,
        3912000000
    ],
    [
        1118960,
        3913764000
    ],
    [
        1118930,
        3917086250
    ],
    [
        1118920,
        3910789500
    ],
    [
        1118900,
        3915040000
    ],
    [
        1118890,
        3905740000
    ],
    [
        1118880,
        3908280000
    ],
    [
        1118860,
        3883166750
    ],
    [
        1118850,
        3879380000
    ],
    [
        1118840,
        3923000000
    ],
    [
        1118820,
        3960795000
    ],
    [
        1118810,
        3987773750
    ],
    [
        1118790,
        3987425750
    ],
    [
        1118780,
        3978625000
    ],
    [
        1118760,
        4017000000
    ],
    [
        1118740,
        4024000000
    ],
    [
        1118730,
        4028500000
    ],
    [
        1118710,
        4067125000
    ],
    [
        1118690,
        4071307000
    ],
    [
        1118680,
        4075968000
    ],
    [
        1118630,
        4076355000
    ],
    [
        1118610,
        4074000000
    ],
    [
        1118600,
        4066300000
    ],
    [
        1118590,
        4048215500
    ],
    [
        1118580,
        4045530000
    ],
    [
        1118570,
        4053655000
    ],
    [
        1118550,
        4045195000
    ],
    [
        1118540,
        4038116250
    ],
    [
        1118530,
        4049956250
    ],
    [
        1118510,
        4047630000
    ],
    [
        1118500,
        4042170000
    ],
    [
        1118490,
        4037540000
    ],
    [
        1118380,
        4054000000
    ],
    [
        1118370,
        4051813000
    ],
    [
        1118360,
        4037317500
    ],
    [
        1118340,
        4026000000
    ],
    [
        1118320,
        4023733750
    ],
    [
        1118310,
        4017333500
    ],
    [
        1118300,
        4012862500
    ],
    [
        1118280,
        4009365000
    ],
    [
        1118270,
        4011060000
    ],
    [
        1118260,
        4013060000
    ],
    [
        1118250,
        4031000000
    ],
    [
        1118240,
        4033972500
    ],
    [
        1118230,
        4039544000
    ],
    [
        1118220,
        4049580500
    ],
    [
        1118210,
        4065067500
    ],
    [
        1118200,
        4083355000
    ],
    [
        1118180,
        4083747000
    ],
    [
        1118170,
        4089025000
    ],
    [
        1118160,
        4102170000
    ],
    [
        1118150,
        4109000000
    ],
    [
        1118140,
        4107395000
    ],
    [
        1118130,
        4105790000
    ],
    [
        1118120,
        4102895000
    ],
    [
        1118110,
        4087560000
    ],
    [
        1118100,
        4081519000
    ],
    [
        1118090,
        4078843500
    ],
    [
        1118080,
        4064647500
    ],
    [
        1118070,
        4062000000
    ],
    [
        1118060,
        4031517250
    ],
    [
        1118050,
        4015500000
    ],
    [
        1118040,
        4012880000
    ],
    [
        1118030,
        4012347000
    ],
    [
        1118020,
        4010630000
    ],
    [
        1118010,
        4014767000
    ],
    [
        1118000,
        4013000000
    ],
    [
        1117980,
        4004117500
    ],
    [
        1117970,
        4004942500
    ],
    [
        1117960,
        4018282500
    ],
    [
        1117950,
        4016302500
    ],
    [
        1117940,
        4002705000
    ],
    [
        1117930,
        3991355000
    ],
    [
        1117920,
        4016290000
    ],
    [
        1117910,
        4018495000
    ],
    [
        1117900,
        4021347500
    ],
    [
        1117890,
        4025932500
    ],
    [
        1117880,
        4033000000
    ],
    [
        1117870,
        4027970000
    ],
    [
        1117860,
        4002195000
    ],
    [
        1117840,
        4005015000
    ],
    [
        1117830,
        3999550000
    ],
    [
        1117820,
        3993740000
    ],
    [
        1117810,
        3987385000
    ],
    [
        1117800,
        3998177500
    ],
    [
        1117790,
        3999530000
    ],
    [
        1117780,
        3990720000
    ],
    [
        1117770,
        3993500000
    ],
    [
        1117760,
        3996000000
    ],
    [
        1117550,
        4040956250
    ],
    [
        1117540,
        4037279500
    ],
    [
        1117520,
        4036615000
    ],
    [
        1117510,
        4054446250
    ],
    [
        1117500,
        4068261500
    ],
    [
        1117480,
        4069000000
    ],
    [
        1117470,
        4062200000
    ],
    [
        1117450,
        4065500000
    ],
    [
        1117430,
        4044430000
    ],
    [
        1117420,
        4043735000
    ],
    [
        1117410,
        4038983500
    ],
    [
        1117400,
        4037150500
    ],
    [
        1117390,
        4030380000
    ],
    [
        1117370,
        4028200000
    ],
    [
        1117360,
        4025370000
    ],
    [
        1117350,
        4029078250
    ],
    [
        1117340,
        4033056250
    ],
    [
        1117330,
        4045356250
    ],
    [
        1117320,
        4045579000
    ],
    [
        1117310,
        4058801500
    ],
    [
        1117300,
        4062000000
    ],
    [
        1117290,
        4064616000
    ],
    [
        1117280,
        4064235000
    ],
    [
        1117270,
        4061740000
    ],
    [
        1117260,
        4068069000
    ],
    [
        1117250,
        4072069000
    ],
    [
        1117240,
        4080000000
    ],
    [
        1117230,
        4059000000
    ],
    [
        1117220,
        4053770000
    ],
    [
        1117210,
        4053044000
    ],
    [
        1117200,
        4054556000
    ],
    [
        1117180,
        4057191250
    ],
    [
        1117150,
        4059000000
    ],
    [
        1117140,
        4058650000
    ],
    [
        1117120,
        4057000000
    ],
    [
        1117110,
        4052356000
    ],
    [
        1117100,
        4064960000
    ],
    [
        1117080,
        4066992000
    ],
    [
        1117070,
        4064839500
    ],
    [
        1117060,
        4056110000
    ],
    [
        1117040,
        4023480000
    ],
    [
        1117000,
        3993655000
    ],
    [
        1116990,
        3991480000
    ],
    [
        1116890,
        3980500000
    ],
    [
        1116880,
        3977000000
    ],
    [
        1116870,
        3940620000
    ],
    [
        1116860,
        3927270000
    ],
    [
        1116850,
        3923630000
    ],
    [
        1116840,
        3893000000
    ],
    [
        1116830,
        3877101000
    ],
    [
        1116810,
        3877000000
    ],
    [
        1116800,
        3858000000
    ],
    [
        1116790,
        3835296000
    ],
    [
        1116780,
        3831450000
    ],
    [
        1116770,
        3835731000
    ],
    [
        1116760,
        3829000000
    ],
    [
        1116750,
        3822672000
    ],
    [
        1116740,
        3813000000
    ],
    [
        1116720,
        3784670000
    ],
    [
        1116700,
        3721120000
    ],
    [
        1116690,
        3715000000
    ],
    [
        1116680,
        3691827500
    ],
    [
        1116670,
        3659000000
    ],
    [
        1116660,
        3693713000
    ],
    [
        1116650,
        3709000000
    ],
    [
        1116640,
        3713000000
    ],
    [
        1116620,
        3713300000
    ],
    [
        1116600,
        3755000000
    ],
    [
        1116590,
        3789905000
    ],
    [
        1116570,
        3801000000
    ],
    [
        1116550,
        3816580000
    ],
    [
        1116540,
        3776140000
    ],
    [
        1116530,
        3790070000
    ],
    [
        1116520,
        3818152500
    ],
    [
        1116510,
        3868700000
    ],
    [
        1116500,
        3876140000
    ],
    [
        1116470,
        3877000000
    ],
    [
        1116460,
        3875000000
    ],
    [
        1116450,
        3877000000
    ],
    [
        1116440,
        3877580000
    ],
    [
        1116420,
        3877000000
    ],
    [
        1116410,
        3880000000
    ],
    [
        1116400,
        3877300000
    ],
    [
        1116390,
        3876990000
    ],
    [
        1116380,
        3868700000
    ],
    [
        1116360,
        3880000000
    ],
    [
        1116350,
        3884000000
    ],
    [
        1116340,
        3884705000
    ],
    [
        1116330,
        3889395000
    ],
    [
        1116320,
        3891994000
    ],
    [
        1116310,
        3905377500
    ],
    [
        1116290,
        3916000000
    ],
    [
        1116280,
        3892826000
    ],
    [
        1116270,
        3890481500
    ],
    [
        1116260,
        3897035000
    ],
    [
        1116250,
        3893751500
    ],
    [
        1116240,
        3883000000
    ],
    [
        1116230,
        3886382500
    ],
    [
        1116220,
        3882645000
    ],
    [
        1116200,
        3884280000
    ],
    [
        1116190,
        3898051250
    ],
    [
        1116180,
        3904921250
    ],
    [
        1116160,
        3854580000
    ],
    [
        1116150,
        3845439500
    ],
    [
        1116140,
        3846780000
    ],
    [
        1116060,
        3840946250
    ],
    [
        1116050,
        3846113000
    ],
    [
        1116040,
        3850500000
    ],
    [
        1116030,
        3851749000
    ],
    [
        1116020,
        3871485000
    ],
    [
        1116010,
        3872695000
    ],
    [
        1116000,
        3871206250
    ],
    [
        1115990,
        3873950000
    ],
    [
        1115950,
        3845229500
    ],
    [
        1115940,
        3835705000
    ],
    [
        1115930,
        3819075000
    ],
    [
        1115920,
        3817090000
    ],
    [
        1115910,
        3811000000
    ],
    [
        1115880,
        3809655000
    ],
    [
        1115870,
        3790976500
    ],
    [
        1115860,
        3790345250
    ],
    [
        1115850,
        3787476500
    ],
    [
        1115840,
        3771177500
    ],
    [
        1115820,
        3782500000
    ],
    [
        1115810,
        3795443000
    ],
    [
        1115800,
        3792495250
    ],
    [
        1115780,
        3777587500
    ],
    [
        1115770,
        3782465500
    ],
    [
        1115750,
        3810469000
    ],
    [
        1115740,
        3827605000
    ],
    [
        1115730,
        3840170000
    ],
    [
        1115720,
        3845732500
    ],
    [
        1115710,
        3848422500
    ],
    [
        1115690,
        3854710000
    ],
    [
        1115680,
        3858845000
    ],
    [
        1115670,
        3871545000
    ],
    [
        1115660,
        3874000000
    ],
    [
        1115650,
        3873595000
    ],
    [
        1115640,
        3874000000
    ],
    [
        1115630,
        3921881000
    ],
    [
        1115620,
        3925008000
    ],
    [
        1115610,
        3939275000
    ],
    [
        1115600,
        3973000000
    ],
    [
        1115590,
        3983780500
    ],
    [
        1115580,
        3982690000
    ],
    [
        1115570,
        3969068500
    ],
    [
        1115560,
        3970378500
    ],
    [
        1115550,
        3991416250
    ],
    [
        1115540,
        3991375000
    ],
    [
        1115530,
        3987000000
    ],
    [
        1115510,
        3986000000
    ],
    [
        1115500,
        3978989000
    ],
    [
        1115490,
        3980230000
    ],
    [
        1115480,
        3992698500
    ],
    [
        1115470,
        4016030000
    ],
    [
        1115460,
        4016865000
    ],
    [
        1115450,
        4019000000
    ],
    [
        1115440,
        4017175000
    ],
    [
        1115430,
        3998000000
    ],
    [
        1115420,
        3995194000
    ],
    [
        1115400,
        3998000000
    ],
    [
        1115390,
        4004308000
    ],
    [
        1115370,
        3977840000
    ],
    [
        1115360,
        3973290000
    ],
    [
        1115350,
        3948000000
    ],
    [
        1115340,
        3952000000
    ],
    [
        1115330,
        3956460000
    ],
    [
        1115320,
        3966067500
    ],
    [
        1115310,
        4048000000
    ],
    [
        1115300,
        4051140000
    ],
    [
        1115290,
        4053327500
    ],
    [
        1115270,
        4051280000
    ],
    [
        1115260,
        4045500000
    ],
    [
        1115250,
        4045821250
    ],
    [
        1115240,
        4046068750
    ],
    [
        1115230,
        4052435000
    ],
    [
        1115220,
        4059152500
    ],
    [
        1115200,
        4061000000
    ],
    [
        1115190,
        4057301250
    ],
    [
        1115180,
        4053615000
    ],
    [
        1115170,
        4049990500
    ],
    [
        1115160,
        4050460000
    ],
    [
        1115150,
        4068402000
    ],
    [
        1115140,
        4071000000
    ],
    [
        1115130,
        4072742500
    ],
    [
        1115120,
        4079000000
    ],
    [
        1115110,
        4087060000
    ],
    [
        1115100,
        4086230000
    ],
    [
        1115080,
        4079000000
    ],
    [
        1115050,
        4095000000
    ],
    [
        1115040,
        4094000000
    ],
    [
        1115030,
        4095749000
    ],
    [
        1115020,
        4099000000
    ],
    [
        1115010,
        4095000000
    ],
    [
        1115000,
        4079956000
    ],
    [
        1114990,
        4080340000
    ],
    [
        1114980,
        4077000000
    ],
    [
        1114970,
        4076000000
    ],
    [
        1114960,
        4062090000
    ],
    [
        1114950,
        4061870000
    ],
    [
        1114940,
        4075000000
    ],
    [
        1114930,
        4084125000
    ],
    [
        1114920,
        4101000000
    ],
    [
        1114910,
        4103000000
    ],
    [
        1114900,
        4106570000
    ],
    [
        1114890,
        4103000000
    ],
    [
        1114880,
        4102700000
    ],
    [
        1114870,
        4096970000
    ],
    [
        1114860,
        4114987500
    ],
    [
        1114850,
        4102000000
    ],
    [
        1114840,
        4094539000
    ],
    [
        1114830,
        4086000000
    ],
    [
        1114820,
        4085130000
    ],
    [
        1114800,
        4073000000
    ],
    [
        1114790,
        4066000000
    ],
    [
        1114780,
        4065930000
    ],
    [
        1114760,
        4065920000
    ],
    [
        1114750,
        4065000000
    ],
    [
        1114610,
        4123520000
    ],
    [
        1114590,
        4122000000
    ],
    [
        1114580,
        4113800000
    ],
    [
        1114570,
        4106000000
    ],
    [
        1114560,
        4073000000
    ],
    [
        1114550,
        4038600000
    ],
    [
        1114530,
        4033000000
    ],
    [
        1114520,
        4014000000
    ],
    [
        1114510,
        4011730000
    ],
    [
        1114500,
        4011303000
    ],
    [
        1114480,
        4054040000
    ],
    [
        1114470,
        4080000000
    ],
    [
        1114460,
        4126000000
    ],
    [
        1114450,
        4131620000
    ],
    [
        1114440,
        4216000000
    ],
    [
        1114280,
        4217720000
    ],
    [
        1114270,
        4224240000
    ],
    [
        1114260,
        4237000000
    ],
    [
        1114250,
        4243130000
    ],
    [
        1114240,
        4242450000
    ],
    [
        1114230,
        4241090000
    ],
    [
        1114210,
        4237000000
    ],
    [
        1114200,
        4225320000
    ],
    [
        1114180,
        4207000000
    ],
    [
        1114040,
        4059650000
    ],
    [
        1113980,
        4081000000
    ],
    [
        1113970,
        4117000000
    ],
    [
        1113960,
        4118000000
    ],
    [
        1113920,
        4119000000
    ],
    [
        1113900,
        4136000000
    ],
    [
        1113890,
        4126740000
    ],
    [
        1113870,
        4124537000
    ],
    [
        1113860,
        4138370000
    ],
    [
        1113850,
        4133320000
    ],
    [
        1113840,
        4114662000
    ],
    [
        1113830,
        4103670000
    ],
    [
        1113820,
        4095900000
    ],
    [
        1113810,
        4096090000
    ],
    [
        1113800,
        4105790000
    ],
    [
        1113790,
        4114125000
    ],
    [
        1113780,
        4117750000
    ],
    [
        1113770,
        4116870000
    ],
    [
        1113760,
        4112540000
    ],
    [
        1113750,
        4110790000
    ],
    [
        1113740,
        4095000000
    ],
    [
        1113710,
        4082000000
    ],
    [
        1113700,
        4090820000
    ],
    [
        1113690,
        4074330000
    ],
    [
        1113680,
        4096647000
    ],
    [
        1113670,
        4124000000
    ],
    [
        1113650,
        4128000000
    ],
    [
        1113640,
        4144580000
    ],
    [
        1113620,
        4139860000
    ],
    [
        1113610,
        4134750000
    ],
    [
        1113590,
        4113000000
    ],
    [
        1113580,
        4110650000
    ],
    [
        1113570,
        4103010000
    ],
    [
        1113560,
        4094000000
    ],
    [
        1113550,
        4095000000
    ],
    [
        1113540,
        4109060000
    ],
    [
        1113530,
        4111570000
    ],
    [
        1113520,
        4113585000
    ],
    [
        1113490,
        4112710000
    ],
    [
        1113480,
        4146966000
    ],
    [
        1113470,
        4134400000
    ],
    [
        1113460,
        4130374000
    ],
    [
        1113430,
        4113719000
    ],
    [
        1113420,
        4089000000
    ],
    [
        1113400,
        4082590000
    ],
    [
        1113390,
        4066980000
    ],
    [
        1113370,
        4064802500
    ],
    [
        1113360,
        4057140000
    ],
    [
        1113330,
        4005000000
    ],
    [
        1113300,
        4038000000
    ],
    [
        1113290,
        4035650000
    ],
    [
        1113280,
        4037360000
    ],
    [
        1113270,
        4038000000
    ],
    [
        1113150,
        4065690000
    ],
    [
        1113140,
        4158000000
    ],
    [
        1113130,
        4194287000
    ],
    [
        1113120,
        4314000000
    ],
    [
        1113110,
        4366000000
    ],
    [
        1113100,
        4376000000
    ],
    [
        1113090,
        4433000000
    ],
    [
        1113070,
        4515320000
    ],
    [
        1113060,
        4532800000
    ],
    [
        1113050,
        4536000000
    ],
    [
        1113040,
        4535505000
    ],
    [
        1113030,
        4536000000
    ],
    [
        1113010,
        4530256000
    ],
    [
        1113000,
        4527612500
    ],
    [
        1112990,
        4511980000
    ],
    [
        1112980,
        4503402500
    ],
    [
        1112970,
        4502000000
    ],
    [
        1112960,
        4496400000
    ],
    [
        1112950,
        4500000000
    ],
    [
        1112940,
        4502000000
    ],
    [
        1112930,
        4500910000
    ],
    [
        1112920,
        4517000000
    ],
    [
        1112910,
        4521000000
    ],
    [
        1112900,
        4524000000
    ],
    [
        1112880,
        4530000000
    ],
    [
        1112870,
        4541000000
    ],
    [
        1112850,
        4546490000
    ],
    [
        1112840,
        4545450000
    ],
    [
        1112830,
        4547000000
    ],
    [
        1112820,
        4553130000
    ],
    [
        1112810,
        4553000000
    ],
    [
        1112800,
        4550660000
    ],
    [
        1112790,
        4550000000
    ],
    [
        1112780,
        4566000000
    ],
    [
        1112770,
        4566902500
    ],
    [
        1112760,
        4571000000
    ],
    [
        1112750,
        4573655000
    ],
    [
        1112740,
        4573882000
    ],
    [
        1112730,
        4569690000
    ],
    [
        1112720,
        4566155000
    ],
    [
        1112710,
        4569690000
    ],
    [
        1112700,
        4604000000
    ],
    [
        1112690,
        4612995000
    ],
    [
        1112680,
        4615380000
    ],
    [
        1112670,
        4655000000
    ],
    [
        1112650,
        4657770000
    ],
    [
        1112640,
        4659700000
    ],
    [
        1112620,
        4688000000
    ],
    [
        1112590,
        4696588000
    ],
    [
        1112580,
        4692311000
    ],
    [
        1112570,
        4692000000
    ],
    [
        1112560,
        4672400000
    ],
    [
        1112540,
        4672240000
    ],
    [
        1112530,
        4673000000
    ],
    [
        1112520,
        4672000000
    ],
    [
        1112510,
        4687367000
    ],
    [
        1112500,
        4663230000
    ],
    [
        1112490,
        4655000000
    ],
    [
        1112480,
        4655230000
    ],
    [
        1112470,
        4663230000
    ],
    [
        1112450,
        4655000000
    ],
    [
        1112440,
        4657739000
    ],
    [
        1112430,
        4660440000
    ],
    [
        1112420,
        4661000000
    ],
    [
        1112410,
        4669000000
    ],
    [
        1112400,
        4687000000
    ],
    [
        1112390,
        4696530000
    ],
    [
        1112380,
        4690000000
    ],
    [
        1112370,
        4693000000
    ],
    [
        1112360,
        4693005000
    ],
    [
        1112350,
        4693000000
    ],
    [
        1112340,
        4706000000
    ],
    [
        1112330,
        4717080000
    ],
    [
        1112320,
        4709257000
    ],
    [
        1112310,
        4706000000
    ],
    [
        1112300,
        4637000000
    ],
    [
        1112250,
        4636000000
    ],
    [
        1112240,
        4635450000
    ],
    [
        1112230,
        4625020000
    ],
    [
        1112220,
        4619970000
    ],
    [
        1112210,
        4618066000
    ],
    [
        1112200,
        4642000000
    ],
    [
        1112190,
        4650403000
    ],
    [
        1112180,
        4694250000
    ],
    [
        1112170,
        4696195000
    ],
    [
        1112160,
        4696000000
    ],
    [
        1112140,
        4703528000
    ],
    [
        1112130,
        4740750000
    ],
    [
        1112120,
        4734280000
    ],
    [
        1112110,
        4726000000
    ],
    [
        1112100,
        4702000000
    ],
    [
        1112090,
        4699460000
    ],
    [
        1112080,
        4709397500
    ],
    [
        1112070,
        4719180000
    ],
    [
        1112060,
        4712457500
    ],
    [
        1112040,
        4634000000
    ],
    [
        1112030,
        4617690000
    ],
    [
        1112020,
        4618243000
    ],
    [
        1112010,
        4621320000
    ],
    [
        1112000,
        4627780000
    ],
    [
        1111990,
        4634000000
    ],
    [
        1111980,
        4627267500
    ],
    [
        1111970,
        4607280000
    ],
    [
        1111960,
        4596571000
    ],
    [
        1111950,
        4587910000
    ],
    [
        1111940,
        4584000000
    ],
    [
        1111930,
        4594720000
    ],
    [
        1111910,
        4571670000
    ],
    [
        1111880,
        4530000000
    ],
    [
        1111870,
        4529570000
    ],
    [
        1111860,
        4514000000
    ],
    [
        1111850,
        4516567000
    ],
    [
        1111840,
        4524000000
    ],
    [
        1111820,
        4530000000
    ],
    [
        1111800,
        4524000000
    ],
    [
        1111790,
        4527000000
    ],
    [
        1111780,
        4514340000
    ],
    [
        1111770,
        4514980000
    ],
    [
        1111680,
        4516590000
    ],
    [
        1111660,
        4532000000
    ],
    [
        1111650,
        4540310000
    ],
    [
        1111640,
        4552400000
    ],
    [
        1111630,
        4558000000
    ],
    [
        1111620,
        4559877000
    ],
    [
        1111610,
        4558000000
    ],
    [
        1111600,
        4555388000
    ],
    [
        1111590,
        4543460000
    ],
    [
        1111570,
        4532000000
    ],
    [
        1111560,
        4530780000
    ],
    [
        1111550,
        4524180000
    ],
    [
        1111540,
        4531000000
    ],
    [
        1111530,
        4531676000
    ],
    [
        1111520,
        4537683000
    ],
    [
        1111510,
        4558209000
    ],
    [
        1111500,
        4570287000
    ],
    [
        1111480,
        4583000000
    ],
    [
        1111460,
        4597580000
    ],
    [
        1111450,
        4620774000
    ],
    [
        1111440,
        4625060000
    ],
    [
        1111420,
        4622000000
    ],
    [
        1111410,
        4624000000
    ],
    [
        1111380,
        4650620000
    ],
    [
        1111370,
        4654000000
    ],
    [
        1111360,
        4664239000
    ],
    [
        1111350,
        4668000000
    ],
    [
        1111340,
        4680000000
    ],
    [
        1111330,
        4666000000
    ],
    [
        1111310,
        4668000000
    ],
    [
        1111280,
        4649000000
    ],
    [
        1111270,
        4614130000
    ],
    [
        1111250,
        4613000000
    ],
    [
        1111240,
        4612756000
    ],
    [
        1111230,
        4578000000
    ],
    [
        1111220,
        4567000000
    ],
    [
        1111200,
        4548000000
    ],
    [
        1111190,
        4544670000
    ],
    [
        1111170,
        4392000000
    ],
    [
        1111160,
        4370000000
    ],
    [
        1111150,
        4380770000
    ],
    [
        1111140,
        4370000000
    ],
    [
        1111120,
        4396076000
    ],
    [
        1111080,
        4370000000
    ],
    [
        1111070,
        4364120000
    ],
    [
        1111020,
        4327000000
    ],
    [
        1111010,
        4288455000
    ],
    [
        1110990,
        4280000000
    ],
    [
        1110980,
        4279000000
    ],
    [
        1110970,
        4276850000
    ],
    [
        1110960,
        4276430000
    ],
    [
        1110950,
        4272612500
    ],
    [
        1110940,
        4242000000
    ],
    [
        1110920,
        4222500000
    ],
    [
        1110900,
        4222000000
    ],
    [
        1110890,
        4223296000
    ],
    [
        1110870,
        4233200000
    ],
    [
        1110860,
        4231000000
    ],
    [
        1110850,
        4235000000
    ],
    [
        1110840,
        4237890000
    ],
    [
        1110820,
        4231450000
    ],
    [
        1110810,
        4250300000
    ],
    [
        1110800,
        4247000000
    ],
    [
        1110780,
        4225234000
    ],
    [
        1110770,
        4223027500
    ],
    [
        1110760,
        4259120000
    ],
    [
        1110740,
        4258675000
    ],
    [
        1110730,
        4257555000
    ],
    [
        1110720,
        4250400000
    ],
    [
        1110710,
        4241020000
    ],
    [
        1110700,
        4246995000
    ],
    [
        1110690,
        4223355000
    ],
    [
        1110670,
        4225456250
    ],
    [
        1110660,
        4243100000
    ],
    [
        1110650,
        4256880000
    ],
    [
        1110640,
        4255630000
    ],
    [
        1110630,
        4234280000
    ],
    [
        1110620,
        4230000000
    ],
    [
        1110610,
        4216292500
    ],
    [
        1110600,
        4224126000
    ],
    [
        1110590,
        4206670000
    ],
    [
        1110580,
        4200550000
    ],
    [
        1110570,
        4226140000
    ],
    [
        1110560,
        4230180000
    ],
    [
        1110550,
        4234585000
    ],
    [
        1110540,
        4243500000
    ],
    [
        1110530,
        4250715500
    ],
    [
        1110520,
        4245000000
    ],
    [
        1110510,
        4297051250
    ],
    [
        1110500,
        4318500000
    ],
    [
        1110490,
        4318958000
    ],
    [
        1110480,
        4321941000
    ],
    [
        1110460,
        4318020000
    ],
    [
        1110450,
        4332352500
    ],
    [
        1110440,
        4335190000
    ],
    [
        1110430,
        4334575000
    ],
    [
        1110420,
        4334218750
    ],
    [
        1110410,
        4331272750
    ],
    [
        1110400,
        4338770000
    ],
    [
        1110390,
        4342163750
    ],
    [
        1110380,
        4343460500
    ],
    [
        1110370,
        4347500000
    ],
    [
        1110340,
        4342000000
    ],
    [
        1110330,
        4341870000
    ],
    [
        1110300,
        4377045000
    ],
    [
        1110230,
        4389955000
    ],
    [
        1110220,
        4401310000
    ],
    [
        1110210,
        4403000000
    ],
    [
        1110200,
        4399020000
    ],
    [
        1110190,
        4393895000
    ],
    [
        1110160,
        4403000000
    ],
    [
        1110150,
        4402634500
    ],
    [
        1110140,
        4413968250
    ],
    [
        1110130,
        4421950000
    ],
    [
        1110120,
        4417795000
    ],
    [
        1110110,
        4427101000
    ],
    [
        1110100,
        4410993000
    ],
    [
        1110090,
        4400232500
    ],
    [
        1110080,
        4385832500
    ],
    [
        1110070,
        4382111000
    ],
    [
        1110060,
        4390500000
    ],
    [
        1110050,
        4405194500
    ],
    [
        1110030,
        4415740000
    ],
    [
        1110020,
        4417624000
    ],
    [
        1110010,
        4420410000
    ],
    [
        1110000,
        4422299500
    ],
    [
        1109990,
        4417960000
    ],
    [
        1109980,
        4417000000
    ],
    [
        1109970,
        4402268000
    ],
    [
        1109960,
        4407820500
    ],
    [
        1109890,
        4388720000
    ],
    [
        1109880,
        4396522500
    ],
    [
        1109870,
        4409880000
    ],
    [
        1109860,
        4408030000
    ],
    [
        1109850,
        4408788750
    ],
    [
        1109840,
        4427651250
    ],
    [
        1109830,
        4436544500
    ],
    [
        1109820,
        4452525000
    ],
    [
        1109810,
        4457390000
    ],
    [
        1109800,
        4505168250
    ],
    [
        1109790,
        4505927000
    ],
    [
        1109780,
        4510162000
    ],
    [
        1109770,
        4512106250
    ],
    [
        1109760,
        4528106250
    ],
    [
        1109750,
        4540462500
    ],
    [
        1109740,
        4546792500
    ],
    [
        1109730,
        4553557500
    ],
    [
        1109720,
        4555831250
    ],
    [
        1109710,
        4556000000
    ],
    [
        1109690,
        4519860000
    ],
    [
        1109680,
        4521500000
    ],
    [
        1109670,
        4518760000
    ],
    [
        1109660,
        4523250000
    ],
    [
        1109640,
        4511000000
    ],
    [
        1109630,
        4506500000
    ],
    [
        1109620,
        4501260000
    ],
    [
        1109610,
        4501725000
    ],
    [
        1109600,
        4507256250
    ],
    [
        1109590,
        4510632500
    ],
    [
        1109580,
        4511000000
    ],
    [
        1109570,
        4489475000
    ],
    [
        1109560,
        4498065000
    ],
    [
        1109530,
        4500895000
    ],
    [
        1109510,
        4482395000
    ],
    [
        1109500,
        4467395000
    ],
    [
        1109490,
        4464379000
    ],
    [
        1109450,
        4451500000
    ],
    [
        1109440,
        4386285000
    ],
    [
        1109410,
        4385365000
    ],
    [
        1109400,
        4384305000
    ],
    [
        1109390,
        4373835000
    ],
    [
        1109380,
        4358837500
    ],
    [
        1109370,
        4353890000
    ],
    [
        1109360,
        4335915000
    ],
    [
        1109340,
        4304000000
    ],
    [
        1109330,
        4285000000
    ],
    [
        1109310,
        4295000000
    ],
    [
        1109300,
        4288310000
    ],
    [
        1109290,
        4284990000
    ],
    [
        1109280,
        4289017500
    ],
    [
        1109270,
        4320000000
    ],
    [
        1109260,
        4322000000
    ],
    [
        1109250,
        4343000000
    ],
    [
        1109240,
        4350000000
    ],
    [
        1109230,
        4355590000
    ],
    [
        1109220,
        4347000000
    ],
    [
        1109200,
        4343000000
    ],
    [
        1109180,
        4360000000
    ],
    [
        1109170,
        4366000000
    ],
    [
        1109160,
        4369937500
    ],
    [
        1109140,
        4377570000
    ],
    [
        1109130,
        4372000000
    ],
    [
        1108730,
        4259000000
    ],
    [
        1108720,
        4250110000
    ],
    [
        1108710,
        4230300000
    ],
    [
        1108700,
        4229227500
    ],
    [
        1108640,
        4228790000
    ],
    [
        1108630,
        4230300000
    ],
    [
        1108620,
        4274000000
    ],
    [
        1108610,
        4275650000
    ],
    [
        1108590,
        4274000000
    ],
    [
        1108570,
        4272000000
    ],
    [
        1108560,
        4278780000
    ],
    [
        1108550,
        4284750000
    ],
    [
        1108540,
        4295000000
    ],
    [
        1108520,
        4296000000
    ],
    [
        1108510,
        4310200000
    ],
    [
        1108500,
        4301957500
    ],
    [
        1108490,
        4325000000
    ],
    [
        1108480,
        4328630000
    ],
    [
        1108470,
        4334230000
    ],
    [
        1108440,
        4341000000
    ],
    [
        1108430,
        4335767500
    ],
    [
        1108420,
        4337642500
    ],
    [
        1108410,
        4332000000
    ],
    [
        1108400,
        4331000000
    ],
    [
        1108370,
        4330880000
    ],
    [
        1108350,
        4317000000
    ],
    [
        1108340,
        4317740000
    ],
    [
        1108330,
        4317000000
    ],
    [
        1108320,
        4314807500
    ],
    [
        1108300,
        4308000000
    ],
    [
        1108290,
        4305232500
    ],
    [
        1108280,
        4306117500
    ],
    [
        1108270,
        4283710000
    ],
    [
        1108250,
        4280020000
    ],
    [
        1108240,
        4296746000
    ],
    [
        1108230,
        4299280000
    ],
    [
        1108180,
        4258000000
    ],
    [
        1108160,
        4252000000
    ],
    [
        1108090,
        4197085000
    ],
    [
        1108080,
        4200770000
    ],
    [
        1108070,
        4206470000
    ],
    [
        1108050,
        4209256250
    ],
    [
        1108040,
        4219153750
    ],
    [
        1108030,
        4222000000
    ],
    [
        1108020,
        4223095000
    ],
    [
        1108010,
        4208657500
    ],
    [
        1108000,
        4199105000
    ],
    [
        1107990,
        4198711250
    ],
    [
        1107980,
        4199375000
    ],
    [
        1107970,
        4195200000
    ],
    [
        1107950,
        4188430000
    ],
    [
        1107940,
        4181075000
    ],
    [
        1107930,
        4173000000
    ],
    [
        1107920,
        4163525000
    ],
    [
        1107910,
        4162858500
    ],
    [
        1107900,
        4168068500
    ],
    [
        1107880,
        4170000000
    ],
    [
        1107870,
        4172000000
    ],
    [
        1107860,
        4171335000
    ],
    [
        1107840,
        4172000000
    ],
    [
        1107830,
        4172030000
    ],
    [
        1107820,
        4182021250
    ],
    [
        1107810,
        4183791250
    ],
    [
        1107800,
        4182021250
    ],
    [
        1107790,
        4207045000
    ],
    [
        1107780,
        4208880000
    ],
    [
        1107770,
        4202630000
    ],
    [
        1107760,
        4210911250
    ],
    [
        1107740,
        4231000000
    ],
    [
        1107730,
        4237376250
    ],
    [
        1107710,
        4244327500
    ],
    [
        1107700,
        4248291250
    ],
    [
        1107690,
        4257351000
    ],
    [
        1107680,
        4262615000
    ],
    [
        1107670,
        4264305000
    ],
    [
        1107650,
        4270000000
    ],
    [
        1107640,
        4273810000
    ],
    [
        1107600,
        4283000000
    ],
    [
        1107580,
        4295000000
    ],
    [
        1107570,
        4299000000
    ],
    [
        1107560,
        4300655000
    ],
    [
        1107550,
        4299487500
    ],
    [
        1107530,
        4303000000
    ],
    [
        1107510,
        4331555000
    ],
    [
        1107500,
        4338578500
    ],
    [
        1107480,
        4352690000
    ],
    [
        1107470,
        4318755000
    ],
    [
        1107450,
        4276923750
    ],
    [
        1107440,
        4269500000
    ],
    [
        1107430,
        4272005000
    ],
    [
        1107420,
        4304604500
    ],
    [
        1107400,
        4313884500
    ],
    [
        1107380,
        4335000000
    ],
    [
        1107370,
        4337650000
    ],
    [
        1107360,
        4343595000
    ],
    [
        1107350,
        4338552500
    ],
    [
        1107330,
        4339150000
    ],
    [
        1107300,
        4334345500
    ],
    [
        1107290,
        4336352000
    ],
    [
        1107280,
        4356352000
    ],
    [
        1107270,
        4350605000
    ],
    [
        1107260,
        4362455000
    ],
    [
        1107200,
        4366365000
    ],
    [
        1107190,
        4371365000
    ],
    [
        1107160,
        4376000000
    ],
    [
        1107150,
        4380444500
    ],
    [
        1107130,
        4380500000
    ],
    [
        1107120,
        4368332500
    ],
    [
        1107110,
        4364940000
    ],
    [
        1107100,
        4363785000
    ],
    [
        1107090,
        4355657500
    ],
    [
        1107070,
        4337183750
    ],
    [
        1107060,
        4331200000
    ],
    [
        1107010,
        4316000000
    ],
    [
        1107000,
        4316048750
    ],
    [
        1106990,
        4308495000
    ],
    [
        1106970,
        4298375000
    ],
    [
        1106960,
        4293788500
    ],
    [
        1106950,
        4297885000
    ],
    [
        1106920,
        4348767000
    ],
    [
        1106910,
        4371500000
    ],
    [
        1106840,
        4381401250
    ],
    [
        1106750,
        4401500000
    ],
    [
        1106740,
        4402070000
    ],
    [
        1106730,
        4416416500
    ],
    [
        1106710,
        4425346000
    ],
    [
        1106700,
        4410954500
    ],
    [
        1106690,
        4436105000
    ],
    [
        1106680,
        4448000000
    ],
    [
        1106670,
        4510379000
    ],
    [
        1106660,
        4512379000
    ],
    [
        1106650,
        4506000000
    ],
    [
        1106620,
        4520571500
    ],
    [
        1106610,
        4519625500
    ],
    [
        1106600,
        4552445000
    ],
    [
        1106590,
        4556913000
    ],
    [
        1106550,
        4559500000
    ],
    [
        1106540,
        4556500000
    ],
    [
        1106490,
        4564276500
    ],
    [
        1106480,
        4566776500
    ],
    [
        1106470,
        4566221000
    ],
    [
        1106450,
        4568140000
    ],
    [
        1106420,
        4567554000
    ],
    [
        1106350,
        4580000000
    ],
    [
        1106280,
        4590500000
    ],
    [
        1106220,
        4602940000
    ],
    [
        1106210,
        4615882500
    ],
    [
        1106200,
        4604867500
    ],
    [
        1106160,
        4602940000
    ],
    [
        1106140,
        4612460000
    ],
    [
        1105600,
        4575847500
    ],
    [
        1105530,
        4585000000
    ],
    [
        1105520,
        4611885000
    ],
    [
        1105500,
        4622152500
    ],
    [
        1104010,
        4082780000
    ],
    [
        1103950,
        4086890000
    ],
    [
        1103580,
        4091000000
    ],
    [
        1103520,
        4083000000
    ],
    [
        1103320,
        4066910000
    ],
    [
        1103270,
        4074845000
    ],
    [
        1102600,
        4086890000
    ],
    [
        1102590,
        4092563750
    ],
    [
        1102580,
        4092715000
    ],
    [
        1102570,
        4106137500
    ],
    [
        1102550,
        4153767500
    ],
    [
        1102490,
        4200710000
    ],
    [
        1102430,
        4239080000
    ],
    [
        1101860,
        4600640000
    ],
    [
        1101850,
        4620472500
    ],
    [
        1101650,
        4626700000
    ],
    [
        1101630,
        4630000000
    ],
    [
        1101590,
        4637526000
    ],
    [
        1099810,
        4843210000
    ],
    [
        1099780,
        4858000000
    ],
    [
        1099770,
        4908048000
    ],
    [
        1099760,
        4930000000
    ],
    [
        1099750,
        4936328000
    ],
    [
        1099740,
        4958450000
    ],
    [
        1099730,
        4943560000
    ],
    [
        1099690,
        4989000000
    ],
    [
        1099680,
        4997490500
    ],
    [
        1099670,
        5019034500
    ],
    [
        1099650,
        5024288500
    ],
    [
        1099630,
        5034165000
    ],
    [
        1099620,
        5044935000
    ],
    [
        1099600,
        5046500000
    ],
    [
        1099590,
        5049285000
    ],
    [
        1099580,
        5055100000
    ],
    [
        1099560,
        5060325000
    ],
    [
        1099550,
        5057175000
    ],
    [
        1099530,
        5058025000
    ],
    [
        1099510,
        5049057000
    ],
    [
        1099500,
        5047000000
    ],
    [
        1099470,
        5043779500
    ],
    [
        1099460,
        5046647500
    ],
    [
        1099450,
        5050977500
    ],
    [
        1099420,
        5059948000
    ],
    [
        1099410,
        5078491000
    ],
    [
        1099390,
        5072761250
    ],
    [
        1099380,
        5080000000
    ],
    [
        1099370,
        5079000000
    ],
    [
        1099360,
        5085330000
    ],
    [
        1099340,
        5076146000
    ],
    [
        1099290,
        5073000000
    ],
    [
        1099280,
        5056000000
    ],
    [
        1099270,
        5064506000
    ],
    [
        1099220,
        5069035000
    ],
    [
        1099210,
        5071000000
    ],
    [
        1099190,
        5056000000
    ],
    [
        1099180,
        5034485000
    ],
    [
        1099170,
        5033074000
    ],
    [
        1099160,
        5029000000
    ],
    [
        1099140,
        5023265000
    ],
    [
        1099130,
        5028028000
    ],
    [
        1099090,
        5043240000
    ],
    [
        1099080,
        5097660000
    ],
    [
        1099060,
        5252000000
    ],
    [
        1099050,
        5256240000
    ],
    [
        1099040,
        5258000000
    ],
    [
        1099020,
        5256240000
    ],
    [
        1099000,
        5258000000
    ],
    [
        1098970,
        5261780000
    ],
    [
        1098950,
        5261867500
    ],
    [
        1098930,
        5268133750
    ],
    [
        1098920,
        5257970000
    ],
    [
        1098900,
        5247586000
    ],
    [
        1098860,
        5289173750
    ],
    [
        1098790,
        5328673750
    ],
    [
        1098740,
        5329743750
    ],
    [
        1098720,
        5306318750
    ],
    [
        1098710,
        5366000000
    ],
    [
        1098680,
        5355062500
    ],
    [
        1098670,
        5258000000
    ],
    [
        1098630,
        5249000000
    ],
    [
        1098610,
        5213939000
    ],
    [
        1098580,
        5237752500
    ],
    [
        1098550,
        5240000000
    ],
    [
        1098540,
        5249000000
    ],
    [
        1098480,
        5280000000
    ],
    [
        1098470,
        5292178000
    ],
    [
        1098460,
        5300087500
    ],
    [
        1098440,
        5305427000
    ],
    [
        1098410,
        5363400000
    ],
    [
        1098370,
        5395725000
    ],
    [
        1098360,
        5419085000
    ],
    [
        1098340,
        5427762500
    ],
    [
        1098320,
        5388085000
    ],
    [
        1098300,
        5358000000
    ],
    [
        1098290,
        5291380000
    ],
    [
        1098260,
        5216903000
    ],
    [
        1098190,
        5090960000
    ],
    [
        1097840,
        5067000000
    ],
    [
        1097600,
        5065000000
    ],
    [
        1097550,
        5067000000
    ],
    [
        1097500,
        5065000000
    ],
    [
        1097290,
        5067000000
    ],
    [
        1097280,
        5074000000
    ],
    [
        1097270,
        5062000000
    ],
    [
        1097260,
        5054000000
    ],
    [
        1097200,
        5053600000
    ],
    [
        1097190,
        5042680000
    ],
    [
        1097160,
        5043000000
    ],
    [
        1097150,
        5039390000
    ],
    [
        1097140,
        5044000000
    ],
    [
        1097120,
        5051803000
    ],
    [
        1097080,
        5044000000
    ],
    [
        1096950,
        5053600000
    ],
    [
        1096910,
        5054000000
    ],
    [
        1096900,
        5168000000
    ],
    [
        1096880,
        5168401250
    ],
    [
        1096850,
        5168000000
    ],
    [
        1096830,
        5166490000
    ],
    [
        1096820,
        5162343750
    ],
    [
        1096800,
        5161335000
    ],
    [
        1096780,
        5139380000
    ],
    [
        1096770,
        5142000000
    ],
    [
        1096750,
        5129000000
    ],
    [
        1096740,
        5107000000
    ],
    [
        1096730,
        5100720000
    ],
    [
        1096700,
        5084000000
    ],
    [
        1096690,
        5090560000
    ],
    [
        1096590,
        5085290000
    ],
    [
        1096540,
        5084145000
    ],
    [
        1096520,
        5081190000
    ],
    [
        1096480,
        5076645000
    ],
    [
        1096460,
        5085290000
    ],
    [
        1096430,
        5069000000
    ],
    [
        1096420,
        5104000000
    ],
    [
        1096410,
        5107000000
    ],
    [
        1095720,
        4840436000
    ],
    [
        1095610,
        4831470000
    ],
    [
        1095580,
        4835953000
    ],
    [
        1095570,
        4801753000
    ],
    [
        1095490,
        4795280500
    ],
    [
        1095470,
        4813455500
    ],
    [
        1095460,
        4824245500
    ],
    [
        1095420,
        4824131500
    ],
    [
        1095390,
        4851043500
    ],
    [
        1095360,
        4969158500
    ],
    [
        1095330,
        4971500000
    ],
    [
        1095280,
        4985955000
    ],
    [
        1095210,
        4990000000
    ],
    [
        1095160,
        4995350000
    ],
    [
        1095130,
        4980650000
    ],
    [
        1095120,
        4975560000
    ],
    [
        1095110,
        4999000000
    ],
    [
        1094650,
        5029230000
    ],
    [
        1094430,
        5014115000
    ],
    [
        1094420,
        5020115000
    ],
    [
        1094410,
        5054115000
    ],
    [
        1094380,
        5088285000
    ],
    [
        1094370,
        5119285000
    ],
    [
        1094330,
        5087345000
    ],
    [
        1094280,
        5088285000
    ],
    [
        1094230,
        5094385000
    ],
    [
        1094220,
        5078060000
    ],
    [
        1094200,
        5101200000
    ],
    [
        1094170,
        5080860000
    ],
    [
        1094150,
        5082210000
    ],
    [
        1094140,
        5113710000
    ],
    [
        1094080,
        5142046250
    ],
    [
        1094070,
        5146550000
    ],
    [
        1094020,
        5178205000
    ],
    [
        1093950,
        5158205000
    ],
    [
        1093940,
        5118873500
    ],
    [
        1093910,
        5083873500
    ],
    [
        1093890,
        5132500000
    ],
    [
        1093870,
        5145651500
    ],
    [
        1093850,
        5143000000
    ],
    [
        1093760,
        5017500000
    ],
    [
        1093730,
        5015627500
    ],
    [
        1093720,
        5000000000
    ],
    [
        1093700,
        4999675000
    ],
    [
        1093690,
        4993675000
    ],
    [
        1093680,
        4964761000
    ],
    [
        1093650,
        4961208500
    ],
    [
        1093640,
        4965447500
    ],
    [
        1093610,
        5000000000
    ],
    [
        1093590,
        4937185000
    ],
    [
        1093580,
        4939000000
    ],
    [
        1093570,
        4946000000
    ],
    [
        1093550,
        4904000000
    ],
    [
        1093530,
        4828337500
    ],
    [
        1093520,
        4907830000
    ],
    [
        1093500,
        4758309000
    ],
    [
        1093490,
        4656000000
    ],
    [
        1093450,
        4635000000
    ],
    [
        1093440,
        4579000000
    ],
    [
        1093430,
        4495795000
    ],
    [
        1093400,
        4458000000
    ],
    [
        1093390,
        4445730000
    ],
    [
        1093370,
        4435331000
    ],
    [
        1093360,
        4445730000
    ],
    [
        1093340,
        4458000000
    ],
    [
        1093320,
        4493370000
    ],
    [
        1093310,
        4483000000
    ],
    [
        1093300,
        4529430000
    ],
    [
        1093290,
        4552475000
    ],
    [
        1093270,
        4463000000
    ],
    [
        1093250,
        4458450000
    ],
    [
        1093240,
        4463000000
    ],
    [
        1093230,
        4553000000
    ],
    [
        1093220,
        4554512000
    ],
    [
        1093210,
        4568000000
    ],
    [
        1093200,
        4561002500
    ],
    [
        1093190,
        4559000000
    ],
    [
        1093180,
        4578257000
    ],
    [
        1093140,
        4595446000
    ],
    [
        1093130,
        4596000000
    ],
    [
        1093120,
        4617000000
    ],
    [
        1093100,
        4626000000
    ],
    [
        1093080,
        4625000000
    ],
    [
        1093070,
        4626000000
    ],
    [
        1093060,
        4668824000
    ],
    [
        1093050,
        4679000000
    ],
    [
        1093040,
        4658590000
    ],
    [
        1093000,
        4648000000
    ],
    [
        1092980,
        4643868000
    ],
    [
        1092970,
        4648000000
    ],
    [
        1092950,
        4632522500
    ],
    [
        1092930,
        4628219000
    ],
    [
        1092920,
        4638890000
    ],
    [
        1092880,
        4640613000
    ],
    [
        1092840,
        4620000000
    ],
    [
        1092830,
        4641859000
    ],
    [
        1092820,
        4682354000
    ],
    [
        1092790,
        4717000000
    ],
    [
        1092770,
        4718000000
    ],
    [
        1092720,
        4675000000
    ],
    [
        1092710,
        4671140000
    ],
    [
        1092690,
        4669040000
    ],
    [
        1092660,
        4646000000
    ],
    [
        1092650,
        4647782500
    ],
    [
        1092640,
        4654000000
    ],
    [
        1092630,
        4647710000
    ],
    [
        1092600,
        4643804000
    ],
    [
        1092590,
        4645000000
    ],
    [
        1092580,
        4654147000
    ],
    [
        1092570,
        4656970000
    ],
    [
        1092560,
        4657776000
    ],
    [
        1092540,
        4662000000
    ],
    [
        1092530,
        4667000000
    ],
    [
        1092520,
        4669000000
    ],
    [
        1092510,
        4671330000
    ],
    [
        1092500,
        4678000000
    ],
    [
        1092480,
        4671330000
    ],
    [
        1092470,
        4669000000
    ],
    [
        1092460,
        4651050000
    ],
    [
        1092450,
        4649952500
    ],
    [
        1092440,
        4647000000
    ],
    [
        1092430,
        4645330000
    ],
    [
        1092390,
        4635093000
    ],
    [
        1092340,
        4634000000
    ],
    [
        1092320,
        4614990000
    ],
    [
        1092310,
        4607835000
    ],
    [
        1092300,
        4583130500
    ],
    [
        1092290,
        4627942500
    ],
    [
        1092280,
        4629827500
    ],
    [
        1092270,
        4695192500
    ],
    [
        1092260,
        4709755000
    ],
    [
        1092250,
        4730430000
    ],
    [
        1092240,
        4748230000
    ],
    [
        1092230,
        4750031250
    ],
    [
        1092220,
        4808600000
    ],
    [
        1092210,
        4825871250
    ],
    [
        1092200,
        4847371250
    ],
    [
        1092190,
        4851887250
    ],
    [
        1092180,
        4898937500
    ],
    [
        1092170,
        4928165000
    ],
    [
        1092110,
        4806310500
    ],
    [
        1092090,
        4773210500
    ],
    [
        1092070,
        4743825000
    ],
    [
        1092060,
        4741000000
    ],
    [
        1092050,
        4734812500
    ],
    [
        1092040,
        4746635000
    ],
    [
        1092030,
        4784044000
    ],
    [
        1092020,
        4792780000
    ],
    [
        1091980,
        4800415000
    ],
    [
        1091890,
        4800415000
    ],
    [
        1091740,
        4790253750
    ],
    [
        1091720,
        4849185000
    ],
    [
        1091710,
        4906180000
    ],
    [
        1091690,
        4892870000
    ],
    [
        1091670,
        4832100000
    ],
    [
        1091660,
        4830008750
    ],
    [
        1091650,
        4824855000
    ],
    [
        1091640,
        4850010000
    ],
    [
        1091630,
        4798695000
    ],
    [
        1091610,
        4804100000
    ],
    [
        1091600,
        4803567500
    ],
    [
        1091590,
        4801000000
    ],
    [
        1091570,
        4797500000
    ],
    [
        1091560,
        4801000000
    ],
    [
        1091550,
        4807000000
    ],
    [
        1091540,
        4807100000
    ],
    [
        1091520,
        4808230000
    ],
    [
        1091510,
        4807000000
    ],
    [
        1091500,
        4885529250
    ],
    [
        1091470,
        4905855000
    ],
    [
        1091460,
        4916855000
    ],
    [
        1091440,
        4928464000
    ],
    [
        1091430,
        5005517500
    ],
    [
        1091410,
        5021390000
    ],
    [
        1091400,
        5057000000
    ],
    [
        1091390,
        5055870000
    ],
    [
        1091380,
        5061000000
    ],
    [
        1091370,
        5106312500
    ],
    [
        1091340,
        5104000000
    ],
    [
        1091330,
        5066470000
    ],
    [
        1091320,
        5005985000
    ],
    [
        1091300,
        4993000000
    ],
    [
        1091290,
        4980000000
    ],
    [
        1091270,
        4973000000
    ],
    [
        1091250,
        4969000000
    ],
    [
        1091240,
        4971400000
    ],
    [
        1091230,
        4972355000
    ],
    [
        1091220,
        5000950000
    ],
    [
        1091210,
        5002917000
    ],
    [
        1091200,
        5074402500
    ],
    [
        1091160,
        5095757500
    ],
    [
        1091100,
        5104000000
    ],
    [
        1091090,
        5101417500
    ],
    [
        1090930,
        4837000000
    ],
    [
        1090920,
        4802076000
    ],
    [
        1090910,
        4775880000
    ],
    [
        1090900,
        4656760000
    ],
    [
        1090880,
        4637000000
    ],
    [
        1090860,
        4621790000
    ],
    [
        1090850,
        4585340000
    ],
    [
        1090840,
        4563920000
    ],
    [
        1090760,
        4356000000
    ],
    [
        1090750,
        4354000000
    ],
    [
        1090740,
        4343230000
    ],
    [
        1090720,
        4334683000
    ],
    [
        1090710,
        4326130000
    ],
    [
        1090680,
        4280000000
    ],
    [
        1090670,
        4274527500
    ],
    [
        1090660,
        4271380000
    ],
    [
        1090640,
        4265000000
    ],
    [
        1090620,
        4262000000
    ],
    [
        1090610,
        4263090000
    ],
    [
        1090600,
        4261215000
    ],
    [
        1090570,
        4294060000
    ],
    [
        1090550,
        4295000000
    ],
    [
        1090540,
        4296000000
    ],
    [
        1090520,
        4298000000
    ],
    [
        1090510,
        4300490000
    ],
    [
        1090500,
        4301457500
    ],
    [
        1090490,
        4302000000
    ],
    [
        1090480,
        4260470000
    ],
    [
        1090460,
        4260000000
    ],
    [
        1090440,
        4256000000
    ],
    [
        1090410,
        4246605000
    ],
    [
        1090400,
        4253962500
    ],
    [
        1090390,
        4249442500
    ],
    [
        1090370,
        4251555000
    ],
    [
        1090350,
        4252760000
    ],
    [
        1090310,
        4260000000
    ],
    [
        1090300,
        4247282500
    ],
    [
        1090290,
        4247967500
    ],
    [
        1090270,
        4259000000
    ],
    [
        1090240,
        4260000000
    ],
    [
        1090220,
        4273000000
    ],
    [
        1090210,
        4282173750
    ],
    [
        1090190,
        4278365000
    ],
    [
        1090180,
        4280955000
    ],
    [
        1090170,
        4278935000
    ],
    [
        1090150,
        4274815000
    ],
    [
        1090140,
        4285455000
    ],
    [
        1090130,
        4289785000
    ],
    [
        1090120,
        4274382500
    ],
    [
        1090110,
        4279455000
    ],
    [
        1090090,
        4278815000
    ],
    [
        1090080,
        4274815000
    ],
    [
        1090070,
        4257861250
    ],
    [
        1090060,
        4244200000
    ],
    [
        1090050,
        4234855000
    ],
    [
        1090040,
        4235486250
    ],
    [
        1089990,
        4227355000
    ],
    [
        1089980,
        4228710000
    ],
    [
        1089950,
        4226000000
    ],
    [
        1089940,
        4223460000
    ],
    [
        1089930,
        4218992500
    ],
    [
        1089920,
        4221380000
    ],
    [
        1089910,
        4215610000
    ],
    [
        1089900,
        4222322500
    ],
    [
        1089890,
        4222000000
    ],
    [
        1089880,
        4206315000
    ],
    [
        1089850,
        4213000000
    ],
    [
        1089840,
        4206840000
    ],
    [
        1089830,
        4202990000
    ],
    [
        1089810,
        4200870000
    ],
    [
        1089800,
        4189000000
    ],
    [
        1089760,
        4169620000
    ],
    [
        1089730,
        4167610000
    ],
    [
        1089710,
        4186000000
    ],
    [
        1089700,
        4189000000
    ],
    [
        1089670,
        4197000000
    ],
    [
        1089660,
        4270640000
    ],
    [
        1089650,
        4283000000
    ],
    [
        1089620,
        4283950000
    ],
    [
        1089610,
        4289240000
    ],
    [
        1089600,
        4282310000
    ],
    [
        1089590,
        4303820000
    ],
    [
        1089570,
        4279050000
    ],
    [
        1089560,
        4279065000
    ],
    [
        1089550,
        4279050000
    ],
    [
        1089540,
        4276900000
    ],
    [
        1089530,
        4279050000
    ],
    [
        1089520,
        4293000000
    ],
    [
        1089510,
        4307546000
    ],
    [
        1089480,
        4360454000
    ],
    [
        1089470,
        4410000000
    ],
    [
        1089450,
        4424000000
    ],
    [
        1089440,
        4399960000
    ],
    [
        1089430,
        4420282500
    ],
    [
        1089400,
        4422000000
    ],
    [
        1089390,
        4330340000
    ],
    [
        1089380,
        4304000000
    ],
    [
        1089370,
        4303050000
    ],
    [
        1089360,
        4300040000
    ],
    [
        1089340,
        4264000000
    ],
    [
        1089300,
        4286000000
    ],
    [
        1089290,
        4289000000
    ],
    [
        1089270,
        4332310000
    ],
    [
        1089260,
        4337000000
    ],
    [
        1089250,
        4346000000
    ],
    [
        1089240,
        4338000000
    ],
    [
        1089230,
        4346000000
    ],
    [
        1089220,
        4365650000
    ],
    [
        1089180,
        4519040000
    ],
    [
        1089170,
        4530980000
    ],
    [
        1089160,
        4547000000
    ],
    [
        1089150,
        4483770000
    ],
    [
        1089130,
        4474365000
    ],
    [
        1089120,
        4420000000
    ],
    [
        1089110,
        4383297500
    ],
    [
        1089100,
        4391590000
    ],
    [
        1089090,
        4364700000
    ],
    [
        1089050,
        4339000000
    ],
    [
        1089040,
        4348675000
    ],
    [
        1089030,
        4382960000
    ],
    [
        1089010,
        4386000000
    ],
    [
        1089000,
        4399000000
    ],
    [
        1088990,
        4396150000
    ],
    [
        1088980,
        4386000000
    ],
    [
        1088970,
        4389290000
    ],
    [
        1088960,
        4364700000
    ],
    [
        1088940,
        4342000000
    ],
    [
        1088930,
        4355420000
    ],
    [
        1088920,
        4364700000
    ],
    [
        1088900,
        4319087500
    ],
    [
        1088890,
        4304580000
    ],
    [
        1088880,
        4290000000
    ],
    [
        1088870,
        4292140000
    ],
    [
        1088860,
        4332640000
    ],
    [
        1088840,
        4353612000
    ],
    [
        1088830,
        4391940000
    ],
    [
        1088810,
        4393065000
    ],
    [
        1088800,
        4391940000
    ],
    [
        1088790,
        4366000000
    ],
    [
        1088780,
        4364700000
    ],
    [
        1088770,
        4370810000
    ],
    [
        1088740,
        4364700000
    ],
    [
        1088730,
        4371600000
    ],
    [
        1088720,
        4368710000
    ],
    [
        1088710,
        4408000000
    ],
    [
        1088700,
        4510160000
    ],
    [
        1088680,
        4533000000
    ],
    [
        1088670,
        4542500000
    ],
    [
        1088660,
        4535000000
    ],
    [
        1088650,
        4534000000
    ],
    [
        1088630,
        4535000000
    ],
    [
        1088620,
        4478305000
    ],
    [
        1088610,
        4482877500
    ],
    [
        1088600,
        4487360000
    ],
    [
        1088590,
        4501010000
    ],
    [
        1088580,
        4567000000
    ],
    [
        1088190,
        3946150000
    ],
    [
        1088180,
        3949000000
    ],
    [
        1088170,
        3950190000
    ],
    [
        1088160,
        3949000000
    ],
    [
        1088140,
        3933780000
    ],
    [
        1088130,
        3864000000
    ],
    [
        1088120,
        3862000000
    ],
    [
        1088100,
        3809730000
    ],
    [
        1088090,
        3823170000
    ],
    [
        1088080,
        3843760000
    ],
    [
        1088060,
        3856780000
    ],
    [
        1088050,
        3864540000
    ],
    [
        1088030,
        3856557500
    ],
    [
        1088020,
        3859012500
    ],
    [
        1088010,
        3851450000
    ],
    [
        1088000,
        3846000000
    ],
    [
        1087980,
        3851450000
    ],
    [
        1087970,
        3846000000
    ],
    [
        1087960,
        3820000000
    ],
    [
        1087950,
        3816690000
    ],
    [
        1087940,
        3816000000
    ],
    [
        1087930,
        3785295000
    ],
    [
        1087920,
        3779000000
    ],
    [
        1087890,
        3762167500
    ],
    [
        1087880,
        3746550000
    ],
    [
        1087870,
        3748660000
    ],
    [
        1087860,
        3756752500
    ],
    [
        1087850,
        3802340000
    ],
    [
        1087840,
        3792740000
    ],
    [
        1087830,
        3782000000
    ],
    [
        1087800,
        3736000000
    ],
    [
        1087790,
        3728630000
    ],
    [
        1087780,
        3724000000
    ],
    [
        1087750,
        3771000000
    ],
    [
        1087740,
        3797400000
    ],
    [
        1087730,
        3773880000
    ],
    [
        1087720,
        3780000000
    ],
    [
        1087700,
        3790130000
    ],
    [
        1087670,
        3796400000
    ],
    [
        1087660,
        3813150000
    ],
    [
        1087640,
        3811000000
    ],
    [
        1087630,
        3816967500
    ],
    [
        1087610,
        3833000000
    ],
    [
        1087600,
        3818930000
    ],
    [
        1087590,
        3811532500
    ],
    [
        1087560,
        3818930000
    ],
    [
        1087550,
        3811532500
    ],
    [
        1087540,
        3806460000
    ],
    [
        1087530,
        3807620000
    ],
    [
        1087520,
        3804760000
    ],
    [
        1087510,
        3820090000
    ],
    [
        1087500,
        3805000000
    ],
    [
        1087490,
        3807000000
    ],
    [
        1087480,
        3786452500
    ],
    [
        1087450,
        3699840000
    ],
    [
        1087430,
        3699000000
    ],
    [
        1087420,
        3687317500
    ],
    [
        1087410,
        3643590000
    ],
    [
        1087400,
        3639270000
    ],
    [
        1087360,
        3637000000
    ],
    [
        1087320,
        3621070000
    ],
    [
        1087310,
        3592000000
    ],
    [
        1087300,
        3582630000
    ],
    [
        1087280,
        3571790000
    ],
    [
        1087270,
        3559188000
    ],
    [
        1087260,
        3563804000
    ],
    [
        1087250,
        3571790000
    ],
    [
        1087230,
        3539360000
    ],
    [
        1087220,
        3557270000
    ],
    [
        1087210,
        3546626000
    ],
    [
        1087200,
        3519610000
    ],
    [
        1087190,
        3511556250
    ],
    [
        1087180,
        3513851250
    ],
    [
        1087170,
        3518311250
    ],
    [
        1087150,
        3568860000
    ],
    [
        1087140,
        3582620000
    ],
    [
        1087130,
        3578043750
    ],
    [
        1087120,
        3577400000
    ],
    [
        1087100,
        3529390000
    ],
    [
        1087090,
        3502723750
    ],
    [
        1087080,
        3498806250
    ],
    [
        1087060,
        3487936250
    ],
    [
        1087040,
        3476345000
    ],
    [
        1087020,
        3469975000
    ],
    [
        1087000,
        3477416250
    ],
    [
        1086980,
        3478475000
    ],
    [
        1086970,
        3472885000
    ],
    [
        1086960,
        3445000000
    ],
    [
        1086950,
        3440030500
    ],
    [
        1086930,
        3399557500
    ],
    [
        1086920,
        3404278750
    ],
    [
        1086910,
        3456000000
    ],
    [
        1086890,
        3456437500
    ],
    [
        1086880,
        3456765000
    ],
    [
        1086870,
        3454540000
    ],
    [
        1086860,
        3462500000
    ],
    [
        1086820,
        3449610000
    ],
    [
        1086810,
        3432880000
    ],
    [
        1086800,
        3415000000
    ],
    [
        1086790,
        3408000000
    ],
    [
        1086690,
        3345916500
    ],
    [
        1086670,
        3319970000
    ],
    [
        1086650,
        3325495000
    ],
    [
        1086610,
        3303590000
    ],
    [
        1086590,
        3296340000
    ],
    [
        1086580,
        3303245000
    ],
    [
        1086550,
        3354215000
    ],
    [
        1086540,
        3360627000
    ],
    [
        1086530,
        3388745000
    ],
    [
        1086520,
        3407000000
    ],
    [
        1086510,
        3427697000
    ],
    [
        1086500,
        3431764000
    ],
    [
        1086490,
        3468170000
    ],
    [
        1086470,
        3465670000
    ],
    [
        1086460,
        3455522500
    ],
    [
        1086450,
        3466065000
    ],
    [
        1086440,
        3462500000
    ],
    [
        1086430,
        3471426500
    ],
    [
        1086420,
        3466457500
    ],
    [
        1086410,
        3460270000
    ],
    [
        1086400,
        3451483750
    ],
    [
        1086390,
        3445766000
    ],
    [
        1086380,
        3447021250
    ],
    [
        1086370,
        3424500000
    ],
    [
        1086360,
        3422937500
    ],
    [
        1086340,
        3440705000
    ],
    [
        1086320,
        3404961000
    ],
    [
        1086310,
        3401091250
    ],
    [
        1086300,
        3382015500
    ],
    [
        1086290,
        3377515500
    ],
    [
        1086280,
        3382771250
    ],
    [
        1086270,
        3387676250
    ],
    [
        1086260,
        3391800000
    ],
    [
        1086240,
        3407845000
    ],
    [
        1086210,
        3403770500
    ],
    [
        1086190,
        3416475000
    ],
    [
        1086180,
        3415685000
    ],
    [
        1086170,
        3428086250
    ],
    [
        1086160,
        3365165000
    ],
    [
        1086150,
        3356617500
    ],
    [
        1086140,
        3351500000
    ],
    [
        1086130,
        3336197500
    ],
    [
        1086120,
        3323029000
    ],
    [
        1086110,
        3310963750
    ],
    [
        1086100,
        3298860000
    ],
    [
        1086080,
        3290842500
    ],
    [
        1086070,
        3290115000
    ],
    [
        1086060,
        3285785000
    ],
    [
        1086040,
        3281000000
    ],
    [
        1086030,
        3281486250
    ],
    [
        1086020,
        3289208500
    ],
    [
        1086010,
        3297052500
    ],
    [
        1086000,
        3298505000
    ],
    [
        1085990,
        3285145000
    ],
    [
        1085980,
        3271851250
    ],
    [
        1085970,
        3262891000
    ],
    [
        1085950,
        3270340000
    ],
    [
        1085940,
        3258115000
    ],
    [
        1085930,
        3251885000
    ],
    [
        1085910,
        3230295000
    ],
    [
        1085900,
        3223000000
    ],
    [
        1085890,
        3220915000
    ],
    [
        1085880,
        3219051000
    ],
    [
        1085870,
        3209000000
    ],
    [
        1085860,
        3212483750
    ],
    [
        1085850,
        3213983750
    ],
    [
        1085840,
        3221940000
    ],
    [
        1085830,
        3217338250
    ],
    [
        1085820,
        3212000000
    ],
    [
        1085800,
        3210552500
    ],
    [
        1085790,
        3198400000
    ],
    [
        1085780,
        3192500000
    ],
    [
        1085770,
        3173085000
    ],
    [
        1085760,
        3168105000
    ],
    [
        1085750,
        3182909000
    ],
    [
        1085740,
        3168934000
    ],
    [
        1085730,
        3165770000
    ],
    [
        1085720,
        3166000000
    ],
    [
        1085700,
        3162370000
    ],
    [
        1085690,
        3157660000
    ],
    [
        1085680,
        3157165000
    ],
    [
        1085670,
        3156085500
    ],
    [
        1085660,
        3154595000
    ],
    [
        1085650,
        3156819000
    ],
    [
        1085640,
        3157907750
    ],
    [
        1085630,
        3179205000
    ],
    [
        1085620,
        3183125000
    ],
    [
        1085610,
        3190501250
    ],
    [
        1085600,
        3191123750
    ],
    [
        1085590,
        3214300000
    ],
    [
        1085580,
        3208970000
    ],
    [
        1085570,
        3205056250
    ],
    [
        1085560,
        3172915000
    ],
    [
        1085550,
        3165084000
    ],
    [
        1085540,
        3149743750
    ],
    [
        1085510,
        3146313750
    ],
    [
        1085500,
        3150376250
    ],
    [
        1085490,
        3139160000
    ],
    [
        1085470,
        3140717500
    ],
    [
        1085460,
        3120914000
    ],
    [
        1085380,
        3120975000
    ],
    [
        1085370,
        3110030000
    ],
    [
        1085360,
        3105800000
    ],
    [
        1085350,
        3099625000
    ],
    [
        1085340,
        3098061000
    ],
    [
        1085330,
        3098000000
    ],
    [
        1085300,
        3040850000
    ],
    [
        1085280,
        3034545500
    ],
    [
        1085270,
        3034000000
    ],
    [
        1085260,
        3062830000
    ],
    [
        1085240,
        3067330000
    ],
    [
        1085230,
        3068468750
    ],
    [
        1085220,
        3073811000
    ],
    [
        1085210,
        3073982250
    ],
    [
        1085200,
        3065605000
    ],
    [
        1085190,
        3063417500
    ],
    [
        1085180,
        3066500000
    ],
    [
        1085170,
        3061935750
    ],
    [
        1085150,
        3054963750
    ],
    [
        1085140,
        3053841500
    ],
    [
        1085130,
        3054319000
    ],
    [
        1085120,
        3066894000
    ],
    [
        1085110,
        3061454000
    ],
    [
        1085090,
        3054401250
    ],
    [
        1085080,
        3044000000
    ],
    [
        1085070,
        3048520000
    ],
    [
        1085050,
        3043500000
    ],
    [
        1085040,
        3046135000
    ],
    [
        1085030,
        3043500000
    ],
    [
        1085020,
        3043384000
    ],
    [
        1085000,
        2980760000
    ],
    [
        1084980,
        2977000000
    ],
    [
        1084970,
        2969780000
    ],
    [
        1084960,
        2956370000
    ],
    [
        1084940,
        2944000000
    ],
    [
        1084930,
        2943812500
    ],
    [
        1084920,
        2940812500
    ],
    [
        1084910,
        2938592500
    ],
    [
        1084900,
        2949160000
    ],
    [
        1084890,
        2964122500
    ],
    [
        1084880,
        2967780000
    ],
    [
        1084870,
        2967192500
    ],
    [
        1084860,
        2984232500
    ],
    [
        1084850,
        3000360000
    ],
    [
        1084820,
        2991000000
    ],
    [
        1084800,
        2986963500
    ],
    [
        1084790,
        2983863000
    ],
    [
        1084750,
        2976500000
    ],
    [
        1084740,
        2973080000
    ],
    [
        1084730,
        2976708500
    ],
    [
        1084720,
        2969945000
    ],
    [
        1084710,
        2969440000
    ],
    [
        1084700,
        2969050000
    ],
    [
        1084690,
        2966000000
    ],
    [
        1084680,
        2953430000
    ],
    [
        1084670,
        2953000000
    ],
    [
        1084650,
        2947017000
    ],
    [
        1084640,
        2947310000
    ],
    [
        1084630,
        2952597500
    ],
    [
        1084620,
        2959000000
    ],
    [
        1084610,
        2966810000
    ],
    [
        1084600,
        2970294000
    ],
    [
        1084580,
        2969050000
    ],
    [
        1084570,
        2977000000
    ],
    [
        1084560,
        2995510000
    ],
    [
        1084540,
        2977000000
    ],
    [
        1084530,
        2965000000
    ],
    [
        1084520,
        2968367500
    ],
    [
        1084510,
        2951190000
    ],
    [
        1084490,
        2951000000
    ],
    [
        1084480,
        2951190000
    ],
    [
        1084470,
        2971740000
    ],
    [
        1084460,
        2964887500
    ],
    [
        1084450,
        2977000000
    ],
    [
        1084430,
        2950550000
    ],
    [
        1084410,
        2932000000
    ],
    [
        1084380,
        2913809000
    ],
    [
        1084340,
        2915080000
    ],
    [
        1084330,
        2913834000
    ],
    [
        1084320,
        2928040000
    ],
    [
        1084310,
        2931000000
    ],
    [
        1084300,
        2931420000
    ],
    [
        1084290,
        2943670000
    ],
    [
        1084280,
        2943550000
    ],
    [
        1084270,
        2952772500
    ],
    [
        1084260,
        2955957500
    ],
    [
        1084250,
        2960972000
    ],
    [
        1084240,
        2966125750
    ],
    [
        1084230,
        2978765750
    ],
    [
        1084210,
        2980759500
    ],
    [
        1084200,
        2986373250
    ],
    [
        1084190,
        3008000000
    ],
    [
        1084180,
        2991500000
    ],
    [
        1084140,
        2990000000
    ],
    [
        1084130,
        2988840000
    ],
    [
        1084120,
        2969000000
    ],
    [
        1084110,
        2956500000
    ],
    [
        1084100,
        2941585000
    ],
    [
        1084090,
        2937253500
    ],
    [
        1084080,
        2935218500
    ],
    [
        1083990,
        2921306000
    ],
    [
        1083980,
        2896882500
    ],
    [
        1083970,
        2894921000
    ],
    [
        1083960,
        2878738750
    ],
    [
        1083950,
        2891560000
    ],
    [
        1083930,
        2907200000
    ],
    [
        1083920,
        2900134000
    ],
    [
        1083910,
        2897374000
    ],
    [
        1083900,
        2898843000
    ],
    [
        1083890,
        2901374250
    ],
    [
        1083880,
        2910700000
    ],
    [
        1083870,
        2915806250
    ],
    [
        1083860,
        2919806250
    ],
    [
        1083840,
        2923000000
    ],
    [
        1083830,
        2920611000
    ],
    [
        1083820,
        2912105000
    ],
    [
        1083770,
        2913500000
    ],
    [
        1083760,
        2887330000
    ],
    [
        1083750,
        2883758750
    ],
    [
        1083730,
        2877830000
    ],
    [
        1083720,
        2875045000
    ],
    [
        1083710,
        2885705500
    ],
    [
        1083700,
        2883200000
    ],
    [
        1083680,
        2876290000
    ],
    [
        1083670,
        2871355000
    ],
    [
        1083660,
        2868042000
    ],
    [
        1083650,
        2865212000
    ],
    [
        1083640,
        2866212000
    ],
    [
        1083620,
        2868394000
    ],
    [
        1083610,
        2873368000
    ],
    [
        1083600,
        2906025500
    ],
    [
        1083590,
        2907410000
    ],
    [
        1083580,
        2902320500
    ],
    [
        1083540,
        2894000000
    ],
    [
        1083520,
        2884610000
    ],
    [
        1083500,
        2877500000
    ],
    [
        1083490,
        2864753000
    ],
    [
        1083480,
        2863369250
    ],
    [
        1083470,
        2865286250
    ],
    [
        1083460,
        2863369250
    ],
    [
        1083450,
        2859914000
    ],
    [
        1083440,
        2864587500
    ],
    [
        1083430,
        2864672500
    ],
    [
        1083420,
        2867836500
    ],
    [
        1083410,
        2877500000
    ],
    [
        1083390,
        2877261500
    ],
    [
        1083380,
        2874723500
    ],
    [
        1083370,
        2875287500
    ],
    [
        1083360,
        2875981250
    ],
    [
        1083350,
        2878000000
    ],
    [
        1083340,
        2871295000
    ],
    [
        1083330,
        2858295000
    ],
    [
        1083320,
        2862135000
    ],
    [
        1083310,
        2859478000
    ],
    [
        1083270,
        2853740000
    ],
    [
        1083250,
        2851045000
    ],
    [
        1083230,
        2850500000
    ],
    [
        1083210,
        2838005000
    ],
    [
        1083170,
        2836000000
    ],
    [
        1083160,
        2816500000
    ],
    [
        1083140,
        2815108000
    ],
    [
        1083130,
        2809505000
    ],
    [
        1083120,
        2811525000
    ],
    [
        1083110,
        2813765000
    ],
    [
        1083100,
        2811610000
    ],
    [
        1083050,
        2808865000
    ],
    [
        1083040,
        2812525500
    ],
    [
        1083030,
        2800365000
    ],
    [
        1083020,
        2795410000
    ],
    [
        1083010,
        2794246250
    ],
    [
        1083000,
        2786220000
    ],
    [
        1082990,
        2783500000
    ],
    [
        1082980,
        2772000000
    ],
    [
        1082970,
        2773000000
    ],
    [
        1082940,
        2756000000
    ],
    [
        1082930,
        2750652500
    ],
    [
        1082920,
        2744179000
    ],
    [
        1082910,
        2741215000
    ],
    [
        1082900,
        2752005750
    ],
    [
        1082890,
        2755404500
    ],
    [
        1082880,
        2743315000
    ],
    [
        1082870,
        2736000000
    ],
    [
        1082860,
        2723970000
    ],
    [
        1082850,
        2720445000
    ],
    [
        1082840,
        2720650000
    ],
    [
        1082830,
        2724600000
    ],
    [
        1082820,
        2710320000
    ],
    [
        1082810,
        2690755000
    ],
    [
        1082770,
        2738530000
    ],
    [
        1082760,
        2725010000
    ],
    [
        1082740,
        2717880000
    ],
    [
        1082720,
        2745000000
    ],
    [
        1082710,
        2745460000
    ],
    [
        1082690,
        2747703000
    ],
    [
        1082680,
        2763220000
    ],
    [
        1082600,
        2773170000
    ],
    [
        1082580,
        2773452500
    ],
    [
        1082560,
        2774000000
    ],
    [
        1082520,
        2797000000
    ],
    [
        1082500,
        2801987000
    ],
    [
        1082480,
        2816390000
    ],
    [
        1082470,
        2820150000
    ],
    [
        1082450,
        2828000000
    ],
    [
        1082440,
        2815000000
    ],
    [
        1082430,
        2816000000
    ],
    [
        1082390,
        2816390000
    ],
    [
        1082380,
        2821000000
    ],
    [
        1082370,
        2818000000
    ],
    [
        1082360,
        2817850000
    ],
    [
        1082350,
        2816979000
    ],
    [
        1082340,
        2817541000
    ],
    [
        1082330,
        2816390000
    ],
    [
        1082320,
        2810121000
    ],
    [
        1082310,
        2808000000
    ],
    [
        1082300,
        2806980000
    ],
    [
        1082290,
        2805000000
    ],
    [
        1082280,
        2800817500
    ],
    [
        1082270,
        2796795000
    ],
    [
        1082240,
        2821580000
    ],
    [
        1082230,
        2823000000
    ],
    [
        1082210,
        2823974000
    ],
    [
        1082200,
        2823000000
    ],
    [
        1082170,
        2818000000
    ],
    [
        1082150,
        2820650000
    ],
    [
        1082110,
        2825000000
    ],
    [
        1082090,
        2825245000
    ],
    [
        1082080,
        2831310000
    ],
    [
        1082030,
        2852000000
    ],
    [
        1081980,
        2860000000
    ],
    [
        1081950,
        2862250000
    ],
    [
        1081940,
        2864370000
    ],
    [
        1081930,
        2867000000
    ],
    [
        1081920,
        2871710000
    ],
    [
        1081910,
        2872280000
    ],
    [
        1081860,
        2867000000
    ],
    [
        1081840,
        2871240000
    ],
    [
        1081820,
        2867299000
    ],
    [
        1081760,
        2864370000
    ],
    [
        1081730,
        2867328000
    ],
    [
        1081710,
        2872160000
    ],
    [
        1081690,
        2870632500
    ],
    [
        1081680,
        2882000000
    ],
    [
        1081670,
        2885237000
    ],
    [
        1081640,
        2879000000
    ],
    [
        1081630,
        2876107000
    ],
    [
        1081610,
        2879000000
    ],
    [
        1081600,
        2881577500
    ],
    [
        1081560,
        2891000000
    ],
    [
        1081550,
        2888040000
    ],
    [
        1081540,
        2877000000
    ],
    [
        1081520,
        2872000000
    ],
    [
        1081510,
        2869000000
    ],
    [
        1081490,
        2868680000
    ],
    [
        1081470,
        2866000000
    ],
    [
        1081460,
        2864370000
    ],
    [
        1081450,
        2864989000
    ],
    [
        1081430,
        2867000000
    ],
    [
        1081420,
        2867161250
    ],
    [
        1081410,
        2867652500
    ],
    [
        1081400,
        2867210000
    ],
    [
        1081390,
        2866000000
    ],
    [
        1081380,
        2866145000
    ],
    [
        1081370,
        2866040000
    ],
    [
        1081360,
        2871150000
    ],
    [
        1081330,
        2874000000
    ],
    [
        1081310,
        2872000000
    ],
    [
        1081300,
        2875515000
    ],
    [
        1081260,
        2896344000
    ],
    [
        1081220,
        2898172000
    ],
    [
        1081210,
        2904043750
    ],
    [
        1081200,
        2906522500
    ],
    [
        1081170,
        2910582500
    ],
    [
        1081160,
        2924003750
    ],
    [
        1081150,
        2933000000
    ],
    [
        1081140,
        2933778000
    ],
    [
        1081130,
        2931778000
    ],
    [
        1081120,
        2924255250
    ],
    [
        1081110,
        2908560000
    ],
    [
        1081090,
        2900077500
    ],
    [
        1081070,
        2897787000
    ],
    [
        1081060,
        2899857000
    ],
    [
        1081050,
        2894545000
    ],
    [
        1081020,
        2890615000
    ],
    [
        1081010,
        2904500000
    ],
    [
        1080990,
        2908780000
    ],
    [
        1080980,
        2906905000
    ],
    [
        1080970,
        2907780000
    ],
    [
        1080960,
        2906295000
    ],
    [
        1080930,
        2904005000
    ],
    [
        1080920,
        2902910000
    ],
    [
        1080910,
        2900730000
    ],
    [
        1080900,
        2902318750
    ],
    [
        1080890,
        2896870000
    ],
    [
        1080870,
        2891775000
    ],
    [
        1080860,
        2890278500
    ],
    [
        1080840,
        2870925000
    ],
    [
        1080830,
        2869850000
    ],
    [
        1080820,
        2862113750
    ],
    [
        1080810,
        2859705000
    ],
    [
        1080800,
        2858405500
    ],
    [
        1080790,
        2856858000
    ],
    [
        1080780,
        2861000000
    ],
    [
        1080770,
        2862557500
    ],
    [
        1080760,
        2862023750
    ],
    [
        1080750,
        2863378750
    ],
    [
        1080740,
        2861805000
    ],
    [
        1080730,
        2857065000
    ],
    [
        1080720,
        2850898750
    ],
    [
        1080710,
        2849150000
    ],
    [
        1080700,
        2849847500
    ],
    [
        1080690,
        2863432500
    ],
    [
        1080680,
        2867763750
    ],
    [
        1080670,
        2868507500
    ],
    [
        1080660,
        2878582000
    ],
    [
        1080650,
        2866485000
    ],
    [
        1080640,
        2844435000
    ],
    [
        1080630,
        2833977500
    ],
    [
        1080600,
        2833152500
    ],
    [
        1080550,
        2829065000
    ],
    [
        1080540,
        2830670000
    ],
    [
        1080490,
        2835947500
    ],
    [
        1080470,
        2835522500
    ],
    [
        1080460,
        2838777500
    ],
    [
        1080450,
        2839634000
    ],
    [
        1080440,
        2838410000
    ],
    [
        1080430,
        2833152500
    ],
    [
        1080410,
        2816099500
    ],
    [
        1080390,
        2812000000
    ],
    [
        1080340,
        2813099500
    ],
    [
        1080330,
        2814599500
    ],
    [
        1080320,
        2818809500
    ],
    [
        1080290,
        2827488500
    ],
    [
        1080270,
        2833108500
    ],
    [
        1080250,
        2836270000
    ],
    [
        1080240,
        2831471250
    ],
    [
        1080230,
        2835501250
    ],
    [
        1080220,
        2837486750
    ],
    [
        1080210,
        2837567000
    ],
    [
        1080200,
        2825540000
    ],
    [
        1080190,
        2823320000
    ],
    [
        1080180,
        2822236000
    ],
    [
        1080170,
        2832747000
    ],
    [
        1080150,
        2833252000
    ],
    [
        1080140,
        2837500000
    ],
    [
        1080120,
        2840000000
    ],
    [
        1080100,
        2838000000
    ],
    [
        1080090,
        2840000000
    ],
    [
        1080080,
        2838592500
    ],
    [
        1080070,
        2838000000
    ],
    [
        1080060,
        2838687500
    ],
    [
        1080050,
        2854910000
    ],
    [
        1080040,
        2859485000
    ],
    [
        1080030,
        2861662500
    ],
    [
        1080010,
        2865800000
    ],
    [
        1080000,
        2866000000
    ],
    [
        1079990,
        2880110000
    ],
    [
        1079980,
        2880270000
    ],
    [
        1079970,
        2883110000
    ],
    [
        1079960,
        2883766000
    ],
    [
        1079950,
        2886950000
    ],
    [
        1079940,
        2888430000
    ],
    [
        1079920,
        2910982500
    ],
    [
        1079910,
        2912512500
    ],
    [
        1079900,
        2912850000
    ],
    [
        1079890,
        2910269000
    ],
    [
        1079880,
        2910000000
    ],
    [
        1079870,
        2913120000
    ],
    [
        1079850,
        2918000000
    ],
    [
        1079840,
        2917850000
    ],
    [
        1079830,
        2917465000
    ],
    [
        1079820,
        2913120000
    ],
    [
        1079780,
        2910000000
    ],
    [
        1079770,
        2909310000
    ],
    [
        1079760,
        2910000000
    ],
    [
        1079740,
        2909746250
    ],
    [
        1079730,
        2906411250
    ],
    [
        1079720,
        2915930000
    ],
    [
        1079710,
        2916083750
    ],
    [
        1079700,
        2924248750
    ],
    [
        1079690,
        2926447500
    ],
    [
        1079640,
        2876000000
    ],
    [
        1079630,
        2863400000
    ],
    [
        1079620,
        2860695000
    ],
    [
        1079610,
        2860961250
    ],
    [
        1079590,
        2851934500
    ],
    [
        1079580,
        2849439500
    ],
    [
        1079550,
        2874452500
    ],
    [
        1079540,
        2874013750
    ],
    [
        1079520,
        2875980000
    ],
    [
        1079510,
        2875972500
    ],
    [
        1079480,
        2849475000
    ],
    [
        1079470,
        2833320000
    ],
    [
        1079450,
        2832990000
    ],
    [
        1079440,
        2831000000
    ],
    [
        1079430,
        2825337000
    ],
    [
        1079420,
        2816342000
    ],
    [
        1079410,
        2821146250
    ],
    [
        1079400,
        2829549250
    ],
    [
        1079390,
        2829953000
    ],
    [
        1079370,
        2810100000
    ],
    [
        1079280,
        2771000000
    ],
    [
        1079270,
        2816890000
    ],
    [
        1079250,
        2817540000
    ],
    [
        1079220,
        2823000000
    ],
    [
        1079190,
        2871000000
    ],
    [
        1079170,
        2876000000
    ],
    [
        1079160,
        2875978000
    ],
    [
        1079130,
        2876000000
    ],
    [
        1079100,
        2878000000
    ],
    [
        1079090,
        2882571000
    ],
    [
        1079080,
        2886740000
    ],
    [
        1079070,
        2882571000
    ],
    [
        1079060,
        2881905000
    ],
    [
        1079050,
        2893760000
    ],
    [
        1079040,
        2907462000
    ],
    [
        1079010,
        2919982500
    ],
    [
        1079000,
        2917671000
    ],
    [
        1078990,
        2923000000
    ],
    [
        1078980,
        2918000000
    ],
    [
        1078970,
        2919168000
    ],
    [
        1078960,
        2920259000
    ],
    [
        1078950,
        2918936000
    ],
    [
        1078940,
        2920110000
    ],
    [
        1078930,
        2932000000
    ],
    [
        1078920,
        2926997500
    ],
    [
        1078900,
        2922000000
    ],
    [
        1078890,
        2920636000
    ],
    [
        1078870,
        2915932500
    ],
    [
        1078860,
        2915920000
    ],
    [
        1078850,
        2921910000
    ],
    [
        1078830,
        2920000000
    ],
    [
        1078820,
        2919771000
    ],
    [
        1078800,
        2919000000
    ],
    [
        1078790,
        2892320000
    ],
    [
        1078780,
        2894790000
    ],
    [
        1078770,
        2889360000
    ],
    [
        1078730,
        2866020000
    ],
    [
        1078720,
        2861000000
    ],
    [
        1078710,
        2859903000
    ],
    [
        1078700,
        2862472000
    ],
    [
        1078690,
        2861606000
    ],
    [
        1078680,
        2871110000
    ],
    [
        1078670,
        2873055000
    ],
    [
        1078660,
        2872910500
    ],
    [
        1078640,
        2878305000
    ],
    [
        1078630,
        2864195500
    ],
    [
        1078610,
        2877867500
    ],
    [
        1078600,
        2875500000
    ],
    [
        1078590,
        2873030000
    ],
    [
        1078580,
        2871038000
    ],
    [
        1078560,
        2874237000
    ],
    [
        1078550,
        2874717000
    ],
    [
        1078540,
        2873165000
    ],
    [
        1078530,
        2865500000
    ],
    [
        1078520,
        2874072500
    ],
    [
        1078500,
        2861000000
    ],
    [
        1078460,
        2860250000
    ],
    [
        1078440,
        2861000000
    ],
    [
        1078430,
        2860250000
    ],
    [
        1078410,
        2860000000
    ],
    [
        1078400,
        2855640000
    ],
    [
        1078350,
        2860000000
    ],
    [
        1078290,
        2904000000
    ],
    [
        1078280,
        2900911000
    ],
    [
        1078270,
        2907110000
    ],
    [
        1078250,
        2912000000
    ],
    [
        1078240,
        2918870000
    ],
    [
        1078220,
        2926000000
    ],
    [
        1078210,
        2924000000
    ],
    [
        1078200,
        2923542500
    ],
    [
        1078190,
        2921614000
    ],
    [
        1078180,
        2917850000
    ],
    [
        1078170,
        2922427500
    ],
    [
        1078150,
        2946000000
    ],
    [
        1078120,
        2948000000
    ],
    [
        1078110,
        2956352000
    ],
    [
        1078100,
        2969215000
    ],
    [
        1078090,
        2975919000
    ],
    [
        1078080,
        2983005000
    ],
    [
        1078060,
        2993313000
    ],
    [
        1078050,
        2981000000
    ],
    [
        1078000,
        2973000000
    ],
    [
        1077980,
        2975000000
    ],
    [
        1077970,
        2959330000
    ],
    [
        1077960,
        2973000000
    ],
    [
        1077950,
        2962490000
    ],
    [
        1077940,
        2981000000
    ],
    [
        1077930,
        3013770000
    ],
    [
        1077900,
        3030000000
    ],
    [
        1077890,
        3028000000
    ],
    [
        1077870,
        3026000000
    ],
    [
        1077860,
        3008444000
    ],
    [
        1077840,
        3050000000
    ],
    [
        1077830,
        3033288000
    ],
    [
        1077800,
        3026675000
    ],
    [
        1077780,
        3045588000
    ],
    [
        1077770,
        3050000000
    ],
    [
        1077760,
        3068000000
    ],
    [
        1077750,
        3064841000
    ],
    [
        1077720,
        3056476000
    ],
    [
        1077670,
        3091000000
    ],
    [
        1077650,
        3057000000
    ],
    [
        1077580,
        3050000000
    ],
    [
        1077560,
        3068000000
    ],
    [
        1077550,
        3103000000
    ],
    [
        1077540,
        3091862500
    ],
    [
        1077530,
        3068000000
    ],
    [
        1077520,
        3064420000
    ],
    [
        1077510,
        3050000000
    ],
    [
        1077500,
        3067000000
    ],
    [
        1077480,
        3081000000
    ],
    [
        1077470,
        3064453000
    ],
    [
        1077460,
        3050000000
    ],
    [
        1077450,
        3033312000
    ],
    [
        1077440,
        3048660000
    ],
    [
        1077430,
        3026833000
    ],
    [
        1077420,
        3046920000
    ],
    [
        1077400,
        3046000000
    ],
    [
        1077390,
        3038606000
    ],
    [
        1077380,
        3031349000
    ],
    [
        1077360,
        3046000000
    ],
    [
        1077350,
        3048000000
    ],
    [
        1077340,
        3049000000
    ],
    [
        1077320,
        3050000000
    ],
    [
        1077310,
        3047269000
    ],
    [
        1077250,
        3049000000
    ],
    [
        1077240,
        3023000000
    ],
    [
        1077230,
        3031864000
    ],
    [
        1077220,
        3023000000
    ],
    [
        1077210,
        3004105000
    ],
    [
        1077190,
        3023000000
    ],
    [
        1077170,
        3041000000
    ],
    [
        1077150,
        3055000000
    ],
    [
        1077140,
        3051729000
    ],
    [
        1077130,
        3055000000
    ],
    [
        1077120,
        3050000000
    ],
    [
        1077110,
        3050040000
    ],
    [
        1077100,
        3048196000
    ],
    [
        1077090,
        3038430000
    ],
    [
        1077080,
        3092000000
    ],
    [
        1077060,
        3075614000
    ],
    [
        1077050,
        3115690000
    ],
    [
        1077040,
        3103128000
    ],
    [
        1077030,
        3091788250
    ],
    [
        1077020,
        3130579500
    ],
    [
        1077010,
        3156668500
    ],
    [
        1076990,
        3119214250
    ],
    [
        1076980,
        3132088750
    ],
    [
        1076970,
        3124201250
    ],
    [
        1076960,
        3088388500
    ],
    [
        1076950,
        3136497500
    ],
    [
        1076940,
        3144918500
    ],
    [
        1076920,
        3080000000
    ],
    [
        1076900,
        2970500000
    ],
    [
        1076890,
        2961472500
    ],
    [
        1076880,
        2963981250
    ],
    [
        1076870,
        2961866250
    ],
    [
        1076850,
        3071366250
    ],
    [
        1076820,
        3071000000
    ],
    [
        1076810,
        3021594000
    ],
    [
        1076790,
        2940566250
    ],
    [
        1076780,
        2928637000
    ],
    [
        1076770,
        2940035750
    ],
    [
        1076750,
        2938903750
    ],
    [
        1076740,
        2926768750
    ],
    [
        1076730,
        2899783750
    ],
    [
        1076720,
        2893696250
    ],
    [
        1076710,
        2893141250
    ],
    [
        1076700,
        2898239000
    ],
    [
        1076690,
        2875414000
    ],
    [
        1076680,
        2879000000
    ],
    [
        1076670,
        2881701250
    ],
    [
        1076650,
        2899249000
    ],
    [
        1076640,
        2874988000
    ],
    [
        1076630,
        2891933000
    ],
    [
        1076620,
        2892126500
    ],
    [
        1076600,
        2879946000
    ],
    [
        1076590,
        2878084500
    ],
    [
        1076560,
        2859819500
    ],
    [
        1076520,
        2869000000
    ],
    [
        1076500,
        2865500000
    ],
    [
        1076490,
        2854718000
    ],
    [
        1076470,
        2866500000
    ],
    [
        1076460,
        2850505000
    ],
    [
        1076450,
        2826822750
    ],
    [
        1076420,
        2848696500
    ],
    [
        1076410,
        2845796500
    ],
    [
        1076400,
        2817703000
    ],
    [
        1076390,
        2836140500
    ],
    [
        1076380,
        2840230000
    ],
    [
        1076370,
        2852500000
    ],
    [
        1076360,
        2852000000
    ],
    [
        1076350,
        2844258500
    ],
    [
        1076340,
        2850890000
    ],
    [
        1076320,
        2844000000
    ],
    [
        1076300,
        2831187000
    ],
    [
        1076290,
        2833876500
    ],
    [
        1076280,
        2844000000
    ],
    [
        1076270,
        2796500000
    ],
    [
        1076260,
        2797000000
    ],
    [
        1076190,
        2791667500
    ],
    [
        1076180,
        2796000000
    ],
    [
        1076150,
        2794000000
    ],
    [
        1076140,
        2795000000
    ],
    [
        1076130,
        2789019000
    ],
    [
        1076120,
        2776418750
    ],
    [
        1076110,
        2770990000
    ],
    [
        1076100,
        2784562000
    ],
    [
        1076090,
        2785895500
    ],
    [
        1076080,
        2798500000
    ],
    [
        1076070,
        2785841000
    ],
    [
        1076060,
        2785011000
    ],
    [
        1076050,
        2783059000
    ],
    [
        1076030,
        2786111500
    ],
    [
        1076010,
        2774632000
    ],
    [
        1076000,
        2775848000
    ],
    [
        1075990,
        2774348000
    ],
    [
        1075980,
        2774237000
    ],
    [
        1075970,
        2772949500
    ],
    [
        1075960,
        2747651750
    ],
    [
        1075950,
        2742342750
    ],
    [
        1075940,
        2742040250
    ],
    [
        1075930,
        2744501750
    ],
    [
        1075920,
        2765073000
    ],
    [
        1075910,
        2773000000
    ],
    [
        1075900,
        2756679000
    ],
    [
        1075880,
        2770000000
    ],
    [
        1075870,
        2777000000
    ],
    [
        1075860,
        2759389500
    ],
    [
        1075850,
        2764829500
    ],
    [
        1075840,
        2766829500
    ],
    [
        1075830,
        2773499000
    ],
    [
        1075820,
        2774042000
    ],
    [
        1075800,
        2768721000
    ],
    [
        1075790,
        2771803500
    ],
    [
        1075780,
        2798500000
    ],
    [
        1075760,
        2802500000
    ],
    [
        1075750,
        2791100500
    ],
    [
        1075740,
        2790659500
    ],
    [
        1075730,
        2787469500
    ],
    [
        1075720,
        2813495500
    ],
    [
        1075710,
        2835000000
    ],
    [
        1075700,
        2826581000
    ],
    [
        1075680,
        2830679000
    ],
    [
        1075670,
        2845132500
    ],
    [
        1075640,
        2859000000
    ],
    [
        1075630,
        2851193000
    ],
    [
        1075610,
        2859000000
    ],
    [
        1075600,
        2882000000
    ],
    [
        1075590,
        2871627000
    ],
    [
        1075580,
        2899415000
    ],
    [
        1075570,
        2902500000
    ],
    [
        1075550,
        2891841000
    ],
    [
        1075540,
        2912341000
    ],
    [
        1075530,
        2881484750
    ],
    [
        1075520,
        2896397250
    ],
    [
        1075510,
        2890388750
    ],
    [
        1075500,
        2896619750
    ],
    [
        1075490,
        2886401250
    ],
    [
        1075480,
        2885660000
    ],
    [
        1075470,
        2889617500
    ],
    [
        1075460,
        2873098750
    ],
    [
        1075450,
        2886963000
    ],
    [
        1075440,
        2877616000
    ],
    [
        1075430,
        2880965500
    ],
    [
        1075420,
        2863433000
    ],
    [
        1075410,
        2902000000
    ],
    [
        1075400,
        2901691500
    ],
    [
        1075390,
        2867191250
    ],
    [
        1075380,
        2895840000
    ],
    [
        1075370,
        2875176000
    ],
    [
        1075360,
        2850152500
    ],
    [
        1075340,
        2840548750
    ],
    [
        1075330,
        2828869250
    ],
    [
        1075320,
        2818374750
    ],
    [
        1075310,
        2854453500
    ],
    [
        1075300,
        2849184000
    ],
    [
        1075290,
        2829110250
    ],
    [
        1075280,
        2829615250
    ],
    [
        1075260,
        2860267000
    ],
    [
        1075250,
        2835863500
    ],
    [
        1075240,
        2833772000
    ],
    [
        1075230,
        2841107000
    ],
    [
        1075220,
        2856182000
    ],
    [
        1075210,
        2856615500
    ],
    [
        1075200,
        2816068000
    ],
    [
        1075190,
        2802813750
    ],
    [
        1075170,
        2816500000
    ],
    [
        1075160,
        2797030000
    ],
    [
        1075140,
        2786291250
    ],
    [
        1075110,
        2742500000
    ],
    [
        1075080,
        2741000000
    ],
    [
        1075070,
        2731334000
    ],
    [
        1075060,
        2746537500
    ],
    [
        1075050,
        2774500000
    ],
    [
        1075030,
        2770274500
    ],
    [
        1075020,
        2766909500
    ],
    [
        1075010,
        2738204500
    ],
    [
        1075000,
        2737049500
    ],
    [
        1074970,
        2763989500
    ],
    [
        1074890,
        2689476750
    ],
    [
        1074880,
        2693695500
    ],
    [
        1074870,
        2721571000
    ],
    [
        1074860,
        2722202000
    ],
    [
        1074850,
        2700277000
    ],
    [
        1074840,
        2684673750
    ],
    [
        1074830,
        2668041250
    ],
    [
        1074800,
        2662000000
    ],
    [
        1074790,
        2643305000
    ],
    [
        1074780,
        2624805000
    ],
    [
        1074770,
        2619390000
    ],
    [
        1074760,
        2611935500
    ],
    [
        1074750,
        2613262000
    ],
    [
        1074740,
        2630500000
    ],
    [
        1074730,
        2644084500
    ],
    [
        1074720,
        2636057000
    ],
    [
        1074710,
        2656084500
    ],
    [
        1074700,
        2651484500
    ],
    [
        1074680,
        2634103250
    ],
    [
        1074670,
        2626446500
    ],
    [
        1074660,
        2627082750
    ],
    [
        1074640,
        2631209750
    ],
    [
        1074630,
        2622098250
    ],
    [
        1074620,
        2605642750
    ],
    [
        1074610,
        2624849000
    ],
    [
        1074600,
        2623410000
    ],
    [
        1074590,
        2610870000
    ],
    [
        1074570,
        2604613000
    ],
    [
        1074560,
        2606947000
    ],
    [
        1074550,
        2603571000
    ],
    [
        1074540,
        2591000000
    ],
    [
        1074530,
        2595030000
    ],
    [
        1074520,
        2615680000
    ],
    [
        1074510,
        2616332500
    ],
    [
        1074450,
        2620000000
    ],
    [
        1074440,
        2612882000
    ],
    [
        1074430,
        2599961000
    ],
    [
        1074420,
        2595966000
    ],
    [
        1074400,
        2591000000
    ],
    [
        1074390,
        2601177500
    ],
    [
        1074360,
        2637172000
    ],
    [
        1074350,
        2639349000
    ],
    [
        1074340,
        2640768000
    ],
    [
        1074330,
        2653000000
    ],
    [
        1074320,
        2664050000
    ],
    [
        1074300,
        2691000000
    ],
    [
        1074290,
        2687425000
    ],
    [
        1074280,
        2670000000
    ],
    [
        1074260,
        2665000000
    ],
    [
        1074250,
        2661477000
    ],
    [
        1074230,
        2616515000
    ],
    [
        1074220,
        2636382000
    ],
    [
        1074200,
        2652000000
    ],
    [
        1074190,
        2648000000
    ],
    [
        1074180,
        2626313000
    ],
    [
        1074160,
        2635382000
    ],
    [
        1074140,
        2601000000
    ],
    [
        1074130,
        2591000000
    ],
    [
        1074110,
        2603000000
    ],
    [
        1074090,
        2591000000
    ],
    [
        1074080,
        2565000000
    ],
    [
        1074060,
        2581699000
    ],
    [
        1073990,
        2565000000
    ],
    [
        1073960,
        2559880000
    ],
    [
        1073940,
        2563000000
    ],
    [
        1073930,
        2578000000
    ],
    [
        1073920,
        2558943000
    ],
    [
        1073900,
        2540000000
    ],
    [
        1073890,
        2558811000
    ],
    [
        1073870,
        2540000000
    ],
    [
        1073830,
        2549796000
    ],
    [
        1073800,
        2540000000
    ],
    [
        1073790,
        2536237000
    ],
    [
        1073770,
        2509052500
    ],
    [
        1073760,
        2502000000
    ],
    [
        1073750,
        2499883000
    ],
    [
        1073740,
        2502000000
    ],
    [
        1073730,
        2513320000
    ],
    [
        1073720,
        2517523000
    ],
    [
        1073700,
        2563000000
    ],
    [
        1073680,
        2535210000
    ],
    [
        1073670,
        2538000000
    ],
    [
        1073660,
        2531179000
    ],
    [
        1073650,
        2528000000
    ],
    [
        1073640,
        2538000000
    ],
    [
        1073620,
        2559229000
    ],
    [
        1073610,
        2531210000
    ],
    [
        1073550,
        2527000000
    ],
    [
        1073540,
        2521621000
    ],
    [
        1073520,
        2531210000
    ],
    [
        1073510,
        2549000000
    ],
    [
        1073500,
        2532004000
    ],
    [
        1073470,
        2545000000
    ],
    [
        1073460,
        2579990000
    ],
    [
        1073450,
        2585702500
    ],
    [
        1073440,
        2679638000
    ],
    [
        1073420,
        2665032500
    ],
    [
        1073410,
        2652000000
    ],
    [
        1073400,
        2646000000
    ],
    [
        1073390,
        2619350000
    ],
    [
        1073290,
        2587000000
    ],
    [
        1073280,
        2573136000
    ],
    [
        1073260,
        2548000000
    ],
    [
        1073250,
        2541860000
    ],
    [
        1073240,
        2523000000
    ],
    [
        1073230,
        2505960000
    ],
    [
        1073170,
        2498000000
    ],
    [
        1073160,
        2532000000
    ],
    [
        1073150,
        2537095000
    ],
    [
        1073130,
        2577000000
    ],
    [
        1073120,
        2561863000
    ],
    [
        1073100,
        2532000000
    ],
    [
        1073090,
        2525000000
    ],
    [
        1073050,
        2530010000
    ],
    [
        1073030,
        2531000000
    ],
    [
        1073010,
        2533000000
    ],
    [
        1073000,
        2515287500
    ],
    [
        1072990,
        2463195000
    ],
    [
        1072980,
        2459448000
    ],
    [
        1072970,
        2491055000
    ],
    [
        1072940,
        2504000000
    ],
    [
        1072870,
        2511000000
    ],
    [
        1072860,
        2482000000
    ],
    [
        1072850,
        2489027500
    ],
    [
        1072840,
        2484155000
    ],
    [
        1072820,
        2482000000
    ],
    [
        1072800,
        2445000000
    ],
    [
        1072770,
        2437000000
    ],
    [
        1072760,
        2445000000
    ],
    [
        1072750,
        2459569000
    ],
    [
        1072740,
        2472294000
    ],
    [
        1072720,
        2482000000
    ],
    [
        1072710,
        2461176000
    ],
    [
        1072690,
        2430000000
    ],
    [
        1072680,
        2428295000
    ],
    [
        1072660,
        2395500000
    ],
    [
        1072650,
        2396049000
    ],
    [
        1072630,
        2372931250
    ],
    [
        1072620,
        2370607500
    ],
    [
        1072600,
        2374000000
    ],
    [
        1072590,
        2372090000
    ],
    [
        1072580,
        2365500000
    ],
    [
        1072570,
        2355069750
    ],
    [
        1072550,
        2356604250
    ],
    [
        1072540,
        2321208750
    ],
    [
        1072530,
        2316795000
    ],
    [
        1072520,
        2310906250
    ],
    [
        1072510,
        2332955000
    ],
    [
        1072500,
        2326490000
    ],
    [
        1072490,
        2346470000
    ],
    [
        1072470,
        2359621250
    ],
    [
        1072460,
        2338277500
    ],
    [
        1072420,
        2314000000
    ],
    [
        1072410,
        2299000000
    ],
    [
        1072400,
        2284840000
    ],
    [
        1072390,
        2270875000
    ],
    [
        1072380,
        2285385000
    ],
    [
        1072360,
        2270501500
    ],
    [
        1072350,
        2288515000
    ],
    [
        1072340,
        2309375250
    ],
    [
        1072330,
        2304462000
    ],
    [
        1072310,
        2266665000
    ],
    [
        1072300,
        2292000000
    ],
    [
        1072290,
        2322851500
    ],
    [
        1072280,
        2350224500
    ],
    [
        1072270,
        2344851250
    ],
    [
        1072260,
        2363557500
    ],
    [
        1072250,
        2379575000
    ],
    [
        1072240,
        2378630000
    ],
    [
        1072230,
        2387390000
    ],
    [
        1072210,
        2386369250
    ],
    [
        1072200,
        2388068000
    ],
    [
        1072190,
        2401210500
    ],
    [
        1072170,
        2420666500
    ],
    [
        1072160,
        2431666500
    ],
    [
        1072150,
        2452500000
    ],
    [
        1072140,
        2451876250
    ],
    [
        1072130,
        2450615250
    ],
    [
        1072110,
        2465027000
    ],
    [
        1072100,
        2448689250
    ],
    [
        1072090,
        2450275250
    ],
    [
        1072080,
        2469707000
    ],
    [
        1072070,
        2488837000
    ],
    [
        1072060,
        2494773750
    ],
    [
        1072050,
        2507500000
    ],
    [
        1072040,
        2507081500
    ],
    [
        1072030,
        2507500000
    ],
    [
        1072020,
        2498602500
    ],
    [
        1072010,
        2489971000
    ],
    [
        1072000,
        2466884000
    ],
    [
        1071990,
        2414685000
    ],
    [
        1071980,
        2411683750
    ],
    [
        1071970,
        2416602500
    ],
    [
        1071960,
        2422487500
    ],
    [
        1071950,
        2416995000
    ],
    [
        1071940,
        2422235000
    ],
    [
        1071930,
        2451000000
    ],
    [
        1071920,
        2423950000
    ],
    [
        1071910,
        2424090000
    ],
    [
        1071900,
        2450000000
    ],
    [
        1071890,
        2429500000
    ],
    [
        1071880,
        2422758000
    ],
    [
        1071870,
        2425000000
    ],
    [
        1071860,
        2423000000
    ],
    [
        1071850,
        2419776500
    ],
    [
        1071840,
        2418290000
    ],
    [
        1071830,
        2430944000
    ],
    [
        1071820,
        2436148000
    ],
    [
        1071810,
        2448254500
    ],
    [
        1071800,
        2460695000
    ],
    [
        1071790,
        2481905000
    ],
    [
        1071780,
        2499405000
    ],
    [
        1071760,
        2465000000
    ],
    [
        1071750,
        2459419000
    ],
    [
        1071730,
        2452048000
    ],
    [
        1071720,
        2456582500
    ],
    [
        1071710,
        2456089250
    ],
    [
        1071700,
        2454707500
    ],
    [
        1071690,
        2428841250
    ],
    [
        1071680,
        2433471250
    ],
    [
        1071670,
        2432316250
    ],
    [
        1071660,
        2442228750
    ],
    [
        1071650,
        2470000000
    ],
    [
        1071640,
        2459322500
    ],
    [
        1071630,
        2466693000
    ],
    [
        1071620,
        2465903500
    ],
    [
        1071610,
        2470000000
    ],
    [
        1071600,
        2465743500
    ],
    [
        1071590,
        2448628500
    ],
    [
        1071580,
        2435073750
    ],
    [
        1071570,
        2426879250
    ],
    [
        1071560,
        2439291250
    ],
    [
        1071550,
        2438858750
    ],
    [
        1071540,
        2473972500
    ],
    [
        1071530,
        2385821250
    ],
    [
        1071520,
        2379438750
    ],
    [
        1071510,
        2377345000
    ],
    [
        1071490,
        2370038750
    ],
    [
        1071460,
        2318500000
    ],
    [
        1071440,
        2337000000
    ],
    [
        1071430,
        2330747500
    ],
    [
        1071420,
        2326462750
    ],
    [
        1071410,
        2327376750
    ],
    [
        1071400,
        2313000000
    ],
    [
        1071390,
        2304000000
    ],
    [
        1071380,
        2297470000
    ],
    [
        1071370,
        2294626250
    ],
    [
        1071360,
        2291872500
    ],
    [
        1071350,
        2302648000
    ],
    [
        1071340,
        2296000000
    ],
    [
        1071330,
        2295500000
    ],
    [
        1071320,
        2286298000
    ],
    [
        1071300,
        2295000000
    ],
    [
        1071280,
        2296000000
    ],
    [
        1071260,
        2238660000
    ],
    [
        1071250,
        2221640000
    ],
    [
        1071240,
        2204335000
    ],
    [
        1071230,
        2199663500
    ],
    [
        1071220,
        2193693500
    ],
    [
        1071210,
        2191705000
    ],
    [
        1071180,
        2194000000
    ],
    [
        1071170,
        2191801000
    ],
    [
        1071160,
        2185000000
    ],
    [
        1071150,
        2182000000
    ],
    [
        1071140,
        2179412000
    ],
    [
        1071100,
        2185000000
    ],
    [
        1071090,
        2196000000
    ],
    [
        1071080,
        2193532500
    ],
    [
        1071070,
        2191767500
    ],
    [
        1071060,
        2195000000
    ],
    [
        1071050,
        2193897500
    ],
    [
        1071040,
        2195655000
    ],
    [
        1071030,
        2195184000
    ],
    [
        1071010,
        2193627500
    ],
    [
        1071000,
        2192052500
    ],
    [
        1070990,
        2193215000
    ],
    [
        1070980,
        2195047500
    ],
    [
        1070970,
        2195170000
    ],
    [
        1070960,
        2197080000
    ],
    [
        1070950,
        2196817500
    ],
    [
        1070930,
        2196000000
    ],
    [
        1070920,
        2196390000
    ],
    [
        1070910,
        2199000000
    ],
    [
        1070860,
        2200000000
    ],
    [
        1070850,
        2191000000
    ],
    [
        1070830,
        2193000000
    ],
    [
        1070820,
        2192645000
    ],
    [
        1070810,
        2189342500
    ],
    [
        1070800,
        2192369000
    ],
    [
        1070790,
        2189570000
    ],
    [
        1070780,
        2183280000
    ],
    [
        1070770,
        2183004000
    ],
    [
        1070760,
        2195335000
    ],
    [
        1070700,
        2187000000
    ],
    [
        1070690,
        2192250000
    ],
    [
        1070680,
        2180632500
    ],
    [
        1070670,
        2192093000
    ],
    [
        1070660,
        2195000000
    ],
    [
        1070650,
        2197109000
    ],
    [
        1070640,
        2196112500
    ],
    [
        1070590,
        2183410000
    ],
    [
        1070580,
        2178470000
    ],
    [
        1070570,
        2174770000
    ],
    [
        1070560,
        2177000000
    ],
    [
        1070550,
        2177360000
    ],
    [
        1070540,
        2177000000
    ],
    [
        1070530,
        2171468000
    ],
    [
        1070510,
        2177000000
    ],
    [
        1070500,
        2162180000
    ],
    [
        1070480,
        2155590000
    ],
    [
        1070470,
        2154690000
    ],
    [
        1070450,
        2152810000
    ],
    [
        1070420,
        2146000000
    ],
    [
        1070410,
        2144777500
    ],
    [
        1070390,
        2143720000
    ],
    [
        1070340,
        2137000000
    ],
    [
        1070330,
        2133940000
    ],
    [
        1070320,
        2130880000
    ],
    [
        1070310,
        2131697500
    ],
    [
        1070300,
        2131140000
    ],
    [
        1070270,
        2130000000
    ],
    [
        1070240,
        2127200000
    ],
    [
        1070230,
        2127792500
    ],
    [
        1070210,
        2130000000
    ],
    [
        1070200,
        2127200000
    ],
    [
        1070190,
        2126000000
    ],
    [
        1070170,
        2130000000
    ],
    [
        1070160,
        2130100000
    ],
    [
        1070150,
        2130000000
    ],
    [
        1070140,
        2129860000
    ],
    [
        1070130,
        2130000000
    ],
    [
        1070110,
        2128000000
    ],
    [
        1070100,
        2125220000
    ],
    [
        1070090,
        2127830000
    ],
    [
        1070080,
        2126398000
    ],
    [
        1070040,
        2127830000
    ],
    [
        1070030,
        2129000000
    ],
    [
        1070020,
        2148265000
    ],
    [
        1070010,
        2150440000
    ],
    [
        1070000,
        2150740000
    ],
    [
        1069990,
        2151000000
    ],
    [
        1069980,
        2150440000
    ],
    [
        1069970,
        2152670000
    ],
    [
        1069960,
        2154000000
    ],
    [
        1069940,
        2158580000
    ],
    [
        1069920,
        2162180000
    ],
    [
        1069910,
        2160000000
    ],
    [
        1069900,
        2156380000
    ],
    [
        1069880,
        2158580000
    ],
    [
        1069870,
        2160275000
    ],
    [
        1069860,
        2158580000
    ],
    [
        1069850,
        2155803000
    ],
    [
        1069840,
        2154969000
    ],
    [
        1069820,
        2160743750
    ],
    [
        1069810,
        2154588750
    ],
    [
        1069800,
        2156025000
    ],
    [
        1069790,
        2150435000
    ],
    [
        1069770,
        2148000000
    ],
    [
        1069760,
        2143520000
    ],
    [
        1069740,
        2139960000
    ],
    [
        1069720,
        2148000000
    ],
    [
        1069700,
        2149870000
    ],
    [
        1069690,
        2148267500
    ],
    [
        1069680,
        2147000000
    ],
    [
        1069670,
        2145288000
    ],
    [
        1069660,
        2147000000
    ],
    [
        1069650,
        2149000000
    ],
    [
        1069630,
        2143600000
    ],
    [
        1069620,
        2142017000
    ],
    [
        1069610,
        2141000000
    ],
    [
        1069600,
        2139697000
    ],
    [
        1069580,
        2149870000
    ],
    [
        1069560,
        2153000000
    ],
    [
        1069550,
        2147352500
    ],
    [
        1069540,
        2149130000
    ],
    [
        1069510,
        2149870000
    ],
    [
        1069500,
        2149120000
    ],
    [
        1069490,
        2148085000
    ],
    [
        1069470,
        2147000000
    ],
    [
        1069450,
        2143780000
    ],
    [
        1069440,
        2144692500
    ],
    [
        1069430,
        2143538000
    ],
    [
        1069420,
        2149870000
    ],
    [
        1069410,
        2147717500
    ],
    [
        1069400,
        2149870000
    ],
    [
        1069390,
        2141040000
    ],
    [
        1069380,
        2146083000
    ],
    [
        1069360,
        2139655000
    ],
    [
        1069350,
        2139360000
    ],
    [
        1069330,
        2143000000
    ],
    [
        1069320,
        2146000000
    ],
    [
        1069310,
        2145180000
    ],
    [
        1069300,
        2146045000
    ],
    [
        1069290,
        2145180000
    ],
    [
        1069270,
        2142000000
    ],
    [
        1069240,
        2139000000
    ],
    [
        1069230,
        2143000000
    ],
    [
        1069190,
        2139945000
    ],
    [
        1069130,
        2139000000
    ],
    [
        1069120,
        2132760000
    ],
    [
        1069080,
        2134953000
    ],
    [
        1069060,
        2134000000
    ],
    [
        1069040,
        2129840000
    ],
    [
        1069030,
        2129980000
    ],
    [
        1069010,
        2129840000
    ],
    [
        1069000,
        2129052500
    ],
    [
        1068990,
        2118730000
    ],
    [
        1068980,
        2103640000
    ],
    [
        1068970,
        2098550000
    ],
    [
        1068960,
        2097772500
    ],
    [
        1068950,
        2097000000
    ],
    [
        1068940,
        2099000000
    ],
    [
        1068930,
        2098050000
    ],
    [
        1068900,
        2094550000
    ],
    [
        1068880,
        2112422500
    ],
    [
        1068870,
        2113000000
    ],
    [
        1068820,
        2107000000
    ],
    [
        1068810,
        2104780000
    ],
    [
        1068800,
        2095000000
    ],
    [
        1068790,
        2096413000
    ],
    [
        1068770,
        2093540000
    ],
    [
        1068750,
        2082000000
    ],
    [
        1068740,
        2077140000
    ],
    [
        1068720,
        2077000000
    ],
    [
        1068710,
        2069000000
    ],
    [
        1068700,
        2068000000
    ],
    [
        1068690,
        2069000000
    ],
    [
        1068650,
        2061000000
    ],
    [
        1068640,
        2061860000
    ],
    [
        1068620,
        2062890000
    ],
    [
        1068600,
        2078520000
    ],
    [
        1068580,
        2080000000
    ],
    [
        1068570,
        2083000000
    ],
    [
        1068560,
        2085919000
    ],
    [
        1068550,
        2083000000
    ],
    [
        1068520,
        2082600000
    ],
    [
        1068500,
        2075000000
    ],
    [
        1068490,
        2073797500
    ],
    [
        1068480,
        2067000000
    ],
    [
        1068470,
        2066680000
    ],
    [
        1068460,
        2067000000
    ],
    [
        1068440,
        2078000000
    ],
    [
        1068420,
        2082510000
    ],
    [
        1068400,
        2086000000
    ],
    [
        1068390,
        2083166000
    ],
    [
        1068380,
        2088263000
    ],
    [
        1068370,
        2088228000
    ],
    [
        1068340,
        2084000000
    ],
    [
        1068330,
        2089755000
    ],
    [
        1068320,
        2089585000
    ],
    [
        1068310,
        2083168500
    ],
    [
        1068290,
        2079000000
    ],
    [
        1068280,
        2079918750
    ],
    [
        1068270,
        2077537500
    ],
    [
        1068260,
        2076691250
    ],
    [
        1068240,
        2078240000
    ],
    [
        1068230,
        2084377500
    ],
    [
        1068220,
        2090740000
    ],
    [
        1068210,
        2095061250
    ],
    [
        1068190,
        2109120000
    ],
    [
        1068170,
        2118500000
    ],
    [
        1068160,
        2115758750
    ],
    [
        1068150,
        2111130250
    ],
    [
        1068140,
        2111309000
    ],
    [
        1068130,
        2103695000
    ],
    [
        1068110,
        2105000000
    ],
    [
        1068090,
        2110000000
    ],
    [
        1068070,
        2110657000
    ],
    [
        1068060,
        2110000000
    ],
    [
        1068030,
        2102825000
    ],
    [
        1068020,
        2103570000
    ],
    [
        1068000,
        2106935000
    ],
    [
        1067990,
        2102365000
    ],
    [
        1067980,
        2105090000
    ],
    [
        1067970,
        2106533750
    ],
    [
        1067960,
        2111060000
    ],
    [
        1067950,
        2111252500
    ],
    [
        1067940,
        2110602500
    ],
    [
        1067930,
        2110410000
    ],
    [
        1067910,
        2111340000
    ],
    [
        1067870,
        2128000000
    ],
    [
        1067850,
        2126500000
    ],
    [
        1067840,
        2128000000
    ],
    [
        1067820,
        2130960000
    ],
    [
        1067810,
        2130805000
    ],
    [
        1067800,
        2130500000
    ],
    [
        1067790,
        2128500000
    ],
    [
        1067780,
        2129735000
    ],
    [
        1067770,
        2128735000
    ],
    [
        1067760,
        2130450000
    ],
    [
        1067750,
        2130590000
    ],
    [
        1067740,
        2129866250
    ],
    [
        1067730,
        2131915000
    ],
    [
        1067720,
        2132138750
    ],
    [
        1067710,
        2131915000
    ],
    [
        1067700,
        2129822500
    ],
    [
        1067690,
        2131185500
    ],
    [
        1067680,
        2129500000
    ],
    [
        1067670,
        2127500000
    ],
    [
        1067660,
        2128111250
    ],
    [
        1067590,
        2130225000
    ],
    [
        1067580,
        2130780000
    ],
    [
        1067560,
        2131500000
    ],
    [
        1067550,
        2133140000
    ],
    [
        1067540,
        2133830000
    ],
    [
        1067520,
        2139500000
    ],
    [
        1067510,
        2141040000
    ],
    [
        1067500,
        2142720000
    ],
    [
        1067480,
        2138440000
    ],
    [
        1067470,
        2136440000
    ],
    [
        1067460,
        2134870000
    ],
    [
        1067450,
        2135500000
    ],
    [
        1067440,
        2134555000
    ],
    [
        1067430,
        2135500000
    ],
    [
        1067420,
        2136000000
    ],
    [
        1067410,
        2134835000
    ],
    [
        1067390,
        2136000000
    ],
    [
        1067370,
        2131310000
    ],
    [
        1067360,
        2130907500
    ],
    [
        1067330,
        2123750000
    ],
    [
        1067300,
        2121000000
    ],
    [
        1067290,
        2121901250
    ],
    [
        1067280,
        2125180000
    ],
    [
        1067270,
        2126095000
    ],
    [
        1067260,
        2118500000
    ],
    [
        1067250,
        2119157000
    ],
    [
        1067230,
        2119496000
    ],
    [
        1067220,
        2118737500
    ],
    [
        1067210,
        2127462500
    ],
    [
        1067200,
        2138865000
    ],
    [
        1067140,
        2141000000
    ],
    [
        1067120,
        2135865000
    ],
    [
        1067110,
        2136142000
    ],
    [
        1067100,
        2135277000
    ],
    [
        1067090,
        2134184000
    ],
    [
        1067080,
        2130115000
    ],
    [
        1067060,
        2133500000
    ],
    [
        1067040,
        2134000000
    ],
    [
        1067030,
        2135845000
    ],
    [
        1067020,
        2135693750
    ],
    [
        1067010,
        2131712500
    ],
    [
        1067000,
        2129637500
    ],
    [
        1066990,
        2132960000
    ],
    [
        1066980,
        2133865000
    ],
    [
        1066970,
        2130007500
    ],
    [
        1066950,
        2122455000
    ],
    [
        1066940,
        2124410000
    ],
    [
        1066920,
        2123000000
    ],
    [
        1066910,
        2126447500
    ],
    [
        1066890,
        2127541250
    ],
    [
        1066880,
        2131535000
    ],
    [
        1066870,
        2133063750
    ],
    [
        1066830,
        2136000000
    ],
    [
        1066820,
        2147037500
    ],
    [
        1066810,
        2150000000
    ],
    [
        1066800,
        2148770000
    ],
    [
        1066790,
        2146000000
    ],
    [
        1066780,
        2137136000
    ],
    [
        1066770,
        2139042000
    ],
    [
        1066680,
        2131000000
    ],
    [
        1066670,
        2128300000
    ],
    [
        1066650,
        2126000000
    ],
    [
        1066640,
        2130037500
    ],
    [
        1066620,
        2131000000
    ],
    [
        1066600,
        2126980000
    ],
    [
        1066590,
        2131000000
    ],
    [
        1066560,
        2126000000
    ],
    [
        1066490,
        2130000000
    ],
    [
        1066460,
        2131000000
    ],
    [
        1066430,
        2137000000
    ],
    [
        1066420,
        2141262500
    ],
    [
        1066410,
        2143000000
    ],
    [
        1066400,
        2142000000
    ],
    [
        1066390,
        2143972500
    ],
    [
        1066380,
        2141165000
    ],
    [
        1066370,
        2146000000
    ],
    [
        1066360,
        2141000000
    ],
    [
        1066340,
        2135377000
    ],
    [
        1066330,
        2141000000
    ],
    [
        1066310,
        2131000000
    ],
    [
        1066300,
        2137000000
    ],
    [
        1066250,
        2141000000
    ],
    [
        1066240,
        2137038000
    ],
    [
        1066210,
        2136000000
    ],
    [
        1066200,
        2141000000
    ],
    [
        1066190,
        2139660000
    ],
    [
        1066170,
        2141000000
    ],
    [
        1066130,
        2142000000
    ],
    [
        1066120,
        2143525000
    ],
    [
        1066110,
        2142442500
    ],
    [
        1066100,
        2141390000
    ],
    [
        1066090,
        2145830000
    ],
    [
        1066080,
        2154000000
    ],
    [
        1066020,
        2152000000
    ],
    [
        1066010,
        2139000000
    ],
    [
        1065990,
        2131000000
    ],
    [
        1065980,
        2128280000
    ],
    [
        1065960,
        2131000000
    ],
    [
        1065950,
        2134000000
    ],
    [
        1065940,
        2131000000
    ],
    [
        1065890,
        2134539000
    ],
    [
        1065880,
        2135000000
    ],
    [
        1065870,
        2133000000
    ],
    [
        1065850,
        2133750000
    ],
    [
        1065840,
        2132067500
    ],
    [
        1065830,
        2127798500
    ],
    [
        1065810,
        2120500000
    ],
    [
        1065800,
        2119765000
    ],
    [
        1065790,
        2118291250
    ],
    [
        1065780,
        2118795000
    ],
    [
        1065770,
        2108535000
    ],
    [
        1065760,
        2106535000
    ],
    [
        1065740,
        2104500000
    ],
    [
        1065730,
        2105956250
    ],
    [
        1065720,
        2105662500
    ],
    [
        1065710,
        2108340000
    ],
    [
        1065700,
        2114960000
    ],
    [
        1065690,
        2115665000
    ],
    [
        1065680,
        2116000000
    ],
    [
        1065670,
        2114011250
    ],
    [
        1065650,
        2112358750
    ],
    [
        1065640,
        2110462500
    ],
    [
        1065630,
        2107005000
    ],
    [
        1065610,
        2102871250
    ],
    [
        1065600,
        2113931500
    ],
    [
        1065590,
        2115591500
    ],
    [
        1065580,
        2111317500
    ],
    [
        1065570,
        2111229500
    ],
    [
        1065560,
        2107172500
    ],
    [
        1065540,
        2105055000
    ],
    [
        1065530,
        2103467500
    ],
    [
        1065510,
        2109330000
    ],
    [
        1065500,
        2110660000
    ],
    [
        1065490,
        2116460000
    ],
    [
        1065480,
        2125000000
    ],
    [
        1065470,
        2128000000
    ],
    [
        1065460,
        2132722000
    ],
    [
        1065440,
        2145000000
    ],
    [
        1065410,
        2145220000
    ],
    [
        1065390,
        2148000000
    ],
    [
        1065380,
        2147000000
    ],
    [
        1065370,
        2142000000
    ],
    [
        1065360,
        2144790000
    ],
    [
        1065350,
        2148000000
    ],
    [
        1065330,
        2150170000
    ],
    [
        1065300,
        2152000000
    ],
    [
        1065290,
        2151267000
    ],
    [
        1065280,
        2152000000
    ],
    [
        1065270,
        2153319000
    ],
    [
        1065250,
        2154000000
    ],
    [
        1065230,
        2156727500
    ],
    [
        1065220,
        2156582500
    ],
    [
        1065210,
        2162000000
    ],
    [
        1065180,
        2164680000
    ],
    [
        1065160,
        2171000000
    ],
    [
        1065140,
        2165480000
    ],
    [
        1065120,
        2168000000
    ],
    [
        1065110,
        2166705000
    ],
    [
        1065100,
        2165572500
    ],
    [
        1065090,
        2171019000
    ],
    [
        1065080,
        2175000000
    ],
    [
        1065070,
        2174750000
    ],
    [
        1065050,
        2182000000
    ],
    [
        1065040,
        2187417000
    ],
    [
        1065030,
        2190810000
    ],
    [
        1065020,
        2199550000
    ],
    [
        1065010,
        2201285000
    ],
    [
        1065000,
        2206130000
    ],
    [
        1064990,
        2201285000
    ],
    [
        1064980,
        2199550000
    ],
    [
        1064970,
        2202145000
    ],
    [
        1064960,
        2202735000
    ],
    [
        1064950,
        2204510000
    ],
    [
        1064940,
        2212000000
    ],
    [
        1064930,
        2208807500
    ],
    [
        1064910,
        2206000000
    ],
    [
        1064900,
        2205765000
    ],
    [
        1064890,
        2209120000
    ],
    [
        1064880,
        2209377000
    ],
    [
        1064870,
        2207967500
    ],
    [
        1064860,
        2201000000
    ],
    [
        1064840,
        2198000000
    ],
    [
        1064830,
        2196940000
    ],
    [
        1064820,
        2189000000
    ],
    [
        1064810,
        2189217500
    ],
    [
        1064800,
        2192000000
    ],
    [
        1064770,
        2195000000
    ],
    [
        1064760,
        2191062000
    ],
    [
        1064750,
        2191000000
    ],
    [
        1064690,
        2201000000
    ],
    [
        1064680,
        2197000000
    ],
    [
        1064670,
        2194919000
    ],
    [
        1064660,
        2194912500
    ],
    [
        1064650,
        2185815000
    ],
    [
        1064640,
        2190010000
    ],
    [
        1064630,
        2181040000
    ],
    [
        1064620,
        2182690000
    ],
    [
        1064610,
        2184772500
    ],
    [
        1064600,
        2184755000
    ],
    [
        1064590,
        2193852500
    ],
    [
        1064490,
        2194812500
    ],
    [
        1064480,
        2195000000
    ],
    [
        1064460,
        2201432500
    ],
    [
        1064450,
        2207330000
    ],
    [
        1064440,
        2197647500
    ],
    [
        1064420,
        2194210000
    ],
    [
        1064400,
        2194440000
    ],
    [
        1064390,
        2194502500
    ],
    [
        1064380,
        2210000000
    ],
    [
        1064370,
        2212420000
    ],
    [
        1064360,
        2210000000
    ],
    [
        1064350,
        2212420000
    ],
    [
        1064340,
        2210000000
    ],
    [
        1064320,
        2190000000
    ],
    [
        1064310,
        2192530000
    ],
    [
        1064290,
        2198890000
    ],
    [
        1064280,
        2198712500
    ],
    [
        1064270,
        2193000000
    ],
    [
        1064250,
        2194440000
    ],
    [
        1064240,
        2199000000
    ],
    [
        1064210,
        2197000000
    ],
    [
        1064200,
        2194440000
    ],
    [
        1064190,
        2190002500
    ],
    [
        1064180,
        2207762500
    ],
    [
        1064170,
        2205972500
    ],
    [
        1064160,
        2194690000
    ],
    [
        1064140,
        2192528750
    ],
    [
        1064130,
        2199220000
    ],
    [
        1064120,
        2184080000
    ],
    [
        1064110,
        2208190000
    ],
    [
        1064100,
        2216765000
    ],
    [
        1064090,
        2217000000
    ],
    [
        1064070,
        2247000000
    ],
    [
        1064060,
        2252500000
    ],
    [
        1064040,
        2255000000
    ],
    [
        1064030,
        2258919500
    ],
    [
        1064010,
        2264773500
    ],
    [
        1064000,
        2260285000
    ],
    [
        1063990,
        2249326250
    ],
    [
        1063980,
        2243466750
    ],
    [
        1063970,
        2241221250
    ],
    [
        1063960,
        2241342500
    ],
    [
        1063950,
        2239365000
    ],
    [
        1063940,
        2234365000
    ],
    [
        1063930,
        2234000000
    ],
    [
        1063920,
        2245149750
    ],
    [
        1063910,
        2268375000
    ],
    [
        1063900,
        2280000000
    ],
    [
        1063890,
        2282950000
    ],
    [
        1063870,
        2280000000
    ],
    [
        1063860,
        2279000000
    ],
    [
        1063850,
        2272150000
    ],
    [
        1063840,
        2269850000
    ],
    [
        1063830,
        2268495000
    ],
    [
        1063820,
        2268763500
    ],
    [
        1063800,
        2273000000
    ],
    [
        1063790,
        2269850000
    ],
    [
        1063780,
        2269042500
    ],
    [
        1063770,
        2269426000
    ],
    [
        1063760,
        2269517500
    ],
    [
        1063740,
        2268350000
    ],
    [
        1063710,
        2266170000
    ],
    [
        1063700,
        2263845000
    ],
    [
        1063690,
        2261060000
    ],
    [
        1063680,
        2259163750
    ],
    [
        1063670,
        2257371000
    ],
    [
        1063660,
        2259183500
    ],
    [
        1063650,
        2255557500
    ],
    [
        1063640,
        2253298750
    ],
    [
        1063630,
        2247821000
    ],
    [
        1063620,
        2246500000
    ],
    [
        1063590,
        2261820000
    ],
    [
        1063570,
        2268350000
    ],
    [
        1063560,
        2268000000
    ],
    [
        1063550,
        2260478000
    ],
    [
        1063540,
        2260000000
    ],
    [
        1063530,
        2259825000
    ],
    [
        1063520,
        2256911000
    ],
    [
        1063500,
        2256835000
    ],
    [
        1063490,
        2253000000
    ],
    [
        1063460,
        2252000000
    ],
    [
        1063440,
        2252191250
    ],
    [
        1063430,
        2253000000
    ],
    [
        1063390,
        2265485000
    ],
    [
        1063380,
        2266466250
    ],
    [
        1063370,
        2267636250
    ],
    [
        1063360,
        2266180000
    ],
    [
        1063350,
        2265415000
    ],
    [
        1063320,
        2264725000
    ],
    [
        1063310,
        2264235000
    ],
    [
        1063300,
        2267000000
    ],
    [
        1063290,
        2276818000
    ],
    [
        1063280,
        2278500000
    ],
    [
        1063270,
        2282775000
    ],
    [
        1063260,
        2280522500
    ],
    [
        1063250,
        2280628500
    ],
    [
        1063230,
        2278000000
    ],
    [
        1063210,
        2267350000
    ],
    [
        1063190,
        2266000000
    ],
    [
        1063180,
        2265500000
    ],
    [
        1063090,
        2263510000
    ],
    [
        1063070,
        2263475000
    ],
    [
        1063050,
        2265695000
    ],
    [
        1063040,
        2265838000
    ],
    [
        1063030,
        2266000000
    ],
    [
        1063020,
        2270335000
    ],
    [
        1063000,
        2283042500
    ],
    [
        1062990,
        2282233750
    ],
    [
        1062980,
        2281978750
    ],
    [
        1062970,
        2282490000
    ],
    [
        1062950,
        2276000000
    ],
    [
        1062940,
        2274355000
    ],
    [
        1062930,
        2276000000
    ],
    [
        1062920,
        2282881500
    ],
    [
        1062900,
        2279381500
    ],
    [
        1062890,
        2278705000
    ],
    [
        1062870,
        2276000000
    ],
    [
        1062860,
        2268685000
    ],
    [
        1062850,
        2267839500
    ],
    [
        1062840,
        2267296250
    ],
    [
        1062830,
        2266943750
    ],
    [
        1062820,
        2267362500
    ],
    [
        1062800,
        2263000000
    ],
    [
        1062780,
        2273330000
    ],
    [
        1062760,
        2287500000
    ],
    [
        1062750,
        2290000000
    ],
    [
        1062740,
        2292110000
    ],
    [
        1062720,
        2292000000
    ],
    [
        1062710,
        2290640000
    ],
    [
        1062700,
        2288571666
    ],
    [
        1062680,
        2284967500
    ],
    [
        1062670,
        2282856250
    ],
    [
        1062660,
        2280127500
    ],
    [
        1062650,
        2279603000
    ],
    [
        1062640,
        2281065000
    ],
    [
        1062620,
        2280500000
    ],
    [
        1062610,
        2280073500
    ],
    [
        1062600,
        2278147500
    ],
    [
        1062590,
        2274647500
    ],
    [
        1062580,
        2278630000
    ],
    [
        1062570,
        2264736750
    ],
    [
        1062560,
        2262133750
    ],
    [
        1062550,
        2259760000
    ],
    [
        1062540,
        2264000000
    ],
    [
        1062520,
        2261352000
    ],
    [
        1062510,
        2259760000
    ],
    [
        1062490,
        2240000000
    ],
    [
        1062470,
        2242000000
    ],
    [
        1062440,
        2240000000
    ],
    [
        1062400,
        2235000000
    ],
    [
        1062390,
        2234853333
    ],
    [
        1062380,
        2235000000
    ],
    [
        1062370,
        2238000000
    ],
    [
        1062320,
        2242000000
    ],
    [
        1062310,
        2238000000
    ],
    [
        1062300,
        2238430000
    ],
    [
        1062270,
        2238000000
    ],
    [
        1062260,
        2244480000
    ],
    [
        1062250,
        2251332500
    ],
    [
        1062240,
        2256000000
    ],
    [
        1062220,
        2262410000
    ],
    [
        1062210,
        2259070000
    ],
    [
        1062200,
        2251321000
    ],
    [
        1062190,
        2252000000
    ],
    [
        1062160,
        2247000000
    ],
    [
        1062150,
        2244000000
    ],
    [
        1062140,
        2238069000
    ],
    [
        1062120,
        2241000000
    ],
    [
        1062090,
        2237000000
    ],
    [
        1062080,
        2235945000
    ],
    [
        1062070,
        2244000000
    ],
    [
        1062060,
        2245000000
    ],
    [
        1062050,
        2241410000
    ],
    [
        1062030,
        2243150000
    ],
    [
        1061980,
        2236000000
    ],
    [
        1061970,
        2229820000
    ],
    [
        1061940,
        2225000000
    ],
    [
        1061930,
        2219000000
    ],
    [
        1061920,
        2224215000
    ],
    [
        1061900,
        2211331000
    ],
    [
        1061890,
        2217071000
    ],
    [
        1061850,
        2206000000
    ],
    [
        1061820,
        2213000000
    ],
    [
        1061810,
        2207000000
    ],
    [
        1061800,
        2207780000
    ],
    [
        1061790,
        2208100000
    ],
    [
        1061780,
        2206820000
    ],
    [
        1061770,
        2210010000
    ],
    [
        1061750,
        2212889000
    ],
    [
        1061740,
        2206820000
    ],
    [
        1061730,
        2205670000
    ],
    [
        1061680,
        2205000000
    ],
    [
        1061670,
        2200640000
    ],
    [
        1061650,
        2178250000
    ],
    [
        1061640,
        2178000000
    ],
    [
        1061630,
        2177380000
    ],
    [
        1061620,
        2176000000
    ],
    [
        1061610,
        2169000000
    ],
    [
        1061560,
        2168000000
    ],
    [
        1061550,
        2167623000
    ],
    [
        1061490,
        2163323000
    ],
    [
        1061440,
        2167000000
    ],
    [
        1061420,
        2164000000
    ],
    [
        1061410,
        2165063000
    ],
    [
        1061400,
        2164447500
    ],
    [
        1061390,
        2165630000
    ],
    [
        1061380,
        2159991000
    ],
    [
        1061360,
        2151000000
    ],
    [
        1061350,
        2147000000
    ],
    [
        1061340,
        2146570000
    ],
    [
        1061330,
        2144000000
    ],
    [
        1061320,
        2141650000
    ],
    [
        1061310,
        2139000000
    ],
    [
        1061300,
        2138580000
    ],
    [
        1061290,
        2137542500
    ],
    [
        1061280,
        2141025000
    ],
    [
        1061260,
        2145640000
    ],
    [
        1061250,
        2149570000
    ],
    [
        1061240,
        2156630000
    ],
    [
        1061230,
        2156317000
    ],
    [
        1061220,
        2157000000
    ],
    [
        1061210,
        2141500000
    ],
    [
        1061200,
        2140000000
    ],
    [
        1061190,
        2162750000
    ],
    [
        1061180,
        2163787500
    ],
    [
        1061170,
        2165865000
    ],
    [
        1061160,
        2167000000
    ],
    [
        1061150,
        2170000000
    ],
    [
        1061130,
        2178000000
    ],
    [
        1061120,
        2182339000
    ],
    [
        1061110,
        2183000000
    ],
    [
        1061100,
        2183796666
    ],
    [
        1061090,
        2192340000
    ],
    [
        1061080,
        2194000000
    ],
    [
        1061070,
        2193564000
    ],
    [
        1061050,
        2190500000
    ],
    [
        1061040,
        2182665000
    ],
    [
        1061020,
        2178992000
    ],
    [
        1061010,
        2178000000
    ],
    [
        1061000,
        2176500000
    ],
    [
        1060990,
        2171586500
    ],
    [
        1060950,
        2161000000
    ],
    [
        1060940,
        2160186500
    ],
    [
        1060920,
        2158714000
    ],
    [
        1060910,
        2157390000
    ],
    [
        1060900,
        2153886500
    ],
    [
        1060890,
        2147457000
    ],
    [
        1060880,
        2147079250
    ],
    [
        1060870,
        2146271500
    ],
    [
        1060860,
        2135357500
    ],
    [
        1060850,
        2147500000
    ],
    [
        1060840,
        2147458000
    ],
    [
        1060830,
        2145500000
    ],
    [
        1060820,
        2147500000
    ],
    [
        1060800,
        2144500000
    ],
    [
        1060790,
        2143977500
    ],
    [
        1060780,
        2142880500
    ],
    [
        1060760,
        2143500000
    ],
    [
        1060740,
        2144500000
    ],
    [
        1060720,
        2144000000
    ],
    [
        1060710,
        2143463750
    ],
    [
        1060690,
        2143986250
    ],
    [
        1060680,
        2139985000
    ],
    [
        1060670,
        2138965000
    ],
    [
        1060640,
        2138460000
    ],
    [
        1060630,
        2141000000
    ],
    [
        1060620,
        2143290000
    ],
    [
        1060590,
        2143500000
    ],
    [
        1060570,
        2141045000
    ],
    [
        1060550,
        2125000000
    ],
    [
        1060540,
        2123900000
    ],
    [
        1060530,
        2123755000
    ],
    [
        1060520,
        2123201250
    ],
    [
        1060510,
        2118000000
    ],
    [
        1060500,
        2117483750
    ],
    [
        1060490,
        2118097000
    ],
    [
        1060470,
        2118160000
    ],
    [
        1060460,
        2118868500
    ],
    [
        1060450,
        2113645000
    ],
    [
        1060440,
        2113707500
    ],
    [
        1060430,
        2114185000
    ],
    [
        1060420,
        2112932000
    ],
    [
        1060410,
        2117030000
    ],
    [
        1060400,
        2120040000
    ],
    [
        1060390,
        2120203500
    ],
    [
        1060380,
        2121985000
    ],
    [
        1060370,
        2121246250
    ],
    [
        1060360,
        2120657500
    ],
    [
        1060350,
        2120665000
    ],
    [
        1060340,
        2120954000
    ],
    [
        1060330,
        2120220000
    ],
    [
        1060320,
        2121410000
    ],
    [
        1060310,
        2121820000
    ],
    [
        1060300,
        2121500000
    ],
    [
        1060290,
        2114143750
    ],
    [
        1060280,
        2116090000
    ],
    [
        1060270,
        2117460000
    ],
    [
        1060260,
        2120760000
    ],
    [
        1060250,
        2120940000
    ],
    [
        1060240,
        2123305000
    ],
    [
        1060190,
        2123665000
    ],
    [
        1060180,
        2122000000
    ],
    [
        1060170,
        2120500000
    ],
    [
        1060160,
        2124062500
    ],
    [
        1060150,
        2124888750
    ],
    [
        1060130,
        2122000000
    ],
    [
        1060120,
        2121808750
    ],
    [
        1060110,
        2118702500
    ],
    [
        1060100,
        2121621250
    ],
    [
        1060090,
        2122000000
    ],
    [
        1060080,
        2116101250
    ],
    [
        1060070,
        2116193750
    ],
    [
        1060060,
        2118596000
    ],
    [
        1060050,
        2126840000
    ],
    [
        1060040,
        2128110000
    ],
    [
        1060030,
        2128020000
    ],
    [
        1060020,
        2126570000
    ],
    [
        1060010,
        2126703000
    ],
    [
        1060000,
        2130187500
    ],
    [
        1059980,
        2130480000
    ],
    [
        1059970,
        2129650000
    ],
    [
        1059960,
        2129295000
    ],
    [
        1059950,
        2129065500
    ],
    [
        1059940,
        2129605000
    ],
    [
        1059930,
        2133780000
    ],
    [
        1059920,
        2135900000
    ],
    [
        1059910,
        2139205000
    ],
    [
        1059900,
        2141607500
    ],
    [
        1059890,
        2138307500
    ],
    [
        1059880,
        2131617500
    ],
    [
        1059870,
        2131531000
    ],
    [
        1059860,
        2130796000
    ],
    [
        1059850,
        2145237500
    ],
    [
        1059840,
        2146033000
    ],
    [
        1059820,
        2149722000
    ],
    [
        1059810,
        2153626333
    ],
    [
        1059800,
        2152948333
    ],
    [
        1059790,
        2151938750
    ],
    [
        1059780,
        2152060000
    ],
    [
        1059770,
        2151540000
    ],
    [
        1059750,
        2142535000
    ],
    [
        1059740,
        2139240000
    ],
    [
        1059730,
        2135985000
    ],
    [
        1059720,
        2137066000
    ],
    [
        1059710,
        2133446250
    ],
    [
        1059690,
        2133615000
    ],
    [
        1059670,
        2135285000
    ],
    [
        1059660,
        2135000000
    ],
    [
        1059650,
        2132230000
    ],
    [
        1059640,
        2143550000
    ],
    [
        1059630,
        2144995000
    ],
    [
        1059620,
        2143137000
    ],
    [
        1059610,
        2147160000
    ],
    [
        1059600,
        2148990000
    ],
    [
        1059590,
        2136730000
    ],
    [
        1059580,
        2132230000
    ],
    [
        1059570,
        2130000000
    ],
    [
        1059560,
        2128000000
    ],
    [
        1059550,
        2130000000
    ],
    [
        1059540,
        2131525000
    ],
    [
        1059530,
        2132230000
    ],
    [
        1059520,
        2156000000
    ],
    [
        1059500,
        2159000000
    ],
    [
        1059490,
        2150230000
    ],
    [
        1059480,
        2148037500
    ],
    [
        1059470,
        2150977500
    ],
    [
        1059460,
        2151900000
    ],
    [
        1059450,
        2156075000
    ],
    [
        1059440,
        2158572000
    ],
    [
        1059430,
        2163000000
    ],
    [
        1059420,
        2159261000
    ],
    [
        1059410,
        2163000000
    ],
    [
        1059400,
        2156555000
    ],
    [
        1059390,
        2165000000
    ],
    [
        1059380,
        2164000000
    ],
    [
        1059370,
        2159850000
    ],
    [
        1059360,
        2164000000
    ],
    [
        1059350,
        2158331000
    ],
    [
        1059340,
        2157000000
    ],
    [
        1059320,
        2156240000
    ],
    [
        1059290,
        2154860000
    ],
    [
        1059280,
        2153310000
    ],
    [
        1059270,
        2148357000
    ],
    [
        1059260,
        2142992000
    ],
    [
        1059240,
        2164800000
    ],
    [
        1059220,
        2170000000
    ],
    [
        1059210,
        2176280000
    ],
    [
        1059200,
        2188320000
    ],
    [
        1059180,
        2215000000
    ],
    [
        1059170,
        2212000000
    ],
    [
        1059150,
        2193000000
    ],
    [
        1059140,
        2189630000
    ],
    [
        1059130,
        2187316000
    ],
    [
        1059120,
        2189000000
    ],
    [
        1059110,
        2187805000
    ],
    [
        1059080,
        2187000000
    ],
    [
        1059070,
        2186000000
    ],
    [
        1059060,
        2184052500
    ],
    [
        1059050,
        2186000000
    ],
    [
        1059030,
        2185640000
    ],
    [
        1058990,
        2175830000
    ],
    [
        1058980,
        2172000000
    ],
    [
        1058970,
        2169750000
    ],
    [
        1058960,
        2166751000
    ],
    [
        1058940,
        2162000000
    ],
    [
        1058930,
        2166443000
    ],
    [
        1058910,
        2160963000
    ],
    [
        1058900,
        2161772500
    ],
    [
        1058890,
        2163385000
    ],
    [
        1058870,
        2163000000
    ],
    [
        1058860,
        2155640000
    ],
    [
        1058850,
        2150360000
    ],
    [
        1058840,
        2154735000
    ],
    [
        1058810,
        2148000000
    ],
    [
        1058800,
        2126065000
    ],
    [
        1058770,
        2121000000
    ],
    [
        1058760,
        2114420000
    ],
    [
        1058750,
        2114510000
    ],
    [
        1058730,
        2121000000
    ],
    [
        1058720,
        2126540000
    ],
    [
        1058710,
        2134390000
    ],
    [
        1058700,
        2166915000
    ],
    [
        1058680,
        2170000000
    ],
    [
        1058670,
        2181605000
    ],
    [
        1058660,
        2182950000
    ],
    [
        1058650,
        2193849000
    ],
    [
        1058640,
        2191900000
    ],
    [
        1058630,
        2194625000
    ],
    [
        1058610,
        2193355000
    ],
    [
        1058600,
        2193855000
    ],
    [
        1058590,
        2195702500
    ],
    [
        1058580,
        2195875000
    ],
    [
        1058570,
        2197655000
    ],
    [
        1058550,
        2198080000
    ],
    [
        1058540,
        2201000000
    ],
    [
        1058530,
        2193640000
    ],
    [
        1058510,
        2193296000
    ],
    [
        1058500,
        2186795000
    ],
    [
        1058490,
        2184795000
    ],
    [
        1058480,
        2183796250
    ],
    [
        1058470,
        2182901250
    ],
    [
        1058460,
        2180480000
    ],
    [
        1058450,
        2178890000
    ],
    [
        1058440,
        2186727500
    ],
    [
        1058420,
        2195666500
    ],
    [
        1058410,
        2201702500
    ],
    [
        1058400,
        2207571250
    ],
    [
        1058390,
        2209382500
    ],
    [
        1058370,
        2200000000
    ],
    [
        1058360,
        2193905000
    ],
    [
        1058350,
        2196162000
    ],
    [
        1058340,
        2200000000
    ],
    [
        1058330,
        2198290000
    ],
    [
        1058320,
        2193170000
    ],
    [
        1058310,
        2197034000
    ],
    [
        1058300,
        2199146000
    ],
    [
        1058290,
        2202275000
    ],
    [
        1058280,
        2202130000
    ],
    [
        1058230,
        2200000000
    ],
    [
        1058220,
        2202000000
    ],
    [
        1058210,
        2196492500
    ],
    [
        1058190,
        2187640000
    ],
    [
        1058180,
        2194753000
    ],
    [
        1058170,
        2195350000
    ],
    [
        1058160,
        2205670000
    ],
    [
        1058150,
        2206000000
    ],
    [
        1058140,
        2204072500
    ],
    [
        1058130,
        2193642000
    ],
    [
        1058110,
        2199260000
    ],
    [
        1058100,
        2188470000
    ],
    [
        1058090,
        2191395000
    ],
    [
        1058080,
        2190010000
    ],
    [
        1058070,
        2191060000
    ],
    [
        1058060,
        2188102500
    ],
    [
        1058050,
        2193632500
    ],
    [
        1058040,
        2197795000
    ],
    [
        1058030,
        2203402500
    ],
    [
        1058010,
        2197000000
    ],
    [
        1058000,
        2197900000
    ],
    [
        1057980,
        2197000000
    ],
    [
        1057970,
        2192160000
    ],
    [
        1057960,
        2195319000
    ],
    [
        1057950,
        2185040000
    ],
    [
        1057940,
        2188630000
    ],
    [
        1057930,
        2187926000
    ],
    [
        1057910,
        2185000000
    ],
    [
        1057900,
        2172770000
    ],
    [
        1057880,
        2175190000
    ],
    [
        1057850,
        2165000000
    ],
    [
        1057840,
        2160360000
    ],
    [
        1057830,
        2157325000
    ],
    [
        1057820,
        2158181000
    ],
    [
        1057810,
        2161098000
    ],
    [
        1057790,
        2163752500
    ],
    [
        1057780,
        2163380000
    ],
    [
        1057770,
        2160675000
    ],
    [
        1057760,
        2163380000
    ],
    [
        1057730,
        2164350000
    ],
    [
        1057720,
        2168680000
    ],
    [
        1057690,
        2166000000
    ],
    [
        1057590,
        2191660000
    ],
    [
        1057580,
        2185000000
    ],
    [
        1057570,
        2182976000
    ],
    [
        1057560,
        2184427500
    ],
    [
        1057550,
        2166557500
    ],
    [
        1057540,
        2168720000
    ],
    [
        1057530,
        2179231000
    ],
    [
        1057520,
        2182472000
    ],
    [
        1057500,
        2185690000
    ],
    [
        1057490,
        2174417500
    ],
    [
        1057470,
        2182970000
    ],
    [
        1057460,
        2182700000
    ],
    [
        1057450,
        2166390000
    ],
    [
        1057440,
        2167030000
    ],
    [
        1057420,
        2161000000
    ],
    [
        1057410,
        2159000000
    ],
    [
        1057390,
        2153000000
    ],
    [
        1057370,
        2159270000
    ],
    [
        1057350,
        2172000000
    ],
    [
        1057340,
        2174417500
    ],
    [
        1057330,
        2173460000
    ],
    [
        1057320,
        2176805000
    ],
    [
        1057310,
        2168690000
    ],
    [
        1057300,
        2168260000
    ],
    [
        1057290,
        2155440000
    ],
    [
        1057270,
        2150000000
    ],
    [
        1057250,
        2147460000
    ],
    [
        1057240,
        2147052000
    ],
    [
        1057230,
        2149215000
    ],
    [
        1057220,
        2158765000
    ],
    [
        1057210,
        2161940000
    ],
    [
        1057180,
        2180410000
    ],
    [
        1057160,
        2161400000
    ],
    [
        1057150,
        2158375000
    ],
    [
        1057140,
        2177380000
    ],
    [
        1057130,
        2166890000
    ],
    [
        1057120,
        2162190000
    ],
    [
        1057110,
        2151540000
    ],
    [
        1057100,
        2151330000
    ],
    [
        1057090,
        2140790000
    ],
    [
        1057080,
        2138516000
    ],
    [
        1057070,
        2144000000
    ],
    [
        1057050,
        2153000000
    ],
    [
        1057030,
        2146980000
    ],
    [
        1057020,
        2147000000
    ],
    [
        1057010,
        2152938750
    ],
    [
        1057000,
        2139500000
    ],
    [
        1056990,
        2129915000
    ],
    [
        1056980,
        2127415000
    ],
    [
        1056970,
        2124125000
    ],
    [
        1056960,
        2123125000
    ],
    [
        1056950,
        2121000000
    ],
    [
        1056920,
        2117000000
    ],
    [
        1056910,
        2113222000
    ],
    [
        1056890,
        2111830000
    ],
    [
        1056880,
        2108152750
    ],
    [
        1056870,
        2106826250
    ],
    [
        1056860,
        2103239000
    ],
    [
        1056840,
        2105960000
    ],
    [
        1056830,
        2128415000
    ],
    [
        1056820,
        2130585500
    ],
    [
        1056810,
        2158264250
    ],
    [
        1056800,
        2152508750
    ],
    [
        1056790,
        2151742500
    ],
    [
        1056780,
        2155873750
    ],
    [
        1056770,
        2151000000
    ],
    [
        1056760,
        2150032500
    ],
    [
        1056750,
        2151000000
    ],
    [
        1056730,
        2142640000
    ],
    [
        1056720,
        2139171250
    ],
    [
        1056700,
        2144867500
    ],
    [
        1056690,
        2137642500
    ],
    [
        1056670,
        2137943750
    ],
    [
        1056660,
        2137323750
    ],
    [
        1056650,
        2139295000
    ],
    [
        1056640,
        2152330000
    ],
    [
        1056630,
        2155195000
    ],
    [
        1056620,
        2155492500
    ],
    [
        1056610,
        2156280000
    ],
    [
        1056600,
        2155274000
    ],
    [
        1056590,
        2155297750
    ],
    [
        1056570,
        2154165000
    ],
    [
        1056560,
        2153716000
    ],
    [
        1056550,
        2144422500
    ],
    [
        1056540,
        2147437500
    ],
    [
        1056530,
        2146281250
    ],
    [
        1056510,
        2138000000
    ],
    [
        1056500,
        2135075000
    ],
    [
        1056490,
        2132883750
    ],
    [
        1056480,
        2131635000
    ],
    [
        1056470,
        2131120000
    ],
    [
        1056460,
        2129915000
    ],
    [
        1056450,
        2132210000
    ],
    [
        1056440,
        2129915000
    ],
    [
        1056430,
        2127500000
    ],
    [
        1056420,
        2127430000
    ],
    [
        1056410,
        2130500000
    ],
    [
        1056400,
        2130106250
    ],
    [
        1056390,
        2130362500
    ],
    [
        1056370,
        2124688750
    ],
    [
        1056290,
        2129408500
    ],
    [
        1056280,
        2129055000
    ],
    [
        1056270,
        2126517000
    ],
    [
        1056260,
        2123217000
    ],
    [
        1056250,
        2121900500
    ],
    [
        1056230,
        2126815000
    ],
    [
        1056200,
        2118460000
    ],
    [
        1056190,
        2119325000
    ],
    [
        1056180,
        2118460000
    ],
    [
        1056170,
        2117792500
    ],
    [
        1056160,
        2116633000
    ],
    [
        1056150,
        2114840500
    ],
    [
        1056140,
        2119120000
    ],
    [
        1056130,
        2118458750
    ],
    [
        1056120,
        2112558750
    ],
    [
        1056110,
        2112370500
    ],
    [
        1056100,
        2113870500
    ],
    [
        1056090,
        2118853750
    ],
    [
        1056070,
        2118210000
    ],
    [
        1056050,
        2116000000
    ],
    [
        1056030,
        2114542000
    ],
    [
        1056010,
        2118000000
    ],
    [
        1056000,
        2118227000
    ],
    [
        1055980,
        2114977500
    ],
    [
        1055970,
        2112000000
    ],
    [
        1055960,
        2110727500
    ],
    [
        1055950,
        2110000000
    ],
    [
        1055940,
        2113455000
    ],
    [
        1055930,
        2118865000
    ],
    [
        1055910,
        2117878000
    ],
    [
        1055900,
        2128555000
    ],
    [
        1055890,
        2134000000
    ],
    [
        1055880,
        2133776000
    ],
    [
        1055870,
        2139260000
    ],
    [
        1055860,
        2138368750
    ],
    [
        1055850,
        2136300000
    ],
    [
        1055840,
        2140648750
    ],
    [
        1055830,
        2138872000
    ],
    [
        1055820,
        2141900000
    ],
    [
        1055810,
        2135500000
    ],
    [
        1055800,
        2134298750
    ],
    [
        1055790,
        2130945000
    ],
    [
        1055780,
        2133376500
    ],
    [
        1055770,
        2134125000
    ],
    [
        1055760,
        2133780000
    ],
    [
        1055750,
        2134125000
    ],
    [
        1055730,
        2119365000
    ],
    [
        1055690,
        2119000000
    ],
    [
        1055680,
        2129620000
    ],
    [
        1055670,
        2133500000
    ],
    [
        1055660,
        2135000000
    ],
    [
        1055650,
        2133500000
    ],
    [
        1055630,
        2129775000
    ],
    [
        1055610,
        2123995000
    ],
    [
        1055600,
        2121080500
    ],
    [
        1055590,
        2118000000
    ],
    [
        1055580,
        2117160000
    ],
    [
        1055570,
        2117000000
    ],
    [
        1055550,
        2125000000
    ],
    [
        1055540,
        2125495000
    ],
    [
        1055530,
        2118742500
    ],
    [
        1055520,
        2114744000
    ],
    [
        1055510,
        2118047500
    ],
    [
        1055500,
        2095255000
    ],
    [
        1055480,
        2090500000
    ],
    [
        1055460,
        2087510000
    ],
    [
        1055450,
        2085780000
    ],
    [
        1055440,
        2085390500
    ],
    [
        1055430,
        2081584250
    ],
    [
        1055420,
        2080372250
    ],
    [
        1055410,
        2085142750
    ],
    [
        1055400,
        2080620000
    ],
    [
        1055390,
        2076986250
    ],
    [
        1055370,
        2075115000
    ],
    [
        1055360,
        2075655000
    ],
    [
        1055340,
        2075115000
    ],
    [
        1055330,
        2076588750
    ],
    [
        1055320,
        2077671000
    ],
    [
        1055310,
        2079468000
    ],
    [
        1055290,
        2077305000
    ],
    [
        1055280,
        2076894500
    ],
    [
        1055270,
        2075889500
    ],
    [
        1055260,
        2075625000
    ],
    [
        1055250,
        2073561666
    ],
    [
        1055240,
        2068055000
    ],
    [
        1055230,
        2072619500
    ],
    [
        1055220,
        2075625000
    ],
    [
        1055210,
        2089425000
    ],
    [
        1055200,
        2104524750
    ],
    [
        1055190,
        2108671250
    ],
    [
        1055180,
        2111671250
    ],
    [
        1055170,
        2109479750
    ],
    [
        1055160,
        2131153750
    ],
    [
        1055150,
        2145963750
    ],
    [
        1055120,
        2137500000
    ],
    [
        1055110,
        2132555000
    ],
    [
        1055100,
        2123645000
    ],
    [
        1055070,
        2046000000
    ],
    [
        1055060,
        2044713750
    ],
    [
        1055040,
        2045000000
    ],
    [
        1054990,
        2057755500
    ],
    [
        1054980,
        2056253750
    ],
    [
        1054970,
        2059515000
    ],
    [
        1054960,
        2043953750
    ],
    [
        1054950,
        2043087250
    ],
    [
        1054940,
        2057703500
    ],
    [
        1054920,
        2055540500
    ],
    [
        1054900,
        2044468750
    ],
    [
        1054880,
        2047015000
    ],
    [
        1054860,
        2058031250
    ],
    [
        1054810,
        2026010000
    ],
    [
        1054800,
        2018000000
    ],
    [
        1054770,
        2015500000
    ],
    [
        1054760,
        2012918000
    ],
    [
        1054750,
        2013000000
    ],
    [
        1054740,
        2011507500
    ],
    [
        1054720,
        2010500000
    ],
    [
        1054710,
        2010352000
    ],
    [
        1054700,
        2010134000
    ],
    [
        1054690,
        2011616250
    ],
    [
        1054680,
        2011011250
    ],
    [
        1054670,
        2009155000
    ],
    [
        1054660,
        2006945000
    ],
    [
        1054650,
        2004684000
    ],
    [
        1054640,
        2010500000
    ],
    [
        1054630,
        2008635000
    ],
    [
        1054620,
        2009671250
    ],
    [
        1054610,
        2008306250
    ],
    [
        1054600,
        2003515000
    ],
    [
        1054570,
        2004000000
    ],
    [
        1054560,
        2003103750
    ],
    [
        1054530,
        1987500000
    ],
    [
        1054520,
        1986500000
    ],
    [
        1054510,
        1985216250
    ],
    [
        1054500,
        1986500000
    ],
    [
        1054470,
        1978815000
    ],
    [
        1054460,
        1978500000
    ],
    [
        1054450,
        1977875000
    ],
    [
        1054440,
        1976491500
    ],
    [
        1054430,
        1976866500
    ],
    [
        1054420,
        1980433750
    ],
    [
        1054410,
        1983398250
    ],
    [
        1054400,
        1988145000
    ],
    [
        1054390,
        1988645000
    ],
    [
        1054380,
        1989000000
    ],
    [
        1054370,
        1986540000
    ],
    [
        1054360,
        1983662500
    ],
    [
        1054350,
        1977333500
    ],
    [
        1054340,
        1991259000
    ],
    [
        1054330,
        1994340000
    ],
    [
        1054320,
        1995228333
    ],
    [
        1054310,
        1991351500
    ],
    [
        1054300,
        1989260000
    ],
    [
        1054290,
        1992000000
    ],
    [
        1054270,
        1995000000
    ],
    [
        1054260,
        1996000000
    ],
    [
        1054250,
        1999654500
    ],
    [
        1054240,
        1997730000
    ],
    [
        1054230,
        2001122500
    ],
    [
        1054220,
        2000250000
    ],
    [
        1054210,
        2002145000
    ],
    [
        1054200,
        1990500000
    ],
    [
        1054190,
        1987405000
    ],
    [
        1054180,
        1993510000
    ],
    [
        1054170,
        1998018500
    ],
    [
        1054150,
        2002605000
    ],
    [
        1054140,
        2006543750
    ],
    [
        1054120,
        2003000000
    ],
    [
        1054110,
        1992640000
    ],
    [
        1054100,
        1981495000
    ],
    [
        1054080,
        1984810000
    ],
    [
        1054070,
        1989152500
    ],
    [
        1054050,
        1981000000
    ],
    [
        1054030,
        1978000000
    ],
    [
        1054010,
        1977040000
    ],
    [
        1053960,
        1982000000
    ],
    [
        1053940,
        1982200000
    ],
    [
        1053910,
        1988290000
    ],
    [
        1053900,
        1995620000
    ],
    [
        1053890,
        1997750000
    ],
    [
        1053880,
        1993380000
    ],
    [
        1053870,
        1992000000
    ],
    [
        1053860,
        1989000000
    ],
    [
        1053850,
        1984866000
    ],
    [
        1053820,
        1982420000
    ],
    [
        1053810,
        1983050000
    ],
    [
        1053800,
        1982000000
    ],
    [
        1053790,
        1977640000
    ],
    [
        1053780,
        1979977500
    ],
    [
        1053770,
        1978740000
    ],
    [
        1053750,
        1976070000
    ],
    [
        1053740,
        1980060000
    ],
    [
        1053720,
        1980160000
    ],
    [
        1053710,
        1971010000
    ],
    [
        1053680,
        1964000000
    ],
    [
        1053650,
        1962730000
    ],
    [
        1053620,
        1965900000
    ],
    [
        1053610,
        1969520000
    ],
    [
        1053600,
        1970000000
    ],
    [
        1053590,
        1971070000
    ],
    [
        1053490,
        1973345000
    ],
    [
        1053480,
        1973480000
    ],
    [
        1053470,
        1972000000
    ],
    [
        1053460,
        1968560000
    ],
    [
        1053450,
        1970147500
    ],
    [
        1053440,
        1971000000
    ],
    [
        1053420,
        1970980000
    ],
    [
        1053400,
        1955000000
    ],
    [
        1053380,
        1954000000
    ],
    [
        1053370,
        1951930000
    ],
    [
        1053360,
        1944000000
    ],
    [
        1053340,
        1939000000
    ],
    [
        1053310,
        1937000000
    ],
    [
        1053300,
        1936570000
    ],
    [
        1053290,
        1937295000
    ],
    [
        1053280,
        1937120000
    ],
    [
        1053260,
        1938000000
    ],
    [
        1053250,
        1935210000
    ],
    [
        1053230,
        1937452000
    ],
    [
        1053220,
        1937000000
    ],
    [
        1053190,
        1936570000
    ],
    [
        1053180,
        1931767500
    ],
    [
        1053170,
        1930000000
    ],
    [
        1053160,
        1930655000
    ],
    [
        1053130,
        1931190000
    ],
    [
        1053120,
        1930000000
    ],
    [
        1053110,
        1931190000
    ],
    [
        1053090,
        1930000000
    ],
    [
        1053080,
        1928337500
    ],
    [
        1053070,
        1929750000
    ],
    [
        1053060,
        1928424000
    ],
    [
        1053020,
        1929000000
    ],
    [
        1053000,
        1927000000
    ],
    [
        1052990,
        1928557500
    ],
    [
        1052980,
        1918710000
    ],
    [
        1052960,
        1918420000
    ],
    [
        1052950,
        1918276250
    ],
    [
        1052940,
        1918655000
    ],
    [
        1052930,
        1915350500
    ],
    [
        1052920,
        1915575500
    ],
    [
        1052890,
        1918500000
    ],
    [
        1052880,
        1922975000
    ],
    [
        1052870,
        1925900000
    ],
    [
        1052860,
        1926231500
    ],
    [
        1052850,
        1934323750
    ],
    [
        1052840,
        1935670000
    ],
    [
        1052830,
        1938808750
    ],
    [
        1052820,
        1934520000
    ],
    [
        1052810,
        1927875000
    ],
    [
        1052800,
        1926040000
    ],
    [
        1052790,
        1919000000
    ],
    [
        1052780,
        1917440000
    ],
    [
        1052770,
        1914648750
    ],
    [
        1052760,
        1917214000
    ],
    [
        1052750,
        1916392500
    ],
    [
        1052740,
        1918702000
    ],
    [
        1052720,
        1921268500
    ],
    [
        1052700,
        1920753000
    ],
    [
        1052690,
        1919567500
    ],
    [
        1052680,
        1918546500
    ],
    [
        1052670,
        1918734000
    ],
    [
        1052660,
        1918655000
    ],
    [
        1052650,
        1918000000
    ],
    [
        1052640,
        1919310000
    ],
    [
        1052620,
        1914000000
    ],
    [
        1052610,
        1910612500
    ],
    [
        1052590,
        1911285000
    ],
    [
        1052580,
        1914000000
    ],
    [
        1052560,
        1925000000
    ],
    [
        1052550,
        1931910000
    ],
    [
        1052540,
        1932810000
    ],
    [
        1052530,
        1935827500
    ],
    [
        1052500,
        1932360000
    ],
    [
        1052490,
        1933610000
    ],
    [
        1052480,
        1934902500
    ],
    [
        1052470,
        1936960000
    ],
    [
        1052450,
        1936170000
    ],
    [
        1052430,
        1928010000
    ],
    [
        1052420,
        1928000000
    ],
    [
        1052410,
        1929930000
    ],
    [
        1052400,
        1929327500
    ],
    [
        1052390,
        1927132500
    ],
    [
        1052380,
        1931100000
    ],
    [
        1052370,
        1933000000
    ],
    [
        1052360,
        1933370000
    ],
    [
        1052350,
        1933130000
    ],
    [
        1052340,
        1933335000
    ],
    [
        1052330,
        1934000000
    ],
    [
        1052310,
        1927460000
    ],
    [
        1052300,
        1916000000
    ],
    [
        1052290,
        1915110000
    ],
    [
        1052270,
        1916000000
    ],
    [
        1052250,
        1924920000
    ],
    [
        1052230,
        1898000000
    ],
    [
        1052220,
        1896000000
    ],
    [
        1052200,
        1895000000
    ],
    [
        1052190,
        1896000000
    ],
    [
        1052170,
        1895000000
    ],
    [
        1052160,
        1892015000
    ],
    [
        1052140,
        1889000000
    ],
    [
        1052090,
        1923000000
    ],
    [
        1052070,
        1936000000
    ],
    [
        1052060,
        1935000000
    ],
    [
        1052050,
        1933767000
    ],
    [
        1052040,
        1934923000
    ],
    [
        1052020,
        1935000000
    ],
    [
        1052010,
        1933313000
    ],
    [
        1052000,
        1933000000
    ],
    [
        1051990,
        1932500000
    ],
    [
        1051960,
        1930920000
    ],
    [
        1051950,
        1932981000
    ],
    [
        1051930,
        1936700000
    ],
    [
        1051900,
        1937000000
    ],
    [
        1051880,
        1936700000
    ],
    [
        1051860,
        1939147500
    ],
    [
        1051800,
        1937000000
    ],
    [
        1051790,
        1930920000
    ],
    [
        1051770,
        1933710000
    ],
    [
        1051750,
        1921490000
    ],
    [
        1051730,
        1915000000
    ],
    [
        1051720,
        1923920000
    ],
    [
        1051700,
        1925730000
    ],
    [
        1051690,
        1928490000
    ],
    [
        1051680,
        1926687500
    ],
    [
        1051670,
        1926137500
    ],
    [
        1051660,
        1925000000
    ],
    [
        1051650,
        1920000000
    ],
    [
        1051630,
        1919260000
    ],
    [
        1051620,
        1923427000
    ],
    [
        1051610,
        1925100000
    ],
    [
        1051590,
        1928105000
    ],
    [
        1051570,
        1930000000
    ],
    [
        1051560,
        1930970000
    ],
    [
        1051540,
        1932800000
    ],
    [
        1051520,
        1907000000
    ],
    [
        1051510,
        1906568000
    ],
    [
        1051500,
        1901890000
    ],
    [
        1051490,
        1900820000
    ],
    [
        1051470,
        1907000000
    ],
    [
        1051460,
        1919260000
    ],
    [
        1051450,
        1919560000
    ],
    [
        1051440,
        1911000000
    ],
    [
        1051410,
        1900000000
    ],
    [
        1051390,
        1898460000
    ],
    [
        1051380,
        1896290000
    ],
    [
        1051350,
        1894000000
    ],
    [
        1051340,
        1887000000
    ],
    [
        1051320,
        1886840000
    ],
    [
        1051310,
        1886827500
    ],
    [
        1051300,
        1886840000
    ],
    [
        1051280,
        1873000000
    ],
    [
        1051270,
        1870690000
    ],
    [
        1051260,
        1865260000
    ],
    [
        1051240,
        1867000000
    ],
    [
        1051230,
        1863000000
    ],
    [
        1051200,
        1855000000
    ],
    [
        1051190,
        1863000000
    ],
    [
        1051180,
        1868122500
    ],
    [
        1051170,
        1880585000
    ],
    [
        1051160,
        1881000000
    ],
    [
        1051150,
        1866000000
    ],
    [
        1051140,
        1863000000
    ],
    [
        1051130,
        1862760000
    ],
    [
        1051120,
        1860747500
    ],
    [
        1051110,
        1843000000
    ],
    [
        1051100,
        1838090000
    ],
    [
        1051080,
        1820410000
    ],
    [
        1051070,
        1819176000
    ],
    [
        1051060,
        1817461000
    ],
    [
        1051050,
        1821890000
    ],
    [
        1051040,
        1824390000
    ],
    [
        1051030,
        1826306000
    ],
    [
        1051020,
        1837890000
    ],
    [
        1051010,
        1848000000
    ],
    [
        1051000,
        1849733000
    ],
    [
        1050990,
        1842248750
    ],
    [
        1050970,
        1832000000
    ],
    [
        1050960,
        1829505000
    ],
    [
        1050950,
        1830682000
    ],
    [
        1050940,
        1832000000
    ],
    [
        1050930,
        1830362500
    ],
    [
        1050910,
        1830555000
    ],
    [
        1050900,
        1829000000
    ],
    [
        1050880,
        1829595000
    ],
    [
        1050870,
        1843929500
    ],
    [
        1050850,
        1866500000
    ],
    [
        1050840,
        1868440000
    ],
    [
        1050830,
        1883640000
    ],
    [
        1050810,
        1887513500
    ],
    [
        1050800,
        1880647500
    ],
    [
        1050790,
        1879995000
    ],
    [
        1050780,
        1878000000
    ],
    [
        1050770,
        1877807500
    ],
    [
        1050760,
        1873075000
    ],
    [
        1050730,
        1870220000
    ],
    [
        1050720,
        1870590500
    ],
    [
        1050700,
        1868000000
    ],
    [
        1050690,
        1883970000
    ],
    [
        1050680,
        1883560000
    ],
    [
        1050670,
        1884000000
    ],
    [
        1050590,
        1873000000
    ],
    [
        1050580,
        1874130000
    ],
    [
        1050570,
        1873000000
    ],
    [
        1050560,
        1870794250
    ],
    [
        1050550,
        1871006250
    ],
    [
        1050520,
        1852500000
    ],
    [
        1050510,
        1859000000
    ],
    [
        1050490,
        1858845000
    ],
    [
        1050470,
        1868615000
    ],
    [
        1050460,
        1872747000
    ],
    [
        1050450,
        1876730000
    ],
    [
        1050440,
        1879000000
    ],
    [
        1050430,
        1880265000
    ],
    [
        1050420,
        1883595000
    ],
    [
        1050410,
        1893660000
    ],
    [
        1050390,
        1895000000
    ],
    [
        1050370,
        1887820000
    ],
    [
        1050360,
        1885807750
    ],
    [
        1050350,
        1874450000
    ],
    [
        1050340,
        1873031000
    ],
    [
        1050330,
        1873807000
    ],
    [
        1050320,
        1874787000
    ],
    [
        1050300,
        1889035000
    ],
    [
        1050290,
        1899281500
    ],
    [
        1050280,
        1904665000
    ],
    [
        1050270,
        1905825000
    ],
    [
        1050260,
        1906491250
    ],
    [
        1050250,
        1903880000
    ],
    [
        1050230,
        1907608500
    ],
    [
        1050220,
        1910483500
    ],
    [
        1050210,
        1911608500
    ],
    [
        1050200,
        1913733500
    ],
    [
        1050190,
        1911677500
    ],
    [
        1050180,
        1910682500
    ],
    [
        1050170,
        1908201500
    ],
    [
        1050160,
        1907410000
    ],
    [
        1050150,
        1900165000
    ],
    [
        1050140,
        1896738750
    ],
    [
        1050130,
        1896108750
    ],
    [
        1050120,
        1892645000
    ],
    [
        1050110,
        1890621250
    ],
    [
        1050100,
        1888583750
    ],
    [
        1050090,
        1884059500
    ],
    [
        1050080,
        1883000000
    ],
    [
        1050070,
        1883500000
    ],
    [
        1050060,
        1884998750
    ],
    [
        1050050,
        1886015000
    ],
    [
        1050040,
        1889126000
    ],
    [
        1050030,
        1894201000
    ],
    [
        1050020,
        1897000000
    ],
    [
        1050010,
        1899674500
    ],
    [
        1050000,
        1913825000
    ],
    [
        1049990,
        1914915000
    ],
    [
        1049980,
        1915000000
    ],
    [
        1049970,
        1916322500
    ],
    [
        1049960,
        1914915000
    ],
    [
        1049950,
        1914544500
    ],
    [
        1049900,
        1925205000
    ],
    [
        1049890,
        1926410000
    ],
    [
        1049880,
        1931440000
    ],
    [
        1049870,
        1931940000
    ],
    [
        1049860,
        1932460000
    ],
    [
        1049840,
        1932030000
    ],
    [
        1049830,
        1931285000
    ],
    [
        1049820,
        1931000000
    ],
    [
        1049810,
        1929500000
    ],
    [
        1049780,
        1931544500
    ],
    [
        1049770,
        1931522500
    ],
    [
        1049760,
        1930045000
    ],
    [
        1049750,
        1931353750
    ],
    [
        1049730,
        1934000000
    ],
    [
        1049720,
        1933064000
    ],
    [
        1049710,
        1933770000
    ],
    [
        1049700,
        1938000000
    ],
    [
        1049690,
        1939060000
    ],
    [
        1049670,
        1934040000
    ],
    [
        1049660,
        1934180000
    ],
    [
        1049650,
        1939170000
    ],
    [
        1049640,
        1945610000
    ],
    [
        1049630,
        1948000000
    ],
    [
        1049620,
        1945610000
    ],
    [
        1049610,
        1943252000
    ],
    [
        1049600,
        1944930000
    ],
    [
        1049590,
        1948580000
    ],
    [
        1049570,
        1946293750
    ],
    [
        1049560,
        1940500000
    ],
    [
        1049550,
        1940015000
    ],
    [
        1049540,
        1939563750
    ],
    [
        1049530,
        1938071000
    ],
    [
        1049500,
        1938000000
    ],
    [
        1049490,
        1944537500
    ],
    [
        1049480,
        1944206250
    ],
    [
        1049470,
        1941642500
    ],
    [
        1049460,
        1945770000
    ],
    [
        1049450,
        1952790000
    ],
    [
        1049440,
        1953050000
    ],
    [
        1049430,
        1964831500
    ],
    [
        1049410,
        1966215000
    ],
    [
        1049400,
        1979527500
    ],
    [
        1049390,
        1981551250
    ],
    [
        1049290,
        1994875000
    ],
    [
        1049280,
        1996927500
    ],
    [
        1049270,
        1994500000
    ],
    [
        1049260,
        1994000000
    ],
    [
        1049240,
        1994618750
    ],
    [
        1049230,
        1993237000
    ],
    [
        1049220,
        1993820000
    ],
    [
        1049210,
        1992205000
    ],
    [
        1049200,
        1991801250
    ],
    [
        1049180,
        1991831250
    ],
    [
        1049170,
        1995000000
    ],
    [
        1049150,
        1994371250
    ],
    [
        1049140,
        1994511000
    ],
    [
        1049130,
        1992831500
    ],
    [
        1049120,
        1997841500
    ],
    [
        1049110,
        2001010000
    ],
    [
        1049090,
        2010725000
    ],
    [
        1049080,
        2012015000
    ],
    [
        1049070,
        2012850000
    ],
    [
        1049060,
        2001855000
    ],
    [
        1049030,
        2002270000
    ],
    [
        1049000,
        1989440000
    ],
    [
        1048990,
        1987500000
    ],
    [
        1048980,
        1981723250
    ],
    [
        1048970,
        1980059500
    ],
    [
        1048960,
        1985446500
    ],
    [
        1048940,
        1965315000
    ],
    [
        1048930,
        1964705000
    ],
    [
        1048910,
        1947685000
    ],
    [
        1048900,
        1947185000
    ],
    [
        1048890,
        1946957500
    ],
    [
        1048880,
        1935805000
    ],
    [
        1048870,
        1933805000
    ],
    [
        1048860,
        1932128500
    ],
    [
        1048850,
        1926487500
    ],
    [
        1048840,
        1923000000
    ],
    [
        1048830,
        1922775000
    ],
    [
        1048810,
        1917821000
    ],
    [
        1048790,
        1917000000
    ],
    [
        1048760,
        1917887500
    ],
    [
        1048750,
        1936500000
    ],
    [
        1048740,
        1936784500
    ],
    [
        1048720,
        1937000000
    ],
    [
        1048710,
        1939731000
    ],
    [
        1048700,
        1937540000
    ],
    [
        1048690,
        1937560000
    ],
    [
        1048680,
        1938598750
    ],
    [
        1048660,
        1941763750
    ],
    [
        1048650,
        1941208000
    ],
    [
        1048640,
        1947375000
    ],
    [
        1048630,
        1948000000
    ],
    [
        1048620,
        1956200000
    ],
    [
        1048610,
        1961710000
    ],
    [
        1048600,
        1966530000
    ],
    [
        1048590,
        1965570000
    ],
    [
        1048560,
        1968690000
    ],
    [
        1048550,
        1963745000
    ],
    [
        1048530,
        1961500000
    ],
    [
        1048520,
        1959650000
    ],
    [
        1048510,
        1956115000
    ],
    [
        1048490,
        1955123000
    ],
    [
        1048460,
        1954513500
    ],
    [
        1048450,
        1954540000
    ],
    [
        1048440,
        1955630000
    ],
    [
        1048430,
        1957000000
    ],
    [
        1048420,
        1953880000
    ],
    [
        1048410,
        1953400000
    ],
    [
        1048400,
        1958740000
    ],
    [
        1048380,
        1957000000
    ],
    [
        1048370,
        1956770000
    ],
    [
        1048360,
        1957000000
    ],
    [
        1048350,
        1959090000
    ],
    [
        1048320,
        1960000000
    ],
    [
        1048310,
        1956447500
    ],
    [
        1048300,
        1958370000
    ],
    [
        1048270,
        1960000000
    ],
    [
        1048260,
        1958073000
    ],
    [
        1048240,
        1959760000
    ],
    [
        1048230,
        1960860000
    ],
    [
        1048200,
        1957000000
    ],
    [
        1048190,
        1958784000
    ],
    [
        1048180,
        1961700000
    ],
    [
        1048150,
        1957000000
    ],
    [
        1048140,
        1958940000
    ],
    [
        1048120,
        1958630000
    ],
    [
        1048110,
        1964000000
    ],
    [
        1048100,
        1964070000
    ],
    [
        1048090,
        1964000000
    ],
    [
        1048080,
        1963712500
    ],
    [
        1048070,
        1963000000
    ],
    [
        1048060,
        1960882500
    ],
    [
        1048050,
        1963000000
    ],
    [
        1048040,
        1965082000
    ],
    [
        1048030,
        1972000000
    ],
    [
        1048020,
        1972190000
    ],
    [
        1047970,
        1972000000
    ],
    [
        1047960,
        1971382000
    ],
    [
        1047950,
        1970670000
    ],
    [
        1047940,
        1978740000
    ],
    [
        1047930,
        1982680000
    ],
    [
        1047890,
        1980280000
    ],
    [
        1047880,
        1975872500
    ],
    [
        1047860,
        1975850000
    ],
    [
        1047850,
        1979390000
    ],
    [
        1047830,
        1978000000
    ],
    [
        1047810,
        1984000000
    ],
    [
        1047800,
        1984807500
    ],
    [
        1047790,
        1983824000
    ],
    [
        1047780,
        1982077500
    ],
    [
        1047770,
        1982250000
    ],
    [
        1047760,
        1981015000
    ],
    [
        1047750,
        1980385000
    ],
    [
        1047740,
        1978200000
    ],
    [
        1047720,
        1973000000
    ],
    [
        1047700,
        1977650000
    ],
    [
        1047670,
        1979805000
    ],
    [
        1047660,
        1979192500
    ],
    [
        1047650,
        1970140000
    ],
    [
        1047640,
        1965900000
    ],
    [
        1047630,
        1966014000
    ],
    [
        1047620,
        1966797500
    ],
    [
        1047610,
        1965890000
    ],
    [
        1047600,
        1961000000
    ],
    [
        1047590,
        1960898000
    ],
    [
        1047580,
        1961000000
    ],
    [
        1047550,
        1959000000
    ],
    [
        1047540,
        1954000000
    ],
    [
        1047530,
        1953900000
    ],
    [
        1047520,
        1952870000
    ],
    [
        1047510,
        1954000000
    ],
    [
        1047500,
        1954159000
    ],
    [
        1047490,
        1954675000
    ],
    [
        1047480,
        1954000000
    ],
    [
        1047470,
        1956712500
    ],
    [
        1047450,
        1957940000
    ],
    [
        1047430,
        1974000000
    ],
    [
        1047420,
        1981000000
    ],
    [
        1047410,
        1985022000
    ],
    [
        1047400,
        1999000000
    ],
    [
        1047380,
        2003000000
    ],
    [
        1047370,
        1999000000
    ],
    [
        1047360,
        2003000000
    ],
    [
        1047330,
        2002000000
    ],
    [
        1047320,
        2001608000
    ],
    [
        1047310,
        2001330000
    ],
    [
        1047300,
        2000130000
    ],
    [
        1047290,
        1997000000
    ],
    [
        1047280,
        1997524000
    ],
    [
        1047190,
        1999000000
    ],
    [
        1047180,
        1996000000
    ],
    [
        1047170,
        1994110000
    ],
    [
        1047160,
        1992947500
    ],
    [
        1047150,
        1992750000
    ],
    [
        1047140,
        1992540000
    ],
    [
        1047120,
        1994000000
    ],
    [
        1047110,
        1996000000
    ],
    [
        1047100,
        1999000000
    ],
    [
        1047090,
        1999110000
    ],
    [
        1047080,
        1998430000
    ],
    [
        1047070,
        2004000000
    ],
    [
        1047050,
        2003000000
    ],
    [
        1047040,
        1999850000
    ],
    [
        1047030,
        2001813000
    ],
    [
        1047010,
        2003000000
    ],
    [
        1047000,
        2003580000
    ],
    [
        1046980,
        2007160000
    ],
    [
        1046970,
        2008000000
    ],
    [
        1046960,
        2010000000
    ],
    [
        1046950,
        2011000000
    ],
    [
        1046940,
        2010000000
    ],
    [
        1046930,
        2014490000
    ],
    [
        1046920,
        2014900000
    ],
    [
        1046910,
        2015180000
    ],
    [
        1046900,
        2019250000
    ],
    [
        1046890,
        2026670000
    ],
    [
        1046880,
        2026301000
    ],
    [
        1046870,
        2030560000
    ],
    [
        1046850,
        2031000000
    ],
    [
        1046840,
        2031230000
    ],
    [
        1046810,
        2031000000
    ],
    [
        1046770,
        2028000000
    ],
    [
        1046750,
        2032000000
    ],
    [
        1046740,
        2030665000
    ],
    [
        1046730,
        2022890000
    ],
    [
        1046720,
        2021000000
    ],
    [
        1046710,
        2019075000
    ],
    [
        1046700,
        2016523000
    ],
    [
        1046690,
        2018120000
    ],
    [
        1046680,
        2016000000
    ],
    [
        1046670,
        2014750000
    ],
    [
        1046660,
        2014464000
    ],
    [
        1046650,
        2015185000
    ],
    [
        1046630,
        2013270000
    ],
    [
        1046620,
        2011525000
    ],
    [
        1046610,
        2011000000
    ],
    [
        1046580,
        2020000000
    ],
    [
        1046570,
        2019900000
    ],
    [
        1046560,
        2020000000
    ],
    [
        1046550,
        2015110000
    ],
    [
        1046540,
        2012777500
    ],
    [
        1046490,
        2009000000
    ],
    [
        1046480,
        2003000000
    ],
    [
        1046460,
        2002080000
    ],
    [
        1046450,
        2001840000
    ],
    [
        1046440,
        1998620000
    ],
    [
        1046420,
        2009000000
    ],
    [
        1046410,
        2011100000
    ],
    [
        1046400,
        2016000000
    ],
    [
        1046390,
        2018000000
    ],
    [
        1046380,
        2017755000
    ],
    [
        1046370,
        2015935000
    ],
    [
        1046360,
        2015000000
    ],
    [
        1046350,
        2015405000
    ],
    [
        1046330,
        2015000000
    ],
    [
        1046320,
        2016112500
    ],
    [
        1046300,
        2017210000
    ],
    [
        1046290,
        2015290000
    ],
    [
        1046270,
        2010000000
    ],
    [
        1046260,
        2009000000
    ],
    [
        1046250,
        2013712000
    ],
    [
        1046230,
        2016819000
    ],
    [
        1046220,
        2022529000
    ],
    [
        1046190,
        2024000000
    ],
    [
        1046170,
        2016000000
    ],
    [
        1046160,
        2019000000
    ],
    [
        1046150,
        2016000000
    ],
    [
        1046140,
        2019000000
    ],
    [
        1046130,
        2013840000
    ],
    [
        1046120,
        2013950000
    ],
    [
        1046110,
        2007964000
    ],
    [
        1046070,
        2006000000
    ],
    [
        1046060,
        1999130000
    ],
    [
        1046050,
        1998387000
    ],
    [
        1046030,
        1990990000
    ],
    [
        1046010,
        1995000000
    ],
    [
        1045990,
        1997487000
    ],
    [
        1045980,
        2006542000
    ],
    [
        1045960,
        2007000000
    ],
    [
        1045950,
        2007698000
    ],
    [
        1045940,
        2006235000
    ],
    [
        1045930,
        2006906000
    ],
    [
        1045920,
        2010000000
    ],
    [
        1045910,
        2008300000
    ],
    [
        1045900,
        2009805000
    ],
    [
        1045890,
        2007320000
    ],
    [
        1045880,
        2011355000
    ],
    [
        1045870,
        2012000000
    ],
    [
        1045860,
        2021389000
    ],
    [
        1045850,
        2024000000
    ],
    [
        1045840,
        2024470000
    ],
    [
        1045830,
        2025950000
    ],
    [
        1045820,
        2014542500
    ],
    [
        1045800,
        2013030000
    ],
    [
        1045770,
        2012000000
    ],
    [
        1045760,
        2019000000
    ],
    [
        1045750,
        2020842500
    ],
    [
        1045740,
        2019667500
    ],
    [
        1045720,
        2020000000
    ],
    [
        1045710,
        2040620000
    ],
    [
        1045700,
        2043000000
    ],
    [
        1045690,
        2044000000
    ],
    [
        1045680,
        2049381000
    ],
    [
        1045670,
        2048790000
    ],
    [
        1045650,
        2054000000
    ],
    [
        1045630,
        2055609000
    ],
    [
        1045620,
        2056370000
    ],
    [
        1045610,
        2055580000
    ],
    [
        1045600,
        2054000000
    ],
    [
        1045580,
        2056340000
    ],
    [
        1045570,
        2056910000
    ],
    [
        1045560,
        2055785000
    ],
    [
        1045550,
        2054345000
    ],
    [
        1045540,
        2049810000
    ],
    [
        1045520,
        2043080000
    ],
    [
        1045510,
        2046852500
    ],
    [
        1045500,
        2048018000
    ],
    [
        1045470,
        2057000000
    ],
    [
        1045460,
        2050000000
    ],
    [
        1045440,
        2046780000
    ],
    [
        1045430,
        2046000000
    ],
    [
        1045410,
        2047595000
    ],
    [
        1045400,
        2045000000
    ],
    [
        1045390,
        2053639000
    ],
    [
        1045380,
        2050130000
    ],
    [
        1045370,
        2049000000
    ],
    [
        1045360,
        2048755000
    ],
    [
        1045350,
        2043590000
    ],
    [
        1045340,
        2034440000
    ],
    [
        1045330,
        2034000000
    ],
    [
        1045320,
        2033505000
    ],
    [
        1045310,
        2030485000
    ],
    [
        1045300,
        2033200000
    ],
    [
        1045280,
        2034000000
    ],
    [
        1045270,
        2036000000
    ],
    [
        1045250,
        2034000000
    ],
    [
        1045240,
        2035960000
    ],
    [
        1045230,
        2040014000
    ],
    [
        1045220,
        2040987500
    ],
    [
        1045210,
        2037313000
    ],
    [
        1045200,
        2037860000
    ],
    [
        1045180,
        2055230000
    ],
    [
        1045170,
        2058760000
    ],
    [
        1045150,
        2071712500
    ],
    [
        1045140,
        2072705000
    ],
    [
        1045120,
        2077000000
    ],
    [
        1045110,
        2075700000
    ],
    [
        1045100,
        2074000000
    ],
    [
        1045090,
        2069031000
    ],
    [
        1045080,
        2069000000
    ],
    [
        1045070,
        2074000000
    ],
    [
        1045060,
        2076897000
    ],
    [
        1045050,
        2077600000
    ],
    [
        1045040,
        2076000000
    ],
    [
        1045030,
        2076460000
    ],
    [
        1045020,
        2077360000
    ],
    [
        1045010,
        2082000000
    ],
    [
        1045000,
        2083010000
    ],
    [
        1044990,
        2074000000
    ],
    [
        1044970,
        2071000000
    ],
    [
        1044960,
        2072000000
    ],
    [
        1044950,
        2073273000
    ],
    [
        1044940,
        2072250000
    ],
    [
        1044930,
        2054280000
    ],
    [
        1044920,
        2049360000
    ],
    [
        1044910,
        2049725000
    ],
    [
        1044900,
        2044865000
    ],
    [
        1044890,
        2044000000
    ],
    [
        1044880,
        2039000000
    ],
    [
        1044870,
        2035000000
    ],
    [
        1044860,
        2035260000
    ],
    [
        1044850,
        2038000000
    ],
    [
        1044830,
        2039000000
    ],
    [
        1044820,
        2038780000
    ],
    [
        1044810,
        2036177500
    ],
    [
        1044800,
        2026580000
    ],
    [
        1044770,
        2034000000
    ],
    [
        1044760,
        2034597000
    ],
    [
        1044740,
        2030513000
    ],
    [
        1044730,
        2024890000
    ],
    [
        1044710,
        2025000000
    ],
    [
        1044700,
        2024000000
    ],
    [
        1044690,
        2022820000
    ],
    [
        1044670,
        2021060000
    ],
    [
        1044660,
        2023680000
    ],
    [
        1044640,
        2026757000
    ],
    [
        1044630,
        2049000000
    ],
    [
        1044610,
        2052000000
    ],
    [
        1044600,
        2053000000
    ],
    [
        1044590,
        2053260000
    ],
    [
        1044580,
        2058567500
    ],
    [
        1044570,
        2061747000
    ],
    [
        1044560,
        2063000000
    ],
    [
        1044550,
        2062109000
    ],
    [
        1044540,
        2061920000
    ],
    [
        1044530,
        2057000000
    ],
    [
        1044520,
        2054927500
    ],
    [
        1044510,
        2056870000
    ],
    [
        1044490,
        2047000000
    ],
    [
        1044470,
        2045951000
    ],
    [
        1044460,
        2047000000
    ],
    [
        1044450,
        2048377000
    ],
    [
        1044440,
        2049340000
    ],
    [
        1044430,
        2052000000
    ],
    [
        1044410,
        2051116000
    ],
    [
        1044400,
        2054300000
    ],
    [
        1044380,
        2070460000
    ],
    [
        1044370,
        2071180000
    ],
    [
        1044340,
        2073110000
    ],
    [
        1044330,
        2072000000
    ],
    [
        1044320,
        2073110000
    ],
    [
        1044300,
        2074000000
    ],
    [
        1044280,
        2069800000
    ],
    [
        1044270,
        2069000000
    ],
    [
        1044260,
        2066982500
    ],
    [
        1044250,
        2066062000
    ],
    [
        1044240,
        2068000000
    ],
    [
        1044230,
        2064000000
    ],
    [
        1044220,
        2066330000
    ],
    [
        1044210,
        2055462000
    ],
    [
        1044200,
        2053690000
    ],
    [
        1044190,
        2053100000
    ],
    [
        1044180,
        2049964000
    ],
    [
        1044170,
        2056285000
    ],
    [
        1044160,
        2058785000
    ],
    [
        1044150,
        2059062000
    ],
    [
        1044130,
        2060500000
    ],
    [
        1044120,
        2061000000
    ],
    [
        1044110,
        2069500000
    ],
    [
        1044100,
        2072245000
    ],
    [
        1044090,
        2076517500
    ],
    [
        1044080,
        2077283750
    ],
    [
        1044070,
        2078123750
    ],
    [
        1044060,
        2075640000
    ],
    [
        1044050,
        2075500000
    ],
    [
        1044040,
        2072762500
    ],
    [
        1044030,
        2071000000
    ],
    [
        1044020,
        2071452500
    ],
    [
        1044010,
        2081130000
    ],
    [
        1044000,
        2096162500
    ],
    [
        1043990,
        2090180000
    ],
    [
        1043890,
        2120434500
    ],
    [
        1043880,
        2118617500
    ],
    [
        1043870,
        2110341250
    ],
    [
        1043860,
        2103950000
    ],
    [
        1043850,
        2102450000
    ],
    [
        1043840,
        2103950000
    ],
    [
        1043830,
        2114224500
    ],
    [
        1043820,
        2117000000
    ],
    [
        1043810,
        2121500000
    ],
    [
        1043800,
        2123165000
    ],
    [
        1043790,
        2122773750
    ],
    [
        1043780,
        2120500000
    ],
    [
        1043760,
        2105982500
    ],
    [
        1043750,
        2109000000
    ],
    [
        1043740,
        2104838000
    ],
    [
        1043730,
        2104000000
    ],
    [
        1043720,
        2106500000
    ],
    [
        1043710,
        2114415000
    ],
    [
        1043700,
        2115000000
    ],
    [
        1043690,
        2117500000
    ],
    [
        1043680,
        2118000000
    ],
    [
        1043650,
        2121500000
    ],
    [
        1043640,
        2140000000
    ],
    [
        1043630,
        2150000000
    ],
    [
        1043620,
        2150325000
    ],
    [
        1043600,
        2147578750
    ],
    [
        1043590,
        2142000000
    ],
    [
        1043570,
        2139460000
    ],
    [
        1043560,
        2138500000
    ],
    [
        1043550,
        2138000000
    ],
    [
        1043540,
        2126005000
    ],
    [
        1043530,
        2117960000
    ],
    [
        1043500,
        2107570000
    ],
    [
        1043490,
        2112918000
    ],
    [
        1043480,
        2120571250
    ],
    [
        1043470,
        2122275000
    ],
    [
        1043450,
        2117325000
    ],
    [
        1043440,
        2113000000
    ],
    [
        1043430,
        2113078750
    ],
    [
        1043420,
        2112278750
    ],
    [
        1043410,
        2106097000
    ],
    [
        1043390,
        2118025000
    ],
    [
        1043370,
        2119000000
    ],
    [
        1043360,
        2133480000
    ],
    [
        1043350,
        2131980000
    ],
    [
        1043340,
        2124696000
    ],
    [
        1043330,
        2119915000
    ],
    [
        1043320,
        2115895000
    ],
    [
        1043310,
        2117895000
    ],
    [
        1043300,
        2127213000
    ],
    [
        1043290,
        2134000000
    ],
    [
        1043280,
        2143136500
    ],
    [
        1043270,
        2162838750
    ],
    [
        1043260,
        2163648750
    ],
    [
        1043240,
        2135865000
    ],
    [
        1043230,
        2128100000
    ],
    [
        1043220,
        2120002500
    ],
    [
        1043210,
        2120677500
    ],
    [
        1043200,
        2117055000
    ],
    [
        1043190,
        2121860000
    ],
    [
        1043180,
        2130980000
    ],
    [
        1043170,
        2132845000
    ],
    [
        1043140,
        2136950000
    ],
    [
        1043130,
        2135034500
    ],
    [
        1043120,
        2135250000
    ],
    [
        1043110,
        2151520000
    ],
    [
        1043100,
        2165345000
    ],
    [
        1043090,
        2167230000
    ],
    [
        1043080,
        2168464000
    ],
    [
        1043070,
        2166550000
    ],
    [
        1043060,
        2168750000
    ],
    [
        1043050,
        2171155000
    ],
    [
        1043040,
        2173317000
    ],
    [
        1043030,
        2172415000
    ],
    [
        1043020,
        2171155000
    ],
    [
        1043010,
        2170525500
    ],
    [
        1043000,
        2151000000
    ],
    [
        1042990,
        2149825000
    ],
    [
        1042970,
        2145935000
    ],
    [
        1042960,
        2145620000
    ],
    [
        1042940,
        2148952500
    ],
    [
        1042930,
        2154797500
    ],
    [
        1042920,
        2162500000
    ],
    [
        1042910,
        2169750000
    ],
    [
        1042900,
        2171855000
    ],
    [
        1042880,
        2179082500
    ],
    [
        1042870,
        2174155000
    ],
    [
        1042850,
        2169045000
    ],
    [
        1042830,
        2166390000
    ],
    [
        1042810,
        2166000000
    ],
    [
        1042800,
        2183475000
    ],
    [
        1042780,
        2184810000
    ],
    [
        1042770,
        2179530000
    ],
    [
        1042750,
        2193000000
    ],
    [
        1042710,
        2175000000
    ],
    [
        1042700,
        2170798000
    ],
    [
        1042690,
        2175000000
    ],
    [
        1042660,
        2165000000
    ],
    [
        1042640,
        2160000000
    ],
    [
        1042630,
        2164000000
    ],
    [
        1042590,
        2162884000
    ],
    [
        1042580,
        2156780000
    ],
    [
        1042570,
        2153464000
    ],
    [
        1042550,
        2156000000
    ],
    [
        1042510,
        2132000000
    ],
    [
        1042500,
        2129000000
    ],
    [
        1042490,
        2120220000
    ],
    [
        1042460,
        2129000000
    ],
    [
        1042450,
        2099000000
    ],
    [
        1042440,
        2092970000
    ],
    [
        1042430,
        2086000000
    ],
    [
        1042420,
        2087930000
    ],
    [
        1042410,
        2088610000
    ],
    [
        1042400,
        2076502500
    ],
    [
        1042370,
        2065000000
    ],
    [
        1042360,
        2066493000
    ],
    [
        1042350,
        2067008000
    ],
    [
        1042340,
        2070000000
    ],
    [
        1042330,
        2062371000
    ],
    [
        1042320,
        2062000000
    ],
    [
        1042310,
        2058610000
    ],
    [
        1042290,
        2056000000
    ],
    [
        1042280,
        2053650000
    ],
    [
        1042260,
        2031320000
    ],
    [
        1042250,
        2028342500
    ],
    [
        1042240,
        2029050000
    ],
    [
        1042230,
        2018662500
    ],
    [
        1042210,
        2019000000
    ],
    [
        1042200,
        2030060000
    ],
    [
        1042180,
        2038000000
    ],
    [
        1042170,
        2047000000
    ],
    [
        1042160,
        2048050000
    ],
    [
        1042150,
        2049820000
    ],
    [
        1042140,
        2069000000
    ],
    [
        1042130,
        2081940000
    ],
    [
        1042120,
        2085685000
    ],
    [
        1042100,
        2087550000
    ],
    [
        1042090,
        2085240000
    ],
    [
        1042080,
        2090000000
    ],
    [
        1042060,
        2111000000
    ],
    [
        1042050,
        2112000000
    ],
    [
        1042040,
        2120000000
    ],
    [
        1042030,
        2120442500
    ],
    [
        1042020,
        2120000000
    ],
    [
        1042010,
        2115517500
    ],
    [
        1042000,
        2109000000
    ],
    [
        1041990,
        2106720000
    ],
    [
        1041980,
        2105000000
    ],
    [
        1041970,
        2102000000
    ],
    [
        1041960,
        2111630000
    ],
    [
        1041950,
        2114692500
    ],
    [
        1041940,
        2107360000
    ],
    [
        1041930,
        2103000000
    ],
    [
        1041920,
        2102000000
    ],
    [
        1041910,
        2103000000
    ],
    [
        1041900,
        2107360000
    ],
    [
        1041890,
        2110010000
    ],
    [
        1041880,
        2120000000
    ],
    [
        1041850,
        2120820000
    ],
    [
        1041840,
        2125296000
    ],
    [
        1041830,
        2125057500
    ],
    [
        1041810,
        2123220000
    ],
    [
        1041800,
        2149000000
    ],
    [
        1041780,
        2152420000
    ],
    [
        1041730,
        2149000000
    ],
    [
        1041720,
        2148015000
    ],
    [
        1041710,
        2145000000
    ],
    [
        1041700,
        2137940000
    ],
    [
        1041690,
        2134377000
    ],
    [
        1041680,
        2138000000
    ],
    [
        1041670,
        2159000000
    ],
    [
        1041650,
        2161600000
    ],
    [
        1041640,
        2175940000
    ],
    [
        1041630,
        2177000000
    ],
    [
        1041610,
        2179000000
    ],
    [
        1041600,
        2174032500
    ],
    [
        1041580,
        2174311000
    ],
    [
        1041570,
        2176252000
    ],
    [
        1041560,
        2179000000
    ],
    [
        1041550,
        2177605000
    ],
    [
        1041540,
        2179000000
    ],
    [
        1041510,
        2175000000
    ],
    [
        1041500,
        2174845000
    ],
    [
        1041480,
        2170112000
    ],
    [
        1041470,
        2172868000
    ],
    [
        1041460,
        2175000000
    ],
    [
        1041450,
        2182110000
    ],
    [
        1041440,
        2180000000
    ],
    [
        1041430,
        2185040000
    ],
    [
        1041420,
        2186219000
    ],
    [
        1041410,
        2184000000
    ],
    [
        1041400,
        2185720000
    ],
    [
        1041390,
        2174000000
    ],
    [
        1041380,
        2173191250
    ],
    [
        1041370,
        2171565000
    ],
    [
        1041360,
        2170945000
    ],
    [
        1041350,
        2167950000
    ],
    [
        1041340,
        2161928750
    ],
    [
        1041330,
        2165845000
    ],
    [
        1041320,
        2169520000
    ],
    [
        1041290,
        2172000000
    ],
    [
        1041280,
        2168640000
    ],
    [
        1041270,
        2164873750
    ],
    [
        1041260,
        2162750000
    ],
    [
        1041250,
        2162240000
    ],
    [
        1041240,
        2167000000
    ],
    [
        1041230,
        2169562500
    ],
    [
        1041220,
        2167660000
    ],
    [
        1041210,
        2175468000
    ],
    [
        1041200,
        2179321000
    ],
    [
        1041190,
        2184078000
    ],
    [
        1041180,
        2193000000
    ],
    [
        1041170,
        2191860000
    ],
    [
        1041160,
        2195060000
    ],
    [
        1041150,
        2202686000
    ],
    [
        1041140,
        2202000000
    ],
    [
        1041130,
        2207330000
    ],
    [
        1041120,
        2216497500
    ],
    [
        1041110,
        2221000000
    ],
    [
        1041090,
        2229000000
    ],
    [
        1041070,
        2253222500
    ],
    [
        1041060,
        2256437000
    ],
    [
        1041050,
        2233000000
    ],
    [
        1041040,
        2225000000
    ],
    [
        1041030,
        2224990000
    ],
    [
        1041000,
        2206000000
    ],
    [
        1040990,
        2200696000
    ],
    [
        1040980,
        2180880000
    ],
    [
        1040970,
        2174800000
    ],
    [
        1040960,
        2174255000
    ],
    [
        1040950,
        2166610000
    ],
    [
        1040940,
        2170000000
    ],
    [
        1040930,
        2167000000
    ],
    [
        1040920,
        2184441000
    ],
    [
        1040910,
        2163000000
    ],
    [
        1040900,
        2162000000
    ],
    [
        1040880,
        2163000000
    ],
    [
        1040870,
        2156455000
    ],
    [
        1040860,
        2159723750
    ],
    [
        1040820,
        2163500000
    ],
    [
        1040800,
        2163000000
    ],
    [
        1040760,
        2118000000
    ],
    [
        1040740,
        2113960000
    ],
    [
        1040730,
        2111960000
    ],
    [
        1040720,
        2110934500
    ],
    [
        1040710,
        2103845000
    ],
    [
        1040700,
        2106902500
    ],
    [
        1040690,
        2112000000
    ],
    [
        1040680,
        2112355000
    ],
    [
        1040670,
        2110115000
    ],
    [
        1040660,
        2104062500
    ],
    [
        1040650,
        2102451250
    ],
    [
        1040640,
        2105963750
    ],
    [
        1040630,
        2105557500
    ],
    [
        1040620,
        2110498750
    ],
    [
        1040610,
        2111295000
    ],
    [
        1040600,
        2112526250
    ],
    [
        1040590,
        2114360000
    ],
    [
        1040570,
        2116000000
    ],
    [
        1040560,
        2115330000
    ],
    [
        1040540,
        2116410000
    ],
    [
        1040530,
        2117535000
    ],
    [
        1040520,
        2120390000
    ],
    [
        1040510,
        2114250000
    ],
    [
        1040500,
        2112420500
    ],
    [
        1040490,
        2097970000
    ],
    [
        1040470,
        2096290000
    ],
    [
        1040450,
        2094385000
    ],
    [
        1040440,
        2088813750
    ],
    [
        1040430,
        2103542000
    ],
    [
        1040420,
        2105215000
    ],
    [
        1040410,
        2106635000
    ],
    [
        1040400,
        2109575000
    ],
    [
        1040390,
        2111847500
    ],
    [
        1040380,
        2111813750
    ],
    [
        1040370,
        2112885000
    ],
    [
        1040360,
        2108345750
    ],
    [
        1040350,
        2117006250
    ],
    [
        1040340,
        2121361250
    ],
    [
        1040330,
        2124345000
    ],
    [
        1040320,
        2121710000
    ],
    [
        1040290,
        2089580000
    ],
    [
        1040270,
        2074580000
    ],
    [
        1040260,
        2071000000
    ],
    [
        1040250,
        2065000000
    ],
    [
        1040240,
        2064637500
    ],
    [
        1040230,
        2067230000
    ],
    [
        1040220,
        2067785000
    ],
    [
        1040210,
        2063000000
    ],
    [
        1040200,
        2061775000
    ],
    [
        1040190,
        2050511250
    ],
    [
        1040180,
        2046346500
    ],
    [
        1040170,
        2046437000
    ],
    [
        1040150,
        2058473000
    ],
    [
        1040140,
        2084077500
    ],
    [
        1040110,
        2068500000
    ],
    [
        1040100,
        2058754500
    ],
    [
        1040090,
        2051185000
    ],
    [
        1040080,
        2048960000
    ],
    [
        1040070,
        2056517500
    ],
    [
        1039990,
        2054292500
    ],
    [
        1039980,
        2053557500
    ],
    [
        1039960,
        2046446500
    ],
    [
        1039950,
        2045675000
    ],
    [
        1039930,
        2048403500
    ],
    [
        1039920,
        2064000000
    ],
    [
        1039910,
        2064016500
    ],
    [
        1039900,
        2071000000
    ],
    [
        1039890,
        2065949500
    ],
    [
        1039880,
        2062752000
    ],
    [
        1039870,
        2057575500
    ],
    [
        1039860,
        2062870000
    ],
    [
        1039850,
        2068495000
    ],
    [
        1039840,
        2066070000
    ],
    [
        1039830,
        2064948750
    ],
    [
        1039820,
        2064277500
    ],
    [
        1039810,
        2063000000
    ],
    [
        1039800,
        2061810000
    ],
    [
        1039790,
        2059094000
    ],
    [
        1039780,
        2061207500
    ],
    [
        1039770,
        2053000000
    ],
    [
        1039760,
        2048000000
    ],
    [
        1039750,
        2038690000
    ],
    [
        1039740,
        2041900000
    ],
    [
        1039730,
        2047126000
    ],
    [
        1039720,
        2048895000
    ],
    [
        1039690,
        2036020000
    ],
    [
        1039680,
        2024920000
    ],
    [
        1039670,
        2021060000
    ],
    [
        1039660,
        2003000000
    ],
    [
        1039640,
        2000870000
    ],
    [
        1039630,
        1994700000
    ],
    [
        1039610,
        1999820000
    ],
    [
        1039600,
        2015000000
    ],
    [
        1039590,
        2040000000
    ],
    [
        1039580,
        2056000000
    ],
    [
        1039560,
        2063597000
    ],
    [
        1039550,
        2066482500
    ],
    [
        1039540,
        2062000000
    ],
    [
        1039520,
        2056000000
    ],
    [
        1039510,
        2053213750
    ],
    [
        1039490,
        2056000000
    ],
    [
        1039480,
        2047146000
    ],
    [
        1039450,
        2036010000
    ],
    [
        1039440,
        2035000000
    ],
    [
        1039420,
        2030100000
    ],
    [
        1039410,
        2023822500
    ],
    [
        1039400,
        2022307500
    ],
    [
        1039390,
        2014891000
    ],
    [
        1039380,
        2023144000
    ],
    [
        1039370,
        2030000000
    ],
    [
        1039360,
        2036000000
    ],
    [
        1039350,
        2031530000
    ],
    [
        1039340,
        2026963000
    ],
    [
        1039330,
        2031530000
    ],
    [
        1039320,
        2040091000
    ],
    [
        1039310,
        2043685000
    ],
    [
        1039300,
        2041856000
    ],
    [
        1039280,
        2035000000
    ],
    [
        1039260,
        2036000000
    ],
    [
        1039250,
        2032917500
    ],
    [
        1039230,
        2035807000
    ],
    [
        1039220,
        2062000000
    ],
    [
        1039210,
        2063540000
    ],
    [
        1039200,
        2065760000
    ],
    [
        1039180,
        2065290000
    ],
    [
        1039170,
        2062740000
    ],
    [
        1039140,
        2055000000
    ],
    [
        1039130,
        2053480000
    ],
    [
        1039120,
        2054279000
    ],
    [
        1039110,
        2051000000
    ],
    [
        1039100,
        2048959000
    ],
    [
        1039090,
        2038000000
    ],
    [
        1039070,
        2050000000
    ],
    [
        1039060,
        2054605000
    ],
    [
        1039040,
        2062000000
    ],
    [
        1039030,
        2061280000
    ],
    [
        1039000,
        2062000000
    ],
    [
        1038990,
        2060129000
    ],
    [
        1038980,
        2049122000
    ],
    [
        1038970,
        2023190000
    ],
    [
        1038960,
        2030915000
    ],
    [
        1038950,
        2030000000
    ],
    [
        1038940,
        2033060000
    ],
    [
        1038930,
        2051210000
    ],
    [
        1038910,
        2058768000
    ],
    [
        1038890,
        2060000000
    ],
    [
        1038880,
        2068300000
    ],
    [
        1038870,
        2087513000
    ],
    [
        1038850,
        2089206000
    ],
    [
        1038830,
        2110000000
    ],
    [
        1038820,
        2113000000
    ],
    [
        1038810,
        2114000000
    ],
    [
        1038800,
        2119000000
    ],
    [
        1038790,
        2119080000
    ],
    [
        1038770,
        2118326000
    ],
    [
        1038760,
        2120000000
    ],
    [
        1038750,
        2135021000
    ],
    [
        1038740,
        2152875000
    ],
    [
        1038730,
        2159000000
    ],
    [
        1038660,
        2153000000
    ],
    [
        1038640,
        2149446000
    ],
    [
        1038610,
        2127000000
    ],
    [
        1038600,
        2124067500
    ],
    [
        1038580,
        2115000000
    ],
    [
        1038570,
        2126555000
    ],
    [
        1038550,
        2133878500
    ],
    [
        1038540,
        2147985000
    ],
    [
        1038530,
        2153000000
    ],
    [
        1038520,
        2157058750
    ],
    [
        1038510,
        2167500000
    ],
    [
        1038500,
        2166246500
    ],
    [
        1038490,
        2166882500
    ],
    [
        1038470,
        2167000000
    ],
    [
        1038460,
        2168000000
    ],
    [
        1038430,
        2135000000
    ],
    [
        1038420,
        2134500000
    ],
    [
        1038410,
        2134000000
    ],
    [
        1038390,
        2133698500
    ],
    [
        1038370,
        2123645000
    ],
    [
        1038360,
        2120260000
    ],
    [
        1038350,
        2114370000
    ],
    [
        1038330,
        2116760000
    ],
    [
        1038320,
        2118160000
    ],
    [
        1038290,
        2101730000
    ],
    [
        1038250,
        2101460000
    ],
    [
        1038240,
        2074389000
    ],
    [
        1038230,
        2057448750
    ],
    [
        1038220,
        2063187000
    ],
    [
        1038210,
        2062720000
    ],
    [
        1038190,
        2070907000
    ],
    [
        1038160,
        1898140000
    ],
    [
        1038150,
        1885000000
    ],
    [
        1038140,
        1883458000
    ],
    [
        1038130,
        1884658000
    ],
    [
        1038120,
        1885035000
    ],
    [
        1038110,
        1896000000
    ],
    [
        1038090,
        1902088500
    ],
    [
        1038030,
        1905000000
    ],
    [
        1038020,
        1903957500
    ],
    [
        1038010,
        1899222000
    ],
    [
        1038000,
        1899142000
    ],
    [
        1037990,
        1901286000
    ],
    [
        1037970,
        1902918000
    ],
    [
        1037960,
        1899960500
    ],
    [
        1037950,
        1900343000
    ],
    [
        1037920,
        1905000000
    ],
    [
        1037910,
        1903349500
    ],
    [
        1037890,
        1901236000
    ],
    [
        1037880,
        1902114500
    ],
    [
        1037860,
        1899730000
    ],
    [
        1037850,
        1896000000
    ],
    [
        1037840,
        1899165000
    ],
    [
        1037830,
        1900593750
    ],
    [
        1037820,
        1901289250
    ],
    [
        1037810,
        1897194500
    ],
    [
        1037800,
        1893497000
    ],
    [
        1037790,
        1893244500
    ],
    [
        1037780,
        1892000000
    ],
    [
        1037760,
        1898665000
    ],
    [
        1037740,
        1911482500
    ],
    [
        1037720,
        1919730000
    ],
    [
        1037710,
        1920421250
    ],
    [
        1037700,
        1919730000
    ],
    [
        1037690,
        1917500000
    ],
    [
        1037680,
        1921100000
    ],
    [
        1037670,
        1917500000
    ],
    [
        1037660,
        1915346000
    ],
    [
        1037650,
        1915098500
    ],
    [
        1037640,
        1912147500
    ],
    [
        1037630,
        1910889000
    ],
    [
        1037610,
        1916910500
    ],
    [
        1037600,
        1923623000
    ],
    [
        1037590,
        1927547500
    ],
    [
        1037580,
        1927714000
    ],
    [
        1037570,
        1925000000
    ],
    [
        1037560,
        1920821250
    ],
    [
        1037550,
        1916198750
    ],
    [
        1037540,
        1913828750
    ],
    [
        1037530,
        1917404000
    ],
    [
        1037520,
        1918120000
    ],
    [
        1037510,
        1921561250
    ],
    [
        1037500,
        1925802500
    ],
    [
        1037490,
        1926848750
    ],
    [
        1037480,
        1926068750
    ],
    [
        1037470,
        1925152500
    ],
    [
        1037460,
        1924100000
    ],
    [
        1037440,
        1925500000
    ],
    [
        1037430,
        1930446000
    ],
    [
        1037420,
        1932000000
    ],
    [
        1037410,
        1935925000
    ],
    [
        1037400,
        1936897000
    ],
    [
        1037390,
        1938770000
    ],
    [
        1037370,
        1938421000
    ],
    [
        1037360,
        1916140000
    ],
    [
        1037350,
        1877475000
    ],
    [
        1037340,
        1876393750
    ],
    [
        1037330,
        1876226500
    ],
    [
        1037320,
        1875880000
    ],
    [
        1037310,
        1873790000
    ],
    [
        1037290,
        1870617500
    ],
    [
        1037280,
        1873500000
    ],
    [
        1037270,
        1871770000
    ],
    [
        1037260,
        1865000000
    ],
    [
        1037250,
        1864515000
    ],
    [
        1037240,
        1864000000
    ],
    [
        1037230,
        1863006250
    ],
    [
        1037220,
        1851840000
    ],
    [
        1037180,
        1845555000
    ],
    [
        1037160,
        1845000000
    ],
    [
        1037150,
        1875102500
    ],
    [
        1037140,
        1876000000
    ],
    [
        1037130,
        1877858750
    ],
    [
        1037110,
        1875890000
    ],
    [
        1037100,
        1875500000
    ],
    [
        1037090,
        1874500000
    ],
    [
        1037070,
        1910605000
    ],
    [
        1037060,
        1912455000
    ],
    [
        1037050,
        1912965000
    ],
    [
        1037040,
        1911467500
    ],
    [
        1037030,
        1916163000
    ],
    [
        1037010,
        1917000000
    ],
    [
        1036980,
        1915000000
    ],
    [
        1036970,
        1911505000
    ],
    [
        1036960,
        1912213500
    ],
    [
        1036950,
        1913148500
    ],
    [
        1036940,
        1913945000
    ],
    [
        1036930,
        1914000000
    ],
    [
        1036920,
        1913843750
    ],
    [
        1036910,
        1912261250
    ],
    [
        1036900,
        1913500000
    ],
    [
        1036890,
        1913688000
    ],
    [
        1036880,
        1913547500
    ],
    [
        1036870,
        1915935000
    ],
    [
        1036860,
        1923347500
    ],
    [
        1036850,
        1924000000
    ],
    [
        1036840,
        1924090000
    ],
    [
        1036830,
        1916963750
    ],
    [
        1036820,
        1917435000
    ],
    [
        1036810,
        1918155000
    ],
    [
        1036800,
        1918255000
    ],
    [
        1036790,
        1917520000
    ],
    [
        1036780,
        1913576000
    ],
    [
        1036770,
        1912365000
    ],
    [
        1036760,
        1914046000
    ],
    [
        1036750,
        1916427000
    ],
    [
        1036740,
        1916470000
    ],
    [
        1036730,
        1917402000
    ],
    [
        1036700,
        1920000000
    ],
    [
        1036680,
        1923817000
    ],
    [
        1036670,
        1924990000
    ],
    [
        1036660,
        1926335000
    ],
    [
        1036650,
        1925943500
    ],
    [
        1036630,
        1926335000
    ],
    [
        1036620,
        1920920000
    ],
    [
        1036600,
        1912369000
    ],
    [
        1036590,
        1918000000
    ],
    [
        1036580,
        1927780000
    ],
    [
        1036570,
        1922260000
    ],
    [
        1036560,
        1921000000
    ],
    [
        1036550,
        1919391250
    ],
    [
        1036540,
        1918875250
    ],
    [
        1036530,
        1921000000
    ],
    [
        1036510,
        1919431250
    ],
    [
        1036500,
        1908000000
    ],
    [
        1036470,
        1907000000
    ],
    [
        1036460,
        1906000000
    ],
    [
        1036440,
        1898460000
    ],
    [
        1036420,
        1893000000
    ],
    [
        1036400,
        1892620000
    ],
    [
        1036370,
        1893000000
    ],
    [
        1036340,
        1889000000
    ],
    [
        1036330,
        1888020000
    ],
    [
        1036310,
        1889000000
    ],
    [
        1036300,
        1886622000
    ],
    [
        1036280,
        1881640000
    ],
    [
        1036270,
        1873090000
    ],
    [
        1036260,
        1881950000
    ],
    [
        1036240,
        1882127500
    ],
    [
        1036170,
        1890000000
    ],
    [
        1036160,
        1887060000
    ],
    [
        1036120,
        1886000000
    ],
    [
        1036110,
        1885004000
    ],
    [
        1036090,
        1883020000
    ],
    [
        1036080,
        1882220000
    ],
    [
        1035990,
        1879000000
    ],
    [
        1035980,
        1876510000
    ],
    [
        1035960,
        1872000000
    ],
    [
        1035940,
        1871772000
    ],
    [
        1035910,
        1868000000
    ],
    [
        1035900,
        1848000000
    ],
    [
        1035870,
        1847000000
    ],
    [
        1035860,
        1845980000
    ],
    [
        1035840,
        1845755000
    ],
    [
        1035830,
        1845350000
    ],
    [
        1035820,
        1853860000
    ],
    [
        1035800,
        1858000000
    ],
    [
        1035790,
        1858092500
    ],
    [
        1035770,
        1861871000
    ],
    [
        1035760,
        1863000000
    ],
    [
        1035690,
        1857735000
    ],
    [
        1035680,
        1866360000
    ],
    [
        1035670,
        1867147500
    ],
    [
        1035660,
        1859000000
    ],
    [
        1035650,
        1857540000
    ],
    [
        1035600,
        1831600000
    ],
    [
        1035540,
        1828000000
    ],
    [
        1035490,
        1822110000
    ],
    [
        1035470,
        1822000000
    ],
    [
        1035460,
        1838000000
    ],
    [
        1035450,
        1838952000
    ],
    [
        1035440,
        1840780000
    ],
    [
        1035430,
        1842860000
    ],
    [
        1035400,
        1843600000
    ],
    [
        1035390,
        1838000000
    ],
    [
        1035380,
        1839090000
    ],
    [
        1035340,
        1838000000
    ],
    [
        1035330,
        1831487500
    ],
    [
        1035320,
        1832739000
    ],
    [
        1035310,
        1828730000
    ],
    [
        1035300,
        1836320000
    ],
    [
        1035290,
        1839770000
    ],
    [
        1035280,
        1840000000
    ],
    [
        1035270,
        1840270000
    ],
    [
        1035260,
        1841726000
    ],
    [
        1035240,
        1843927500
    ],
    [
        1035220,
        1843642500
    ],
    [
        1035210,
        1845350000
    ],
    [
        1035170,
        1825000000
    ],
    [
        1035150,
        1823000000
    ],
    [
        1035120,
        1823920000
    ],
    [
        1035100,
        1824375000
    ],
    [
        1035090,
        1825300000
    ],
    [
        1035050,
        1814000000
    ],
    [
        1035040,
        1810055000
    ],
    [
        1035030,
        1813757500
    ],
    [
        1035020,
        1809480000
    ],
    [
        1035010,
        1813000000
    ],
    [
        1035000,
        1805000000
    ],
    [
        1034970,
        1800000000
    ],
    [
        1034960,
        1798000000
    ],
    [
        1034950,
        1797295000
    ],
    [
        1034940,
        1799335000
    ],
    [
        1034930,
        1798114000
    ],
    [
        1034920,
        1804000000
    ],
    [
        1034900,
        1802000000
    ],
    [
        1034890,
        1804491500
    ],
    [
        1034880,
        1806000000
    ],
    [
        1034870,
        1809658750
    ],
    [
        1034860,
        1808500000
    ],
    [
        1034850,
        1806000000
    ],
    [
        1034840,
        1804000000
    ],
    [
        1034830,
        1807438000
    ],
    [
        1034820,
        1809755000
    ],
    [
        1034800,
        1831500000
    ],
    [
        1034790,
        1828765000
    ],
    [
        1034780,
        1822717500
    ],
    [
        1034770,
        1820640000
    ],
    [
        1034740,
        1808000000
    ],
    [
        1034730,
        1807000000
    ],
    [
        1034720,
        1806716500
    ],
    [
        1034710,
        1786675000
    ],
    [
        1034690,
        1768945000
    ],
    [
        1034660,
        1768445000
    ],
    [
        1034650,
        1766923750
    ],
    [
        1034640,
        1765745000
    ],
    [
        1034630,
        1764285000
    ],
    [
        1034620,
        1763736250
    ],
    [
        1034610,
        1762810000
    ],
    [
        1034600,
        1765119500
    ],
    [
        1034590,
        1765619500
    ],
    [
        1034580,
        1763818000
    ],
    [
        1034550,
        1759260000
    ],
    [
        1034530,
        1758400000
    ],
    [
        1034520,
        1758000000
    ],
    [
        1034510,
        1742685000
    ],
    [
        1034500,
        1742500000
    ],
    [
        1034490,
        1730565000
    ],
    [
        1034480,
        1729400000
    ],
    [
        1034470,
        1729212000
    ],
    [
        1034450,
        1729400000
    ],
    [
        1034440,
        1727907000
    ],
    [
        1034420,
        1728083750
    ],
    [
        1034390,
        1728690000
    ],
    [
        1034380,
        1723000000
    ],
    [
        1034360,
        1720315000
    ],
    [
        1034350,
        1717500000
    ],
    [
        1034340,
        1716845000
    ],
    [
        1034270,
        1715285000
    ],
    [
        1034260,
        1712925000
    ],
    [
        1034250,
        1712680000
    ],
    [
        1034240,
        1713181500
    ],
    [
        1034210,
        1712000000
    ],
    [
        1034200,
        1715785000
    ],
    [
        1034190,
        1721198500
    ],
    [
        1034180,
        1724340000
    ],
    [
        1034170,
        1725364500
    ],
    [
        1034160,
        1735860000
    ],
    [
        1034140,
        1736790000
    ],
    [
        1034130,
        1735821250
    ],
    [
        1034090,
        1736475000
    ],
    [
        1034050,
        1732025000
    ],
    [
        1034040,
        1731096250
    ],
    [
        1034030,
        1728633000
    ],
    [
        1034020,
        1726608000
    ],
    [
        1034010,
        1724108000
    ],
    [
        1034000,
        1721995000
    ],
    [
        1033990,
        1721717250
    ],
    [
        1033980,
        1724405000
    ],
    [
        1033970,
        1725226500
    ],
    [
        1033960,
        1722000000
    ],
    [
        1033940,
        1719428750
    ],
    [
        1033930,
        1719211500
    ],
    [
        1033920,
        1717572500
    ],
    [
        1033900,
        1716295000
    ],
    [
        1033890,
        1708281250
    ],
    [
        1033880,
        1708149500
    ],
    [
        1033870,
        1706290500
    ],
    [
        1033860,
        1705075000
    ],
    [
        1033850,
        1702710000
    ],
    [
        1033840,
        1703000000
    ],
    [
        1033830,
        1702595500
    ],
    [
        1033820,
        1711362500
    ],
    [
        1033810,
        1713157500
    ],
    [
        1033800,
        1713720000
    ],
    [
        1033790,
        1713949000
    ],
    [
        1033780,
        1715565000
    ],
    [
        1033770,
        1715850000
    ],
    [
        1033760,
        1728418500
    ],
    [
        1033750,
        1728241250
    ],
    [
        1033740,
        1727430250
    ],
    [
        1033730,
        1728705000
    ],
    [
        1033720,
        1728070000
    ],
    [
        1033710,
        1730425000
    ],
    [
        1033700,
        1730270000
    ],
    [
        1033690,
        1718000000
    ],
    [
        1033680,
        1715395000
    ],
    [
        1033670,
        1714966250
    ],
    [
        1033660,
        1714696250
    ],
    [
        1033650,
        1715103500
    ],
    [
        1033640,
        1714656000
    ],
    [
        1033630,
        1707505000
    ],
    [
        1033610,
        1705446250
    ],
    [
        1033600,
        1702985000
    ],
    [
        1033590,
        1704500000
    ],
    [
        1033570,
        1700930000
    ],
    [
        1033550,
        1700470000
    ],
    [
        1033540,
        1701000000
    ],
    [
        1033530,
        1705381250
    ],
    [
        1033520,
        1707002750
    ],
    [
        1033510,
        1707696250
    ],
    [
        1033500,
        1710400000
    ],
    [
        1033490,
        1715532000
    ],
    [
        1033480,
        1714205000
    ],
    [
        1033470,
        1705900000
    ],
    [
        1033460,
        1702465000
    ],
    [
        1033450,
        1701197750
    ],
    [
        1033440,
        1704170000
    ],
    [
        1033430,
        1704525000
    ],
    [
        1033420,
        1704891000
    ],
    [
        1033400,
        1705500000
    ],
    [
        1033390,
        1706180000
    ],
    [
        1033370,
        1707080000
    ],
    [
        1033360,
        1709878750
    ],
    [
        1033350,
        1718176000
    ],
    [
        1033340,
        1712610000
    ],
    [
        1033330,
        1714000000
    ],
    [
        1033320,
        1718590000
    ],
    [
        1033290,
        1709175000
    ],
    [
        1033280,
        1704726500
    ],
    [
        1033270,
        1699000000
    ],
    [
        1033260,
        1697469000
    ],
    [
        1033250,
        1699475000
    ],
    [
        1033240,
        1700250000
    ],
    [
        1033230,
        1699264500
    ],
    [
        1033220,
        1699000000
    ],
    [
        1033200,
        1703728500
    ],
    [
        1033190,
        1707345000
    ],
    [
        1033180,
        1711969000
    ],
    [
        1033170,
        1713665000
    ],
    [
        1033160,
        1708400000
    ],
    [
        1033150,
        1705185000
    ],
    [
        1033140,
        1705500000
    ],
    [
        1033130,
        1707157500
    ],
    [
        1033120,
        1708950000
    ],
    [
        1033110,
        1707020000
    ],
    [
        1033100,
        1706500000
    ],
    [
        1033090,
        1705061250
    ],
    [
        1033080,
        1702719000
    ],
    [
        1033070,
        1706820000
    ],
    [
        1033060,
        1719604000
    ],
    [
        1033050,
        1723335000
    ],
    [
        1033040,
        1724670000
    ],
    [
        1033030,
        1721883750
    ],
    [
        1033020,
        1721630000
    ],
    [
        1033010,
        1721965500
    ],
    [
        1033000,
        1725195000
    ],
    [
        1032990,
        1735850000
    ],
    [
        1032980,
        1737505000
    ],
    [
        1032970,
        1740430000
    ],
    [
        1032890,
        1744700000
    ],
    [
        1032880,
        1741790000
    ],
    [
        1032860,
        1740580000
    ],
    [
        1032850,
        1749000000
    ],
    [
        1032840,
        1751884750
    ],
    [
        1032830,
        1752656000
    ],
    [
        1032810,
        1748500000
    ],
    [
        1032800,
        1747515000
    ],
    [
        1032790,
        1736107000
    ],
    [
        1032780,
        1733945000
    ],
    [
        1032770,
        1735724000
    ],
    [
        1032760,
        1735979000
    ],
    [
        1032750,
        1738383750
    ],
    [
        1032740,
        1738377500
    ],
    [
        1032730,
        1736092000
    ],
    [
        1032720,
        1738130000
    ],
    [
        1032710,
        1741785000
    ],
    [
        1032700,
        1742227500
    ],
    [
        1032690,
        1742480000
    ],
    [
        1032680,
        1744020000
    ],
    [
        1032670,
        1738303500
    ],
    [
        1032660,
        1738606500
    ],
    [
        1032650,
        1737920000
    ],
    [
        1032640,
        1737690000
    ],
    [
        1032620,
        1726785500
    ],
    [
        1032610,
        1709811250
    ],
    [
        1032600,
        1698235000
    ],
    [
        1032590,
        1697935000
    ],
    [
        1032580,
        1692330000
    ],
    [
        1032570,
        1692605000
    ],
    [
        1032560,
        1694650000
    ],
    [
        1032550,
        1680295000
    ],
    [
        1032540,
        1680202500
    ],
    [
        1032530,
        1680170000
    ],
    [
        1032520,
        1681181250
    ],
    [
        1032510,
        1679210000
    ],
    [
        1032500,
        1677880000
    ],
    [
        1032490,
        1675105000
    ],
    [
        1032480,
        1672713000
    ],
    [
        1032470,
        1670309250
    ],
    [
        1032460,
        1674000000
    ],
    [
        1032450,
        1673745000
    ],
    [
        1032440,
        1673850000
    ],
    [
        1032430,
        1674227500
    ],
    [
        1032410,
        1668123750
    ],
    [
        1032390,
        1668113750
    ],
    [
        1032380,
        1667000000
    ],
    [
        1032370,
        1665905000
    ],
    [
        1032360,
        1663635000
    ],
    [
        1032350,
        1664473500
    ],
    [
        1032340,
        1664780000
    ],
    [
        1032320,
        1680430000
    ],
    [
        1032310,
        1688820000
    ],
    [
        1032280,
        1690000000
    ],
    [
        1032270,
        1690061000
    ],
    [
        1032260,
        1688837500
    ],
    [
        1032250,
        1697000000
    ],
    [
        1032240,
        1698500000
    ],
    [
        1032220,
        1699000000
    ],
    [
        1032210,
        1699434000
    ],
    [
        1032200,
        1699060000
    ],
    [
        1032180,
        1717315000
    ],
    [
        1032170,
        1717085000
    ],
    [
        1032160,
        1719593750
    ],
    [
        1032150,
        1724880000
    ],
    [
        1032140,
        1719925000
    ],
    [
        1032130,
        1717836000
    ],
    [
        1032110,
        1725000000
    ],
    [
        1032090,
        1728895000
    ],
    [
        1032080,
        1738000000
    ],
    [
        1032070,
        1749227500
    ],
    [
        1032060,
        1748293750
    ],
    [
        1032050,
        1750889500
    ],
    [
        1032040,
        1749600000
    ],
    [
        1032030,
        1750500000
    ],
    [
        1032020,
        1753282500
    ],
    [
        1032010,
        1752015000
    ],
    [
        1032000,
        1752000000
    ],
    [
        1031990,
        1749434500
    ],
    [
        1031980,
        1745375000
    ],
    [
        1031970,
        1739138000
    ],
    [
        1031960,
        1738173750
    ],
    [
        1031950,
        1746656500
    ],
    [
        1031940,
        1749530000
    ],
    [
        1031920,
        1748856250
    ],
    [
        1031910,
        1744876000
    ],
    [
        1031890,
        1762781250
    ],
    [
        1031880,
        1769811000
    ],
    [
        1031870,
        1769452250
    ],
    [
        1031860,
        1771560000
    ],
    [
        1031840,
        1763680000
    ],
    [
        1031830,
        1766281500
    ],
    [
        1031820,
        1765331500
    ],
    [
        1031810,
        1769375000
    ],
    [
        1031800,
        1772215000
    ],
    [
        1031790,
        1764500000
    ],
    [
        1031770,
        1761500000
    ],
    [
        1031760,
        1758995750
    ],
    [
        1031750,
        1757003750
    ],
    [
        1031740,
        1756693250
    ],
    [
        1031680,
        1772296250
    ],
    [
        1031650,
        1774240000
    ],
    [
        1031640,
        1774500000
    ],
    [
        1031630,
        1772881250
    ],
    [
        1031610,
        1773825000
    ],
    [
        1031600,
        1771552250
    ],
    [
        1031590,
        1773745000
    ],
    [
        1031580,
        1772036250
    ],
    [
        1031570,
        1773200000
    ],
    [
        1031560,
        1763521000
    ],
    [
        1031550,
        1763483750
    ],
    [
        1031540,
        1760771250
    ],
    [
        1031530,
        1759131250
    ],
    [
        1031520,
        1761176250
    ],
    [
        1031510,
        1761943750
    ],
    [
        1031500,
        1749293500
    ],
    [
        1031490,
        1746816250
    ],
    [
        1031480,
        1745422500
    ],
    [
        1031470,
        1753997750
    ],
    [
        1031460,
        1757087500
    ],
    [
        1031450,
        1755500000
    ],
    [
        1031440,
        1754515000
    ],
    [
        1031430,
        1754470000
    ],
    [
        1031420,
        1741760000
    ],
    [
        1031410,
        1740610000
    ],
    [
        1031400,
        1732260000
    ],
    [
        1031390,
        1730790000
    ],
    [
        1031370,
        1727690000
    ],
    [
        1031360,
        1728345000
    ],
    [
        1031350,
        1730996250
    ],
    [
        1031340,
        1732730000
    ],
    [
        1031310,
        1723075000
    ],
    [
        1031300,
        1719250000
    ],
    [
        1031290,
        1716290000
    ],
    [
        1031280,
        1715360000
    ],
    [
        1031270,
        1723160000
    ],
    [
        1031260,
        1723435000
    ],
    [
        1031250,
        1723660000
    ],
    [
        1031240,
        1723500000
    ],
    [
        1031230,
        1722220000
    ],
    [
        1031220,
        1721411250
    ],
    [
        1031190,
        1705500000
    ],
    [
        1031170,
        1692000000
    ],
    [
        1031160,
        1698500000
    ],
    [
        1031150,
        1714571250
    ],
    [
        1031130,
        1715290000
    ],
    [
        1031120,
        1716790000
    ],
    [
        1031100,
        1718500000
    ],
    [
        1031090,
        1720140000
    ],
    [
        1031080,
        1719893500
    ],
    [
        1031070,
        1719625750
    ],
    [
        1031060,
        1727395000
    ],
    [
        1031050,
        1729275000
    ],
    [
        1031040,
        1730440000
    ],
    [
        1031000,
        1727500000
    ],
    [
        1030990,
        1727296250
    ],
    [
        1030970,
        1722330000
    ],
    [
        1030960,
        1721835000
    ],
    [
        1030950,
        1720886250
    ],
    [
        1030940,
        1719255000
    ],
    [
        1030930,
        1719652500
    ],
    [
        1030920,
        1718475000
    ],
    [
        1030910,
        1715500000
    ],
    [
        1030900,
        1722969500
    ],
    [
        1030870,
        1723895000
    ],
    [
        1030860,
        1720000000
    ],
    [
        1030850,
        1717000000
    ],
    [
        1030840,
        1712230000
    ],
    [
        1030820,
        1699000000
    ],
    [
        1030810,
        1693223000
    ],
    [
        1030800,
        1697697500
    ],
    [
        1030790,
        1697337000
    ],
    [
        1030780,
        1691644000
    ],
    [
        1030770,
        1692780000
    ],
    [
        1030760,
        1690350000
    ],
    [
        1030750,
        1687106000
    ],
    [
        1030730,
        1692780000
    ],
    [
        1030700,
        1701040000
    ],
    [
        1030680,
        1697667500
    ],
    [
        1030670,
        1700000000
    ],
    [
        1030660,
        1704000000
    ],
    [
        1030650,
        1703954500
    ],
    [
        1030640,
        1700463500
    ],
    [
        1030630,
        1699916500
    ],
    [
        1030620,
        1707175000
    ],
    [
        1030610,
        1710675000
    ],
    [
        1030600,
        1711500000
    ],
    [
        1030590,
        1718500000
    ],
    [
        1030580,
        1717824500
    ],
    [
        1030570,
        1714738750
    ],
    [
        1030560,
        1717935000
    ],
    [
        1030550,
        1723560000
    ],
    [
        1030540,
        1730398500
    ],
    [
        1030530,
        1731000000
    ],
    [
        1030520,
        1740301750
    ],
    [
        1030510,
        1742715000
    ],
    [
        1030500,
        1740989000
    ],
    [
        1030490,
        1733485000
    ],
    [
        1030480,
        1726740000
    ],
    [
        1030460,
        1725272500
    ],
    [
        1030390,
        1735842500
    ],
    [
        1030370,
        1736025000
    ],
    [
        1030360,
        1729917500
    ],
    [
        1030350,
        1729395000
    ],
    [
        1030340,
        1728580000
    ],
    [
        1030300,
        1737000000
    ],
    [
        1030280,
        1739000000
    ],
    [
        1030260,
        1735560000
    ],
    [
        1030250,
        1730428000
    ],
    [
        1030220,
        1727000000
    ],
    [
        1030200,
        1728460000
    ],
    [
        1030180,
        1732020000
    ],
    [
        1030170,
        1723000000
    ],
    [
        1030160,
        1723120000
    ],
    [
        1030150,
        1727660000
    ],
    [
        1030120,
        1745730000
    ],
    [
        1030110,
        1747406000
    ],
    [
        1030100,
        1746000000
    ],
    [
        1030090,
        1746725000
    ],
    [
        1030080,
        1763000000
    ],
    [
        1030050,
        1768380000
    ],
    [
        1030020,
        1770805000
    ],
    [
        1030010,
        1778896000
    ],
    [
        1029980,
        1776890000
    ],
    [
        1029970,
        1782840000
    ],
    [
        1029920,
        1780000000
    ],
    [
        1029910,
        1779190000
    ],
    [
        1029900,
        1779000000
    ],
    [
        1029890,
        1772280000
    ],
    [
        1029880,
        1773364000
    ],
    [
        1029870,
        1773000000
    ],
    [
        1029860,
        1771780000
    ],
    [
        1029840,
        1771000000
    ],
    [
        1029830,
        1773000000
    ],
    [
        1029810,
        1771000000
    ],
    [
        1029800,
        1768350000
    ],
    [
        1029790,
        1758295000
    ],
    [
        1029780,
        1756805000
    ],
    [
        1029770,
        1751000000
    ],
    [
        1029760,
        1753140000
    ],
    [
        1029740,
        1757000000
    ],
    [
        1029730,
        1758620000
    ],
    [
        1029690,
        1751000000
    ],
    [
        1029650,
        1797000000
    ],
    [
        1029640,
        1800000000
    ],
    [
        1029630,
        1797417500
    ],
    [
        1029620,
        1795770000
    ],
    [
        1029610,
        1798957500
    ],
    [
        1029600,
        1795180000
    ],
    [
        1029570,
        1789000000
    ],
    [
        1029540,
        1769600000
    ],
    [
        1029530,
        1765000000
    ],
    [
        1029520,
        1764022000
    ],
    [
        1029510,
        1761000000
    ],
    [
        1029450,
        1788000000
    ],
    [
        1029410,
        1785000000
    ],
    [
        1029390,
        1784000000
    ],
    [
        1029370,
        1781887500
    ],
    [
        1029360,
        1789840000
    ],
    [
        1029310,
        1781000000
    ],
    [
        1029280,
        1785000000
    ],
    [
        1029270,
        1786580000
    ],
    [
        1029260,
        1785000000
    ],
    [
        1029230,
        1813000000
    ],
    [
        1029220,
        1814610000
    ],
    [
        1029210,
        1814591000
    ],
    [
        1029200,
        1814610000
    ],
    [
        1029170,
        1826000000
    ],
    [
        1029160,
        1826784000
    ],
    [
        1029150,
        1829257500
    ],
    [
        1029140,
        1842640000
    ],
    [
        1029130,
        1850000000
    ],
    [
        1029110,
        1851000000
    ],
    [
        1029100,
        1850820000
    ],
    [
        1029090,
        1850910000
    ],
    [
        1029080,
        1850500000
    ],
    [
        1029070,
        1851616000
    ],
    [
        1029060,
        1856296000
    ],
    [
        1029050,
        1861900000
    ],
    [
        1029040,
        1862876500
    ],
    [
        1029030,
        1871955000
    ],
    [
        1029020,
        1877491000
    ],
    [
        1029010,
        1868691250
    ],
    [
        1028990,
        1868505000
    ],
    [
        1028980,
        1868094000
    ],
    [
        1028970,
        1867145000
    ],
    [
        1028960,
        1863955000
    ],
    [
        1028950,
        1867145000
    ],
    [
        1028940,
        1851741250
    ],
    [
        1028920,
        1850505000
    ],
    [
        1028910,
        1852870000
    ],
    [
        1028900,
        1855415000
    ],
    [
        1028890,
        1855214250
    ],
    [
        1028860,
        1834000000
    ],
    [
        1028850,
        1830330000
    ],
    [
        1028830,
        1828000000
    ],
    [
        1028810,
        1837000000
    ],
    [
        1028790,
        1838000000
    ],
    [
        1028770,
        1837000000
    ],
    [
        1028740,
        1830330000
    ],
    [
        1028670,
        1820000000
    ],
    [
        1028660,
        1830000000
    ],
    [
        1028650,
        1831970000
    ],
    [
        1028640,
        1835460000
    ],
    [
        1028630,
        1835890000
    ],
    [
        1028620,
        1836000000
    ],
    [
        1028600,
        1834000000
    ],
    [
        1028590,
        1833295000
    ],
    [
        1028570,
        1832000000
    ],
    [
        1028560,
        1833000000
    ],
    [
        1028530,
        1832000000
    ],
    [
        1028520,
        1830630000
    ],
    [
        1028500,
        1827000000
    ],
    [
        1028490,
        1825000000
    ],
    [
        1028470,
        1824000000
    ],
    [
        1028460,
        1833000000
    ],
    [
        1028450,
        1837039000
    ],
    [
        1028440,
        1832470000
    ],
    [
        1028430,
        1839000000
    ],
    [
        1028410,
        1841782500
    ],
    [
        1028400,
        1835450000
    ],
    [
        1028390,
        1834037500
    ],
    [
        1028380,
        1833270000
    ],
    [
        1028370,
        1848390000
    ],
    [
        1028360,
        1848265000
    ],
    [
        1028350,
        1848062500
    ],
    [
        1028340,
        1839000000
    ],
    [
        1028320,
        1835650000
    ],
    [
        1028310,
        1831000000
    ],
    [
        1028300,
        1827190000
    ],
    [
        1028290,
        1821000000
    ],
    [
        1028250,
        1810470000
    ],
    [
        1028240,
        1811000000
    ],
    [
        1028230,
        1810470000
    ],
    [
        1028220,
        1804520000
    ],
    [
        1028210,
        1799160000
    ],
    [
        1028200,
        1799453000
    ],
    [
        1028190,
        1803062500
    ],
    [
        1028180,
        1800993000
    ],
    [
        1028170,
        1802915000
    ],
    [
        1028160,
        1824000000
    ],
    [
        1028150,
        1828412500
    ],
    [
        1028140,
        1830000000
    ],
    [
        1028120,
        1829000000
    ],
    [
        1028110,
        1825300000
    ],
    [
        1028100,
        1830000000
    ],
    [
        1028090,
        1825660000
    ],
    [
        1028080,
        1830000000
    ],
    [
        1028070,
        1841000000
    ],
    [
        1028060,
        1843000000
    ],
    [
        1028050,
        1841660000
    ],
    [
        1028040,
        1835250000
    ],
    [
        1027990,
        1825000000
    ],
    [
        1027980,
        1819085000
    ],
    [
        1027970,
        1820000000
    ],
    [
        1027950,
        1819000000
    ],
    [
        1027940,
        1817780000
    ],
    [
        1027930,
        1817000000
    ],
    [
        1027920,
        1810170000
    ],
    [
        1027910,
        1810000000
    ],
    [
        1027890,
        1805000000
    ],
    [
        1027880,
        1801737500
    ],
    [
        1027850,
        1800000000
    ],
    [
        1027840,
        1799000000
    ],
    [
        1027820,
        1795934000
    ],
    [
        1027810,
        1799000000
    ],
    [
        1027790,
        1805000000
    ],
    [
        1027780,
        1810588000
    ],
    [
        1027770,
        1811280000
    ],
    [
        1027760,
        1805000000
    ],
    [
        1027750,
        1794080000
    ],
    [
        1027730,
        1791000000
    ],
    [
        1027710,
        1785010000
    ],
    [
        1027690,
        1786915000
    ],
    [
        1027680,
        1783075000
    ],
    [
        1027670,
        1780369000
    ],
    [
        1027660,
        1780955000
    ],
    [
        1027650,
        1782000000
    ],
    [
        1027640,
        1782315000
    ],
    [
        1027630,
        1779920500
    ],
    [
        1027610,
        1774375000
    ],
    [
        1027600,
        1774000000
    ],
    [
        1027590,
        1775555000
    ],
    [
        1027580,
        1774000000
    ],
    [
        1027570,
        1772742500
    ],
    [
        1027560,
        1769922500
    ],
    [
        1027540,
        1766500000
    ],
    [
        1027530,
        1766000000
    ],
    [
        1027520,
        1765000000
    ],
    [
        1027510,
        1762383000
    ],
    [
        1027500,
        1761257000
    ],
    [
        1027480,
        1756247500
    ],
    [
        1027470,
        1747000000
    ],
    [
        1027460,
        1746940000
    ],
    [
        1027450,
        1745940000
    ],
    [
        1027430,
        1746484500
    ],
    [
        1027420,
        1755060000
    ],
    [
        1027410,
        1761060000
    ],
    [
        1027400,
        1769896250
    ],
    [
        1027390,
        1764572500
    ],
    [
        1027290,
        1693475000
    ],
    [
        1027280,
        1696840500
    ],
    [
        1027270,
        1700349500
    ],
    [
        1027260,
        1726090000
    ],
    [
        1027250,
        1740090000
    ],
    [
        1027240,
        1752305000
    ],
    [
        1027230,
        1755845000
    ],
    [
        1027220,
        1754998000
    ],
    [
        1027210,
        1762500000
    ],
    [
        1027200,
        1769222500
    ],
    [
        1027190,
        1768000000
    ],
    [
        1027180,
        1768179500
    ],
    [
        1027170,
        1768272000
    ],
    [
        1027160,
        1770234500
    ],
    [
        1027150,
        1770695000
    ],
    [
        1027140,
        1765735000
    ],
    [
        1027130,
        1770401500
    ],
    [
        1027120,
        1758000000
    ],
    [
        1027110,
        1747500000
    ],
    [
        1027100,
        1745390000
    ],
    [
        1027090,
        1743760000
    ],
    [
        1027080,
        1743748750
    ],
    [
        1027070,
        1744690500
    ],
    [
        1027060,
        1746769000
    ],
    [
        1027040,
        1747990000
    ],
    [
        1027030,
        1748081250
    ],
    [
        1027010,
        1746085000
    ],
    [
        1027000,
        1745000000
    ],
    [
        1026990,
        1744500000
    ],
    [
        1026980,
        1743780000
    ],
    [
        1026970,
        1739703750
    ],
    [
        1026960,
        1721500000
    ],
    [
        1026950,
        1717500000
    ],
    [
        1026940,
        1712285000
    ],
    [
        1026930,
        1714765000
    ],
    [
        1026920,
        1715000000
    ],
    [
        1026910,
        1716115000
    ],
    [
        1026900,
        1718697500
    ],
    [
        1026880,
        1722000000
    ],
    [
        1026870,
        1724840000
    ],
    [
        1026860,
        1722116250
    ],
    [
        1026840,
        1722560000
    ],
    [
        1026830,
        1736695500
    ],
    [
        1026820,
        1745277500
    ],
    [
        1026810,
        1747848000
    ],
    [
        1026800,
        1755625000
    ],
    [
        1026790,
        1762500000
    ],
    [
        1026780,
        1761742500
    ],
    [
        1026770,
        1760932500
    ],
    [
        1026760,
        1758876500
    ],
    [
        1026750,
        1760650000
    ],
    [
        1026740,
        1765500000
    ],
    [
        1026730,
        1763412500
    ],
    [
        1026720,
        1757737500
    ],
    [
        1026700,
        1750785000
    ],
    [
        1026690,
        1747276250
    ],
    [
        1026680,
        1745956250
    ],
    [
        1026670,
        1745600000
    ],
    [
        1026660,
        1740389000
    ],
    [
        1026650,
        1742571500
    ],
    [
        1026640,
        1751286500
    ],
    [
        1026630,
        1754555000
    ],
    [
        1026620,
        1755144500
    ],
    [
        1026600,
        1761000000
    ],
    [
        1026590,
        1761520000
    ],
    [
        1026580,
        1755988500
    ],
    [
        1026570,
        1764000000
    ],
    [
        1026560,
        1765000000
    ],
    [
        1026550,
        1765160000
    ],
    [
        1026540,
        1762075000
    ],
    [
        1026520,
        1758000000
    ],
    [
        1026510,
        1753486000
    ],
    [
        1026500,
        1752375750
    ],
    [
        1026490,
        1751082000
    ],
    [
        1026480,
        1756136250
    ],
    [
        1026470,
        1759002000
    ],
    [
        1026460,
        1764206250
    ],
    [
        1026450,
        1762412500
    ],
    [
        1026440,
        1760000000
    ],
    [
        1026430,
        1757994000
    ],
    [
        1026410,
        1763186250
    ],
    [
        1026400,
        1760657500
    ],
    [
        1026390,
        1756500000
    ],
    [
        1026380,
        1756000000
    ],
    [
        1026370,
        1757595000
    ],
    [
        1026360,
        1755782500
    ],
    [
        1026350,
        1758727500
    ],
    [
        1026340,
        1756353500
    ],
    [
        1026330,
        1764945000
    ],
    [
        1026320,
        1769000000
    ],
    [
        1026310,
        1770000000
    ],
    [
        1026290,
        1760661000
    ],
    [
        1026280,
        1750497500
    ],
    [
        1026270,
        1741000000
    ],
    [
        1026250,
        1740779500
    ],
    [
        1026240,
        1744319500
    ],
    [
        1026230,
        1754265000
    ],
    [
        1026220,
        1761000000
    ],
    [
        1026210,
        1776715000
    ],
    [
        1026190,
        1779120000
    ],
    [
        1026090,
        1761000000
    ],
    [
        1026080,
        1760352500
    ],
    [
        1026070,
        1757000000
    ],
    [
        1026060,
        1758070000
    ],
    [
        1026050,
        1760000000
    ],
    [
        1026040,
        1760417000
    ],
    [
        1026030,
        1767283000
    ],
    [
        1026020,
        1780210000
    ],
    [
        1026010,
        1782175000
    ],
    [
        1025980,
        1787000000
    ],
    [
        1025970,
        1784220000
    ],
    [
        1025960,
        1784000000
    ],
    [
        1025950,
        1783722500
    ],
    [
        1025930,
        1775550000
    ],
    [
        1025920,
        1773000000
    ],
    [
        1025910,
        1761000000
    ],
    [
        1025900,
        1759480000
    ],
    [
        1025890,
        1753000000
    ],
    [
        1025880,
        1741090000
    ],
    [
        1025860,
        1745992000
    ],
    [
        1025850,
        1754684000
    ],
    [
        1025840,
        1756000000
    ],
    [
        1025830,
        1755659000
    ],
    [
        1025820,
        1755000000
    ],
    [
        1025810,
        1767000000
    ],
    [
        1025800,
        1785000000
    ],
    [
        1025790,
        1785057500
    ],
    [
        1025780,
        1789000000
    ],
    [
        1025770,
        1773750000
    ],
    [
        1025750,
        1773140000
    ],
    [
        1025720,
        1767650000
    ],
    [
        1025710,
        1777480000
    ],
    [
        1025700,
        1767650000
    ],
    [
        1025690,
        1771660000
    ],
    [
        1025680,
        1789000000
    ],
    [
        1025660,
        1789750000
    ],
    [
        1025630,
        1793410000
    ],
    [
        1025610,
        1786600000
    ],
    [
        1025600,
        1784920000
    ],
    [
        1025570,
        1772000000
    ],
    [
        1025560,
        1771000000
    ],
    [
        1025540,
        1762666000
    ],
    [
        1025520,
        1772000000
    ],
    [
        1025490,
        1772450000
    ],
    [
        1025480,
        1765000000
    ],
    [
        1025460,
        1763410000
    ],
    [
        1025450,
        1745830000
    ],
    [
        1025440,
        1764000000
    ],
    [
        1025430,
        1767193000
    ],
    [
        1025410,
        1775000000
    ],
    [
        1025400,
        1766685000
    ],
    [
        1025390,
        1767137500
    ],
    [
        1025380,
        1767810000
    ],
    [
        1025370,
        1763000000
    ],
    [
        1025360,
        1762523000
    ],
    [
        1025350,
        1756730000
    ],
    [
        1025340,
        1761000000
    ],
    [
        1025330,
        1765217000
    ],
    [
        1025320,
        1767000000
    ],
    [
        1025300,
        1767301000
    ],
    [
        1025290,
        1778390000
    ],
    [
        1025280,
        1766000000
    ],
    [
        1025270,
        1760623000
    ],
    [
        1025260,
        1761607500
    ],
    [
        1025230,
        1769000000
    ],
    [
        1025220,
        1775162000
    ],
    [
        1025210,
        1776000000
    ],
    [
        1025200,
        1777820000
    ],
    [
        1025190,
        1774222000
    ],
    [
        1025180,
        1776678000
    ],
    [
        1025170,
        1776032000
    ],
    [
        1025150,
        1761000000
    ],
    [
        1025130,
        1745830000
    ],
    [
        1025110,
        1741610000
    ],
    [
        1025100,
        1739810000
    ],
    [
        1025090,
        1743280000
    ],
    [
        1025080,
        1741800000
    ],
    [
        1025060,
        1740000000
    ],
    [
        1025050,
        1739860000
    ],
    [
        1025040,
        1731340000
    ],
    [
        1025030,
        1732615000
    ],
    [
        1025020,
        1739199000
    ],
    [
        1025000,
        1726610000
    ],
    [
        1024990,
        1721000000
    ],
    [
        1024970,
        1730000000
    ],
    [
        1024960,
        1732000000
    ],
    [
        1024950,
        1733217500
    ],
    [
        1024940,
        1735829000
    ],
    [
        1024930,
        1736842500
    ],
    [
        1024910,
        1730000000
    ],
    [
        1024900,
        1729666000
    ],
    [
        1024890,
        1721350000
    ],
    [
        1024870,
        1717000000
    ],
    [
        1024860,
        1716702500
    ],
    [
        1024850,
        1720117500
    ],
    [
        1024840,
        1738830000
    ],
    [
        1024830,
        1737940000
    ],
    [
        1024820,
        1739000000
    ],
    [
        1024810,
        1745000000
    ],
    [
        1024790,
        1739000000
    ],
    [
        1024690,
        1682960000
    ],
    [
        1024630,
        1698000000
    ],
    [
        1024580,
        1675000000
    ],
    [
        1024570,
        1679780000
    ],
    [
        1024560,
        1702000000
    ],
    [
        1024540,
        1714000000
    ],
    [
        1024520,
        1716000000
    ],
    [
        1024510,
        1711000000
    ],
    [
        1024500,
        1716000000
    ],
    [
        1024490,
        1724000000
    ],
    [
        1024480,
        1725495000
    ],
    [
        1024470,
        1811000000
    ],
    [
        1024460,
        1822000000
    ],
    [
        1024450,
        1831425000
    ],
    [
        1024420,
        1836000000
    ],
    [
        1024410,
        1834330000
    ],
    [
        1024400,
        1832000000
    ],
    [
        1024390,
        1832820000
    ],
    [
        1024380,
        1832802000
    ],
    [
        1024370,
        1824303000
    ],
    [
        1024360,
        1818647500
    ],
    [
        1024350,
        1822960000
    ],
    [
        1024340,
        1826586000
    ],
    [
        1024320,
        1810000000
    ],
    [
        1024300,
        1821000000
    ],
    [
        1024280,
        1828000000
    ],
    [
        1024270,
        1821000000
    ],
    [
        1024260,
        1818842500
    ],
    [
        1024250,
        1815000000
    ],
    [
        1024240,
        1815639000
    ],
    [
        1024220,
        1811620000
    ],
    [
        1024190,
        1820000000
    ],
    [
        1024170,
        1821000000
    ],
    [
        1024160,
        1820640000
    ],
    [
        1024150,
        1820000000
    ],
    [
        1024140,
        1823935000
    ],
    [
        1024130,
        1821000000
    ],
    [
        1024120,
        1830000000
    ],
    [
        1024110,
        1831697000
    ],
    [
        1024100,
        1834022500
    ],
    [
        1024090,
        1833852500
    ],
    [
        1024070,
        1832000000
    ],
    [
        1024060,
        1829000000
    ],
    [
        1024030,
        1832000000
    ],
    [
        1024010,
        1833000000
    ],
    [
        1024000,
        1841687000
    ],
    [
        1023980,
        1848000000
    ],
    [
        1023970,
        1854000000
    ],
    [
        1023960,
        1856000000
    ],
    [
        1023950,
        1856534000
    ],
    [
        1023940,
        1856000000
    ],
    [
        1023920,
        1864000000
    ],
    [
        1023910,
        1860820000
    ],
    [
        1023900,
        1864000000
    ],
    [
        1023890,
        1865451000
    ],
    [
        1023880,
        1866250000
    ],
    [
        1023860,
        1865866000
    ],
    [
        1023850,
        1864000000
    ],
    [
        1023840,
        1861102000
    ],
    [
        1023830,
        1863150000
    ],
    [
        1023820,
        1865000000
    ],
    [
        1023810,
        1870903000
    ],
    [
        1023800,
        1865057500
    ],
    [
        1023750,
        1864000000
    ],
    [
        1023740,
        1864253000
    ],
    [
        1023700,
        1872000000
    ],
    [
        1023690,
        1872990000
    ],
    [
        1023680,
        1876510000
    ],
    [
        1023670,
        1880552000
    ],
    [
        1023660,
        1882000000
    ],
    [
        1023650,
        1882633000
    ],
    [
        1023640,
        1884000000
    ],
    [
        1023630,
        1886350000
    ],
    [
        1023620,
        1887000000
    ],
    [
        1023610,
        1887087500
    ],
    [
        1023600,
        1886500000
    ],
    [
        1023590,
        1889360000
    ],
    [
        1023580,
        1892327500
    ],
    [
        1023570,
        1890710000
    ],
    [
        1023560,
        1891540000
    ],
    [
        1023550,
        1891000000
    ],
    [
        1023530,
        1885991000
    ],
    [
        1023520,
        1892970000
    ],
    [
        1023510,
        1897170000
    ],
    [
        1023480,
        1876510000
    ],
    [
        1023460,
        1867000000
    ],
    [
        1023450,
        1863920000
    ],
    [
        1023440,
        1866000000
    ],
    [
        1023420,
        1868000000
    ],
    [
        1023400,
        1866000000
    ],
    [
        1023390,
        1868000000
    ],
    [
        1023360,
        1877000000
    ],
    [
        1023350,
        1882000000
    ],
    [
        1023340,
        1892000000
    ],
    [
        1023330,
        1891242500
    ],
    [
        1023320,
        1891740000
    ],
    [
        1023310,
        1882000000
    ],
    [
        1023290,
        1879830000
    ],
    [
        1023280,
        1877000000
    ],
    [
        1023270,
        1876100000
    ],
    [
        1023190,
        1841000000
    ],
    [
        1023180,
        1844442000
    ],
    [
        1023170,
        1834920000
    ],
    [
        1023160,
        1834590000
    ],
    [
        1023150,
        1834000000
    ],
    [
        1023140,
        1834270000
    ],
    [
        1023130,
        1832000000
    ],
    [
        1023110,
        1850330000
    ],
    [
        1023100,
        1851335000
    ],
    [
        1023090,
        1851000000
    ],
    [
        1023080,
        1858930000
    ],
    [
        1023070,
        1861110000
    ],
    [
        1023060,
        1869000000
    ],
    [
        1023050,
        1876247000
    ],
    [
        1023040,
        1869686000
    ],
    [
        1023020,
        1882000000
    ],
    [
        1023010,
        1888666000
    ],
    [
        1023000,
        1892980000
    ],
    [
        1022990,
        1892000000
    ],
    [
        1022980,
        1893000000
    ],
    [
        1022970,
        1893292500
    ],
    [
        1022960,
        1893645000
    ],
    [
        1022950,
        1894000000
    ],
    [
        1022940,
        1892000000
    ],
    [
        1022930,
        1888910000
    ],
    [
        1022920,
        1891625000
    ],
    [
        1022910,
        1891000000
    ],
    [
        1022900,
        1901560000
    ],
    [
        1022890,
        1903572500
    ],
    [
        1022880,
        1903000000
    ],
    [
        1022870,
        1904000000
    ],
    [
        1022860,
        1907005000
    ],
    [
        1022840,
        1904700000
    ],
    [
        1022830,
        1904000000
    ],
    [
        1022820,
        1903671000
    ],
    [
        1022810,
        1904000000
    ],
    [
        1022800,
        1904700000
    ],
    [
        1022790,
        1897000000
    ],
    [
        1022750,
        1883170000
    ],
    [
        1022720,
        1891000000
    ],
    [
        1022710,
        1888685000
    ],
    [
        1022690,
        1887000000
    ],
    [
        1022670,
        1899000000
    ],
    [
        1022660,
        1899600000
    ],
    [
        1022650,
        1899830000
    ],
    [
        1022640,
        1900010000
    ],
    [
        1022630,
        1896757500
    ],
    [
        1022620,
        1900330000
    ],
    [
        1022610,
        1901000000
    ],
    [
        1022600,
        1905082500
    ],
    [
        1022560,
        1890000000
    ],
    [
        1022550,
        1886350000
    ],
    [
        1022540,
        1888674000
    ],
    [
        1022530,
        1889000000
    ],
    [
        1022520,
        1887190000
    ],
    [
        1022510,
        1888221000
    ],
    [
        1022500,
        1887350000
    ],
    [
        1022490,
        1889762500
    ],
    [
        1022480,
        1880210000
    ],
    [
        1022470,
        1891710000
    ],
    [
        1022460,
        1887363000
    ],
    [
        1022450,
        1866000000
    ],
    [
        1022440,
        1862334000
    ],
    [
        1022430,
        1859805000
    ],
    [
        1022420,
        1858609000
    ],
    [
        1022410,
        1862341000
    ],
    [
        1022400,
        1866000000
    ],
    [
        1022390,
        1879000000
    ],
    [
        1022370,
        1877930000
    ],
    [
        1022360,
        1879000000
    ],
    [
        1022350,
        1877527500
    ],
    [
        1022340,
        1877910000
    ],
    [
        1022330,
        1871000000
    ],
    [
        1022320,
        1870283000
    ],
    [
        1022310,
        1867000000
    ],
    [
        1022300,
        1871000000
    ],
    [
        1022290,
        1872000000
    ],
    [
        1022280,
        1874000000
    ],
    [
        1022270,
        1867000000
    ],
    [
        1022260,
        1864000000
    ],
    [
        1022250,
        1859100000
    ],
    [
        1022240,
        1861000000
    ],
    [
        1022230,
        1864000000
    ],
    [
        1022220,
        1859930000
    ],
    [
        1022210,
        1859100000
    ],
    [
        1022180,
        1865000000
    ],
    [
        1022160,
        1864000000
    ],
    [
        1022150,
        1861000000
    ],
    [
        1022140,
        1862021250
    ],
    [
        1022130,
        1869873750
    ],
    [
        1022120,
        1866596000
    ],
    [
        1022110,
        1863614000
    ],
    [
        1022100,
        1864410250
    ],
    [
        1022090,
        1880473750
    ],
    [
        1022060,
        1859000000
    ],
    [
        1022050,
        1853500000
    ],
    [
        1022040,
        1851660000
    ],
    [
        1022030,
        1853160000
    ],
    [
        1022020,
        1864207500
    ],
    [
        1022010,
        1874752500
    ],
    [
        1021990,
        1872685000
    ],
    [
        1021980,
        1871000000
    ],
    [
        1021970,
        1852888500
    ],
    [
        1021440,
        1831000000
    ],
    [
        1021430,
        1827000000
    ],
    [
        1021410,
        1829888000
    ],
    [
        1021400,
        1829905000
    ],
    [
        1021390,
        1829960000
    ],
    [
        1021360,
        1833000000
    ],
    [
        1021340,
        1805000000
    ],
    [
        1021330,
        1803089000
    ],
    [
        1021320,
        1801868000
    ],
    [
        1021310,
        1800000000
    ],
    [
        1021300,
        1798357500
    ],
    [
        1021270,
        1776000000
    ],
    [
        1021230,
        1770000000
    ],
    [
        1021200,
        1758200000
    ],
    [
        1021190,
        1754230000
    ],
    [
        1021180,
        1745382000
    ],
    [
        1021170,
        1741000000
    ],
    [
        1021140,
        1752000000
    ],
    [
        1021130,
        1756140000
    ],
    [
        1021120,
        1754230000
    ],
    [
        1021070,
        1758000000
    ],
    [
        1021060,
        1755338000
    ],
    [
        1021050,
        1755000000
    ],
    [
        1020990,
        1748000000
    ],
    [
        1020980,
        1742830000
    ],
    [
        1020970,
        1731807500
    ],
    [
        1020960,
        1725307000
    ],
    [
        1020950,
        1679000000
    ],
    [
        1020940,
        1678340000
    ],
    [
        1020920,
        1677000000
    ],
    [
        1020910,
        1679000000
    ],
    [
        1020900,
        1702000000
    ],
    [
        1020890,
        1699747000
    ],
    [
        1020880,
        1694557500
    ],
    [
        1020850,
        1692000000
    ],
    [
        1020840,
        1700180000
    ],
    [
        1020830,
        1704000000
    ],
    [
        1020820,
        1700000000
    ],
    [
        1020790,
        1730000000
    ],
    [
        1020760,
        1736000000
    ],
    [
        1020750,
        1733804000
    ],
    [
        1020740,
        1713270000
    ],
    [
        1020730,
        1698774000
    ],
    [
        1020710,
        1695000000
    ],
    [
        1020700,
        1700420000
    ],
    [
        1020660,
        1747000000
    ],
    [
        1020650,
        1752575000
    ],
    [
        1020640,
        1757730000
    ],
    [
        1020610,
        1758365000
    ],
    [
        1020590,
        1759000000
    ],
    [
        1020580,
        1759723500
    ],
    [
        1020570,
        1759743750
    ],
    [
        1020560,
        1764517500
    ],
    [
        1020550,
        1757060000
    ],
    [
        1020540,
        1754955000
    ],
    [
        1020530,
        1753160000
    ],
    [
        1020500,
        1782790000
    ],
    [
        1020490,
        1785850000
    ],
    [
        1020470,
        1787000000
    ],
    [
        1020460,
        1813265000
    ],
    [
        1020450,
        1816765000
    ],
    [
        1020440,
        1818165500
    ],
    [
        1020430,
        1833450000
    ],
    [
        1020420,
        1834000000
    ],
    [
        1020410,
        1831515250
    ],
    [
        1020400,
        1802495000
    ],
    [
        1020390,
        1801780000
    ],
    [
        1020380,
        1801855000
    ],
    [
        1020360,
        1793625000
    ],
    [
        1020350,
        1791387500
    ],
    [
        1020340,
        1809439000
    ],
    [
        1020330,
        1811975000
    ],
    [
        1020320,
        1812587500
    ],
    [
        1020300,
        1843000000
    ],
    [
        1020290,
        1844648250
    ],
    [
        1020270,
        1840380000
    ],
    [
        1020260,
        1842162500
    ],
    [
        1020250,
        1852815000
    ],
    [
        1020240,
        1853630000
    ],
    [
        1020230,
        1860713750
    ],
    [
        1020220,
        1863160000
    ],
    [
        1020210,
        1866488500
    ],
    [
        1020190,
        1871510000
    ],
    [
        1020180,
        1878430000
    ],
    [
        1020170,
        1879000000
    ],
    [
        1020160,
        1878430000
    ],
    [
        1020150,
        1875990000
    ],
    [
        1020140,
        1873000000
    ],
    [
        1020130,
        1874859000
    ],
    [
        1020120,
        1857000000
    ],
    [
        1020110,
        1848490000
    ],
    [
        1020100,
        1857000000
    ],
    [
        1020090,
        1855477000
    ],
    [
        1020080,
        1857000000
    ],
    [
        1020070,
        1871187500
    ],
    [
        1020060,
        1878880000
    ],
    [
        1020050,
        1883532000
    ],
    [
        1019990,
        1879410000
    ],
    [
        1019980,
        1883880000
    ],
    [
        1019960,
        1896850000
    ],
    [
        1019950,
        1897975000
    ],
    [
        1019940,
        1901193000
    ],
    [
        1019930,
        1902000000
    ],
    [
        1019920,
        1917830000
    ],
    [
        1019910,
        1921151000
    ],
    [
        1019900,
        1842000000
    ],
    [
        1019870,
        1834000000
    ],
    [
        1019860,
        1828741000
    ],
    [
        1019850,
        1820437500
    ],
    [
        1019840,
        1813040000
    ],
    [
        1019830,
        1830000000
    ],
    [
        1019810,
        1832092500
    ],
    [
        1019800,
        1830440000
    ],
    [
        1019790,
        1827179000
    ],
    [
        1019780,
        1830440000
    ],
    [
        1019770,
        1840677500
    ],
    [
        1019760,
        1841000000
    ],
    [
        1019750,
        1847800000
    ],
    [
        1019740,
        1855583000
    ],
    [
        1019730,
        1867370500
    ],
    [
        1019720,
        1863866250
    ],
    [
        1019710,
        1863432000
    ],
    [
        1019700,
        1869000000
    ],
    [
        1019690,
        1859555500
    ],
    [
        1019670,
        1850500000
    ],
    [
        1019650,
        1850000000
    ],
    [
        1019640,
        1849240000
    ],
    [
        1019630,
        1843677500
    ],
    [
        1019620,
        1819005000
    ],
    [
        1019610,
        1815670000
    ],
    [
        1019600,
        1799201500
    ],
    [
        1019580,
        1777695000
    ],
    [
        1019570,
        1782000000
    ],
    [
        1019550,
        1777695000
    ],
    [
        1019540,
        1812230000
    ],
    [
        1019530,
        1816861000
    ],
    [
        1019520,
        1814531000
    ],
    [
        1019480,
        1815878000
    ],
    [
        1019470,
        1818000000
    ],
    [
        1019460,
        1820563500
    ],
    [
        1019440,
        1838500000
    ],
    [
        1019420,
        1835021500
    ],
    [
        1019410,
        1835000000
    ],
    [
        1019400,
        1835085000
    ],
    [
        1019390,
        1818785000
    ],
    [
        1019380,
        1806500000
    ],
    [
        1019370,
        1805700000
    ],
    [
        1019350,
        1804000000
    ],
    [
        1019340,
        1789097500
    ],
    [
        1019330,
        1794628750
    ],
    [
        1019320,
        1793990000
    ],
    [
        1019310,
        1803777500
    ],
    [
        1019290,
        1804000000
    ],
    [
        1019280,
        1787865000
    ],
    [
        1019270,
        1770695000
    ],
    [
        1019250,
        1767500000
    ],
    [
        1019240,
        1770695000
    ],
    [
        1019230,
        1781253000
    ],
    [
        1019220,
        1788905000
    ],
    [
        1019210,
        1801595000
    ],
    [
        1019190,
        1807455000
    ],
    [
        1019180,
        1808522000
    ],
    [
        1019170,
        1809022000
    ],
    [
        1019160,
        1812683000
    ],
    [
        1019150,
        1805050000
    ],
    [
        1019130,
        1804115000
    ],
    [
        1019120,
        1801000000
    ],
    [
        1019110,
        1816907500
    ],
    [
        1019090,
        1811668000
    ],
    [
        1019080,
        1804535000
    ],
    [
        1019070,
        1796221500
    ],
    [
        1019060,
        1799139000
    ],
    [
        1019050,
        1811830500
    ],
    [
        1019040,
        1797193750
    ],
    [
        1019030,
        1794773750
    ],
    [
        1019020,
        1795350500
    ],
    [
        1019010,
        1792000000
    ],
    [
        1019000,
        1793184000
    ],
    [
        1018990,
        1800955000
    ],
    [
        1018970,
        1806330000
    ],
    [
        1018960,
        1800195000
    ],
    [
        1018950,
        1806695000
    ],
    [
        1018940,
        1801521500
    ],
    [
        1018930,
        1768680000
    ],
    [
        1018920,
        1758330000
    ],
    [
        1018890,
        1744000000
    ],
    [
        1018880,
        1738500000
    ],
    [
        1018870,
        1729000000
    ],
    [
        1018860,
        1741000000
    ],
    [
        1018850,
        1756612500
    ],
    [
        1018840,
        1760241250
    ],
    [
        1018830,
        1747115000
    ],
    [
        1018820,
        1764490000
    ],
    [
        1018800,
        1786195000
    ],
    [
        1018790,
        1799240000
    ],
    [
        1018780,
        1804000000
    ],
    [
        1018770,
        1807000000
    ],
    [
        1018690,
        1832000000
    ],
    [
        1018670,
        1833000000
    ],
    [
        1018660,
        1832000000
    ],
    [
        1018650,
        1831217500
    ],
    [
        1018640,
        1827580000
    ],
    [
        1018630,
        1821290000
    ],
    [
        1018610,
        1804490000
    ],
    [
        1018600,
        1801000000
    ],
    [
        1018590,
        1823880000
    ],
    [
        1018580,
        1849000000
    ],
    [
        1018570,
        1851000000
    ],
    [
        1018550,
        1857000000
    ],
    [
        1018540,
        1856832500
    ],
    [
        1018530,
        1857790000
    ],
    [
        1018520,
        1858000000
    ],
    [
        1018510,
        1859000000
    ],
    [
        1018500,
        1859217000
    ],
    [
        1018490,
        1858995000
    ],
    [
        1018470,
        1871780000
    ],
    [
        1018440,
        1878010000
    ],
    [
        1018430,
        1882000000
    ],
    [
        1018420,
        1883889000
    ],
    [
        1018410,
        1882000000
    ],
    [
        1018400,
        1901420000
    ],
    [
        1018380,
        1903710000
    ],
    [
        1018370,
        1907420000
    ],
    [
        1018360,
        1907720000
    ],
    [
        1018350,
        1909652500
    ],
    [
        1018340,
        1906180000
    ],
    [
        1018330,
        1903237500
    ],
    [
        1018320,
        1901420000
    ],
    [
        1018310,
        1910580000
    ],
    [
        1018300,
        1943110000
    ],
    [
        1018290,
        1948096000
    ],
    [
        1018280,
        1961620000
    ],
    [
        1018270,
        1965340000
    ],
    [
        1018250,
        1966000000
    ],
    [
        1018240,
        1961797500
    ],
    [
        1018230,
        1962598000
    ],
    [
        1018220,
        1958870000
    ],
    [
        1018210,
        1959562500
    ],
    [
        1018190,
        1957000000
    ],
    [
        1018180,
        1957181000
    ],
    [
        1018170,
        1959507500
    ],
    [
        1018140,
        1978000000
    ],
    [
        1018130,
        1978890000
    ],
    [
        1018120,
        1974849000
    ],
    [
        1018110,
        1973837500
    ],
    [
        1018100,
        1965820000
    ],
    [
        1018090,
        1956310000
    ],
    [
        1018070,
        1955000000
    ],
    [
        1018050,
        1970000000
    ],
    [
        1018040,
        1980830000
    ],
    [
        1018030,
        1983000000
    ],
    [
        1018010,
        1984000000
    ],
    [
        1018000,
        1986000000
    ],
    [
        1017990,
        1983028000
    ],
    [
        1017980,
        1987910000
    ],
    [
        1017970,
        1989110000
    ],
    [
        1017960,
        1991641000
    ],
    [
        1017950,
        1989110000
    ],
    [
        1017940,
        1989700000
    ],
    [
        1017920,
        1985020000
    ],
    [
        1017910,
        1990000000
    ],
    [
        1017900,
        1989512000
    ],
    [
        1017890,
        1992000000
    ],
    [
        1017880,
        1999000000
    ],
    [
        1017870,
        2000000000
    ],
    [
        1017860,
        2001837000
    ],
    [
        1017850,
        2003000000
    ],
    [
        1017840,
        2004290000
    ],
    [
        1017830,
        2003435000
    ],
    [
        1017810,
        2000435000
    ],
    [
        1017800,
        1997492000
    ],
    [
        1017790,
        1996500000
    ],
    [
        1017780,
        1995579000
    ],
    [
        1017770,
        1994039000
    ],
    [
        1017760,
        1997000000
    ],
    [
        1017750,
        1997225000
    ],
    [
        1017730,
        2005725000
    ],
    [
        1017720,
        2006000000
    ],
    [
        1017710,
        2005056250
    ],
    [
        1017700,
        2005440000
    ],
    [
        1017690,
        2003644500
    ],
    [
        1017680,
        2003795000
    ],
    [
        1017670,
        2005254000
    ],
    [
        1017660,
        2004595000
    ],
    [
        1017650,
        2005448750
    ],
    [
        1017640,
        2006000000
    ],
    [
        1017630,
        2005000000
    ],
    [
        1017620,
        2002593750
    ],
    [
        1017610,
        2002810000
    ],
    [
        1017600,
        2003477500
    ],
    [
        1017590,
        1997490000
    ],
    [
        1017580,
        1997225000
    ],
    [
        1017570,
        1996500000
    ],
    [
        1017560,
        1995000000
    ],
    [
        1017550,
        1994571250
    ],
    [
        1017540,
        1993500000
    ],
    [
        1017520,
        1983948750
    ],
    [
        1017490,
        1981065000
    ],
    [
        1017480,
        1973500000
    ],
    [
        1017470,
        1977500000
    ],
    [
        1017460,
        1980500000
    ],
    [
        1017450,
        1982500000
    ],
    [
        1017430,
        1985020000
    ],
    [
        1017420,
        1988020000
    ],
    [
        1017400,
        1992500000
    ],
    [
        1017390,
        1998240000
    ],
    [
        1017370,
        2001015000
    ],
    [
        1017360,
        2002757500
    ],
    [
        1017350,
        2004986500
    ],
    [
        1017340,
        2004784500
    ],
    [
        1017330,
        2007750000
    ],
    [
        1017320,
        2008398500
    ],
    [
        1017310,
        2009165000
    ],
    [
        1017300,
        2009738750
    ],
    [
        1017290,
        2010196500
    ],
    [
        1017280,
        2010228000
    ],
    [
        1017270,
        2013462500
    ],
    [
        1017260,
        2015576000
    ],
    [
        1017240,
        2015000000
    ],
    [
        1017210,
        2014000000
    ],
    [
        1017200,
        2013925000
    ],
    [
        1017190,
        2012176250
    ],
    [
        1017170,
        2013000000
    ],
    [
        1017160,
        2010165000
    ],
    [
        1017150,
        2009925000
    ],
    [
        1017140,
        2009560000
    ],
    [
        1017130,
        2011065000
    ],
    [
        1017120,
        2009310500
    ],
    [
        1017110,
        2015018750
    ],
    [
        1017100,
        2015119250
    ],
    [
        1017090,
        2012816000
    ],
    [
        1017040,
        2011000000
    ],
    [
        1017030,
        2011200500
    ],
    [
        1017020,
        2024765500
    ],
    [
        1017010,
        2026680000
    ],
    [
        1017000,
        2029568750
    ],
    [
        1016990,
        2031067500
    ],
    [
        1016980,
        2030547500
    ],
    [
        1016970,
        2034470000
    ],
    [
        1016960,
        2036765000
    ],
    [
        1016950,
        2035303750
    ],
    [
        1016930,
        2042339000
    ],
    [
        1016920,
        2042693500
    ],
    [
        1016890,
        2038800000
    ],
    [
        1016880,
        2036122000
    ],
    [
        1016870,
        2037719500
    ],
    [
        1016860,
        2037540000
    ],
    [
        1016850,
        2036421250
    ],
    [
        1016840,
        2033110000
    ],
    [
        1016830,
        2034976500
    ],
    [
        1016810,
        2034712000
    ],
    [
        1016800,
        2037983000
    ],
    [
        1016790,
        2042480000
    ],
    [
        1016780,
        2045000000
    ],
    [
        1016770,
        2048923750
    ],
    [
        1016760,
        2050445000
    ],
    [
        1016750,
        2047000000
    ],
    [
        1016740,
        2045283750
    ],
    [
        1016730,
        2047000000
    ],
    [
        1016720,
        2046969000
    ],
    [
        1016710,
        2044180000
    ],
    [
        1016700,
        2043731250
    ],
    [
        1016690,
        2045205000
    ],
    [
        1016670,
        2044780000
    ],
    [
        1016660,
        2043500000
    ],
    [
        1016650,
        2042910000
    ],
    [
        1016640,
        2042000000
    ],
    [
        1016630,
        2040338750
    ],
    [
        1016620,
        2040990000
    ],
    [
        1016610,
        2040741250
    ],
    [
        1016600,
        2039650000
    ],
    [
        1016590,
        2037242500
    ],
    [
        1016580,
        2039943750
    ],
    [
        1016570,
        2037755500
    ],
    [
        1016560,
        2034637500
    ],
    [
        1016550,
        2035872500
    ],
    [
        1016540,
        2035906000
    ],
    [
        1016530,
        2029000000
    ],
    [
        1016510,
        2027500000
    ],
    [
        1016500,
        2025945000
    ],
    [
        1016490,
        2020758000
    ],
    [
        1016480,
        2002499000
    ],
    [
        1016470,
        2003005000
    ],
    [
        1016460,
        2009000000
    ],
    [
        1016450,
        2007452500
    ],
    [
        1016440,
        2013351250
    ],
    [
        1016430,
        2007500000
    ],
    [
        1016420,
        2005900000
    ],
    [
        1016410,
        2004805000
    ],
    [
        1016400,
        2006233000
    ],
    [
        1016390,
        2007400000
    ],
    [
        1016380,
        2007881250
    ],
    [
        1016370,
        2010426500
    ],
    [
        1016360,
        2010505000
    ],
    [
        1016350,
        2009858750
    ],
    [
        1016340,
        2010903750
    ],
    [
        1016330,
        2008865000
    ],
    [
        1016290,
        2012829000
    ],
    [
        1016280,
        2009585000
    ],
    [
        1016270,
        2010990000
    ],
    [
        1016240,
        2006000000
    ],
    [
        1016230,
        2002000000
    ],
    [
        1016220,
        1999000000
    ],
    [
        1016210,
        1995994000
    ],
    [
        1016200,
        1994450000
    ],
    [
        1016190,
        1997752500
    ],
    [
        1016180,
        1998970000
    ],
    [
        1016170,
        1994800000
    ],
    [
        1016160,
        1993230000
    ],
    [
        1016150,
        1990000000
    ],
    [
        1016140,
        1993370000
    ],
    [
        1016130,
        1998720000
    ],
    [
        1016120,
        1991000000
    ],
    [
        1016100,
        1988220000
    ],
    [
        1016070,
        2001000000
    ],
    [
        1016060,
        2002000000
    ],
    [
        1016050,
        2005000000
    ],
    [
        1016030,
        2004367500
    ],
    [
        1016020,
        2003000000
    ],
    [
        1016010,
        2003847500
    ],
    [
        1016000,
        2005550000
    ],
    [
        1015990,
        2003000000
    ],
    [
        1015980,
        1998628000
    ],
    [
        1015970,
        1998340000
    ],
    [
        1015960,
        2003460000
    ],
    [
        1015930,
        2013000000
    ],
    [
        1015920,
        2017470000
    ],
    [
        1015910,
        2018000000
    ],
    [
        1015900,
        2015000000
    ],
    [
        1015890,
        2016367000
    ],
    [
        1015880,
        2019000000
    ],
    [
        1015870,
        2020197500
    ],
    [
        1015860,
        2020340000
    ],
    [
        1015850,
        2027165000
    ],
    [
        1015830,
        2021800000
    ],
    [
        1015820,
        2028890000
    ],
    [
        1015810,
        2030580000
    ],
    [
        1015800,
        2022000000
    ],
    [
        1015790,
        2013452500
    ],
    [
        1015780,
        2018265000
    ],
    [
        1015770,
        2013140000
    ],
    [
        1015760,
        2015000000
    ],
    [
        1015750,
        2009500000
    ],
    [
        1015740,
        2005000000
    ],
    [
        1015730,
        2011012500
    ],
    [
        1015720,
        2014510000
    ],
    [
        1015710,
        2019962500
    ],
    [
        1015690,
        2002000000
    ],
    [
        1015680,
        2001040000
    ],
    [
        1015670,
        1997000000
    ],
    [
        1015660,
        1996342500
    ],
    [
        1015650,
        1996080000
    ],
    [
        1015640,
        1993042500
    ],
    [
        1015630,
        1993740000
    ],
    [
        1015620,
        1993000000
    ],
    [
        1015610,
        1990465000
    ],
    [
        1015600,
        1989757500
    ],
    [
        1015590,
        1987460000
    ],
    [
        1015570,
        1984000000
    ],
    [
        1015560,
        1983465000
    ],
    [
        1015550,
        1981456250
    ],
    [
        1015540,
        1976485000
    ],
    [
        1015530,
        1974640000
    ],
    [
        1015520,
        1974287500
    ],
    [
        1015510,
        1969453750
    ],
    [
        1015490,
        1962645000
    ],
    [
        1015480,
        1958000000
    ],
    [
        1015460,
        1959316500
    ],
    [
        1015450,
        1960615000
    ],
    [
        1015440,
        1960914000
    ],
    [
        1015430,
        1956780000
    ],
    [
        1015420,
        1953976250
    ],
    [
        1015410,
        1950067500
    ],
    [
        1015390,
        1950000000
    ],
    [
        1015380,
        1960500000
    ],
    [
        1015360,
        1962985000
    ],
    [
        1015350,
        1959263750
    ],
    [
        1015340,
        1956365000
    ],
    [
        1015330,
        1953000000
    ],
    [
        1015320,
        1953986250
    ],
    [
        1015300,
        1949903500
    ],
    [
        1015290,
        1951000000
    ],
    [
        1015280,
        1954000000
    ],
    [
        1015260,
        1961635000
    ],
    [
        1015250,
        1964774500
    ],
    [
        1015240,
        1966105000
    ],
    [
        1015230,
        1968371750
    ],
    [
        1015220,
        1966411500
    ],
    [
        1015210,
        1964500000
    ],
    [
        1015200,
        1962942500
    ],
    [
        1015180,
        1962000000
    ],
    [
        1015170,
        1963282000
    ],
    [
        1015160,
        1959767500
    ],
    [
        1015140,
        1956985000
    ],
    [
        1015130,
        1960500000
    ],
    [
        1015120,
        1971365000
    ],
    [
        1015110,
        1981000000
    ],
    [
        1015090,
        1990965500
    ],
    [
        1015080,
        1989643000
    ],
    [
        1015070,
        1995500000
    ],
    [
        1015060,
        1995463750
    ],
    [
        1015050,
        1995363750
    ],
    [
        1015040,
        1988000000
    ],
    [
        1015030,
        1986000000
    ],
    [
        1015020,
        1982140000
    ],
    [
        1015010,
        1982000000
    ],
    [
        1015000,
        1985744000
    ],
    [
        1014990,
        1985505000
    ],
    [
        1014980,
        1971000000
    ],
    [
        1014970,
        1969000000
    ],
    [
        1014960,
        1969763000
    ],
    [
        1014950,
        1969000000
    ],
    [
        1014930,
        1969150000
    ],
    [
        1014920,
        1971770000
    ],
    [
        1014910,
        1971337500
    ],
    [
        1014900,
        1967000000
    ],
    [
        1014890,
        1955000000
    ],
    [
        1014880,
        1954826000
    ],
    [
        1014870,
        1950000000
    ],
    [
        1014860,
        1944000000
    ],
    [
        1014850,
        1943290000
    ],
    [
        1014820,
        1943000000
    ],
    [
        1014810,
        1950882500
    ],
    [
        1014800,
        1941882000
    ],
    [
        1014770,
        1937000000
    ],
    [
        1014760,
        1938498000
    ],
    [
        1014750,
        1943000000
    ],
    [
        1014740,
        1951000000
    ],
    [
        1014730,
        1948610000
    ],
    [
        1014720,
        1937000000
    ],
    [
        1014710,
        1935000000
    ],
    [
        1014680,
        1980000000
    ],
    [
        1014670,
        1985780000
    ],
    [
        1014660,
        1987000000
    ],
    [
        1014630,
        1998060000
    ],
    [
        1014610,
        2000000000
    ],
    [
        1014600,
        1999647500
    ],
    [
        1014590,
        1994160000
    ],
    [
        1014570,
        1996130000
    ],
    [
        1014560,
        1989000000
    ],
    [
        1014550,
        1988276000
    ],
    [
        1014540,
        1990698000
    ],
    [
        1014510,
        2009000000
    ],
    [
        1014490,
        2011000000
    ],
    [
        1014480,
        2015530000
    ],
    [
        1014470,
        2016000000
    ],
    [
        1014450,
        2015500000
    ],
    [
        1014430,
        2016110000
    ],
    [
        1014410,
        2015000000
    ],
    [
        1014400,
        2016485000
    ],
    [
        1014390,
        2017430000
    ],
    [
        1014380,
        2019540000
    ],
    [
        1014370,
        2016000000
    ],
    [
        1014360,
        2015000000
    ],
    [
        1014350,
        2014060000
    ],
    [
        1014330,
        2015000000
    ],
    [
        1014320,
        2015592500
    ],
    [
        1014310,
        2016607500
    ],
    [
        1014300,
        2021728000
    ],
    [
        1014290,
        2017204000
    ],
    [
        1014270,
        2014000000
    ],
    [
        1014260,
        2014960000
    ],
    [
        1014230,
        2032000000
    ],
    [
        1014210,
        2036000000
    ],
    [
        1014200,
        2033655000
    ],
    [
        1014190,
        2032000000
    ],
    [
        1014180,
        2031220000
    ],
    [
        1014170,
        2022647500
    ],
    [
        1014160,
        2018928000
    ],
    [
        1014150,
        2025333000
    ],
    [
        1014100,
        2030000000
    ],
    [
        1014080,
        2032000000
    ],
    [
        1014070,
        2033000000
    ],
    [
        1014050,
        2032000000
    ],
    [
        1014040,
        2030045000
    ],
    [
        1014020,
        2032000000
    ],
    [
        1014010,
        2030321000
    ],
    [
        1014000,
        2032000000
    ],
    [
        1013980,
        2029335000
    ],
    [
        1013970,
        2023385000
    ],
    [
        1013960,
        2023282000
    ],
    [
        1013950,
        2016432000
    ],
    [
        1013940,
        2012870000
    ],
    [
        1013930,
        2006000000
    ],
    [
        1013920,
        2016607500
    ],
    [
        1013890,
        2030000000
    ],
    [
        1013880,
        2031000000
    ],
    [
        1013860,
        2031300000
    ],
    [
        1013840,
        2032000000
    ],
    [
        1013830,
        2031000000
    ],
    [
        1013810,
        2030000000
    ],
    [
        1013800,
        2024000000
    ],
    [
        1013790,
        2023000000
    ],
    [
        1013780,
        2022000000
    ],
    [
        1013770,
        2022870000
    ],
    [
        1013760,
        2024000000
    ],
    [
        1013750,
        2039772500
    ],
    [
        1013690,
        2040000000
    ],
    [
        1013680,
        2039525000
    ],
    [
        1013650,
        2040000000
    ],
    [
        1013620,
        2026000000
    ],
    [
        1013610,
        2022317500
    ],
    [
        1013600,
        2019350000
    ],
    [
        1013590,
        2020185000
    ],
    [
        1013580,
        2012000000
    ],
    [
        1013560,
        2008000000
    ],
    [
        1013540,
        2015935000
    ],
    [
        1013530,
        2015170000
    ],
    [
        1013520,
        2054680000
    ],
    [
        1013490,
        2056000000
    ],
    [
        1013480,
        2053840000
    ],
    [
        1013470,
        2052730000
    ],
    [
        1013460,
        2051487000
    ],
    [
        1013450,
        2050040500
    ],
    [
        1013440,
        2052198750
    ],
    [
        1013430,
        2051183750
    ],
    [
        1013420,
        2047540000
    ],
    [
        1013410,
        2047116500
    ],
    [
        1013400,
        2044393000
    ],
    [
        1013380,
        2041000000
    ],
    [
        1013370,
        2045111250
    ],
    [
        1013360,
        2044685000
    ],
    [
        1013350,
        2048352000
    ],
    [
        1013340,
        2050500000
    ],
    [
        1013330,
        2052031250
    ],
    [
        1013290,
        2054000000
    ],
    [
        1013270,
        2053500000
    ],
    [
        1013260,
        2045855000
    ],
    [
        1013250,
        2037715000
    ],
    [
        1013240,
        2038208500
    ],
    [
        1013230,
        2045855000
    ],
    [
        1013220,
        2050500000
    ],
    [
        1013210,
        2051368500
    ],
    [
        1013170,
        2053000000
    ],
    [
        1013160,
        2052743750
    ],
    [
        1013150,
        2042265000
    ],
    [
        1013140,
        2041688750
    ],
    [
        1013130,
        2040500000
    ],
    [
        1013120,
        2038669000
    ],
    [
        1013110,
        2040500000
    ],
    [
        1013100,
        2040813750
    ],
    [
        1013090,
        2042953000
    ],
    [
        1013080,
        2040625000
    ],
    [
        1013070,
        2029810000
    ],
    [
        1013060,
        2034000000
    ],
    [
        1013050,
        2042931000
    ],
    [
        1013040,
        2042398250
    ],
    [
        1013030,
        2017675000
    ],
    [
        1013010,
        2014041250
    ],
    [
        1013000,
        2002500000
    ],
    [
        1012980,
        1999147500
    ],
    [
        1012950,
        2014695000
    ],
    [
        1012930,
        2018000000
    ],
    [
        1012920,
        2027000000
    ],
    [
        1012900,
        2027345000
    ],
    [
        1012890,
        2029000000
    ],
    [
        1012880,
        2028293750
    ],
    [
        1012870,
        2028000000
    ],
    [
        1012860,
        2027415000
    ],
    [
        1012850,
        2027655000
    ],
    [
        1012830,
        2027000000
    ],
    [
        1012820,
        2026500000
    ],
    [
        1012810,
        2026000000
    ],
    [
        1012790,
        2046225000
    ],
    [
        1012780,
        2047793500
    ],
    [
        1012760,
        2051000000
    ],
    [
        1012740,
        2049000000
    ],
    [
        1012730,
        2052000000
    ],
    [
        1012710,
        2051490000
    ],
    [
        1012700,
        2049000000
    ],
    [
        1012670,
        2046665000
    ],
    [
        1012640,
        2049000000
    ],
    [
        1012630,
        2041750000
    ],
    [
        1012620,
        2039423000
    ],
    [
        1012610,
        2038365000
    ],
    [
        1012580,
        2035000000
    ],
    [
        1012570,
        2041000000
    ],
    [
        1012560,
        2040720000
    ],
    [
        1012550,
        2041000000
    ],
    [
        1012540,
        2043335000
    ],
    [
        1012530,
        2041885000
    ],
    [
        1012520,
        2041883750
    ],
    [
        1012490,
        2049680000
    ],
    [
        1012480,
        2053500000
    ],
    [
        1012470,
        2054628000
    ],
    [
        1012460,
        2056261500
    ],
    [
        1012430,
        2051250000
    ],
    [
        1012420,
        2053500000
    ],
    [
        1012400,
        2054340000
    ],
    [
        1012350,
        2053065000
    ],
    [
        1012340,
        2052700000
    ],
    [
        1012320,
        2047500000
    ],
    [
        1012300,
        2047000000
    ],
    [
        1012290,
        2045706000
    ],
    [
        1012280,
        2036600000
    ],
    [
        1012270,
        2036545000
    ],
    [
        1012260,
        2035530000
    ],
    [
        1012190,
        2030750000
    ],
    [
        1012180,
        2025700000
    ],
    [
        1012170,
        2017000000
    ],
    [
        1012160,
        2015945000
    ],
    [
        1012150,
        2015480000
    ],
    [
        1012140,
        2013695000
    ],
    [
        1012130,
        2011390000
    ],
    [
        1012120,
        2006400000
    ],
    [
        1012110,
        2017112000
    ],
    [
        1012100,
        2021665750
    ],
    [
        1012090,
        2027993000
    ],
    [
        1012080,
        2028498000
    ],
    [
        1012070,
        2031500000
    ],
    [
        1012060,
        2030149500
    ],
    [
        1012050,
        2028767000
    ],
    [
        1012040,
        2026770000
    ],
    [
        1012030,
        2032115000
    ],
    [
        1012020,
        2041262500
    ],
    [
        1012010,
        2042940000
    ],
    [
        1012000,
        2043601250
    ],
    [
        1011990,
        2036365000
    ],
    [
        1011980,
        2028365000
    ],
    [
        1011970,
        2025755000
    ],
    [
        1011960,
        2022500000
    ],
    [
        1011950,
        2020187000
    ],
    [
        1011940,
        2014065000
    ],
    [
        1011930,
        2025524750
    ],
    [
        1011920,
        2044660000
    ],
    [
        1011910,
        2046507500
    ],
    [
        1011900,
        2049612500
    ],
    [
        1011890,
        2054382500
    ],
    [
        1011880,
        2055370000
    ],
    [
        1011870,
        2061052500
    ],
    [
        1011860,
        2067652500
    ],
    [
        1011850,
        2069750000
    ],
    [
        1011840,
        2068970000
    ],
    [
        1011830,
        2066214500
    ],
    [
        1011820,
        2065119500
    ],
    [
        1011810,
        2058550000
    ],
    [
        1011800,
        2054845000
    ],
    [
        1011790,
        2056240000
    ],
    [
        1011780,
        2055305000
    ],
    [
        1011770,
        2054685000
    ],
    [
        1011760,
        2056430000
    ],
    [
        1011750,
        2056157500
    ],
    [
        1011740,
        2055295000
    ],
    [
        1011730,
        2050383750
    ],
    [
        1011720,
        2053078000
    ],
    [
        1011710,
        2055750000
    ],
    [
        1011700,
        2045640000
    ],
    [
        1011690,
        2043680000
    ],
    [
        1011680,
        2045800000
    ],
    [
        1011670,
        2042335000
    ],
    [
        1011660,
        2039340000
    ],
    [
        1011650,
        2042120000
    ],
    [
        1011640,
        2044340000
    ],
    [
        1011630,
        2044022500
    ],
    [
        1011620,
        2046500000
    ],
    [
        1011610,
        2039609500
    ],
    [
        1011600,
        2041240000
    ],
    [
        1011590,
        2042721250
    ],
    [
        1011580,
        2044173750
    ],
    [
        1011570,
        2050315000
    ],
    [
        1011560,
        2050168750
    ],
    [
        1011550,
        2049292500
    ],
    [
        1011540,
        2052766250
    ],
    [
        1011530,
        2050865500
    ],
    [
        1011520,
        2045965000
    ],
    [
        1011510,
        2042495000
    ],
    [
        1011500,
        2040516000
    ],
    [
        1011490,
        2043640000
    ],
    [
        1011480,
        2046000000
    ],
    [
        1011470,
        2046930000
    ],
    [
        1011460,
        2052703000
    ],
    [
        1011450,
        2057690000
    ],
    [
        1011440,
        2057922500
    ],
    [
        1011430,
        2059450000
    ],
    [
        1011420,
        2059592500
    ],
    [
        1011410,
        2065000000
    ],
    [
        1011400,
        2065070000
    ],
    [
        1011390,
        2065000000
    ],
    [
        1011380,
        2062135000
    ],
    [
        1011370,
        2061940500
    ],
    [
        1011360,
        2063873750
    ],
    [
        1011340,
        2056000000
    ],
    [
        1011330,
        2050185750
    ],
    [
        1011320,
        2053431500
    ],
    [
        1011300,
        2054600000
    ],
    [
        1011290,
        2037735000
    ],
    [
        1011260,
        2032000000
    ],
    [
        1011250,
        2031575000
    ],
    [
        1011240,
        2018375500
    ],
    [
        1011230,
        2013912500
    ],
    [
        1011220,
        2014810000
    ],
    [
        1011210,
        2020645000
    ],
    [
        1011200,
        2021440000
    ],
    [
        1011190,
        2026000000
    ],
    [
        1011180,
        2022935000
    ],
    [
        1011170,
        2017703750
    ],
    [
        1011130,
        2017500000
    ],
    [
        1011090,
        2019547500
    ],
    [
        1011080,
        2019828750
    ],
    [
        1011070,
        2017515500
    ],
    [
        1011060,
        2024876500
    ],
    [
        1011050,
        2031765000
    ],
    [
        1011040,
        2041380000
    ],
    [
        1011030,
        2044641000
    ],
    [
        1011020,
        2045896000
    ],
    [
        1011010,
        2046492750
    ],
    [
        1011000,
        2044000000
    ],
    [
        1010990,
        2045000000
    ],
    [
        1010980,
        2050095000
    ],
    [
        1010960,
        2052000000
    ],
    [
        1010950,
        2048851250
    ],
    [
        1010940,
        2043020000
    ],
    [
        1010930,
        2044225500
    ],
    [
        1010920,
        2046205500
    ],
    [
        1010910,
        2048050500
    ],
    [
        1010900,
        2052241250
    ],
    [
        1010890,
        2024635000
    ],
    [
        1010870,
        2022635000
    ],
    [
        1010860,
        2022095000
    ],
    [
        1010840,
        2021280000
    ],
    [
        1010830,
        2013765000
    ],
    [
        1010820,
        2007975000
    ],
    [
        1010810,
        2006237500
    ],
    [
        1010800,
        2000668250
    ],
    [
        1010790,
        2003994500
    ],
    [
        1010780,
        2008425000
    ],
    [
        1010770,
        2014910000
    ],
    [
        1010760,
        2009370000
    ],
    [
        1010750,
        2008000000
    ],
    [
        1010740,
        2006150000
    ],
    [
        1010730,
        2006840000
    ],
    [
        1010720,
        1992480000
    ],
    [
        1010710,
        1988000000
    ],
    [
        1010700,
        1970780000
    ],
    [
        1010690,
        1986729500
    ],
    [
        1010680,
        1990465000
    ],
    [
        1010670,
        1989535000
    ],
    [
        1010660,
        1997629000
    ],
    [
        1010650,
        2000000000
    ],
    [
        1010640,
        2005620000
    ],
    [
        1010630,
        2007505500
    ],
    [
        1010620,
        2008604250
    ],
    [
        1010610,
        2013133500
    ],
    [
        1010570,
        1995000000
    ],
    [
        1010550,
        1992702500
    ],
    [
        1010540,
        1993862500
    ],
    [
        1010530,
        1998503750
    ],
    [
        1010520,
        1998555000
    ],
    [
        1010510,
        2009717500
    ],
    [
        1010500,
        2009896250
    ],
    [
        1010490,
        2001210000
    ],
    [
        1010460,
        1991000000
    ],
    [
        1010450,
        1987655000
    ],
    [
        1010440,
        1985978000
    ],
    [
        1010430,
        1985655000
    ],
    [
        1010420,
        1980685000
    ],
    [
        1010370,
        1975500000
    ],
    [
        1010360,
        1973125000
    ],
    [
        1010350,
        1974247500
    ],
    [
        1010340,
        1974747500
    ],
    [
        1010330,
        1973125000
    ],
    [
        1010320,
        1973672500
    ],
    [
        1010290,
        1971855000
    ],
    [
        1010280,
        1968494000
    ],
    [
        1010270,
        1968670000
    ],
    [
        1010260,
        1969591250
    ],
    [
        1010250,
        1978580000
    ],
    [
        1010240,
        1981500000
    ],
    [
        1010230,
        1980500000
    ],
    [
        1010220,
        1979560000
    ],
    [
        1010210,
        1978677500
    ],
    [
        1010200,
        1979408750
    ],
    [
        1010180,
        1967730000
    ],
    [
        1010170,
        1959830000
    ],
    [
        1010160,
        1959110000
    ],
    [
        1010150,
        1954257500
    ],
    [
        1010140,
        1955587500
    ],
    [
        1010130,
        1957339500
    ],
    [
        1010110,
        1960765000
    ],
    [
        1010100,
        1965000000
    ],
    [
        1010090,
        1965562500
    ],
    [
        1010080,
        1970405000
    ],
    [
        1010070,
        1971864500
    ],
    [
        1010060,
        1972230000
    ],
    [
        1010050,
        1969437500
    ],
    [
        1010040,
        1968205250
    ],
    [
        1010030,
        1970405000
    ],
    [
        1010020,
        1963779000
    ],
    [
        1010010,
        1958262500
    ],
    [
        1010000,
        1959413000
    ],
    [
        1009990,
        1967000000
    ],
    [
        1009980,
        1970175000
    ],
    [
        1009970,
        1971000000
    ],
    [
        1009960,
        1971235000
    ],
    [
        1009950,
        1968273750
    ],
    [
        1009940,
        1969708750
    ],
    [
        1009910,
        1973000000
    ],
    [
        1009890,
        1978000000
    ],
    [
        1009880,
        1975171250
    ],
    [
        1009870,
        1976484500
    ],
    [
        1009850,
        1974163750
    ],
    [
        1009840,
        1980500000
    ],
    [
        1009830,
        1985000000
    ],
    [
        1009820,
        1982142500
    ],
    [
        1009810,
        1985500000
    ],
    [
        1009770,
        1985000000
    ],
    [
        1009760,
        1978255000
    ],
    [
        1009750,
        1977679500
    ],
    [
        1009730,
        1965882500
    ],
    [
        1009720,
        1966142000
    ],
    [
        1009710,
        1963652500
    ],
    [
        1009700,
        1964000000
    ],
    [
        1009690,
        1964217500
    ],
    [
        1009680,
        1967533750
    ],
    [
        1009670,
        1966459250
    ],
    [
        1009660,
        1970584500
    ],
    [
        1009650,
        1970084500
    ],
    [
        1009640,
        1969940000
    ],
    [
        1009630,
        1969440000
    ],
    [
        1009610,
        1962500000
    ],
    [
        1009600,
        1962405000
    ],
    [
        1009590,
        1962500000
    ],
    [
        1009580,
        1960755000
    ],
    [
        1009570,
        1959500000
    ],
    [
        1009560,
        1952235000
    ],
    [
        1009550,
        1952000000
    ],
    [
        1009540,
        1951088750
    ],
    [
        1009530,
        1950981500
    ],
    [
        1009510,
        1952000000
    ],
    [
        1009500,
        1951916500
    ],
    [
        1009490,
        1952250000
    ],
    [
        1009480,
        1953155000
    ],
    [
        1009470,
        1932110000
    ],
    [
        1009460,
        1928040000
    ],
    [
        1009450,
        1922501250
    ],
    [
        1009440,
        1928330000
    ],
    [
        1009430,
        1919465000
    ],
    [
        1009420,
        1946755000
    ],
    [
        1009410,
        1969538750
    ],
    [
        1009400,
        2006620000
    ],
    [
        1009390,
        2003310000
    ],
    [
        1009380,
        1983135000
    ],
    [
        1009370,
        1977000000
    ],
    [
        1009360,
        1974345500
    ],
    [
        1009340,
        1973690000
    ],
    [
        1009330,
        1974000000
    ],
    [
        1009310,
        1974833750
    ],
    [
        1009290,
        1980430000
    ],
    [
        1009280,
        1977430000
    ],
    [
        1009270,
        1968816000
    ],
    [
        1009250,
        1970775000
    ],
    [
        1009240,
        1968028750
    ],
    [
        1009230,
        1965246000
    ],
    [
        1009220,
        1966792500
    ],
    [
        1009210,
        1958727500
    ],
    [
        1009160,
        1957000000
    ],
    [
        1009150,
        1941665000
    ],
    [
        1009130,
        1941457500
    ],
    [
        1009120,
        1924375000
    ],
    [
        1009110,
        1922478500
    ],
    [
        1009100,
        1922103500
    ],
    [
        1009090,
        1925125000
    ],
    [
        1009080,
        1936203750
    ],
    [
        1009070,
        1944526500
    ],
    [
        1009060,
        1953375000
    ],
    [
        1009040,
        1958630000
    ],
    [
        1009030,
        1955755000
    ],
    [
        1009020,
        1960460000
    ],
    [
        1009010,
        1972397000
    ],
    [
        1008990,
        1985995000
    ],
    [
        1008970,
        1984779000
    ],
    [
        1008960,
        1990125000
    ],
    [
        1008950,
        1988807000
    ],
    [
        1008940,
        1988453000
    ],
    [
        1008930,
        1990010000
    ],
    [
        1008920,
        1988955000
    ],
    [
        1008910,
        1983000000
    ],
    [
        1008900,
        1982816250
    ],
    [
        1008870,
        1981000000
    ],
    [
        1008860,
        1980616000
    ],
    [
        1008850,
        1983563500
    ],
    [
        1008840,
        1981000000
    ],
    [
        1008830,
        1978627250
    ],
    [
        1008820,
        1977103500
    ],
    [
        1008810,
        1981500000
    ],
    [
        1008800,
        1993240000
    ],
    [
        1008790,
        1995033750
    ],
    [
        1008780,
        2004818000
    ],
    [
        1008770,
        1997000000
    ],
    [
        1008750,
        1993240000
    ],
    [
        1008740,
        2011674000
    ],
    [
        1008730,
        2013977500
    ],
    [
        1008720,
        2018999000
    ],
    [
        1008710,
        2028500000
    ],
    [
        1008700,
        2029045000
    ],
    [
        1008690,
        2028000000
    ],
    [
        1008670,
        2041291500
    ],
    [
        1008580,
        2146000000
    ],
    [
        1008570,
        2144500000
    ],
    [
        1008560,
        2143896250
    ],
    [
        1008550,
        2143860000
    ],
    [
        1008540,
        2144740000
    ],
    [
        1008520,
        2126000000
    ],
    [
        1008510,
        2125147000
    ],
    [
        1008500,
        2110000000
    ],
    [
        1008480,
        2108000000
    ],
    [
        1008460,
        2105320000
    ],
    [
        1008450,
        2102940000
    ],
    [
        1008440,
        2090000000
    ],
    [
        1008430,
        2077000000
    ],
    [
        1008420,
        2074432500
    ],
    [
        1008410,
        2082190000
    ],
    [
        1008400,
        2069060000
    ],
    [
        1008390,
        2091090000
    ],
    [
        1008380,
        2100862500
    ],
    [
        1008370,
        2143790000
    ],
    [
        1008360,
        2145000000
    ],
    [
        1008350,
        2149740000
    ],
    [
        1008330,
        2152810000
    ],
    [
        1008320,
        2156000000
    ],
    [
        1008310,
        2156225000
    ],
    [
        1008300,
        2156000000
    ],
    [
        1008290,
        2202000000
    ],
    [
        1008280,
        2207930000
    ],
    [
        1008270,
        2206500000
    ],
    [
        1008260,
        2201780000
    ],
    [
        1008250,
        2198690000
    ],
    [
        1008240,
        2189855000
    ],
    [
        1008230,
        2194550000
    ],
    [
        1008220,
        2198500000
    ],
    [
        1008210,
        2189650000
    ],
    [
        1008200,
        2181744500
    ],
    [
        1008190,
        2181682500
    ],
    [
        1008180,
        2186782500
    ],
    [
        1008170,
        2189330000
    ],
    [
        1008160,
        2181671000
    ],
    [
        1008130,
        2157500000
    ],
    [
        1008120,
        2145500000
    ],
    [
        1008110,
        2141190000
    ],
    [
        1008100,
        2137374000
    ],
    [
        1008090,
        2138684000
    ],
    [
        1008080,
        2147115000
    ],
    [
        1008070,
        2150500000
    ],
    [
        1008060,
        2147970000
    ],
    [
        1008040,
        2151500000
    ],
    [
        1008030,
        2151615000
    ],
    [
        1008020,
        2151115000
    ],
    [
        1008010,
        2149705000
    ],
    [
        1008000,
        2158865000
    ],
    [
        1007990,
        2157715000
    ],
    [
        1007980,
        2156580000
    ],
    [
        1007970,
        2160667000
    ],
    [
        1007960,
        2161509000
    ],
    [
        1007950,
        2161836500
    ],
    [
        1007940,
        2166196000
    ],
    [
        1007930,
        2168000000
    ],
    [
        1007920,
        2168113750
    ],
    [
        1007910,
        2172290250
    ],
    [
        1007900,
        2178577000
    ],
    [
        1007890,
        2181661250
    ],
    [
        1007880,
        2183318750
    ],
    [
        1007870,
        2185910000
    ],
    [
        1007860,
        2184755000
    ],
    [
        1007850,
        2180000000
    ],
    [
        1007840,
        2171310000
    ],
    [
        1007830,
        2170032500
    ],
    [
        1007820,
        2172095000
    ],
    [
        1007810,
        2177363750
    ],
    [
        1007800,
        2168502500
    ],
    [
        1007790,
        2163370000
    ],
    [
        1007780,
        2166336250
    ],
    [
        1007770,
        2165000000
    ],
    [
        1007760,
        2163000000
    ],
    [
        1007750,
        2161485000
    ],
    [
        1007740,
        2158000000
    ],
    [
        1007730,
        2154235000
    ],
    [
        1007720,
        2158000000
    ],
    [
        1007710,
        2154675000
    ],
    [
        1007700,
        2151630000
    ],
    [
        1007690,
        2154576250
    ],
    [
        1007670,
        2138620000
    ],
    [
        1007660,
        2140540000
    ],
    [
        1007650,
        2132575000
    ],
    [
        1007640,
        2127095000
    ],
    [
        1007630,
        2123120000
    ],
    [
        1007620,
        2105325000
    ],
    [
        1007600,
        2107640000
    ],
    [
        1007590,
        2093220000
    ],
    [
        1007580,
        2090000000
    ],
    [
        1007570,
        2089280000
    ],
    [
        1007560,
        2094996500
    ],
    [
        1007540,
        2102440000
    ],
    [
        1007530,
        2103570000
    ],
    [
        1007520,
        2100390000
    ],
    [
        1007490,
        2098160000
    ],
    [
        1007480,
        2097500000
    ],
    [
        1007470,
        2096720000
    ],
    [
        1007390,
        2015000000
    ],
    [
        1007380,
        2012353000
    ],
    [
        1007370,
        2005000000
    ],
    [
        1007360,
        2004000000
    ],
    [
        1007350,
        2003657500
    ],
    [
        1007340,
        2006881250
    ],
    [
        1007330,
        2007614500
    ],
    [
        1007320,
        2007000000
    ],
    [
        1007310,
        1999290000
    ],
    [
        1007300,
        1995000000
    ],
    [
        1007290,
        1994916000
    ],
    [
        1007280,
        1994853500
    ],
    [
        1007260,
        1996000000
    ],
    [
        1007250,
        2000441250
    ],
    [
        1007240,
        1998690000
    ],
    [
        1007220,
        2008725000
    ],
    [
        1007210,
        2013225000
    ],
    [
        1007200,
        2017646250
    ],
    [
        1007190,
        2016645000
    ],
    [
        1007180,
        2014535000
    ],
    [
        1007170,
        2008438750
    ],
    [
        1007160,
        2013000000
    ],
    [
        1007150,
        2012940000
    ],
    [
        1007140,
        2010550000
    ],
    [
        1007130,
        2012000000
    ],
    [
        1007120,
        2013000000
    ],
    [
        1007110,
        2021089000
    ],
    [
        1007100,
        2019627500
    ],
    [
        1007090,
        2020032500
    ],
    [
        1007080,
        2028780000
    ],
    [
        1007070,
        2037535000
    ],
    [
        1007060,
        2042500000
    ],
    [
        1007040,
        2042000000
    ],
    [
        1007030,
        2042210000
    ],
    [
        1007000,
        2042000000
    ],
    [
        1006990,
        2041686250
    ],
    [
        1006980,
        2043779000
    ],
    [
        1006970,
        2043431000
    ],
    [
        1006960,
        2065855000
    ],
    [
        1006950,
        2069611000
    ],
    [
        1006940,
        2072366000
    ],
    [
        1006920,
        2088986500
    ],
    [
        1006910,
        2091230000
    ],
    [
        1006900,
        2093828750
    ],
    [
        1006890,
        2093598750
    ],
    [
        1006880,
        2090450000
    ],
    [
        1006870,
        2080555000
    ],
    [
        1006860,
        2090887000
    ],
    [
        1006850,
        2094500000
    ],
    [
        1006840,
        2099520000
    ],
    [
        1006830,
        2086000000
    ],
    [
        1006820,
        2048863750
    ],
    [
        1006810,
        2041233000
    ],
    [
        1006800,
        2049450000
    ],
    [
        1006790,
        2048020000
    ],
    [
        1006780,
        2046094500
    ],
    [
        1006770,
        2045020000
    ],
    [
        1006760,
        2046500000
    ],
    [
        1006750,
        2041105000
    ],
    [
        1006740,
        2038666500
    ],
    [
        1006730,
        2042460000
    ],
    [
        1006720,
        2042933750
    ],
    [
        1006710,
        2051035000
    ],
    [
        1006700,
        2055020500
    ],
    [
        1006690,
        2054968500
    ],
    [
        1006680,
        2058000000
    ],
    [
        1006670,
        2060366500
    ],
    [
        1006660,
        2062135000
    ],
    [
        1006650,
        2061350000
    ],
    [
        1006640,
        2061120000
    ],
    [
        1006630,
        2057178000
    ],
    [
        1006620,
        2053162500
    ],
    [
        1006610,
        2054500000
    ],
    [
        1006600,
        2052591000
    ],
    [
        1006590,
        2055091000
    ],
    [
        1006580,
        2058569500
    ],
    [
        1006570,
        2062403750
    ],
    [
        1006560,
        2062965000
    ],
    [
        1006540,
        2060295000
    ],
    [
        1006530,
        2059090000
    ],
    [
        1006520,
        2057200000
    ],
    [
        1006510,
        2055975000
    ],
    [
        1006500,
        2055000000
    ],
    [
        1006490,
        2069481250
    ],
    [
        1006480,
        2071038750
    ],
    [
        1006470,
        2058818750
    ],
    [
        1006460,
        2056965000
    ],
    [
        1006450,
        2061245000
    ],
    [
        1006440,
        2070205000
    ],
    [
        1006430,
        2064500000
    ],
    [
        1006420,
        2057500000
    ],
    [
        1006410,
        2055000000
    ],
    [
        1006400,
        2054000000
    ],
    [
        1006390,
        2055000000
    ],
    [
        1006380,
        2054420000
    ],
    [
        1006370,
        2045980000
    ],
    [
        1006360,
        2036381000
    ],
    [
        1006350,
        2034881000
    ],
    [
        1006340,
        2033273750
    ],
    [
        1006330,
        2030693500
    ],
    [
        1006280,
        2028650000
    ],
    [
        1006270,
        2033448000
    ],
    [
        1006260,
        2036290000
    ],
    [
        1006250,
        2035972500
    ],
    [
        1006240,
        2029558500
    ],
    [
        1006230,
        2028987000
    ],
    [
        1006220,
        2035392000
    ],
    [
        1006210,
        2053050000
    ],
    [
        1006200,
        2057266250
    ],
    [
        1006190,
        2062602500
    ],
    [
        1006180,
        2065175000
    ],
    [
        1006170,
        2062626250
    ],
    [
        1006160,
        2067070000
    ],
    [
        1006150,
        2068457500
    ],
    [
        1006140,
        2065695000
    ],
    [
        1006130,
        2055000000
    ],
    [
        1006120,
        2053113000
    ],
    [
        1006110,
        2040535000
    ],
    [
        1006090,
        2058500000
    ],
    [
        1006080,
        2058615000
    ],
    [
        1006070,
        2042150000
    ],
    [
        1006050,
        2028150000
    ],
    [
        1006040,
        2023873750
    ],
    [
        1006030,
        2021930000
    ],
    [
        1006020,
        2020396500
    ],
    [
        1006010,
        2015307500
    ],
    [
        1006000,
        2023280000
    ],
    [
        1005990,
        2043350000
    ],
    [
        1005980,
        2054020000
    ],
    [
        1005970,
        2055365000
    ],
    [
        1005960,
        2056322500
    ],
    [
        1005950,
        2059230000
    ],
    [
        1005940,
        2060275000
    ],
    [
        1005930,
        2060200000
    ],
    [
        1005920,
        2070420000
    ],
    [
        1005910,
        2078161000
    ],
    [
        1005880,
        2028650000
    ],
    [
        1005870,
        2026085000
    ],
    [
        1005850,
        2024138750
    ],
    [
        1005840,
        1994190000
    ],
    [
        1005830,
        1988865000
    ],
    [
        1005820,
        1988410000
    ],
    [
        1005810,
        1988265000
    ],
    [
        1005800,
        1987710000
    ],
    [
        1005780,
        1979962000
    ],
    [
        1005770,
        1962047500
    ],
    [
        1005760,
        1960485000
    ],
    [
        1005740,
        1952500000
    ],
    [
        1005730,
        1949455000
    ],
    [
        1005720,
        1968848500
    ],
    [
        1005680,
        1969013750
    ],
    [
        1005670,
        1949635000
    ],
    [
        1005660,
        1983500000
    ],
    [
        1005650,
        1986000000
    ],
    [
        1005640,
        1989200000
    ],
    [
        1005620,
        1986000000
    ],
    [
        1005610,
        1998122500
    ],
    [
        1005600,
        2023275000
    ],
    [
        1005590,
        2025000000
    ],
    [
        1005580,
        2026485000
    ],
    [
        1005550,
        2025000000
    ],
    [
        1005530,
        2032000000
    ],
    [
        1005520,
        2033350000
    ],
    [
        1005510,
        2040205000
    ],
    [
        1005500,
        2043380000
    ],
    [
        1005490,
        2047000000
    ],
    [
        1005480,
        2044430000
    ],
    [
        1005460,
        2045000000
    ],
    [
        1005450,
        2027267500
    ],
    [
        1005440,
        2023525000
    ],
    [
        1005430,
        1989160000
    ],
    [
        1005420,
        1988580000
    ],
    [
        1005410,
        1993300000
    ],
    [
        1005400,
        1986000000
    ],
    [
        1005390,
        1979500000
    ],
    [
        1005380,
        1981062000
    ],
    [
        1005370,
        1979500000
    ],
    [
        1005310,
        1975000000
    ],
    [
        1005300,
        1945980000
    ],
    [
        1005290,
        1951322000
    ],
    [
        1005280,
        1945980000
    ],
    [
        1005260,
        1936000000
    ],
    [
        1005250,
        1934442500
    ],
    [
        1005240,
        1941655000
    ],
    [
        1005230,
        1929650000
    ],
    [
        1005220,
        1952257000
    ],
    [
        1005210,
        1974000000
    ],
    [
        1005200,
        1975390000
    ],
    [
        1005190,
        1984539000
    ],
    [
        1005180,
        1989360000
    ],
    [
        1005170,
        2003390000
    ],
    [
        1005160,
        2011710000
    ],
    [
        1005140,
        2018000000
    ],
    [
        1005120,
        2031540000
    ],
    [
        1005110,
        2031062500
    ],
    [
        1005100,
        2035190000
    ],
    [
        1005080,
        2037130000
    ],
    [
        1005070,
        2030872000
    ],
    [
        1005060,
        2033000000
    ],
    [
        1005050,
        2038070000
    ],
    [
        1004990,
        2038650000
    ],
    [
        1004980,
        2037915000
    ],
    [
        1004970,
        2037000000
    ],
    [
        1004950,
        2035010000
    ],
    [
        1004940,
        2034000000
    ],
    [
        1004930,
        2023230000
    ],
    [
        1004920,
        2028008000
    ],
    [
        1004910,
        2027871000
    ],
    [
        1004890,
        2032840000
    ],
    [
        1004880,
        2038000000
    ],
    [
        1004870,
        2039000000
    ],
    [
        1004840,
        2038000000
    ],
    [
        1004820,
        2074850000
    ],
    [
        1004790,
        2076000000
    ],
    [
        1004770,
        2109320000
    ],
    [
        1004760,
        2117000000
    ],
    [
        1004750,
        2124000000
    ],
    [
        1004730,
        2120320000
    ],
    [
        1004720,
        2115000000
    ],
    [
        1004710,
        2112510000
    ],
    [
        1004700,
        2099940000
    ],
    [
        1004680,
        2116960000
    ],
    [
        1004670,
        2128170000
    ],
    [
        1004660,
        2126190000
    ],
    [
        1004640,
        2125910000
    ],
    [
        1004630,
        2116960000
    ],
    [
        1004610,
        2115000000
    ],
    [
        1004600,
        2116960000
    ],
    [
        1004590,
        2115195000
    ],
    [
        1004570,
        2118000000
    ],
    [
        1004560,
        2120960000
    ],
    [
        1004550,
        2124153500
    ],
    [
        1004540,
        2136164500
    ],
    [
        1004530,
        2138854500
    ],
    [
        1004520,
        2138535500
    ],
    [
        1004510,
        2136154000
    ],
    [
        1004500,
        2137473500
    ],
    [
        1004480,
        2138860000
    ],
    [
        1004470,
        2131000000
    ],
    [
        1004460,
        2129667500
    ],
    [
        1004450,
        2130295000
    ],
    [
        1004430,
        2128458500
    ],
    [
        1004420,
        2118500000
    ],
    [
        1004410,
        2111144500
    ],
    [
        1004400,
        2111217000
    ],
    [
        1004390,
        2109507000
    ],
    [
        1004380,
        2115687500
    ],
    [
        1004360,
        2118000000
    ],
    [
        1004350,
        2143712000
    ],
    [
        1004340,
        2157070000
    ],
    [
        1004320,
        2166075000
    ],
    [
        1004310,
        2165635000
    ],
    [
        1004300,
        2161300000
    ],
    [
        1004290,
        2157770000
    ],
    [
        1004280,
        2156815000
    ],
    [
        1004270,
        2160195000
    ],
    [
        1004260,
        2158875000
    ],
    [
        1004250,
        2159600000
    ],
    [
        1004240,
        2159735000
    ],
    [
        1004230,
        2150442500
    ],
    [
        1004220,
        2145685500
    ],
    [
        1004210,
        2141692500
    ],
    [
        1004200,
        2139746250
    ],
    [
        1004190,
        2141000000
    ],
    [
        1004180,
        2138738750
    ],
    [
        1004170,
        2148490000
    ],
    [
        1004160,
        2146352500
    ],
    [
        1004150,
        2152394500
    ],
    [
        1004140,
        2157880000
    ],
    [
        1004120,
        2160778750
    ],
    [
        1004100,
        2165640000
    ],
    [
        1004090,
        2152872500
    ],
    [
        1004080,
        2160639000
    ],
    [
        1004070,
        2161685000
    ],
    [
        1004060,
        2164185000
    ],
    [
        1004050,
        2170449500
    ],
    [
        1004040,
        2177485000
    ],
    [
        1004030,
        2181491500
    ],
    [
        1004020,
        2184555000
    ],
    [
        1004010,
        2187620000
    ],
    [
        1004000,
        2191115000
    ],
    [
        1003990,
        2199885500
    ],
    [
        1003980,
        2203568000
    ],
    [
        1003960,
        2209000000
    ],
    [
        1003950,
        2207635000
    ],
    [
        1003940,
        2205760000
    ],
    [
        1003920,
        2202000000
    ],
    [
        1003910,
        2200140000
    ],
    [
        1003900,
        2199500000
    ],
    [
        1003890,
        2202000000
    ],
    [
        1003880,
        2198926250
    ],
    [
        1003870,
        2196863750
    ],
    [
        1003860,
        2198088750
    ],
    [
        1003850,
        2200013750
    ],
    [
        1003840,
        2202825000
    ],
    [
        1003830,
        2205325000
    ],
    [
        1003820,
        2204352500
    ],
    [
        1003810,
        2203040000
    ],
    [
        1003800,
        2200500000
    ],
    [
        1003790,
        2200414500
    ],
    [
        1003690,
        2137548500
    ],
    [
        1003680,
        2168037500
    ],
    [
        1003650,
        2194000000
    ],
    [
        1003640,
        2193396000
    ],
    [
        1003630,
        2183500000
    ],
    [
        1003620,
        2178738500
    ],
    [
        1003600,
        2173673750
    ],
    [
        1003590,
        2179080000
    ],
    [
        1003580,
        2177430000
    ],
    [
        1003570,
        2162000000
    ],
    [
        1003560,
        2161500000
    ],
    [
        1003550,
        2143102500
    ],
    [
        1003540,
        2147372500
    ],
    [
        1003530,
        2159950000
    ],
    [
        1003520,
        2161108750
    ],
    [
        1003510,
        2167500000
    ],
    [
        1003500,
        2169406250
    ],
    [
        1003490,
        2170740000
    ],
    [
        1003480,
        2169000000
    ],
    [
        1003460,
        2166475000
    ],
    [
        1003450,
        2179148750
    ],
    [
        1003440,
        2181038750
    ],
    [
        1003430,
        2185437500
    ],
    [
        1003420,
        2189120000
    ],
    [
        1003410,
        2190783750
    ],
    [
        1003400,
        2185000000
    ],
    [
        1003390,
        2180215000
    ],
    [
        1003380,
        2182870000
    ],
    [
        1003370,
        2174001250
    ],
    [
        1003360,
        2168686250
    ],
    [
        1003350,
        2180660000
    ],
    [
        1003340,
        2183504000
    ],
    [
        1003330,
        2161170000
    ],
    [
        1003320,
        2160043750
    ],
    [
        1003310,
        2169685000
    ],
    [
        1003300,
        2182871250
    ],
    [
        1003290,
        2186220000
    ],
    [
        1003280,
        2148500000
    ],
    [
        1003260,
        2138605000
    ],
    [
        1003250,
        2131755000
    ],
    [
        1003240,
        2128000000
    ],
    [
        1003230,
        2122730000
    ],
    [
        1003220,
        2082860000
    ],
    [
        1003200,
        2072000000
    ],
    [
        1003190,
        2071500000
    ],
    [
        1003180,
        2068771250
    ],
    [
        1003170,
        2068488750
    ],
    [
        1003160,
        2061415000
    ],
    [
        1003150,
        2052075000
    ],
    [
        1003140,
        2042926000
    ],
    [
        1003130,
        2038500000
    ],
    [
        1003120,
        2037500000
    ],
    [
        1003100,
        2039095000
    ],
    [
        1003090,
        2042007500
    ],
    [
        1003080,
        2043906250
    ],
    [
        1003070,
        2050935000
    ],
    [
        1003060,
        2047890000
    ],
    [
        1003050,
        2045000000
    ],
    [
        1003040,
        2054125000
    ],
    [
        1003030,
        2057238500
    ],
    [
        1003010,
        2069712500
    ],
    [
        1003000,
        2075860000
    ],
    [
        1002970,
        2066500000
    ],
    [
        1002950,
        2068175000
    ],
    [
        1002930,
        2074058750
    ],
    [
        1002920,
        2076990000
    ],
    [
        1002910,
        2085265000
    ],
    [
        1002900,
        2084395750
    ],
    [
        1002890,
        2077881250
    ],
    [
        1002860,
        2071205000
    ],
    [
        1002850,
        2061205000
    ],
    [
        1002840,
        2056500000
    ],
    [
        1002830,
        2057166250
    ],
    [
        1002820,
        2057661250
    ],
    [
        1002790,
        2055161250
    ],
    [
        1002780,
        2054161250
    ],
    [
        1002770,
        2054000000
    ],
    [
        1002760,
        2056675000
    ],
    [
        1002750,
        2061205000
    ],
    [
        1002740,
        2061476000
    ],
    [
        1002730,
        2066900000
    ],
    [
        1002720,
        2071790000
    ],
    [
        1002700,
        2073405000
    ],
    [
        1002690,
        2071660000
    ],
    [
        1002680,
        2071000000
    ],
    [
        1002670,
        2081645000
    ],
    [
        1002660,
        2084250000
    ],
    [
        1002650,
        2082532500
    ],
    [
        1002640,
        2072790000
    ],
    [
        1002620,
        2071000000
    ],
    [
        1002610,
        2069681250
    ],
    [
        1002600,
        2069050000
    ],
    [
        1002590,
        2071000000
    ],
    [
        1002580,
        2046000000
    ],
    [
        1002570,
        2051066000
    ],
    [
        1002560,
        2064715000
    ],
    [
        1002550,
        2066517500
    ],
    [
        1002540,
        2074727000
    ],
    [
        1002530,
        2073830000
    ],
    [
        1002510,
        2072800000
    ],
    [
        1002490,
        2053000000
    ],
    [
        1002480,
        2059962000
    ],
    [
        1002470,
        2051400000
    ],
    [
        1002460,
        2056517500
    ],
    [
        1002450,
        2011000000
    ],
    [
        1002430,
        2010640000
    ],
    [
        1002420,
        2000000000
    ],
    [
        1002410,
        1996764000
    ],
    [
        1002400,
        1966000000
    ],
    [
        1002390,
        1968200000
    ],
    [
        1002380,
        1965000000
    ],
    [
        1002370,
        1962819000
    ],
    [
        1002360,
        1965000000
    ],
    [
        1002350,
        1964947500
    ],
    [
        1002340,
        1963105000
    ],
    [
        1002330,
        1965485000
    ],
    [
        1002320,
        1964017000
    ],
    [
        1002310,
        1959500000
    ],
    [
        1002300,
        1958500000
    ],
    [
        1002290,
        1956500000
    ],
    [
        1002280,
        1960195000
    ],
    [
        1002260,
        1960000000
    ],
    [
        1002240,
        1958170000
    ],
    [
        1002230,
        1958735000
    ],
    [
        1002220,
        1958000000
    ],
    [
        1002210,
        1960027500
    ],
    [
        1002200,
        1958000000
    ],
    [
        1002190,
        1956709000
    ],
    [
        1002160,
        1941740000
    ],
    [
        1002140,
        1958000000
    ],
    [
        1002130,
        1954359000
    ],
    [
        1002120,
        1958000000
    ],
    [
        1002110,
        1953350000
    ],
    [
        1002100,
        1940547500
    ],
    [
        1002090,
        1939053000
    ],
    [
        1002080,
        1938557500
    ],
    [
        1002070,
        1936000000
    ],
    [
        1002060,
        1935260000
    ],
    [
        1002050,
        1936000000
    ],
    [
        1002040,
        1916000000
    ],
    [
        1002030,
        1896200000
    ],
    [
        1002010,
        1875000000
    ],
    [
        1002000,
        1877492500
    ],
    [
        1001990,
        1906176000
    ],
    [
        1001970,
        1929000000
    ],
    [
        1001950,
        1942000000
    ],
    [
        1001940,
        1945131000
    ],
    [
        1001930,
        1942000000
    ],
    [
        1001920,
        1967000000
    ],
    [
        1001910,
        1973404000
    ],
    [
        1001890,
        1978000000
    ],
    [
        1001870,
        1982000000
    ],
    [
        1001860,
        2003499000
    ],
    [
        1001850,
        2021000000
    ],
    [
        1001840,
        2025210000
    ],
    [
        1001830,
        2025000000
    ],
    [
        1001820,
        2021000000
    ],
    [
        1001800,
        2023240000
    ],
    [
        1001790,
        2040990000
    ],
    [
        1001780,
        2039300000
    ],
    [
        1001770,
        2029173000
    ],
    [
        1001760,
        2023000000
    ],
    [
        1001750,
        2022000000
    ],
    [
        1001740,
        2025290000
    ],
    [
        1001730,
        2025000000
    ],
    [
        1001720,
        2059700000
    ],
    [
        1001690,
        2063520000
    ],
    [
        1001620,
        2062000000
    ],
    [
        1001610,
        2052000000
    ],
    [
        1001600,
        2042000000
    ],
    [
        1001590,
        2039798000
    ],
    [
        1001580,
        2042000000
    ],
    [
        1001570,
        2052000000
    ],
    [
        1001560,
        2050170000
    ],
    [
        1001550,
        2044089000
    ],
    [
        1001540,
        2032421000
    ],
    [
        1001530,
        2028270000
    ],
    [
        1001520,
        2046830000
    ],
    [
        1001510,
        2054000000
    ],
    [
        1001490,
        2006900000
    ],
    [
        1001450,
        2001000000
    ],
    [
        1001440,
        1986000000
    ],
    [
        1001430,
        1982107000
    ],
    [
        1001420,
        1980000000
    ],
    [
        1001390,
        1960000000
    ],
    [
        1001370,
        1965996666
    ],
    [
        1001360,
        1961920000
    ],
    [
        1001350,
        1960000000
    ],
    [
        1001320,
        1965000000
    ],
    [
        1001300,
        1972191000
    ],
    [
        1001290,
        1977657500
    ],
    [
        1001280,
        1958912500
    ],
    [
        1001270,
        1953000000
    ],
    [
        1001260,
        1956687000
    ],
    [
        1001250,
        1990175000
    ],
    [
        1001240,
        1988000000
    ],
    [
        1001220,
        1990000000
    ],
    [
        1001210,
        1990350000
    ],
    [
        1001190,
        1994618000
    ],
    [
        1001180,
        1979000000
    ],
    [
        1001090,
        2027000000
    ],
    [
        1001050,
        1916000000
    ],
    [
        1001030,
        1915000000
    ],
    [
        1001010,
        1934488964
    ],
    [
        1000990,
        1946540000
    ],
    [
        1000980,
        2024000000
    ],
    [
        1000970,
        2141000000
    ],
    [
        1000950,
        2148220000
    ],
    [
        1000940,
        2182836000
    ],
    [
        1000910,
        2243000000
    ],
    [
        1000900,
        2270000000
    ],
    [
        1000890,
        2272000000
    ],
    [
        1000880,
        2270000000
    ],
    [
        1000870,
        2268000000
    ],
    [
        1000860,
        2268216000
    ],
    [
        1000850,
        2268000000
    ],
    [
        1000840,
        2252000000
    ],
    [
        1000830,
        2250000000
    ],
    [
        1000820,
        2268000000
    ],
    [
        1000810,
        2271000000
    ],
    [
        1000800,
        2268198000
    ],
    [
        1000790,
        2268770817
    ],
    [
        1000780,
        2272470000
    ],
    [
        1000750,
        2275461669
    ],
    [
        1000740,
        2275275000
    ],
    [
        1000730,
        2275020000
    ],
    [
        1000720,
        2280360000
    ],
    [
        1000690,
        2284230000
    ],
    [
        1000640,
        2287927000
    ],
    [
        1000630,
        2294000000
    ],
    [
        1000610,
        2290000000
    ],
    [
        1000590,
        2306360000
    ],
    [
        1000580,
        2350000000
    ],
    [
        1000550,
        2358000000
    ],
    [
        1000540,
        2360400000
    ],
    [
        1000520,
        2359000000
    ],
    [
        1000510,
        2369000000
    ],
    [
        1000500,
        2375960094
    ],
    [
        1000490,
        2387000000
    ],
    [
        1000480,
        2398297750
    ],
    [
        1000470,
        2399000000
    ],
    [
        1000450,
        2399545250
    ],
    [
        1000440,
        2400000000
    ],
    [
        1000430,
        2399000000
    ],
    [
        1000420,
        2391000000
    ],
    [
        1000410,
        2391491000
    ],
    [
        1000400,
        2396442000
    ],
    [
        1000390,
        2391000000
    ],
    [
        1000380,
        2390000000
    ],
    [
        1000370,
        2391000000
    ],
    [
        1000360,
        2389288923
    ],
    [
        1000350,
        2388353000
    ],
    [
        1000340,
        2383267575
    ],
    [
        1000330,
        2381209000
    ],
    [
        1000320,
        2382902000
    ],
    [
        1000290,
        2401000000
    ],
    [
        1000280,
        2405000000
    ],
    [
        1000270,
        2415000000
    ],
    [
        1000250,
        2413000000
    ],
    [
        1000240,
        2409763029
    ],
    [
        1000210,
        2408340000
    ],
    [
        1000200,
        2404221000
    ],
    [
        1000190,
        2407940000
    ],
    [
        1000180,
        2408625067
    ],
    [
        1000170,
        2412819666
    ],
    [
        1000160,
        2415000000
    ],
    [
        1000150,
        2410000000
    ],
    [
        1000130,
        2407171154
    ],
    [
        1000120,
        2413000000
    ],
    [
        1000110,
        2416236584
    ],
    [
        1000100,
        2427120000
    ],
    [
        1000090,
        2430841181
    ],
    [
        1000080,
        2431940000
    ],
    [
        1000060,
        2429440542
    ],
    [
        1000050,
        2422190000
    ],
    [
        1000040,
        2417057000
    ],
    [
        1000030,
        2431940000
    ],
    [
        1000020,
        2437000000
    ],
    [
        1000000,
        2442000000
    ],
    [
        999990,
        2441843375
    ],
    [
        999980,
        2438557000
    ],
    [
        999960,
        2431940000
    ],
    [
        999940,
        2418230000
    ],
    [
        999930,
        2415000000
    ],
    [
        999920,
        2410450000
    ],
    [
        999910,
        2408751773
    ],
    [
        999900,
        2408340000
    ],
    [
        999880,
        2410450000
    ],
    [
        999870,
        2415000000
    ],
    [
        999860,
        2414185000
    ],
    [
        999850,
        2418230000
    ],
    [
        999840,
        2422890000
    ],
    [
        999830,
        2431000000
    ],
    [
        999820,
        2432000000
    ],
    [
        999810,
        2433000000
    ],
    [
        999800,
        2432380000
    ],
    [
        999790,
        2431000000
    ],
    [
        999750,
        2411500000
    ],
    [
        999730,
        2411230000
    ],
    [
        999700,
        2404440000
    ],
    [
        999680,
        2396900000
    ],
    [
        999670,
        2412350044
    ],
    [
        999650,
        2415977000
    ],
    [
        999640,
        2417390000
    ],
    [
        999630,
        2418714446
    ],
    [
        999620,
        2420500000
    ],
    [
        999610,
        2421000000
    ],
    [
        999580,
        2387000000
    ],
    [
        999560,
        2383000000
    ],
    [
        999520,
        2371740000
    ],
    [
        999510,
        2370659525
    ],
    [
        999500,
        2358000000
    ],
    [
        999490,
        2356000000
    ],
    [
        999480,
        2342847000
    ],
    [
        999470,
        2356000000
    ],
    [
        999450,
        2357716834
    ],
    [
        999430,
        2364526000
    ],
    [
        999420,
        2366600000
    ],
    [
        999400,
        2358110000
    ],
    [
        999390,
        2404000000
    ],
    [
        999380,
        2415652000
    ],
    [
        999360,
        2436858181
    ],
    [
        999350,
        2461931849
    ],
    [
        999340,
        2466768603
    ],
    [
        999330,
        2467000000
    ],
    [
        999320,
        2475000000
    ],
    [
        999300,
        2471820000
    ],
    [
        999290,
        2480833000
    ],
    [
        999270,
        2490000000
    ],
    [
        999240,
        2438000000
    ],
    [
        999230,
        2442000000
    ],
    [
        999220,
        2439300228
    ],
    [
        999210,
        2440928000
    ],
    [
        999200,
        2441000000
    ],
    [
        999190,
        2438422000
    ],
    [
        999180,
        2442000000
    ],
    [
        999170,
        2445000000
    ],
    [
        999160,
        2451000000
    ],
    [
        999110,
        2447900000
    ],
    [
        999100,
        2441390000
    ],
    [
        999090,
        2444227987
    ],
    [
        999040,
        2438000000
    ],
    [
        999030,
        2433302349
    ],
    [
        999020,
        2432000000
    ],
    [
        999010,
        2424648000
    ],
    [
        999000,
        2427000000
    ],
    [
        998970,
        2424000000
    ],
    [
        998950,
        2424650000
    ],
    [
        998930,
        2424630000
    ],
    [
        998920,
        2425000000
    ],
    [
        998910,
        2418970000
    ],
    [
        998900,
        2417480000
    ],
    [
        998870,
        2415000000
    ],
    [
        998860,
        2411000000
    ],
    [
        998840,
        2408701231
    ],
    [
        998830,
        2417000000
    ],
    [
        998810,
        2417746620
    ],
    [
        998800,
        2417000000
    ],
    [
        998790,
        2418497188
    ],
    [
        998780,
        2413451000
    ],
    [
        998770,
        2409000750
    ],
    [
        998760,
        2422320000
    ],
    [
        998730,
        2425000000
    ],
    [
        998690,
        2373000000
    ],
    [
        998680,
        2371000000
    ],
    [
        998670,
        2361000000
    ],
    [
        998620,
        2360000000
    ],
    [
        998610,
        2358143000
    ],
    [
        998590,
        2350510000
    ],
    [
        998580,
        2346000000
    ],
    [
        998550,
        2350120000
    ],
    [
        998530,
        2348800000
    ],
    [
        998510,
        2353542000
    ],
    [
        998500,
        2351000000
    ],
    [
        998490,
        2347000000
    ],
    [
        998470,
        2339000000
    ],
    [
        998460,
        2337070000
    ],
    [
        998450,
        2336466000
    ],
    [
        998440,
        2333550000
    ],
    [
        998430,
        2337070000
    ],
    [
        998420,
        2340430000
    ],
    [
        998410,
        2341000000
    ],
    [
        998380,
        2340430000
    ],
    [
        998370,
        2341000000
    ],
    [
        998360,
        2344846250
    ],
    [
        998350,
        2342195000
    ],
    [
        998330,
        2340430000
    ],
    [
        998320,
        2341332125
    ],
    [
        998310,
        2348961483
    ],
    [
        998290,
        2340430000
    ],
    [
        998280,
        2337000000
    ],
    [
        998270,
        2336836333
    ],
    [
        998260,
        2335547799
    ],
    [
        998250,
        2338000000
    ],
    [
        998230,
        2334000000
    ],
    [
        998220,
        2332960000
    ],
    [
        998200,
        2331000000
    ],
    [
        998190,
        2334000000
    ],
    [
        998150,
        2348000000
    ],
    [
        998140,
        2354260000
    ],
    [
        998070,
        2359525000
    ],
    [
        998060,
        2363038086
    ],
    [
        998050,
        2364624000
    ],
    [
        998040,
        2367209500
    ],
    [
        998030,
        2365750000
    ],
    [
        998010,
        2365357244
    ],
    [
        998000,
        2361857244
    ],
    [
        997990,
        2374450000
    ],
    [
        997980,
        2374170000
    ],
    [
        997960,
        2378310252
    ],
    [
        997940,
        2395127500
    ],
    [
        997930,
        2395000000
    ],
    [
        997920,
        2384152000
    ],
    [
        997910,
        2388070500
    ],
    [
        997890,
        2389850500
    ],
    [
        997870,
        2380000000
    ],
    [
        997860,
        2379486000
    ],
    [
        997810,
        2366160000
    ],
    [
        997800,
        2356660000
    ],
    [
        997790,
        2346660000
    ],
    [
        997780,
        2342000000
    ],
    [
        997770,
        2336295000
    ],
    [
        997760,
        2334019250
    ],
    [
        997750,
        2332728250
    ],
    [
        997740,
        2331000000
    ],
    [
        997730,
        2305025000
    ],
    [
        997720,
        2299500000
    ],
    [
        997710,
        2290770000
    ],
    [
        997700,
        2293993500
    ],
    [
        997690,
        2289500000
    ],
    [
        997680,
        2288019000
    ],
    [
        997670,
        2293450500
    ],
    [
        997660,
        2293231500
    ],
    [
        997650,
        2289830000
    ],
    [
        997640,
        2289224000
    ],
    [
        997630,
        2286591500
    ],
    [
        997620,
        2282000000
    ],
    [
        997580,
        2281000000
    ],
    [
        997570,
        2280500000
    ],
    [
        997560,
        2286000000
    ],
    [
        997540,
        2284965000
    ],
    [
        997510,
        2287000000
    ],
    [
        997500,
        2285489500
    ],
    [
        997490,
        2284528500
    ],
    [
        997480,
        2284194500
    ],
    [
        997470,
        2282000000
    ],
    [
        997460,
        2281987240
    ],
    [
        997450,
        2282987240
    ],
    [
        997440,
        2283000000
    ],
    [
        997430,
        2284077500
    ],
    [
        997420,
        2286830500
    ],
    [
        997410,
        2284808500
    ],
    [
        997400,
        2283470500
    ],
    [
        997390,
        2283227500
    ],
    [
        997380,
        2288467125
    ],
    [
        997360,
        2288771500
    ],
    [
        997350,
        2289651500
    ],
    [
        997340,
        2286062000
    ],
    [
        997330,
        2284965000
    ],
    [
        997320,
        2294425000
    ],
    [
        997300,
        2293425000
    ],
    [
        997290,
        2293964723
    ],
    [
        997280,
        2295434500
    ],
    [
        997270,
        2296677551
    ],
    [
        997240,
        2303665000
    ],
    [
        997230,
        2306500000
    ],
    [
        997220,
        2308400000
    ],
    [
        997210,
        2309800000
    ],
    [
        997190,
        2302635000
    ],
    [
        997170,
        2299000000
    ],
    [
        997160,
        2299914623
    ],
    [
        997150,
        2301420500
    ],
    [
        997140,
        2305565000
    ],
    [
        997130,
        2306520625
    ],
    [
        997120,
        2309301037
    ],
    [
        997110,
        2308187500
    ],
    [
        997090,
        2308000000
    ],
    [
        997080,
        2310000000
    ],
    [
        997070,
        2311500000
    ],
    [
        997060,
        2313050000
    ],
    [
        997030,
        2310000000
    ],
    [
        997020,
        2309779000
    ],
    [
        997000,
        2310359375
    ],
    [
        996990,
        2310054875
    ],
    [
        996970,
        2302490000
    ],
    [
        996960,
        2300808940
    ],
    [
        996910,
        2308020000
    ],
    [
        996900,
        2308070000
    ],
    [
        996880,
        2312000000
    ],
    [
        996870,
        2312320000
    ],
    [
        996860,
        2312000000
    ],
    [
        996850,
        2312320000
    ],
    [
        996830,
        2310527273
    ],
    [
        996810,
        2316500000
    ],
    [
        996800,
        2310369500
    ],
    [
        996790,
        2327000000
    ],
    [
        996780,
        2327496000
    ],
    [
        996770,
        2340517500
    ],
    [
        996760,
        2346000000
    ],
    [
        996750,
        2346640834
    ],
    [
        996680,
        2353760000
    ],
    [
        996670,
        2354000000
    ],
    [
        996660,
        2356231000
    ],
    [
        996630,
        2361560000
    ],
    [
        996620,
        2362000000
    ],
    [
        996610,
        2365500000
    ],
    [
        996600,
        2365183500
    ],
    [
        996590,
        2366712504
    ],
    [
        996580,
        2370794616
    ],
    [
        996570,
        2371346500
    ],
    [
        996560,
        2378633500
    ],
    [
        996550,
        2384842500
    ],
    [
        996540,
        2385000000
    ],
    [
        996500,
        2357640000
    ],
    [
        996470,
        2354199073
    ],
    [
        996460,
        2353500000
    ],
    [
        996450,
        2348500000
    ],
    [
        996430,
        2347000000
    ],
    [
        996410,
        2349540000
    ],
    [
        996400,
        2351205000
    ],
    [
        996390,
        2349000000
    ],
    [
        996380,
        2347223500
    ],
    [
        996360,
        2347349500
    ],
    [
        996350,
        2345107882
    ],
    [
        996340,
        2337955000
    ],
    [
        996330,
        2337164500
    ],
    [
        996320,
        2335176000
    ],
    [
        996300,
        2335302000
    ],
    [
        996280,
        2332561376
    ],
    [
        996270,
        2323052500
    ],
    [
        996250,
        2323000000
    ],
    [
        996240,
        2322500000
    ],
    [
        996230,
        2322000000
    ],
    [
        996220,
        2321181000
    ],
    [
        996210,
        2320372000
    ],
    [
        996200,
        2323870000
    ],
    [
        996190,
        2321217000
    ],
    [
        996180,
        2321812000
    ],
    [
        996170,
        2322940000
    ],
    [
        996160,
        2320000000
    ],
    [
        996150,
        2311120000
    ],
    [
        996130,
        2310000000
    ],
    [
        996120,
        2309057135
    ],
    [
        996110,
        2308990000
    ],
    [
        996100,
        2306731002
    ],
    [
        996080,
        2310540000
    ],
    [
        996070,
        2315000000
    ],
    [
        996060,
        2318171000
    ],
    [
        996050,
        2322000000
    ],
    [
        996030,
        2340560000
    ],
    [
        996020,
        2339339000
    ],
    [
        996010,
        2338720000
    ],
    [
        996000,
        2339785000
    ],
    [
        995990,
        2329000000
    ],
    [
        995980,
        2328000000
    ],
    [
        995940,
        2329000000
    ],
    [
        995930,
        2327000000
    ],
    [
        995920,
        2320080000
    ],
    [
        995910,
        2305430000
    ],
    [
        995900,
        2303350000
    ],
    [
        995890,
        2300000000
    ],
    [
        995870,
        2294920000
    ],
    [
        995860,
        2295000000
    ],
    [
        995850,
        2301200000
    ],
    [
        995830,
        2302000000
    ],
    [
        995820,
        2302540000
    ],
    [
        995810,
        2303000000
    ],
    [
        995800,
        2301074398
    ],
    [
        995790,
        2298000000
    ],
    [
        995780,
        2293000000
    ],
    [
        995750,
        2290000000
    ],
    [
        995720,
        2279731586
    ],
    [
        995710,
        2273430000
    ],
    [
        995700,
        2271282758
    ],
    [
        995690,
        2272281000
    ],
    [
        995670,
        2294000000
    ],
    [
        995650,
        2299000000
    ],
    [
        995640,
        2300620000
    ],
    [
        995630,
        2301546000
    ],
    [
        995620,
        2300483000
    ],
    [
        995600,
        2301810000
    ],
    [
        995560,
        2316000000
    ],
    [
        995540,
        2316795000
    ],
    [
        995520,
        2323610309
    ],
    [
        995510,
        2322502669
    ],
    [
        995490,
        2322625000
    ],
    [
        995480,
        2322310000
    ],
    [
        995470,
        2316570000
    ],
    [
        995450,
        2314000000
    ],
    [
        995430,
        2312000000
    ],
    [
        995420,
        2314510000
    ],
    [
        995410,
        2323941250
    ],
    [
        995400,
        2325510000
    ],
    [
        995380,
        2332000000
    ],
    [
        995360,
        2333000000
    ],
    [
        995350,
        2335129250
    ],
    [
        995330,
        2333000000
    ],
    [
        995320,
        2337220000
    ],
    [
        995300,
        2338180000
    ],
    [
        995290,
        2343000000
    ],
    [
        995190,
        2358680000
    ],
    [
        995180,
        2359000000
    ],
    [
        995150,
        2364200000
    ],
    [
        995140,
        2364035000
    ],
    [
        995130,
        2360821000
    ],
    [
        995120,
        2352321000
    ],
    [
        995100,
        2339000000
    ],
    [
        995080,
        2334125000
    ],
    [
        995070,
        2327094000
    ],
    [
        995060,
        2314500000
    ],
    [
        995050,
        2312906000
    ],
    [
        995040,
        2307055000
    ],
    [
        995020,
        2305334500
    ],
    [
        995010,
        2314500000
    ],
    [
        995000,
        2332000000
    ],
    [
        994980,
        2328682000
    ],
    [
        994970,
        2323995000
    ],
    [
        994950,
        2322692609
    ],
    [
        994940,
        2312060000
    ],
    [
        994910,
        2311060000
    ],
    [
        994900,
        2308590000
    ],
    [
        994880,
        2303620000
    ],
    [
        994870,
        2307000000
    ],
    [
        994850,
        2303875000
    ],
    [
        994840,
        2301875000
    ],
    [
        994820,
        2301000000
    ],
    [
        994810,
        2299500000
    ],
    [
        994790,
        2293634725
    ],
    [
        994780,
        2299455000
    ],
    [
        994740,
        2297000000
    ],
    [
        994720,
        2296535000
    ],
    [
        994710,
        2292280587
    ],
    [
        994700,
        2286500000
    ],
    [
        994690,
        2293763000
    ],
    [
        994680,
        2294728000
    ],
    [
        994670,
        2295000000
    ],
    [
        994660,
        2288500000
    ],
    [
        994650,
        2284000000
    ],
    [
        994630,
        2282985000
    ],
    [
        994620,
        2280735000
    ],
    [
        994610,
        2275140000
    ],
    [
        994600,
        2266871845
    ],
    [
        994590,
        2265564500
    ],
    [
        994580,
        2260500000
    ],
    [
        994570,
        2263521448
    ],
    [
        994560,
        2260500000
    ],
    [
        994550,
        2259795000
    ],
    [
        994540,
        2259090000
    ],
    [
        994530,
        2259088000
    ],
    [
        994520,
        2254814687
    ],
    [
        994500,
        2250320000
    ],
    [
        994490,
        2247479021
    ],
    [
        994480,
        2246561204
    ],
    [
        994470,
        2247190204
    ],
    [
        994450,
        2246030000
    ],
    [
        994440,
        2248915000
    ],
    [
        994430,
        2251000000
    ],
    [
        994420,
        2251662500
    ],
    [
        994400,
        2269075000
    ],
    [
        994390,
        2271121906
    ],
    [
        994380,
        2273381500
    ],
    [
        994370,
        2274000000
    ],
    [
        994340,
        2281960000
    ],
    [
        994320,
        2282736000
    ],
    [
        994300,
        2286500000
    ],
    [
        994290,
        2280982000
    ],
    [
        994270,
        2282129000
    ],
    [
        994260,
        2283985000
    ],
    [
        994240,
        2285500000
    ],
    [
        994230,
        2287561171
    ],
    [
        994220,
        2291980000
    ],
    [
        994210,
        2298760000
    ],
    [
        994200,
        2299760000
    ],
    [
        994190,
        2298780000
    ],
    [
        994180,
        2292020000
    ],
    [
        994170,
        2293469000
    ],
    [
        994150,
        2286038990
    ],
    [
        994130,
        2285500000
    ],
    [
        994120,
        2284706500
    ],
    [
        994110,
        2287157000
    ],
    [
        994100,
        2289433500
    ],
    [
        994090,
        2289016758
    ],
    [
        994080,
        2295559000
    ],
    [
        994070,
        2299000000
    ],
    [
        994060,
        2295795885
    ],
    [
        994050,
        2296787000
    ],
    [
        994040,
        2298685000
    ],
    [
        994030,
        2300801470
    ],
    [
        994020,
        2300806970
    ],
    [
        994010,
        2299551110
    ],
    [
        994000,
        2299323500
    ],
    [
        993990,
        2298352500
    ],
    [
        993980,
        2298185000
    ],
    [
        993970,
        2300121000
    ],
    [
        993960,
        2301936000
    ],
    [
        993950,
        2300736000
    ],
    [
        993940,
        2297068320
    ],
    [
        993930,
        2297095000
    ],
    [
        993920,
        2297265000
    ],
    [
        993910,
        2295000000
    ],
    [
        993880,
        2295000000
    ],
    [
        993870,
        2297571702
    ],
    [
        993860,
        2291951221
    ],
    [
        993840,
        2287982721
    ],
    [
        993820,
        2285936221
    ],
    [
        993810,
        2296212500
    ],
    [
        993800,
        2321000000
    ],
    [
        993790,
        2325000000
    ],
    [
        993770,
        2334000000
    ],
    [
        993750,
        2342000000
    ],
    [
        993720,
        2327980000
    ],
    [
        993710,
        2326872000
    ],
    [
        993700,
        2326827250
    ],
    [
        993690,
        2325000000
    ],
    [
        993680,
        2327000000
    ],
    [
        993670,
        2329764000
    ],
    [
        993660,
        2331000000
    ],
    [
        993650,
        2332714000
    ],
    [
        993630,
        2330400000
    ],
    [
        993610,
        2330188000
    ],
    [
        993590,
        2336000000
    ],
    [
        993560,
        2334150000
    ],
    [
        993540,
        2336000000
    ],
    [
        993520,
        2335828126
    ],
    [
        993510,
        2335000000
    ],
    [
        993500,
        2334150000
    ],
    [
        993480,
        2335000000
    ],
    [
        993470,
        2336981000
    ],
    [
        993450,
        2338000000
    ],
    [
        993430,
        2342000000
    ],
    [
        993420,
        2341350000
    ],
    [
        993400,
        2342000000
    ],
    [
        993380,
        2341850000
    ],
    [
        993370,
        2334905000
    ],
    [
        993360,
        2324016384
    ],
    [
        993350,
        2323110000
    ],
    [
        993340,
        2322756086
    ],
    [
        993330,
        2339000000
    ],
    [
        993310,
        2341850000
    ],
    [
        993200,
        2340000000
    ],
    [
        993170,
        2328000000
    ],
    [
        993160,
        2325000000
    ],
    [
        993150,
        2323000000
    ],
    [
        993140,
        2323509000
    ],
    [
        993130,
        2323000000
    ],
    [
        993100,
        2322360000
    ],
    [
        993090,
        2334000000
    ],
    [
        993070,
        2334380000
    ],
    [
        993060,
        2336320000
    ],
    [
        993050,
        2338000000
    ],
    [
        993040,
        2337220000
    ],
    [
        993030,
        2338000000
    ],
    [
        993020,
        2339000000
    ],
    [
        993010,
        2340240000
    ],
    [
        992990,
        2338355000
    ],
    [
        992970,
        2335000000
    ],
    [
        992960,
        2328000000
    ],
    [
        992950,
        2327048000
    ],
    [
        992930,
        2322000000
    ],
    [
        992920,
        2324862000
    ],
    [
        992900,
        2319000000
    ],
    [
        992890,
        2317240000
    ],
    [
        992860,
        2317000000
    ],
    [
        992810,
        2333430000
    ],
    [
        992780,
        2335000000
    ],
    [
        992760,
        2330057920
    ],
    [
        992750,
        2325000000
    ],
    [
        992730,
        2324190000
    ],
    [
        992720,
        2325000000
    ],
    [
        992670,
        2331000000
    ],
    [
        992660,
        2330398000
    ],
    [
        992650,
        2328243000
    ],
    [
        992640,
        2326000000
    ],
    [
        992580,
        2325000000
    ],
    [
        992550,
        2328050000
    ],
    [
        992540,
        2329000000
    ],
    [
        992530,
        2332674000
    ],
    [
        992510,
        2335490000
    ],
    [
        992470,
        2341850000
    ],
    [
        992450,
        2344000000
    ],
    [
        992440,
        2345000000
    ],
    [
        992410,
        2345423742
    ],
    [
        992400,
        2345000000
    ],
    [
        992390,
        2341190000
    ],
    [
        992380,
        2339582235
    ],
    [
        992370,
        2351402000
    ],
    [
        992340,
        2352510000
    ],
    [
        992330,
        2352756000
    ],
    [
        992320,
        2352510000
    ],
    [
        992300,
        2352000000
    ],
    [
        992280,
        2356000000
    ],
    [
        992270,
        2352510000
    ],
    [
        992250,
        2353170000
    ],
    [
        992240,
        2352809000
    ],
    [
        992230,
        2349991370
    ],
    [
        992180,
        2339470000
    ],
    [
        992170,
        2337837986
    ],
    [
        992160,
        2336635547
    ],
    [
        992150,
        2334000000
    ],
    [
        992130,
        2315000000
    ],
    [
        992060,
        2296000000
    ],
    [
        992040,
        2301770000
    ],
    [
        992020,
        2304000000
    ],
    [
        991990,
        2291520000
    ],
    [
        991980,
        2290911630
    ],
    [
        991950,
        2290000000
    ],
    [
        991920,
        2284020000
    ],
    [
        991890,
        2283000000
    ],
    [
        991880,
        2280000000
    ],
    [
        991850,
        2277000000
    ],
    [
        991840,
        2275170000
    ],
    [
        991830,
        2275000000
    ],
    [
        991800,
        2272000000
    ],
    [
        991790,
        2271920000
    ],
    [
        991780,
        2271000000
    ],
    [
        991770,
        2270660000
    ],
    [
        991760,
        2271000000
    ],
    [
        991690,
        2272000000
    ],
    [
        991670,
        2265000000
    ],
    [
        991630,
        2264000000
    ],
    [
        991590,
        2272000000
    ],
    [
        991570,
        2277130000
    ],
    [
        991560,
        2278910000
    ],
    [
        991510,
        2273000000
    ],
    [
        991500,
        2273291921
    ],
    [
        991490,
        2272160000
    ],
    [
        991420,
        2282000000
    ],
    [
        991380,
        2307000000
    ],
    [
        991350,
        2313000000
    ],
    [
        991320,
        2315000000
    ],
    [
        991300,
        2320000000
    ],
    [
        991280,
        2317672000
    ],
    [
        991250,
        2315000000
    ],
    [
        991240,
        2314000000
    ],
    [
        991230,
        2315781000
    ],
    [
        991220,
        2318230000
    ],
    [
        991200,
        2384679000
    ],
    [
        991190,
        2426622613
    ],
    [
        991180,
        2449044000
    ],
    [
        991170,
        2457937500
    ],
    [
        991160,
        2456789475
    ],
    [
        991150,
        2460000000
    ],
    [
        991130,
        2321500000
    ],
    [
        991030,
        2314000000
    ],
    [
        990950,
        2173300000
    ],
    [
        990860,
        2160610000
    ],
    [
        990850,
        2156544000
    ],
    [
        990770,
        2129000000
    ],
    [
        990760,
        2129420000
    ],
    [
        990750,
        2135027000
    ],
    [
        990720,
        2172276000
    ],
    [
        990710,
        2173300000
    ],
    [
        990700,
        2178000000
    ],
    [
        990680,
        2178570000
    ],
    [
        990660,
        2178190000
    ],
    [
        990650,
        2174830000
    ],
    [
        990640,
        2172043000
    ],
    [
        990630,
        2173300000
    ],
    [
        990620,
        2177089000
    ],
    [
        990600,
        2172047000
    ],
    [
        990580,
        2174319000
    ],
    [
        990570,
        2174924000
    ],
    [
        990560,
        2164385000
    ],
    [
        990550,
        2211000000
    ],
    [
        990520,
        2213156500
    ],
    [
        990500,
        2213385000
    ],
    [
        990470,
        2217155000
    ],
    [
        990460,
        2216684000
    ],
    [
        990450,
        2220788000
    ],
    [
        990430,
        2214770000
    ],
    [
        990410,
        2224415000
    ],
    [
        990400,
        2225760000
    ],
    [
        990390,
        2230645000
    ],
    [
        990370,
        2232805000
    ],
    [
        990360,
        2228429000
    ],
    [
        990330,
        2192000000
    ],
    [
        990310,
        2190580000
    ],
    [
        990270,
        2188000000
    ],
    [
        990250,
        2177042000
    ],
    [
        990230,
        2188000000
    ],
    [
        990220,
        2179584000
    ],
    [
        990200,
        2172770000
    ],
    [
        990190,
        2173660000
    ],
    [
        990160,
        2188000000
    ],
    [
        990070,
        2174000000
    ],
    [
        990030,
        2170790000
    ],
    [
        990020,
        2172021000
    ],
    [
        990010,
        2181000000
    ],
    [
        990000,
        2179396000
    ],
    [
        989990,
        2181000000
    ],
    [
        989970,
        2181400000
    ],
    [
        989810,
        2146000000
    ],
    [
        989790,
        2142382000
    ],
    [
        989770,
        2146000000
    ],
    [
        989760,
        2139500000
    ],
    [
        989750,
        2085240000
    ],
    [
        989710,
        2069000000
    ],
    [
        989680,
        2070160000
    ],
    [
        989650,
        2061000000
    ],
    [
        989620,
        2069000000
    ],
    [
        989570,
        2139500000
    ],
    [
        989550,
        2155000000
    ],
    [
        989540,
        2170000000
    ],
    [
        989500,
        2183088000
    ],
    [
        989470,
        2184000000
    ],
    [
        989450,
        2194500000
    ],
    [
        989420,
        2194970000
    ],
    [
        989410,
        2190284000
    ],
    [
        989400,
        2189553000
    ],
    [
        989390,
        2188389000
    ],
    [
        989370,
        2198753000
    ],
    [
        989360,
        2193260000
    ],
    [
        989330,
        2189394000
    ],
    [
        989310,
        2186570000
    ],
    [
        989300,
        2189440000
    ],
    [
        989290,
        2177224000
    ],
    [
        989280,
        2177708000
    ],
    [
        989270,
        2180000000
    ],
    [
        989240,
        2181040000
    ],
    [
        989130,
        2143000000
    ],
    [
        989120,
        2146000000
    ],
    [
        989110,
        2139500000
    ],
    [
        989090,
        2139000000
    ],
    [
        989070,
        2139500000
    ],
    [
        989060,
        2139000000
    ],
    [
        989010,
        2139500000
    ],
    [
        988930,
        2139000000
    ],
    [
        988920,
        2139500000
    ],
    [
        988900,
        2145000000
    ],
    [
        988890,
        2139500000
    ],
    [
        988880,
        2145000000
    ],
    [
        988860,
        2153000000
    ],
    [
        988830,
        2159229000
    ],
    [
        988820,
        2170807500
    ],
    [
        988810,
        2172324500
    ],
    [
        988800,
        2170877000
    ],
    [
        988650,
        2154720000
    ],
    [
        988640,
        2152762000
    ],
    [
        988620,
        2149000000
    ],
    [
        988600,
        2151162000
    ],
    [
        988590,
        2146162000
    ],
    [
        988570,
        2140410000
    ],
    [
        988560,
        2143000000
    ],
    [
        988550,
        2145094000
    ],
    [
        988540,
        2149070000
    ],
    [
        988520,
        2146056500
    ],
    [
        988490,
        2152245000
    ],
    [
        988480,
        2151964500
    ],
    [
        988470,
        2147670000
    ],
    [
        988450,
        2154500000
    ],
    [
        988430,
        2152230000
    ],
    [
        988410,
        2153655000
    ],
    [
        988400,
        2158817000
    ],
    [
        988390,
        2159172000
    ],
    [
        988380,
        2165589500
    ],
    [
        988370,
        2182799500
    ],
    [
        988350,
        2192515000
    ],
    [
        988330,
        2196198000
    ],
    [
        988320,
        2195506500
    ],
    [
        988310,
        2198493500
    ],
    [
        988290,
        2203198500
    ],
    [
        988270,
        2204485500
    ],
    [
        988250,
        2205135000
    ],
    [
        988240,
        2210107000
    ],
    [
        988230,
        2229110000
    ],
    [
        988220,
        2234550000
    ],
    [
        988210,
        2247885000
    ],
    [
        988200,
        2252678000
    ],
    [
        988180,
        2261885000
    ],
    [
        988160,
        2268456000
    ],
    [
        988150,
        2270826000
    ],
    [
        988140,
        2274071000
    ],
    [
        988130,
        2276370000
    ],
    [
        988120,
        2281797500
    ],
    [
        988110,
        2281921000
    ],
    [
        988100,
        2282265000
    ],
    [
        988080,
        2284000000
    ],
    [
        988070,
        2280965000
    ],
    [
        988000,
        2277765000
    ],
    [
        987970,
        2281240000
    ],
    [
        987950,
        2282000000
    ],
    [
        987910,
        2281171000
    ],
    [
        987890,
        2283355500
    ],
    [
        987880,
        2283432000
    ],
    [
        987870,
        2282753500
    ],
    [
        987840,
        2273625000
    ],
    [
        987810,
        2269627500
    ],
    [
        987800,
        2263000000
    ],
    [
        987750,
        2259685000
    ],
    [
        987730,
        2261920000
    ],
    [
        987720,
        2262329000
    ],
    [
        987700,
        2270695500
    ],
    [
        987690,
        2270960500
    ],
    [
        987680,
        2262685000
    ],
    [
        987660,
        2259140000
    ],
    [
        987650,
        2261560000
    ],
    [
        987630,
        2263442500
    ],
    [
        987600,
        2254540000
    ],
    [
        987570,
        2254000000
    ],
    [
        987560,
        2285301500
    ],
    [
        987480,
        2312480000
    ],
    [
        987460,
        2306002000
    ],
    [
        987450,
        2299168500
    ],
    [
        987410,
        2280895000
    ],
    [
        987390,
        2277470000
    ],
    [
        987380,
        2305500000
    ],
    [
        987370,
        2306853000
    ],
    [
        987350,
        2309179500
    ],
    [
        987330,
        2305500000
    ],
    [
        987320,
        2308964000
    ],
    [
        987310,
        2316480000
    ],
    [
        987290,
        2316960000
    ],
    [
        987270,
        2316000000
    ],
    [
        987260,
        2311616000
    ],
    [
        987250,
        2310080000
    ],
    [
        987190,
        2299000000
    ],
    [
        987180,
        2296000000
    ],
    [
        987170,
        2308102000
    ],
    [
        987160,
        2299171000
    ],
    [
        987130,
        2296000000
    ],
    [
        987120,
        2294350000
    ],
    [
        987100,
        2293121000
    ],
    [
        987090,
        2290295000
    ],
    [
        987070,
        2288000000
    ],
    [
        987060,
        2281000000
    ],
    [
        987050,
        2284559000
    ],
    [
        987040,
        2281042000
    ],
    [
        987030,
        2277720000
    ],
    [
        987010,
        2281000000
    ],
    [
        987000,
        2277720000
    ],
    [
        986980,
        2265090000
    ],
    [
        986970,
        2264031000
    ],
    [
        986940,
        2249494000
    ],
    [
        986880,
        2255000000
    ],
    [
        986840,
        2334000000
    ],
    [
        986820,
        2345790000
    ],
    [
        986810,
        2350887000
    ],
    [
        986750,
        2351000000
    ],
    [
        986680,
        2359000000
    ],
    [
        986670,
        2352824000
    ],
    [
        986650,
        2350110000
    ],
    [
        986620,
        2357000000
    ],
    [
        986610,
        2350110000
    ],
    [
        986600,
        2343600000
    ],
    [
        986590,
        2343071000
    ],
    [
        986570,
        2343600000
    ],
    [
        986560,
        2343000000
    ],
    [
        986550,
        2339739000
    ],
    [
        986530,
        2336000000
    ],
    [
        986490,
        2341020000
    ],
    [
        986480,
        2340200000
    ],
    [
        986460,
        2340000000
    ],
    [
        986450,
        2332320000
    ],
    [
        986440,
        2333977000
    ],
    [
        986420,
        2342061000
    ],
    [
        986410,
        2333170000
    ],
    [
        986340,
        2372216000
    ],
    [
        986330,
        2408000000
    ],
    [
        986270,
        2425350000
    ],
    [
        986240,
        2427000000
    ],
    [
        986200,
        2425000000
    ],
    [
        986180,
        2423043000
    ],
    [
        986170,
        2422870000
    ],
    [
        986160,
        2408000000
    ],
    [
        986130,
        2369000000
    ],
    [
        986110,
        2368874000
    ],
    [
        986100,
        2363000000
    ],
    [
        986080,
        2360000000
    ],
    [
        986070,
        2360397000
    ],
    [
        986050,
        2363000000
    ],
    [
        986010,
        2347540000
    ],
    [
        985990,
        2359090000
    ],
    [
        985980,
        2366000000
    ],
    [
        985960,
        2381174000
    ],
    [
        985950,
        2368372000
    ],
    [
        985940,
        2393669000
    ],
    [
        985930,
        2408000000
    ],
    [
        985910,
        2410000000
    ],
    [
        985800,
        2408000000
    ],
    [
        985780,
        2398370000
    ],
    [
        985740,
        2394000000
    ],
    [
        985730,
        2390600000
    ],
    [
        985710,
        2397869000
    ],
    [
        985700,
        2412891000
    ],
    [
        985690,
        2412995000
    ],
    [
        985680,
        2390450000
    ],
    [
        985660,
        2341000000
    ],
    [
        985650,
        2337460000
    ],
    [
        985640,
        2336751000
    ],
    [
        985620,
        2337460000
    ],
    [
        985590,
        2332256000
    ],
    [
        985550,
        2337460000
    ],
    [
        985480,
        2215000000
    ],
    [
        985450,
        2214000000
    ],
    [
        985440,
        2209128000
    ],
    [
        985400,
        2210739000
    ],
    [
        985360,
        2214000000
    ],
    [
        985290,
        2215000000
    ],
    [
        985280,
        2230820000
    ],
    [
        985270,
        2231000000
    ],
    [
        985180,
        2246157000
    ],
    [
        985170,
        2249481000
    ],
    [
        985160,
        2250870000
    ],
    [
        985130,
        2249040000
    ],
    [
        985120,
        2251000000
    ],
    [
        985110,
        2259081000
    ],
    [
        985100,
        2270120000
    ],
    [
        985030,
        2251000000
    ],
    [
        985000,
        2243396000
    ],
    [
        984970,
        2247852000
    ],
    [
        984940,
        2235253000
    ],
    [
        984930,
        2233978000
    ],
    [
        984910,
        2237307000
    ],
    [
        984880,
        2226000000
    ],
    [
        984870,
        2215778000
    ],
    [
        984840,
        2226000000
    ],
    [
        984810,
        2237140000
    ],
    [
        984800,
        2242980000
    ],
    [
        984790,
        2248574000
    ],
    [
        984760,
        2244880000
    ],
    [
        984720,
        2255690000
    ],
    [
        984700,
        2282720000
    ],
    [
        984690,
        2284140000
    ],
    [
        984680,
        2277491000
    ],
    [
        984660,
        2284720000
    ],
    [
        984630,
        2242980000
    ],
    [
        984620,
        2244986000
    ],
    [
        984590,
        2247560000
    ],
    [
        984580,
        2248891000
    ],
    [
        984570,
        2257000000
    ],
    [
        984540,
        2246750000
    ],
    [
        984530,
        2242980000
    ],
    [
        984500,
        2250000000
    ],
    [
        984470,
        2246070000
    ],
    [
        984440,
        2242980000
    ],
    [
        984400,
        2231396000
    ],
    [
        984350,
        2214000000
    ],
    [
        984300,
        2136000000
    ],
    [
        984200,
        2079000000
    ],
    [
        984170,
        2073627000
    ],
    [
        984160,
        2077060000
    ],
    [
        984110,
        2054000000
    ],
    [
        984090,
        2039000000
    ],
    [
        984080,
        2028880000
    ],
    [
        984060,
        2039000000
    ],
    [
        984050,
        2028880000
    ],
    [
        984040,
        2019080000
    ],
    [
        984030,
        2027760000
    ],
    [
        984020,
        2024380000
    ],
    [
        984000,
        2016000000
    ],
    [
        983970,
        2016258500
    ],
    [
        983960,
        2012620000
    ],
    [
        983940,
        2009736500
    ],
    [
        983930,
        2003288500
    ],
    [
        983910,
        2000765000
    ],
    [
        983890,
        2002089000
    ],
    [
        983880,
        2002748000
    ],
    [
        983870,
        2004642000
    ],
    [
        983810,
        2029765000
    ],
    [
        983800,
        2061180000
    ],
    [
        983780,
        2067410000
    ],
    [
        983770,
        2067910000
    ],
    [
        983710,
        2070215000
    ],
    [
        983690,
        2056000000
    ],
    [
        983680,
        2030020000
    ],
    [
        983650,
        2042020000
    ],
    [
        983640,
        2043681500
    ],
    [
        983620,
        2060135000
    ],
    [
        983610,
        2068500000
    ],
    [
        983600,
        2051000000
    ],
    [
        983570,
        2046000000
    ],
    [
        983560,
        2046090000
    ],
    [
        983540,
        2056000000
    ],
    [
        983510,
        2072430000
    ],
    [
        983500,
        2068538000
    ],
    [
        983480,
        2066296000
    ],
    [
        983440,
        2058560000
    ],
    [
        983430,
        2055239000
    ],
    [
        983400,
        2037000000
    ],
    [
        983390,
        2042157000
    ],
    [
        983290,
        2046000000
    ],
    [
        983260,
        2048000000
    ],
    [
        983230,
        2052447000
    ],
    [
        983170,
        2032000000
    ],
    [
        983150,
        2040000000
    ],
    [
        983130,
        2062592000
    ],
    [
        983120,
        2051429000
    ],
    [
        983090,
        2087000000
    ],
    [
        983060,
        2096550000
    ],
    [
        983050,
        2099000000
    ],
    [
        983040,
        2106036000
    ],
    [
        983020,
        2107500000
    ],
    [
        983010,
        2104640000
    ],
    [
        982990,
        2099000000
    ],
    [
        982940,
        2082342000
    ],
    [
        982930,
        2082410000
    ],
    [
        982910,
        2108960000
    ],
    [
        982900,
        2124720000
    ],
    [
        982880,
        2074000000
    ],
    [
        982870,
        2076000000
    ],
    [
        982790,
        2070008000
    ],
    [
        982770,
        2072000000
    ],
    [
        982750,
        2076050000
    ],
    [
        982740,
        2073651000
    ],
    [
        982650,
        2072000000
    ],
    [
        982610,
        2070500000
    ],
    [
        982580,
        2068000000
    ],
    [
        982540,
        2098210000
    ],
    [
        982510,
        2168000000
    ],
    [
        982490,
        2169000000
    ],
    [
        982470,
        2168000000
    ],
    [
        982420,
        2184000000
    ],
    [
        982330,
        2281000000
    ],
    [
        982300,
        2290384000
    ],
    [
        982290,
        2301848000
    ],
    [
        982270,
        2324110000
    ],
    [
        982260,
        2325770000
    ],
    [
        982200,
        2324110000
    ],
    [
        982170,
        2323400000
    ],
    [
        982150,
        2306018000
    ],
    [
        982130,
        2303580000
    ],
    [
        982120,
        2298580000
    ],
    [
        982110,
        2300660000
    ],
    [
        982090,
        2309000000
    ],
    [
        982080,
        2306818000
    ],
    [
        982070,
        2309000000
    ],
    [
        982060,
        2309143000
    ],
    [
        982050,
        2307170000
    ],
    [
        982030,
        2296000000
    ],
    [
        982020,
        2289920000
    ],
    [
        982000,
        2284968000
    ],
    [
        981990,
        2289616000
    ],
    [
        981970,
        2300000000
    ],
    [
        981960,
        2296000000
    ],
    [
        981940,
        2306280000
    ],
    [
        981930,
        2310270000
    ],
    [
        981920,
        2319577000
    ],
    [
        981890,
        2323400000
    ],
    [
        981860,
        2310270000
    ],
    [
        981800,
        2308000000
    ],
    [
        981770,
        2306667000
    ],
    [
        981740,
        2309559000
    ],
    [
        981730,
        2306403000
    ],
    [
        981710,
        2306000000
    ],
    [
        981700,
        2296000000
    ],
    [
        981690,
        2264000000
    ],
    [
        981660,
        2260730000
    ],
    [
        981640,
        2264000000
    ],
    [
        981630,
        2248800000
    ],
    [
        981620,
        2233000000
    ],
    [
        981610,
        2218455000
    ],
    [
        981600,
        2218781000
    ],
    [
        981570,
        2217000000
    ],
    [
        981550,
        2223590000
    ],
    [
        981530,
        2220000000
    ],
    [
        981510,
        2219000000
    ],
    [
        981490,
        2178000000
    ],
    [
        981450,
        2177000000
    ],
    [
        981430,
        2155320000
    ],
    [
        981400,
        2149210000
    ],
    [
        981390,
        2148330000
    ],
    [
        981380,
        2134590000
    ],
    [
        981350,
        2130000000
    ],
    [
        981330,
        2172730000
    ],
    [
        981320,
        2199465000
    ],
    [
        981300,
        2198170000
    ],
    [
        981290,
        2210000000
    ],
    [
        981230,
        2323000000
    ],
    [
        981220,
        2327390000
    ],
    [
        981210,
        2324230000
    ],
    [
        981170,
        2329930000
    ],
    [
        981140,
        2323750000
    ],
    [
        981130,
        2321490000
    ],
    [
        981120,
        2322000000
    ],
    [
        981100,
        2306609000
    ],
    [
        981080,
        2297020000
    ],
    [
        981060,
        2265000000
    ],
    [
        981050,
        2270446000
    ],
    [
        981040,
        2263885000
    ],
    [
        981020,
        2287460000
    ],
    [
        980990,
        2292000000
    ],
    [
        980980,
        2307921000
    ],
    [
        980970,
        2313791000
    ],
    [
        980940,
        2320000000
    ],
    [
        980910,
        2303850000
    ],
    [
        980880,
        2294000000
    ],
    [
        980870,
        2289880000
    ],
    [
        980850,
        2278340000
    ],
    [
        980820,
        2306669000
    ],
    [
        980780,
        2284000000
    ],
    [
        980760,
        2278000000
    ],
    [
        980710,
        2342523000
    ],
    [
        980700,
        2343000000
    ],
    [
        980650,
        2325000000
    ],
    [
        980640,
        2322000000
    ],
    [
        980630,
        2329930000
    ],
    [
        980620,
        2342034000
    ],
    [
        980610,
        2339326000
    ],
    [
        980590,
        2344910000
    ],
    [
        980570,
        2353000000
    ],
    [
        980490,
        2322000000
    ],
    [
        980480,
        2314100000
    ],
    [
        980450,
        2322760000
    ],
    [
        980440,
        2322000000
    ],
    [
        980400,
        2409379000
    ],
    [
        980190,
        2416650000
    ],
    [
        980000,
        2416825000
    ],
    [
        979990,
        2425825000
    ],
    [
        979960,
        2434925000
    ],
    [
        979950,
        2437265000
    ],
    [
        979920,
        2445665000
    ],
    [
        979900,
        2441765000
    ],
    [
        979870,
        2437265000
    ],
    [
        979860,
        2442235000
    ],
    [
        979810,
        2467000000
    ],
    [
        979800,
        2472757500
    ],
    [
        979790,
        2495975000
    ],
    [
        979780,
        2495643500
    ],
    [
        979770,
        2500567000
    ],
    [
        979730,
        2505595000
    ],
    [
        979690,
        2509628500
    ],
    [
        979680,
        2509405000
    ],
    [
        979670,
        2502740000
    ],
    [
        979650,
        2498586500
    ],
    [
        979640,
        2494234000
    ],
    [
        979630,
        2480000000
    ],
    [
        979610,
        2497188000
    ],
    [
        979600,
        2491034500
    ],
    [
        979590,
        2487287500
    ],
    [
        979580,
        2482229000
    ],
    [
        979560,
        2482343000
    ],
    [
        979550,
        2483228000
    ],
    [
        979530,
        2496985000
    ],
    [
        979520,
        2493860000
    ],
    [
        979490,
        2499715000
    ],
    [
        979480,
        2518215000
    ],
    [
        979470,
        2513429500
    ],
    [
        979460,
        2513615000
    ],
    [
        979450,
        2536983500
    ],
    [
        979420,
        2537000000
    ],
    [
        979380,
        2537983500
    ],
    [
        979350,
        2539435000
    ],
    [
        979340,
        2539870000
    ],
    [
        979330,
        2534500000
    ],
    [
        979310,
        2533907000
    ],
    [
        979300,
        2534712000
    ],
    [
        979270,
        2534985000
    ],
    [
        979260,
        2533444500
    ],
    [
        979250,
        2537000000
    ],
    [
        979240,
        2537427500
    ],
    [
        979210,
        2602730000
    ],
    [
        979200,
        2607475000
    ],
    [
        979190,
        2611399500
    ],
    [
        979150,
        2596730000
    ],
    [
        979130,
        2592730000
    ],
    [
        979120,
        2595000000
    ],
    [
        979110,
        2600245000
    ],
    [
        979090,
        2600165000
    ],
    [
        979080,
        2600650000
    ],
    [
        979070,
        2598965000
    ],
    [
        979060,
        2585220000
    ],
    [
        979050,
        2585880000
    ],
    [
        979030,
        2585500000
    ],
    [
        979010,
        2581000000
    ],
    [
        979000,
        2580876500
    ],
    [
        978980,
        2594545000
    ],
    [
        978960,
        2593940000
    ],
    [
        978950,
        2604000000
    ],
    [
        978940,
        2602000000
    ],
    [
        978930,
        2597240500
    ],
    [
        978920,
        2588081500
    ],
    [
        978890,
        2605070000
    ],
    [
        978880,
        2605278500
    ],
    [
        978850,
        2593569500
    ],
    [
        978840,
        2603000000
    ],
    [
        978830,
        2600518000
    ],
    [
        978820,
        2595000000
    ],
    [
        978810,
        2591374500
    ],
    [
        978800,
        2590325000
    ],
    [
        978790,
        2583245000
    ],
    [
        978770,
        2590325000
    ],
    [
        978760,
        2595000000
    ],
    [
        978730,
        2594410000
    ],
    [
        978720,
        2598158000
    ],
    [
        978690,
        2609000000
    ],
    [
        978640,
        2561000000
    ],
    [
        978620,
        2404710000
    ],
    [
        978590,
        2395000000
    ],
    [
        978570,
        2389880000
    ],
    [
        978530,
        2395000000
    ],
    [
        978520,
        2396388000
    ],
    [
        978510,
        2395128000
    ],
    [
        978480,
        2393210000
    ],
    [
        978470,
        2397501000
    ],
    [
        978450,
        2394272000
    ],
    [
        978440,
        2388380000
    ],
    [
        978430,
        2384718000
    ],
    [
        978410,
        2372521000
    ],
    [
        978400,
        2370010000
    ],
    [
        978390,
        2375119000
    ],
    [
        978290,
        2393655000
    ],
    [
        978260,
        2368000000
    ],
    [
        978250,
        2366170000
    ],
    [
        978230,
        2378206000
    ],
    [
        978210,
        2374000000
    ],
    [
        978200,
        2374300000
    ],
    [
        978190,
        2373334000
    ],
    [
        978170,
        2367720000
    ],
    [
        978160,
        2364980000
    ],
    [
        978100,
        2363000000
    ],
    [
        978090,
        2368010000
    ],
    [
        978080,
        2374994000
    ],
    [
        978050,
        2382000000
    ],
    [
        978040,
        2364070000
    ],
    [
        978030,
        2357000000
    ],
    [
        978010,
        2364070000
    ],
    [
        978000,
        2368620000
    ],
    [
        977990,
        2379555000
    ],
    [
        977960,
        2382000000
    ],
    [
        977950,
        2385930000
    ],
    [
        977920,
        2376500000
    ],
    [
        977890,
        2347000000
    ],
    [
        977850,
        2351000000
    ],
    [
        977840,
        2355000000
    ],
    [
        977810,
        2365000000
    ],
    [
        977780,
        2362315000
    ],
    [
        977760,
        2366000000
    ],
    [
        977750,
        2371280000
    ],
    [
        977740,
        2366000000
    ],
    [
        977730,
        2364000000
    ],
    [
        977710,
        2358540000
    ],
    [
        977690,
        2344490000
    ],
    [
        977680,
        2353840000
    ],
    [
        977650,
        2335110000
    ],
    [
        977640,
        2321000000
    ],
    [
        977630,
        2319890000
    ],
    [
        977620,
        2321000000
    ],
    [
        977610,
        2326790000
    ],
    [
        977600,
        2298160000
    ],
    [
        977590,
        2301890000
    ],
    [
        977560,
        2319113000
    ],
    [
        977530,
        2347450000
    ],
    [
        977500,
        2352000000
    ],
    [
        977430,
        2305000000
    ],
    [
        977420,
        2304428000
    ],
    [
        977410,
        2297210000
    ],
    [
        977390,
        2294170000
    ],
    [
        977380,
        2305000000
    ],
    [
        977350,
        2319000000
    ],
    [
        977340,
        2320000000
    ],
    [
        977320,
        2321929000
    ],
    [
        977310,
        2320977000
    ],
    [
        977290,
        2326000000
    ],
    [
        977280,
        2325590000
    ],
    [
        977260,
        2310182000
    ],
    [
        977240,
        2327460000
    ],
    [
        977230,
        2326940000
    ],
    [
        977220,
        2331625000
    ],
    [
        977180,
        2326000000
    ],
    [
        977160,
        2441000000
    ],
    [
        977140,
        2447000000
    ],
    [
        977120,
        2441000000
    ],
    [
        977110,
        2436814000
    ],
    [
        977090,
        2446554000
    ],
    [
        977080,
        2454000000
    ],
    [
        977070,
        2464000000
    ],
    [
        977060,
        2462568000
    ],
    [
        977050,
        2464000000
    ],
    [
        977040,
        2473815000
    ],
    [
        977020,
        2478540000
    ],
    [
        977010,
        2454255000
    ],
    [
        977000,
        2449515000
    ],
    [
        976990,
        2399874500
    ],
    [
        976960,
        2376000000
    ],
    [
        976930,
        2358915000
    ],
    [
        976900,
        2354500000
    ],
    [
        976890,
        2351681500
    ],
    [
        976880,
        2353827500
    ],
    [
        976870,
        2352921500
    ],
    [
        976860,
        2344454500
    ],
    [
        976830,
        2336770000
    ],
    [
        976810,
        2335985000
    ],
    [
        976800,
        2335000000
    ],
    [
        976770,
        2345770000
    ],
    [
        976760,
        2356000000
    ],
    [
        976740,
        2352288000
    ],
    [
        976730,
        2354191500
    ],
    [
        976700,
        2326965000
    ],
    [
        976690,
        2321218000
    ],
    [
        976640,
        2288660000
    ],
    [
        976630,
        2284700000
    ],
    [
        976620,
        2285907500
    ],
    [
        976610,
        2286032000
    ],
    [
        976600,
        2285460500
    ],
    [
        976590,
        2289360000
    ],
    [
        976570,
        2289634500
    ],
    [
        976530,
        2256500000
    ],
    [
        976520,
        2264995000
    ],
    [
        976500,
        2266141000
    ],
    [
        976480,
        2269235000
    ],
    [
        976390,
        2272845000
    ],
    [
        976380,
        2269822500
    ],
    [
        976360,
        2272887500
    ],
    [
        976350,
        2274314500
    ],
    [
        976340,
        2282325000
    ],
    [
        976320,
        2307395000
    ],
    [
        976310,
        2311775000
    ],
    [
        976300,
        2313957500
    ],
    [
        976270,
        2295830000
    ],
    [
        976260,
        2314000000
    ],
    [
        976250,
        2315875500
    ],
    [
        976240,
        2314000000
    ],
    [
        976230,
        2316520000
    ],
    [
        976210,
        2318000000
    ],
    [
        976190,
        2309485000
    ],
    [
        976180,
        2315425000
    ],
    [
        976160,
        2309175000
    ],
    [
        976140,
        2307917000
    ],
    [
        976120,
        2285598000
    ],
    [
        976110,
        2283013500
    ],
    [
        976100,
        2278925000
    ],
    [
        976090,
        2277000000
    ],
    [
        976080,
        2278925000
    ],
    [
        976070,
        2281344000
    ],
    [
        976060,
        2283829000
    ],
    [
        976050,
        2281344000
    ],
    [
        976030,
        2286000000
    ],
    [
        976020,
        2291265000
    ],
    [
        975990,
        2301000000
    ],
    [
        975980,
        2297698500
    ],
    [
        975970,
        2300170000
    ],
    [
        975960,
        2304130000
    ],
    [
        975940,
        2301795000
    ],
    [
        975920,
        2306295000
    ],
    [
        975900,
        2324070000
    ],
    [
        975890,
        2334954000
    ],
    [
        975880,
        2336561500
    ],
    [
        975870,
        2345112500
    ],
    [
        975860,
        2355198000
    ],
    [
        975850,
        2353880000
    ],
    [
        975840,
        2339055000
    ],
    [
        975830,
        2337340000
    ],
    [
        975820,
        2337518500
    ],
    [
        975800,
        2331925000
    ],
    [
        975790,
        2326000000
    ],
    [
        975780,
        2328000000
    ],
    [
        975760,
        2291000000
    ],
    [
        975750,
        2287980000
    ],
    [
        975740,
        2290847000
    ],
    [
        975710,
        2294590000
    ],
    [
        975690,
        2290517000
    ],
    [
        975680,
        2293226000
    ],
    [
        975660,
        2303000000
    ],
    [
        975650,
        2309200000
    ],
    [
        975610,
        2327560000
    ],
    [
        975580,
        2331000000
    ],
    [
        975550,
        2315740000
    ],
    [
        975520,
        2298473000
    ],
    [
        975500,
        2298370000
    ],
    [
        975480,
        2297150000
    ],
    [
        975450,
        2327730000
    ],
    [
        975440,
        2329000000
    ],
    [
        975420,
        2332882000
    ],
    [
        975410,
        2335640000
    ],
    [
        975400,
        2334253000
    ],
    [
        975390,
        2330157000
    ],
    [
        975380,
        2329588000
    ],
    [
        975360,
        2326000000
    ],
    [
        975350,
        2327570000
    ],
    [
        975340,
        2327647000
    ],
    [
        975330,
        2342690000
    ],
    [
        975320,
        2344780000
    ],
    [
        975310,
        2340020000
    ],
    [
        975300,
        2338000000
    ],
    [
        975280,
        2340020000
    ],
    [
        975270,
        2339402000
    ],
    [
        975260,
        2338000000
    ],
    [
        975250,
        2342772000
    ],
    [
        975240,
        2357000000
    ],
    [
        975230,
        2358383000
    ],
    [
        975220,
        2358410000
    ],
    [
        975210,
        2361085000
    ],
    [
        975200,
        2376200000
    ],
    [
        975190,
        2378690000
    ],
    [
        975180,
        2376430000
    ],
    [
        975160,
        2372799000
    ],
    [
        975130,
        2373200000
    ],
    [
        975120,
        2376430000
    ],
    [
        975090,
        2357000000
    ],
    [
        975080,
        2354398000
    ],
    [
        975070,
        2352425000
    ],
    [
        975060,
        2345000000
    ],
    [
        975050,
        2354582000
    ],
    [
        975040,
        2378040000
    ],
    [
        975020,
        2388980000
    ],
    [
        975000,
        2378606000
    ],
    [
        974990,
        2393180000
    ],
    [
        974970,
        2378040000
    ],
    [
        974960,
        2377590000
    ],
    [
        974940,
        2375000000
    ],
    [
        974890,
        2382668000
    ],
    [
        974860,
        2368000000
    ],
    [
        974850,
        2359790000
    ],
    [
        974830,
        2353430000
    ],
    [
        974790,
        2362000000
    ],
    [
        974780,
        2369293000
    ],
    [
        974770,
        2368810000
    ],
    [
        974760,
        2381409000
    ],
    [
        974740,
        2408000000
    ],
    [
        974730,
        2411810000
    ],
    [
        974680,
        2394000000
    ],
    [
        974660,
        2394258000
    ],
    [
        974650,
        2411810000
    ],
    [
        974640,
        2413800000
    ],
    [
        974630,
        2426261500
    ],
    [
        974620,
        2431805000
    ],
    [
        974610,
        2441730000
    ],
    [
        974590,
        2435820500
    ],
    [
        974580,
        2434505000
    ],
    [
        974570,
        2442910000
    ],
    [
        974550,
        2445500000
    ],
    [
        974520,
        2441000000
    ],
    [
        974510,
        2433080000
    ],
    [
        974490,
        2430485500
    ],
    [
        974440,
        2426080000
    ],
    [
        974420,
        2444327500
    ],
    [
        974410,
        2446880000
    ],
    [
        974380,
        2442585000
    ],
    [
        974330,
        2409905000
    ],
    [
        974320,
        2408000000
    ],
    [
        974310,
        2409905000
    ],
    [
        974290,
        2414295000
    ],
    [
        974280,
        2414708000
    ],
    [
        974260,
        2415405000
    ],
    [
        974250,
        2419500000
    ],
    [
        974240,
        2421797000
    ],
    [
        974220,
        2432230000
    ],
    [
        974210,
        2430563000
    ],
    [
        974200,
        2432185000
    ],
    [
        974190,
        2441057000
    ],
    [
        974180,
        2430881500
    ],
    [
        974170,
        2429120000
    ],
    [
        974160,
        2422338500
    ],
    [
        974140,
        2423079500
    ],
    [
        974130,
        2423250000
    ],
    [
        974120,
        2425145000
    ],
    [
        974070,
        2391000000
    ],
    [
        974050,
        2387880500
    ],
    [
        974020,
        2251270000
    ],
    [
        973990,
        2247910000
    ],
    [
        973980,
        2247240000
    ],
    [
        973970,
        2244010000
    ],
    [
        973960,
        2246982000
    ],
    [
        973950,
        2251032000
    ],
    [
        973940,
        2254305000
    ],
    [
        973930,
        2257770000
    ],
    [
        973920,
        2258355000
    ],
    [
        973910,
        2257405000
    ],
    [
        973890,
        2258355000
    ],
    [
        973880,
        2257264000
    ],
    [
        973870,
        2260979500
    ],
    [
        973860,
        2268000000
    ],
    [
        973850,
        2271445000
    ],
    [
        973830,
        2275500000
    ],
    [
        973820,
        2271440000
    ],
    [
        973800,
        2270745000
    ],
    [
        973790,
        2261015000
    ],
    [
        973760,
        2262500000
    ],
    [
        973750,
        2231000000
    ],
    [
        973730,
        2222917500
    ],
    [
        973720,
        2199295000
    ],
    [
        973710,
        2198327000
    ],
    [
        973700,
        2207032000
    ],
    [
        973690,
        2207654500
    ],
    [
        973680,
        2211773500
    ],
    [
        973670,
        2210755000
    ],
    [
        973660,
        2202280000
    ],
    [
        973650,
        2202960000
    ],
    [
        973630,
        2207000000
    ],
    [
        973600,
        2200895000
    ],
    [
        973540,
        2190415000
    ],
    [
        973490,
        2187000000
    ],
    [
        973480,
        2181939000
    ],
    [
        973440,
        2133000000
    ],
    [
        973430,
        2121282500
    ],
    [
        973420,
        2129480000
    ],
    [
        973380,
        2094650000
    ],
    [
        973370,
        2092500000
    ],
    [
        973350,
        2090073000
    ],
    [
        973330,
        2083447500
    ],
    [
        973320,
        2085421500
    ],
    [
        973310,
        2081440000
    ],
    [
        973300,
        2083745000
    ],
    [
        973290,
        2079776500
    ],
    [
        973280,
        2081335000
    ],
    [
        973260,
        2085711000
    ],
    [
        973250,
        2083475000
    ],
    [
        973240,
        2099322500
    ],
    [
        973220,
        2113925000
    ],
    [
        973210,
        2093000000
    ],
    [
        973180,
        2091800000
    ],
    [
        973160,
        2093150000
    ],
    [
        973150,
        2095165000
    ],
    [
        973130,
        2099295000
    ],
    [
        973120,
        2107165500
    ],
    [
        973110,
        2094155000
    ],
    [
        973090,
        2088250000
    ],
    [
        973070,
        2088137000
    ],
    [
        973060,
        2087827500
    ],
    [
        973030,
        2089077500
    ],
    [
        973020,
        2086286000
    ],
    [
        973010,
        2077522000
    ],
    [
        973000,
        2079900000
    ],
    [
        972990,
        2094130000
    ],
    [
        972980,
        2101000000
    ],
    [
        972960,
        2092103500
    ],
    [
        972950,
        2100588000
    ],
    [
        972940,
        2100630000
    ],
    [
        972930,
        2101000000
    ],
    [
        972920,
        2100630000
    ],
    [
        972900,
        2101000000
    ],
    [
        972890,
        2100335500
    ],
    [
        972880,
        2095210500
    ],
    [
        972870,
        2100758000
    ],
    [
        972860,
        2096568000
    ],
    [
        972850,
        2086500000
    ],
    [
        972830,
        2084865000
    ],
    [
        972820,
        2084060000
    ],
    [
        972810,
        2086291500
    ],
    [
        972800,
        2068410000
    ],
    [
        972790,
        2073000000
    ],
    [
        972780,
        2075425000
    ],
    [
        972770,
        2054815000
    ],
    [
        972760,
        2039815000
    ],
    [
        972750,
        2022410000
    ],
    [
        972740,
        2023346500
    ],
    [
        972720,
        2018340000
    ],
    [
        972710,
        2032750000
    ],
    [
        972690,
        2046555000
    ],
    [
        972680,
        2045655000
    ],
    [
        972620,
        2012885000
    ],
    [
        972560,
        1965870000
    ],
    [
        972530,
        1957610500
    ],
    [
        972520,
        1956035000
    ],
    [
        972510,
        1949065000
    ],
    [
        972500,
        1951540000
    ],
    [
        972490,
        1959430000
    ],
    [
        972480,
        1963060000
    ],
    [
        972440,
        1972500000
    ],
    [
        972420,
        1969769000
    ],
    [
        972410,
        1977610000
    ],
    [
        972400,
        1998447500
    ],
    [
        972390,
        2011457500
    ],
    [
        972380,
        2019694500
    ],
    [
        972360,
        2021000000
    ],
    [
        972350,
        2023211000
    ],
    [
        972340,
        2017445500
    ],
    [
        972330,
        2017637000
    ],
    [
        972320,
        2020441000
    ],
    [
        972310,
        2025215000
    ],
    [
        972300,
        2030430000
    ],
    [
        972290,
        2028994000
    ],
    [
        972270,
        2033631000
    ],
    [
        972260,
        2027601000
    ],
    [
        972250,
        2025090000
    ],
    [
        972240,
        2037950000
    ],
    [
        972220,
        2036980000
    ],
    [
        972210,
        2044718500
    ],
    [
        972160,
        2069265000
    ],
    [
        972150,
        2062942000
    ],
    [
        972130,
        2055346500
    ],
    [
        972120,
        2058369000
    ],
    [
        972110,
        2041574500
    ],
    [
        972090,
        2049848500
    ],
    [
        972080,
        2062168500
    ],
    [
        972070,
        2056565000
    ],
    [
        972060,
        2071863500
    ],
    [
        972050,
        2050308000
    ],
    [
        972030,
        2076555000
    ],
    [
        972020,
        2078110000
    ],
    [
        972010,
        2096480000
    ],
    [
        972000,
        2103879000
    ],
    [
        971990,
        2106555000
    ],
    [
        971980,
        2113352000
    ],
    [
        971960,
        2164000000
    ],
    [
        971950,
        1996537500
    ],
    [
        971940,
        1977137500
    ],
    [
        971920,
        1957336500
    ],
    [
        971910,
        1966098500
    ],
    [
        971890,
        2013225000
    ],
    [
        971860,
        1998000000
    ],
    [
        971850,
        1995114500
    ],
    [
        971840,
        1984214500
    ],
    [
        971830,
        1998000000
    ],
    [
        971800,
        2014500000
    ],
    [
        971780,
        2003035000
    ],
    [
        971770,
        1994475000
    ],
    [
        971750,
        1984865000
    ],
    [
        971740,
        1973245000
    ],
    [
        971730,
        1984805500
    ],
    [
        971680,
        1934370000
    ],
    [
        971660,
        1920532000
    ],
    [
        971650,
        1912000000
    ],
    [
        971640,
        1910230000
    ],
    [
        971630,
        1904965000
    ],
    [
        971620,
        1891995000
    ],
    [
        971600,
        1893935500
    ],
    [
        971580,
        1876415000
    ],
    [
        971560,
        1864858500
    ],
    [
        971550,
        1859339500
    ],
    [
        971540,
        1863566000
    ],
    [
        971520,
        1863021500
    ],
    [
        971510,
        1863623000
    ],
    [
        971500,
        1860182000
    ],
    [
        971480,
        1875635000
    ],
    [
        971470,
        1878000000
    ],
    [
        971460,
        1880850000
    ],
    [
        971450,
        1879367000
    ],
    [
        971440,
        1895553500
    ],
    [
        971430,
        1927724000
    ],
    [
        971420,
        1926869000
    ],
    [
        971410,
        1931387000
    ],
    [
        971400,
        1948527500
    ],
    [
        971380,
        1946818000
    ],
    [
        971360,
        1973765500
    ],
    [
        971350,
        1973576000
    ],
    [
        971340,
        1970001500
    ],
    [
        971330,
        1978668000
    ],
    [
        971320,
        1997055000
    ],
    [
        971310,
        2005110000
    ],
    [
        971260,
        1989285000
    ],
    [
        971250,
        1981343500
    ],
    [
        971240,
        1980328500
    ],
    [
        971190,
        1974000000
    ],
    [
        971180,
        1973510000
    ],
    [
        971170,
        1965380000
    ],
    [
        971160,
        1956740000
    ],
    [
        971150,
        1950940000
    ],
    [
        971130,
        1971119000
    ],
    [
        971120,
        1980000000
    ],
    [
        971110,
        1980655000
    ],
    [
        971090,
        1939335000
    ],
    [
        971080,
        1935321500
    ],
    [
        971060,
        1934097500
    ],
    [
        971050,
        1932175000
    ],
    [
        971040,
        1926380000
    ],
    [
        971030,
        1909520000
    ],
    [
        971020,
        1914800000
    ],
    [
        971010,
        1916480000
    ],
    [
        970990,
        1905075000
    ],
    [
        970980,
        1896279000
    ],
    [
        970970,
        1877558500
    ],
    [
        970960,
        1862394000
    ],
    [
        970950,
        1857284000
    ],
    [
        970940,
        1869328500
    ],
    [
        970920,
        1855688000
    ],
    [
        970890,
        1912320000
    ],
    [
        970880,
        1912926000
    ],
    [
        970860,
        1915117000
    ],
    [
        970850,
        1913909500
    ],
    [
        970810,
        1948665000
    ],
    [
        970800,
        1950625000
    ],
    [
        970790,
        1953260000
    ],
    [
        970780,
        1947285000
    ],
    [
        970770,
        1919000000
    ],
    [
        970750,
        1921234500
    ],
    [
        970740,
        1908377500
    ],
    [
        970730,
        1908500000
    ],
    [
        970720,
        1914685000
    ],
    [
        970710,
        1895967500
    ],
    [
        970690,
        1897480500
    ],
    [
        970680,
        1899590500
    ],
    [
        970670,
        1903425500
    ],
    [
        970610,
        1955500000
    ],
    [
        970590,
        1929327000
    ],
    [
        970580,
        1933546000
    ],
    [
        970570,
        1932569500
    ],
    [
        970550,
        1920000000
    ],
    [
        970540,
        1921025000
    ],
    [
        970530,
        1903351500
    ],
    [
        970520,
        1887091000
    ],
    [
        970510,
        1875908000
    ],
    [
        970500,
        1870000000
    ],
    [
        970490,
        1874205000
    ],
    [
        970480,
        1883000000
    ],
    [
        970470,
        1885000000
    ],
    [
        970460,
        1889087500
    ],
    [
        970450,
        1887805000
    ],
    [
        970430,
        1884615000
    ],
    [
        970420,
        1918645000
    ],
    [
        970410,
        1913500000
    ],
    [
        970390,
        1946170000
    ],
    [
        970380,
        1946553000
    ],
    [
        970370,
        1949500000
    ],
    [
        970360,
        1984770000
    ],
    [
        970350,
        1998327500
    ],
    [
        970340,
        2004105000
    ],
    [
        970330,
        2015656500
    ],
    [
        970310,
        1998220000
    ],
    [
        970300,
        1993335000
    ],
    [
        970290,
        1990990000
    ],
    [
        970280,
        1985460000
    ],
    [
        970260,
        1998920000
    ],
    [
        970250,
        2002500000
    ],
    [
        970240,
        2006342500
    ],
    [
        970230,
        2012464000
    ],
    [
        970220,
        2017434000
    ],
    [
        970210,
        2030710000
    ],
    [
        970200,
        2017765000
    ],
    [
        970190,
        2012755000
    ],
    [
        970180,
        2000620000
    ],
    [
        970120,
        2045500000
    ],
    [
        970110,
        2065500000
    ],
    [
        970080,
        2081565000
    ],
    [
        970050,
        2087000000
    ],
    [
        970040,
        2099634500
    ],
    [
        970020,
        2093423500
    ],
    [
        970010,
        2089008500
    ],
    [
        970000,
        2102008500
    ],
    [
        969980,
        2109216500
    ],
    [
        969970,
        2108808000
    ],
    [
        969960,
        2108912500
    ],
    [
        969950,
        2106122000
    ],
    [
        969940,
        2109014500
    ],
    [
        969930,
        2146650000
    ],
    [
        969920,
        2163500000
    ],
    [
        969910,
        2156800000
    ],
    [
        969900,
        2167800000
    ],
    [
        969890,
        2159952000
    ],
    [
        969880,
        2165867000
    ],
    [
        969870,
        2163530000
    ],
    [
        969860,
        2180287500
    ],
    [
        969840,
        2184000000
    ],
    [
        969830,
        2197819500
    ],
    [
        969800,
        2203639500
    ],
    [
        969780,
        2198750000
    ],
    [
        969770,
        2201665000
    ],
    [
        969760,
        2170000000
    ],
    [
        969750,
        2157195000
    ],
    [
        969740,
        2161013500
    ],
    [
        969730,
        2154427000
    ],
    [
        969710,
        2163535000
    ],
    [
        969700,
        2171525000
    ],
    [
        969690,
        2157015000
    ],
    [
        969660,
        2182500000
    ],
    [
        969650,
        2175850000
    ],
    [
        969640,
        2081500000
    ],
    [
        969630,
        2074533500
    ],
    [
        969620,
        2067916500
    ],
    [
        969600,
        2070090000
    ],
    [
        969590,
        2076681500
    ],
    [
        969580,
        2071886500
    ],
    [
        969570,
        2060705000
    ],
    [
        969560,
        2046672000
    ],
    [
        969550,
        2042560000
    ],
    [
        969540,
        2063090000
    ],
    [
        969520,
        2059215000
    ],
    [
        969510,
        2066231500
    ],
    [
        969490,
        2066865500
    ],
    [
        969480,
        2063200500
    ],
    [
        969470,
        2068715000
    ],
    [
        969450,
        2068880000
    ],
    [
        969430,
        2071500000
    ],
    [
        969410,
        2071280000
    ],
    [
        969400,
        2071574000
    ],
    [
        969390,
        2073642000
    ],
    [
        969380,
        2091452000
    ],
    [
        969340,
        1934000000
    ],
    [
        969320,
        1924965000
    ],
    [
        969310,
        1894500000
    ],
    [
        969260,
        1890620000
    ],
    [
        969250,
        1888524000
    ],
    [
        969240,
        1879000000
    ],
    [
        969220,
        1875835000
    ],
    [
        969210,
        1875425000
    ],
    [
        969200,
        1871625000
    ],
    [
        969190,
        1872460000
    ],
    [
        969180,
        1881794000
    ],
    [
        969170,
        1884760000
    ],
    [
        969160,
        1886960000
    ],
    [
        969150,
        1894205000
    ],
    [
        969140,
        1896735000
    ],
    [
        969120,
        1886601500
    ],
    [
        969090,
        1824850000
    ],
    [
        969080,
        1816087000
    ],
    [
        969070,
        1813307000
    ],
    [
        969060,
        1815220000
    ],
    [
        969050,
        1822023000
    ],
    [
        969040,
        1822399500
    ],
    [
        969030,
        1823528500
    ],
    [
        969020,
        1818246500
    ],
    [
        969010,
        1823401500
    ],
    [
        969000,
        1833796500
    ],
    [
        968990,
        1836350000
    ],
    [
        968980,
        1839410000
    ],
    [
        968970,
        1839795500
    ],
    [
        968960,
        1837744500
    ],
    [
        968950,
        1829735000
    ],
    [
        968930,
        1833330000
    ],
    [
        968920,
        1833385000
    ],
    [
        968890,
        1833940500
    ],
    [
        968880,
        1829840000
    ],
    [
        968870,
        1835350000
    ],
    [
        968860,
        1829840000
    ],
    [
        968810,
        1811990000
    ],
    [
        968800,
        1807280000
    ],
    [
        968770,
        1803000000
    ],
    [
        968750,
        1794500000
    ],
    [
        968740,
        1789960000
    ],
    [
        968700,
        1762650000
    ],
    [
        968690,
        1759500000
    ],
    [
        968680,
        1755264500
    ],
    [
        968650,
        1777114500
    ],
    [
        968640,
        1787179500
    ],
    [
        968630,
        1791765000
    ],
    [
        968610,
        1796500000
    ],
    [
        968600,
        1843535000
    ],
    [
        968570,
        1848192500
    ],
    [
        968550,
        1857685000
    ],
    [
        968540,
        1851795000
    ],
    [
        968520,
        1848305000
    ],
    [
        968500,
        1844540000
    ],
    [
        968490,
        1843040000
    ],
    [
        968480,
        1837390000
    ],
    [
        968470,
        1830350000
    ],
    [
        968460,
        1829954500
    ],
    [
        968440,
        1829000000
    ],
    [
        968430,
        1828795000
    ],
    [
        968420,
        1850405000
    ],
    [
        968410,
        1876040000
    ],
    [
        968390,
        1880350000
    ],
    [
        968360,
        1883500000
    ],
    [
        968350,
        1886711500
    ],
    [
        968340,
        1887135000
    ],
    [
        968330,
        1886540000
    ],
    [
        968320,
        1891475000
    ],
    [
        968310,
        1893317500
    ],
    [
        968240,
        1885000000
    ],
    [
        968210,
        1879700000
    ],
    [
        968200,
        1878066000
    ],
    [
        968190,
        1879700000
    ],
    [
        968180,
        1876354000
    ],
    [
        968170,
        1872380000
    ],
    [
        968160,
        1869130000
    ],
    [
        968150,
        1863565000
    ],
    [
        968130,
        1855765000
    ],
    [
        968110,
        1854838000
    ],
    [
        968090,
        1846390000
    ],
    [
        968080,
        1843531000
    ],
    [
        968070,
        1844630000
    ],
    [
        968050,
        1850231500
    ],
    [
        968040,
        1848578000
    ],
    [
        967960,
        1883000000
    ],
    [
        967940,
        1887340000
    ],
    [
        967930,
        1883000000
    ],
    [
        967900,
        1881357000
    ],
    [
        967890,
        1880862500
    ],
    [
        967880,
        1880261000
    ],
    [
        967870,
        1882637000
    ],
    [
        967850,
        1883000000
    ],
    [
        967830,
        1892020000
    ],
    [
        967810,
        1895180000
    ],
    [
        967780,
        1897520000
    ],
    [
        967770,
        1894818000
    ],
    [
        967750,
        1894305500
    ],
    [
        967740,
        1894044500
    ],
    [
        967730,
        1895479500
    ],
    [
        967710,
        1904110000
    ],
    [
        967690,
        1871000000
    ],
    [
        967670,
        1868380000
    ],
    [
        967570,
        1859500000
    ],
    [
        967540,
        1851190000
    ],
    [
        967530,
        1850269500
    ],
    [
        967510,
        1847434500
    ],
    [
        967490,
        1854500000
    ],
    [
        967480,
        1853486500
    ],
    [
        967460,
        1854749000
    ],
    [
        967450,
        1855950000
    ],
    [
        967440,
        1859095000
    ],
    [
        967410,
        1866625000
    ],
    [
        967360,
        1813750000
    ],
    [
        967340,
        1819248000
    ],
    [
        967330,
        1816670500
    ],
    [
        967300,
        1816220000
    ],
    [
        967270,
        1804000000
    ],
    [
        967260,
        1803797000
    ],
    [
        967240,
        1802312500
    ],
    [
        967230,
        1807062500
    ],
    [
        967220,
        1811240000
    ],
    [
        967210,
        1809307000
    ],
    [
        967200,
        1812680000
    ],
    [
        967180,
        1817072500
    ],
    [
        967150,
        1801500000
    ],
    [
        963660,
        1646548500
    ],
    [
        963460,
        1612000000
    ],
    [
        963100,
        1597600000
    ],
    [
        962420,
        1585500000
    ],
    [
        962190,
        1589000000
    ],
    [
        962090,
        1591300000
    ],
    [
        962040,
        1582000000
    ],
    [
        961910,
        1648820000
    ],
    [
        961810,
        1631495000
    ],
    [
        961690,
        1674258000
    ],
    [
        961480,
        1684000000
    ],
    [
        961440,
        1665000000
    ],
    [
        961430,
        1670040000
    ],
    [
        961410,
        1676600000
    ],
    [
        961390,
        1643120000
    ],
    [
        961380,
        1643850000
    ],
    [
        961360,
        1641450000
    ],
    [
        961320,
        1638433000
    ],
    [
        961250,
        1697080000
    ],
    [
        961220,
        1715000000
    ],
    [
        961190,
        1715010000
    ],
    [
        961180,
        1704000000
    ],
    [
        961160,
        1700010000
    ],
    [
        961120,
        1704000000
    ],
    [
        961110,
        1699235000
    ],
    [
        961090,
        1704000000
    ],
    [
        961080,
        1702830000
    ],
    [
        961030,
        1684000000
    ],
    [
        960980,
        1683000000
    ],
    [
        960970,
        1690000000
    ],
    [
        960950,
        1692579000
    ],
    [
        960940,
        1685480000
    ],
    [
        960910,
        1691050000
    ],
    [
        960880,
        1693250000
    ],
    [
        960850,
        1698120000
    ],
    [
        960830,
        1675750000
    ],
    [
        960750,
        1717660000
    ],
    [
        960730,
        1727480000
    ],
    [
        960680,
        1785304000
    ],
    [
        960650,
        1794000000
    ],
    [
        960630,
        1790000000
    ],
    [
        960620,
        1785304000
    ],
    [
        960590,
        1797530000
    ],
    [
        960580,
        1798810000
    ],
    [
        960550,
        1799990000
    ],
    [
        960530,
        1809000000
    ],
    [
        960520,
        1803200000
    ],
    [
        960490,
        1785304000
    ],
    [
        960460,
        1832000000
    ],
    [
        960430,
        1845160000
    ],
    [
        960420,
        1864900000
    ],
    [
        960390,
        1894080000
    ],
    [
        960370,
        1864900000
    ],
    [
        960360,
        1860000000
    ],
    [
        960320,
        1864900000
    ],
    [
        960300,
        1830000000
    ],
    [
        960290,
        1808000000
    ],
    [
        960260,
        1801220000
    ],
    [
        960240,
        1779900000
    ],
    [
        960230,
        1777670000
    ],
    [
        960170,
        1808000000
    ],
    [
        960080,
        1689000000
    ],
    [
        960070,
        1688170000
    ],
    [
        960060,
        1691570000
    ],
    [
        960000,
        1692000000
    ],
    [
        959970,
        1682790000
    ],
    [
        959950,
        1657500000
    ],
    [
        959940,
        1649000000
    ],
    [
        959820,
        1549650000
    ],
    [
        959740,
        1425951500
    ],
    [
        959720,
        1426000000
    ],
    [
        959690,
        1439123000
    ],
    [
        959650,
        1441500000
    ],
    [
        959640,
        1443960000
    ],
    [
        959630,
        1440395000
    ],
    [
        959620,
        1441895000
    ],
    [
        959610,
        1443570000
    ],
    [
        959550,
        1437885000
    ],
    [
        959540,
        1443505000
    ],
    [
        959480,
        1444000000
    ],
    [
        959450,
        1444991000
    ],
    [
        959420,
        1443365000
    ],
    [
        959390,
        1443360000
    ],
    [
        959380,
        1443275000
    ],
    [
        959370,
        1443360000
    ],
    [
        959350,
        1440810000
    ],
    [
        959330,
        1440992500
    ],
    [
        959310,
        1436882500
    ],
    [
        959280,
        1436555000
    ],
    [
        959250,
        1435382500
    ],
    [
        959220,
        1436640500
    ],
    [
        959200,
        1433865000
    ],
    [
        959190,
        1432675000
    ],
    [
        959170,
        1445140500
    ],
    [
        959100,
        1450150000
    ],
    [
        959090,
        1450650000
    ],
    [
        959060,
        1445750000
    ],
    [
        958990,
        1449325000
    ],
    [
        958960,
        1447830000
    ],
    [
        958890,
        1435330000
    ],
    [
        958870,
        1440625000
    ],
    [
        958840,
        1449150000
    ],
    [
        958810,
        1453280000
    ],
    [
        958800,
        1453565000
    ],
    [
        958770,
        1466000000
    ],
    [
        958750,
        1467000000
    ],
    [
        958740,
        1468385000
    ],
    [
        958680,
        1470147000
    ],
    [
        958660,
        1472500000
    ],
    [
        958640,
        1473750000
    ],
    [
        958630,
        1475500000
    ],
    [
        958620,
        1474270000
    ],
    [
        958600,
        1469520000
    ],
    [
        958590,
        1467255000
    ],
    [
        958580,
        1468000000
    ],
    [
        958560,
        1475000000
    ],
    [
        958550,
        1477190000
    ],
    [
        958540,
        1472570000
    ],
    [
        958530,
        1478080000
    ],
    [
        958520,
        1478405000
    ],
    [
        958500,
        1482080000
    ],
    [
        958480,
        1509530000
    ],
    [
        958470,
        1509217500
    ],
    [
        958440,
        1517320500
    ],
    [
        958410,
        1524660000
    ],
    [
        958400,
        1509810500
    ],
    [
        958380,
        1469000000
    ],
    [
        958340,
        1464356500
    ],
    [
        958320,
        1460911500
    ],
    [
        958310,
        1464356500
    ],
    [
        958280,
        1456671500
    ],
    [
        958260,
        1455880000
    ],
    [
        958250,
        1456340000
    ],
    [
        958240,
        1452759500
    ],
    [
        958230,
        1459380000
    ],
    [
        958210,
        1460685000
    ],
    [
        958190,
        1458328000
    ],
    [
        958180,
        1461938000
    ],
    [
        958150,
        1464905000
    ],
    [
        958120,
        1463120000
    ],
    [
        958110,
        1443171000
    ],
    [
        958090,
        1431000000
    ],
    [
        958060,
        1417442000
    ],
    [
        958020,
        1417227000
    ],
    [
        958000,
        1415697000
    ],
    [
        957990,
        1405017000
    ],
    [
        957980,
        1415593000
    ],
    [
        957960,
        1415398000
    ],
    [
        957950,
        1412238000
    ],
    [
        957930,
        1406263000
    ],
    [
        957890,
        1426628000
    ],
    [
        957870,
        1436690000
    ],
    [
        957830,
        1454643500
    ],
    [
        957820,
        1455870000
    ],
    [
        957810,
        1456670000
    ],
    [
        957800,
        1456710000
    ],
    [
        957790,
        1460800000
    ],
    [
        957770,
        1461040000
    ],
    [
        957760,
        1459040000
    ],
    [
        957730,
        1454095500
    ],
    [
        957710,
        1450500500
    ],
    [
        957670,
        1454095500
    ],
    [
        957630,
        1443500000
    ],
    [
        957570,
        1444135000
    ],
    [
        957560,
        1426340000
    ],
    [
        957550,
        1427320000
    ],
    [
        957540,
        1411500000
    ],
    [
        957510,
        1399333000
    ],
    [
        957500,
        1396963000
    ],
    [
        957490,
        1398273000
    ],
    [
        957470,
        1404985500
    ],
    [
        957460,
        1396000000
    ],
    [
        957440,
        1395540000
    ],
    [
        957360,
        1396000000
    ],
    [
        957340,
        1383695000
    ],
    [
        957320,
        1374195000
    ],
    [
        957310,
        1373500500
    ],
    [
        957280,
        1374995500
    ],
    [
        957270,
        1372495500
    ],
    [
        957250,
        1374995500
    ],
    [
        957220,
        1373855500
    ],
    [
        957210,
        1398231500
    ],
    [
        957190,
        1404081500
    ],
    [
        957160,
        1407221500
    ],
    [
        957150,
        1420611500
    ],
    [
        957120,
        1379500000
    ],
    [
        957050,
        1374908500
    ],
    [
        957020,
        1370523500
    ],
    [
        957000,
        1367690000
    ],
    [
        956990,
        1368385000
    ],
    [
        956970,
        1367370000
    ],
    [
        956960,
        1368355000
    ],
    [
        956920,
        1370270000
    ],
    [
        956900,
        1372240000
    ],
    [
        956860,
        1367115000
    ],
    [
        956840,
        1366420000
    ],
    [
        956830,
        1366105000
    ],
    [
        956800,
        1367115000
    ],
    [
        956790,
        1367750000
    ],
    [
        956770,
        1373942500
    ],
    [
        956760,
        1373678500
    ],
    [
        956710,
        1375083500
    ],
    [
        956700,
        1372303500
    ],
    [
        956660,
        1365583500
    ],
    [
        956640,
        1363000000
    ],
    [
        956610,
        1352054000
    ],
    [
        956560,
        1352132500
    ],
    [
        956490,
        1345000000
    ],
    [
        956460,
        1345500000
    ],
    [
        956450,
        1348446000
    ],
    [
        956430,
        1344120000
    ],
    [
        956400,
        1341000000
    ],
    [
        956360,
        1360255000
    ],
    [
        956350,
        1362085000
    ],
    [
        956340,
        1371660000
    ],
    [
        956320,
        1384360000
    ],
    [
        956270,
        1384419000
    ],
    [
        956240,
        1385000000
    ],
    [
        956200,
        1384419000
    ],
    [
        956180,
        1374000000
    ],
    [
        956170,
        1385000000
    ],
    [
        956160,
        1387400000
    ],
    [
        956120,
        1385000000
    ],
    [
        956110,
        1391900000
    ],
    [
        955810,
        1391940000
    ],
    [
        955780,
        1391000000
    ],
    [
        955660,
        1391940000
    ],
    [
        955650,
        1391938000
    ],
    [
        955630,
        1396000000
    ],
    [
        955580,
        1391938000
    ],
    [
        955560,
        1391399000
    ],
    [
        955540,
        1390000000
    ],
    [
        955530,
        1388490000
    ],
    [
        955510,
        1385000000
    ],
    [
        955480,
        1383380000
    ],
    [
        955450,
        1377680000
    ],
    [
        955420,
        1377520000
    ],
    [
        955250,
        1383749000
    ],
    [
        955220,
        1384000000
    ],
    [
        955160,
        1385000000
    ],
    [
        955150,
        1391530000
    ],
    [
        955090,
        1387960000
    ],
    [
        955080,
        1387530000
    ],
    [
        954990,
        1395981000
    ],
    [
        954950,
        1387000000
    ],
    [
        954920,
        1385000000
    ],
    [
        954880,
        1372814000
    ],
    [
        954850,
        1362464000
    ],
    [
        954840,
        1361569000
    ],
    [
        954810,
        1361049000
    ],
    [
        954800,
        1356260000
    ],
    [
        954750,
        1355000000
    ],
    [
        954720,
        1350160000
    ],
    [
        954680,
        1352860000
    ],
    [
        954590,
        1350140000
    ],
    [
        954580,
        1343800000
    ],
    [
        954570,
        1349090000
    ],
    [
        954550,
        1352390000
    ],
    [
        954520,
        1349000000
    ],
    [
        954390,
        1346313000
    ],
    [
        954360,
        1343380000
    ],
    [
        954340,
        1341730000
    ],
    [
        954330,
        1344460000
    ],
    [
        954300,
        1327000000
    ],
    [
        954270,
        1322660000
    ],
    [
        954210,
        1319060000
    ],
    [
        954150,
        1338000000
    ],
    [
        954140,
        1332900000
    ],
    [
        954040,
        1325000000
    ],
    [
        953990,
        1317761000
    ],
    [
        953910,
        1321728000
    ],
    [
        953850,
        1321030000
    ],
    [
        953810,
        1325000000
    ],
    [
        953790,
        1324940000
    ],
    [
        953770,
        1324890000
    ],
    [
        953740,
        1325000000
    ],
    [
        953730,
        1323350000
    ],
    [
        953540,
        1313930000
    ],
    [
        953500,
        1313540000
    ],
    [
        953480,
        1311965000
    ],
    [
        953460,
        1313175000
    ],
    [
        953450,
        1313390000
    ],
    [
        953440,
        1314855000
    ],
    [
        953430,
        1317635000
    ],
    [
        953410,
        1307364000
    ],
    [
        953400,
        1306889000
    ],
    [
        953370,
        1307289000
    ],
    [
        953280,
        1302864000
    ],
    [
        953210,
        1304009000
    ],
    [
        953200,
        1303734000
    ],
    [
        953190,
        1302864000
    ],
    [
        953160,
        1314857500
    ],
    [
        953110,
        1315357500
    ],
    [
        953100,
        1336985000
    ],
    [
        953070,
        1342245000
    ],
    [
        953010,
        1343450000
    ],
    [
        952990,
        1339640000
    ],
    [
        952980,
        1334380000
    ],
    [
        952940,
        1330447500
    ],
    [
        952880,
        1328932500
    ],
    [
        952850,
        1330765000
    ],
    [
        952830,
        1329295000
    ],
    [
        952810,
        1332525000
    ],
    [
        952780,
        1317841500
    ],
    [
        952680,
        1321301500
    ],
    [
        952640,
        1312796500
    ],
    [
        952610,
        1313746500
    ],
    [
        952580,
        1324000000
    ],
    [
        952560,
        1328090000
    ],
    [
        952550,
        1330720000
    ],
    [
        952540,
        1328850000
    ],
    [
        952510,
        1328240000
    ],
    [
        952480,
        1332230000
    ],
    [
        952450,
        1328090000
    ],
    [
        952440,
        1337000000
    ],
    [
        952430,
        1338410000
    ],
    [
        952410,
        1338490000
    ],
    [
        952400,
        1337870000
    ],
    [
        952370,
        1337000000
    ],
    [
        952360,
        1339850000
    ],
    [
        952340,
        1337000000
    ],
    [
        952300,
        1335340000
    ],
    [
        952280,
        1334070000
    ],
    [
        952270,
        1335340000
    ],
    [
        952250,
        1335845000
    ],
    [
        952180,
        1334000000
    ],
    [
        952110,
        1344200000
    ],
    [
        952030,
        1340000000
    ],
    [
        951980,
        1331320000
    ],
    [
        951970,
        1330200000
    ],
    [
        951840,
        1316600000
    ],
    [
        951830,
        1313650000
    ],
    [
        951820,
        1314775000
    ],
    [
        951810,
        1314520000
    ],
    [
        951800,
        1314745000
    ],
    [
        951760,
        1315395000
    ],
    [
        951750,
        1311995000
    ],
    [
        951710,
        1306000000
    ],
    [
        951700,
        1303485000
    ],
    [
        951680,
        1296860000
    ],
    [
        951650,
        1295410000
    ],
    [
        951610,
        1303485000
    ],
    [
        951590,
        1303665000
    ],
    [
        951560,
        1303485000
    ],
    [
        951540,
        1304055000
    ],
    [
        951530,
        1303485000
    ],
    [
        951510,
        1305000000
    ],
    [
        951500,
        1303520000
    ],
    [
        951490,
        1303485000
    ],
    [
        951480,
        1306000000
    ],
    [
        951470,
        1306028500
    ],
    [
        951440,
        1307783500
    ],
    [
        951410,
        1306028500
    ],
    [
        951370,
        1309000000
    ],
    [
        951350,
        1310749000
    ],
    [
        951340,
        1313249000
    ],
    [
        951310,
        1314000000
    ],
    [
        951280,
        1314950000
    ],
    [
        951230,
        1314000000
    ],
    [
        951220,
        1314285000
    ],
    [
        951210,
        1315000000
    ],
    [
        951200,
        1315450000
    ],
    [
        951170,
        1315000000
    ],
    [
        951120,
        1315450000
    ],
    [
        951100,
        1316180000
    ],
    [
        951080,
        1318892500
    ],
    [
        951070,
        1318650000
    ],
    [
        951050,
        1316530000
    ],
    [
        951010,
        1313904500
    ],
    [
        950990,
        1313500000
    ],
    [
        950980,
        1314950000
    ],
    [
        950950,
        1316180000
    ],
    [
        950840,
        1316530000
    ],
    [
        950830,
        1317300000
    ],
    [
        950810,
        1316645000
    ],
    [
        950800,
        1317230000
    ],
    [
        950760,
        1316180000
    ],
    [
        950740,
        1324500000
    ],
    [
        950710,
        1328000000
    ],
    [
        950680,
        1328600000
    ],
    [
        950460,
        1328000000
    ],
    [
        950440,
        1327960000
    ],
    [
        950430,
        1321910000
    ],
    [
        950410,
        1318882000
    ],
    [
        950400,
        1320400000
    ],
    [
        950380,
        1325000000
    ],
    [
        950370,
        1323000000
    ],
    [
        950340,
        1325769000
    ],
    [
        950330,
        1315850000
    ],
    [
        950280,
        1313743000
    ],
    [
        950220,
        1300000000
    ],
    [
        950210,
        1299000000
    ],
    [
        950180,
        1300000000
    ],
    [
        950150,
        1299000000
    ],
    [
        950120,
        1294230000
    ],
    [
        950110,
        1292000000
    ],
    [
        950090,
        1294619000
    ],
    [
        950060,
        1292330000
    ],
    [
        950040,
        1292000000
    ],
    [
        949970,
        1331000000
    ],
    [
        949960,
        1323000000
    ],
    [
        949940,
        1330540000
    ],
    [
        949930,
        1335550000
    ],
    [
        949900,
        1324740000
    ],
    [
        949860,
        1325310000
    ],
    [
        949830,
        1324424000
    ],
    [
        949770,
        1323000000
    ],
    [
        949690,
        1344482000
    ],
    [
        949670,
        1337600000
    ],
    [
        949630,
        1331455000
    ],
    [
        949620,
        1328000000
    ],
    [
        949430,
        1324000000
    ],
    [
        949370,
        1334000000
    ],
    [
        949310,
        1329095500
    ],
    [
        949260,
        1323895500
    ],
    [
        949160,
        1319000000
    ],
    [
        949130,
        1318665000
    ],
    [
        949120,
        1317122000
    ],
    [
        949090,
        1318622000
    ],
    [
        949080,
        1320105000
    ],
    [
        948910,
        1320745000
    ],
    [
        948890,
        1328500000
    ],
    [
        948700,
        1335000000
    ],
    [
        948660,
        1342729500
    ],
    [
        948650,
        1332663000
    ],
    [
        948600,
        1328773000
    ],
    [
        948540,
        1327745000
    ],
    [
        948470,
        1328760000
    ],
    [
        948410,
        1324760000
    ],
    [
        948370,
        1310456000
    ],
    [
        948360,
        1309866000
    ],
    [
        948340,
        1308366000
    ],
    [
        948310,
        1311000000
    ],
    [
        948300,
        1313235000
    ],
    [
        948260,
        1311000000
    ],
    [
        948230,
        1312715000
    ],
    [
        948210,
        1333197000
    ],
    [
        948200,
        1334075000
    ],
    [
        948150,
        1337000000
    ],
    [
        948120,
        1339468000
    ],
    [
        948110,
        1342858000
    ],
    [
        948100,
        1343650000
    ],
    [
        948090,
        1345390000
    ],
    [
        948070,
        1347690000
    ],
    [
        948040,
        1350130000
    ],
    [
        947990,
        1337666000
    ],
    [
        947920,
        1343900500
    ],
    [
        947900,
        1348807000
    ],
    [
        947850,
        1357807000
    ],
    [
        947820,
        1359485000
    ],
    [
        947780,
        1367807000
    ],
    [
        947750,
        1384235500
    ],
    [
        947720,
        1391550000
    ],
    [
        947710,
        1391010500
    ],
    [
        947690,
        1390715000
    ],
    [
        947650,
        1387775000
    ],
    [
        947620,
        1388375500
    ],
    [
        947600,
        1388440000
    ],
    [
        947580,
        1403025000
    ],
    [
        947540,
        1407585000
    ],
    [
        947520,
        1402830000
    ],
    [
        947490,
        1402775000
    ],
    [
        947450,
        1405405000
    ],
    [
        947430,
        1408800000
    ],
    [
        947310,
        1416296000
    ],
    [
        947250,
        1412000000
    ],
    [
        947240,
        1413500000
    ],
    [
        947210,
        1411000000
    ],
    [
        947200,
        1407780000
    ],
    [
        947170,
        1407500000
    ],
    [
        947160,
        1405500000
    ],
    [
        947070,
        1407500000
    ],
    [
        947060,
        1420220500
    ],
    [
        947040,
        1427120500
    ],
    [
        947030,
        1428105500
    ],
    [
        947020,
        1414708500
    ],
    [
        946900,
        1392275000
    ],
    [
        946820,
        1380500000
    ],
    [
        946810,
        1376890000
    ],
    [
        946710,
        1380500000
    ],
    [
        946630,
        1377501000
    ],
    [
        946610,
        1374000000
    ],
    [
        946570,
        1372000000
    ],
    [
        946520,
        1382036000
    ],
    [
        946510,
        1381072000
    ],
    [
        946180,
        1383000000
    ],
    [
        946020,
        1410000000
    ],
    [
        946010,
        1417050000
    ],
    [
        945950,
        1438000000
    ],
    [
        945830,
        1455000000
    ],
    [
        945760,
        1454000000
    ],
    [
        945710,
        1460010000
    ],
    [
        945670,
        1447579500
    ],
    [
        945560,
        1417050000
    ],
    [
        945490,
        1320359000
    ],
    [
        945160,
        1304000000
    ],
    [
        945130,
        1296000000
    ],
    [
        945120,
        1300100000
    ],
    [
        945100,
        1297961000
    ],
    [
        945090,
        1296000000
    ],
    [
        945070,
        1297370000
    ],
    [
        944950,
        1296000000
    ],
    [
        944890,
        1291589000
    ],
    [
        944880,
        1288290000
    ],
    [
        944860,
        1275921000
    ],
    [
        944820,
        1269000000
    ],
    [
        944810,
        1258353000
    ],
    [
        944780,
        1242000000
    ],
    [
        944770,
        1238050000
    ],
    [
        944750,
        1225000000
    ],
    [
        944720,
        1222720000
    ],
    [
        944690,
        1215892000
    ],
    [
        944670,
        1211000000
    ],
    [
        944660,
        1209000000
    ],
    [
        944650,
        1205978000
    ],
    [
        944620,
        1209000000
    ],
    [
        944590,
        1196320000
    ],
    [
        944570,
        1202000000
    ],
    [
        944510,
        1216600000
    ],
    [
        944410,
        1243000000
    ],
    [
        944390,
        1240705000
    ],
    [
        944370,
        1238050000
    ],
    [
        944350,
        1240220000
    ],
    [
        944330,
        1238050000
    ],
    [
        944310,
        1237690000
    ],
    [
        944300,
        1236000000
    ],
    [
        944290,
        1237690000
    ],
    [
        944260,
        1236000000
    ],
    [
        944190,
        1232870000
    ],
    [
        944160,
        1229470000
    ],
    [
        944150,
        1229260000
    ],
    [
        944120,
        1232870000
    ],
    [
        944110,
        1234510000
    ],
    [
        944080,
        1244970000
    ],
    [
        943970,
        1226092000
    ],
    [
        943860,
        1225000000
    ],
    [
        943780,
        1225546000
    ],
    [
        943750,
        1226092000
    ],
    [
        943740,
        1225780000
    ],
    [
        943710,
        1224200000
    ],
    [
        943650,
        1219000000
    ],
    [
        943620,
        1226704000
    ],
    [
        943600,
        1231910000
    ],
    [
        943590,
        1231200000
    ],
    [
        943550,
        1226704000
    ],
    [
        943530,
        1225190000
    ],
    [
        943360,
        1226704000
    ],
    [
        943270,
        1226000000
    ],
    [
        943260,
        1221000000
    ],
    [
        943140,
        1226000000
    ],
    [
        943130,
        1234972000
    ],
    [
        943040,
        1245000000
    ],
    [
        942900,
        1250320000
    ],
    [
        942850,
        1260100000
    ],
    [
        942650,
        1258000000
    ],
    [
        942520,
        1259000000
    ],
    [
        942490,
        1273292000
    ],
    [
        942480,
        1276400000
    ],
    [
        942470,
        1276720000
    ],
    [
        942460,
        1278000000
    ],
    [
        942400,
        1275000000
    ],
    [
        942380,
        1260100000
    ],
    [
        942320,
        1257000000
    ],
    [
        942300,
        1256000000
    ],
    [
        942290,
        1237641500
    ],
    [
        942270,
        1232516500
    ],
    [
        942260,
        1232506500
    ],
    [
        942240,
        1243445000
    ],
    [
        942230,
        1244090000
    ],
    [
        942210,
        1248045000
    ],
    [
        942200,
        1253500000
    ],
    [
        942190,
        1231500000
    ],
    [
        942150,
        1221000000
    ],
    [
        942120,
        1247580000
    ],
    [
        942110,
        1249740000
    ],
    [
        942080,
        1247776000
    ],
    [
        942040,
        1245000000
    ],
    [
        942030,
        1242510000
    ],
    [
        941990,
        1240000000
    ],
    [
        941980,
        1237930000
    ],
    [
        941960,
        1199539000
    ],
    [
        941920,
        1194000000
    ],
    [
        941900,
        1183129000
    ],
    [
        941790,
        1139000000
    ],
    [
        941750,
        1138037000
    ],
    [
        941720,
        1138000000
    ],
    [
        941700,
        1138980000
    ],
    [
        941660,
        1138000000
    ],
    [
        941630,
        1137000000
    ],
    [
        941620,
        1136600000
    ],
    [
        941590,
        1134290000
    ],
    [
        941560,
        1136600000
    ],
    [
        941530,
        1143000000
    ],
    [
        941510,
        1143610000
    ],
    [
        941500,
        1140000000
    ],
    [
        941480,
        1139310000
    ],
    [
        941470,
        1137670000
    ],
    [
        941450,
        1136600000
    ],
    [
        941440,
        1137920000
    ],
    [
        941410,
        1140000000
    ],
    [
        941350,
        1128819000
    ],
    [
        941340,
        1131920000
    ],
    [
        941260,
        1136600000
    ],
    [
        941240,
        1148430000
    ],
    [
        941170,
        1149000000
    ],
    [
        941130,
        1145000000
    ],
    [
        941120,
        1141663000
    ],
    [
        940950,
        1142000000
    ],
    [
        940880,
        1143000000
    ],
    [
        940860,
        1142000000
    ],
    [
        940850,
        1144000000
    ],
    [
        940820,
        1142940000
    ],
    [
        940810,
        1141380000
    ],
    [
        940780,
        1142010000
    ],
    [
        940770,
        1142420000
    ],
    [
        940750,
        1141174000
    ],
    [
        940730,
        1144000000
    ],
    [
        940710,
        1136600000
    ],
    [
        940700,
        1135200000
    ],
    [
        940630,
        1132000000
    ],
    [
        940620,
        1132600000
    ],
    [
        940610,
        1135200000
    ],
    [
        940540,
        1170000000
    ],
    [
        940510,
        1184635500
    ],
    [
        940500,
        1184290000
    ],
    [
        940490,
        1183990000
    ],
    [
        940420,
        1200000000
    ],
    [
        940380,
        1192980000
    ],
    [
        940290,
        1192000000
    ],
    [
        940280,
        1183590000
    ],
    [
        940270,
        1183909500
    ],
    [
        940260,
        1183499500
    ],
    [
        940250,
        1178684500
    ],
    [
        940240,
        1172355000
    ],
    [
        940190,
        1171000000
    ],
    [
        940170,
        1163159000
    ],
    [
        940160,
        1162654000
    ],
    [
        940150,
        1164229000
    ],
    [
        940130,
        1164950000
    ],
    [
        940120,
        1162875000
    ],
    [
        940090,
        1164203500
    ],
    [
        940070,
        1148520000
    ],
    [
        939660,
        1145000000
    ],
    [
        939640,
        1147100000
    ],
    [
        939630,
        1141390500
    ],
    [
        939610,
        1144325500
    ],
    [
        939600,
        1140090500
    ],
    [
        939580,
        1141694000
    ],
    [
        939550,
        1149000000
    ],
    [
        939540,
        1149620000
    ],
    [
        939520,
        1153271500
    ],
    [
        939480,
        1150771500
    ],
    [
        939460,
        1152060500
    ],
    [
        939420,
        1230000000
    ],
    [
        939310,
        1231900000
    ],
    [
        939300,
        1232000000
    ],
    [
        939280,
        1231900000
    ],
    [
        939270,
        1234400000
    ],
    [
        939260,
        1236365000
    ],
    [
        939230,
        1234400000
    ],
    [
        939200,
        1226100000
    ],
    [
        939190,
        1225500000
    ],
    [
        939170,
        1224975000
    ],
    [
        939150,
        1230000000
    ],
    [
        939140,
        1231800000
    ],
    [
        939120,
        1232460000
    ],
    [
        939090,
        1223500000
    ],
    [
        939070,
        1221735000
    ],
    [
        939060,
        1222320000
    ],
    [
        939000,
        1215000000
    ],
    [
        938990,
        1214085000
    ],
    [
        938980,
        1225492500
    ],
    [
        938960,
        1229575000
    ],
    [
        938950,
        1230005000
    ],
    [
        938920,
        1244501000
    ],
    [
        938900,
        1246056000
    ],
    [
        938890,
        1245551000
    ],
    [
        938880,
        1248000000
    ],
    [
        938860,
        1246500000
    ],
    [
        938840,
        1244755000
    ],
    [
        938750,
        1247860000
    ],
    [
        938690,
        1245360000
    ],
    [
        938670,
        1236000000
    ],
    [
        938660,
        1234440000
    ],
    [
        938630,
        1236000000
    ],
    [
        938540,
        1227500000
    ],
    [
        938490,
        1226326500
    ],
    [
        938470,
        1226430000
    ],
    [
        938460,
        1224220000
    ],
    [
        938450,
        1227500000
    ],
    [
        938440,
        1229305000
    ],
    [
        938430,
        1227425000
    ],
    [
        938400,
        1229495000
    ],
    [
        938390,
        1230365000
    ],
    [
        938380,
        1229747000
    ],
    [
        938350,
        1228062000
    ],
    [
        938340,
        1231927000
    ],
    [
        938330,
        1240572000
    ],
    [
        938290,
        1210000000
    ],
    [
        938260,
        1209270000
    ],
    [
        938250,
        1208770000
    ],
    [
        938230,
        1176810000
    ],
    [
        938210,
        1201704000
    ],
    [
        938190,
        1198204000
    ],
    [
        938180,
        1195414000
    ],
    [
        938170,
        1183735000
    ],
    [
        938150,
        1178630000
    ],
    [
        938080,
        1167439500
    ],
    [
        938050,
        1164439500
    ],
    [
        938030,
        1163870000
    ],
    [
        938020,
        1163685000
    ],
    [
        937990,
        1162370000
    ],
    [
        937980,
        1161794500
    ],
    [
        937950,
        1162164500
    ],
    [
        937940,
        1164010000
    ],
    [
        937930,
        1162605000
    ],
    [
        937920,
        1166450000
    ],
    [
        937900,
        1168585000
    ],
    [
        937890,
        1169695000
    ],
    [
        937880,
        1171960000
    ],
    [
        937870,
        1172610000
    ],
    [
        937860,
        1174850000
    ],
    [
        937850,
        1175035000
    ],
    [
        937790,
        1176315500
    ],
    [
        937770,
        1175500000
    ],
    [
        937740,
        1174915000
    ],
    [
        937730,
        1173345000
    ],
    [
        937720,
        1178285500
    ],
    [
        937700,
        1178815500
    ],
    [
        937690,
        1176795500
    ],
    [
        937660,
        1178421500
    ],
    [
        937620,
        1162500000
    ],
    [
        937610,
        1162410000
    ],
    [
        937590,
        1169496000
    ],
    [
        937580,
        1181026000
    ],
    [
        937560,
        1202662500
    ],
    [
        937550,
        1208872500
    ],
    [
        937540,
        1206402500
    ],
    [
        937530,
        1207207500
    ],
    [
        937510,
        1218797500
    ],
    [
        937500,
        1222787500
    ],
    [
        937470,
        1222032500
    ],
    [
        937460,
        1223657500
    ],
    [
        937430,
        1211917500
    ],
    [
        937420,
        1217892500
    ],
    [
        937360,
        1184000000
    ],
    [
        937350,
        1188485000
    ],
    [
        937340,
        1193500000
    ],
    [
        937330,
        1197330000
    ],
    [
        937320,
        1197325000
    ],
    [
        937270,
        1198000000
    ],
    [
        937260,
        1197325000
    ],
    [
        937250,
        1198000000
    ],
    [
        937240,
        1205430500
    ],
    [
        937230,
        1200205500
    ],
    [
        937200,
        1212595500
    ],
    [
        937190,
        1207522500
    ],
    [
        937180,
        1205877500
    ],
    [
        937150,
        1189000000
    ],
    [
        937120,
        1185902000
    ],
    [
        937110,
        1184072000
    ],
    [
        937100,
        1185317000
    ],
    [
        937090,
        1184872000
    ],
    [
        937070,
        1186635000
    ],
    [
        937060,
        1188465000
    ],
    [
        937040,
        1191000000
    ],
    [
        937020,
        1181291500
    ],
    [
        936980,
        1168000000
    ],
    [
        936960,
        1165080000
    ],
    [
        936940,
        1166580000
    ],
    [
        936910,
        1165160000
    ],
    [
        936890,
        1136128000
    ],
    [
        936800,
        1126785000
    ],
    [
        936790,
        1126240000
    ],
    [
        936780,
        1121240000
    ],
    [
        936750,
        1121785000
    ],
    [
        936680,
        1117605000
    ],
    [
        936650,
        1116897500
    ],
    [
        936620,
        1115235000
    ],
    [
        936580,
        1114000000
    ],
    [
        936560,
        1113950000
    ],
    [
        936550,
        1114000000
    ],
    [
        936500,
        1114201500
    ],
    [
        936480,
        1114995000
    ],
    [
        936460,
        1114000000
    ],
    [
        936440,
        1128252000
    ],
    [
        936430,
        1129770000
    ],
    [
        936410,
        1134240000
    ],
    [
        936400,
        1137965000
    ],
    [
        936390,
        1140965000
    ],
    [
        936370,
        1141210000
    ],
    [
        936360,
        1143475000
    ],
    [
        936350,
        1143518500
    ],
    [
        936340,
        1147078500
    ],
    [
        936330,
        1146798500
    ],
    [
        936320,
        1147233500
    ],
    [
        936310,
        1147933500
    ],
    [
        936290,
        1141923500
    ],
    [
        936260,
        1136008500
    ],
    [
        936250,
        1135008500
    ],
    [
        936240,
        1135180000
    ],
    [
        936230,
        1135065000
    ],
    [
        936220,
        1136000000
    ],
    [
        936200,
        1154429000
    ],
    [
        936180,
        1154104000
    ],
    [
        936170,
        1153379000
    ],
    [
        936140,
        1148429000
    ],
    [
        936070,
        1139371500
    ],
    [
        936060,
        1139210000
    ],
    [
        936020,
        1140210000
    ],
    [
        935990,
        1142000000
    ],
    [
        935970,
        1147087500
    ],
    [
        935960,
        1152312500
    ],
    [
        935940,
        1138213500
    ],
    [
        935900,
        1125713500
    ],
    [
        935890,
        1119632500
    ],
    [
        935830,
        1114632500
    ],
    [
        935820,
        1113622500
    ],
    [
        935810,
        1114952500
    ],
    [
        935790,
        1116132500
    ],
    [
        935770,
        1119385500
    ],
    [
        935760,
        1116885500
    ],
    [
        935720,
        1116500000
    ],
    [
        935710,
        1114520000
    ],
    [
        935690,
        1113520000
    ],
    [
        935670,
        1115305000
    ],
    [
        935660,
        1115390000
    ],
    [
        935650,
        1115885500
    ],
    [
        935640,
        1112025000
    ],
    [
        935620,
        1108525000
    ],
    [
        935590,
        1103285000
    ],
    [
        935580,
        1104530000
    ],
    [
        935550,
        1118565500
    ],
    [
        935540,
        1119015500
    ],
    [
        935530,
        1118430500
    ],
    [
        935510,
        1117112500
    ],
    [
        935500,
        1115112500
    ],
    [
        935490,
        1114632500
    ],
    [
        935480,
        1113027500
    ],
    [
        935470,
        1112307500
    ],
    [
        935450,
        1115690000
    ],
    [
        935440,
        1116718000
    ],
    [
        935420,
        1119528000
    ],
    [
        935410,
        1118303000
    ],
    [
        935390,
        1117206500
    ],
    [
        935360,
        1116206500
    ],
    [
        935330,
        1115550500
    ],
    [
        935300,
        1114050500
    ],
    [
        935290,
        1113740500
    ],
    [
        935280,
        1107545000
    ],
    [
        935270,
        1111060000
    ],
    [
        935260,
        1110950000
    ],
    [
        935250,
        1109180000
    ],
    [
        935240,
        1108555000
    ],
    [
        935230,
        1108956500
    ],
    [
        935190,
        1105216500
    ],
    [
        935170,
        1102429500
    ],
    [
        935160,
        1100819500
    ],
    [
        935090,
        1094000000
    ],
    [
        935070,
        1092400000
    ],
    [
        935040,
        1089810000
    ],
    [
        935030,
        1090000000
    ],
    [
        934990,
        1094048500
    ],
    [
        934970,
        1095000000
    ],
    [
        934880,
        1111252000
    ],
    [
        934860,
        1123500000
    ],
    [
        934850,
        1125915000
    ],
    [
        934830,
        1139200000
    ],
    [
        934820,
        1141350000
    ],
    [
        934810,
        1149575000
    ],
    [
        934800,
        1157000000
    ],
    [
        934770,
        1153590000
    ],
    [
        934740,
        1153781000
    ],
    [
        934710,
        1144000000
    ],
    [
        934690,
        1143449500
    ],
    [
        934680,
        1143004500
    ],
    [
        934650,
        1138000000
    ],
    [
        934640,
        1137355500
    ],
    [
        934610,
        1139290500
    ],
    [
        934590,
        1138750500
    ],
    [
        934570,
        1126022500
    ],
    [
        934560,
        1129372500
    ],
    [
        934550,
        1125597500
    ],
    [
        934540,
        1128657500
    ],
    [
        934530,
        1126342500
    ],
    [
        934500,
        1145425000
    ],
    [
        934490,
        1145295000
    ],
    [
        934480,
        1147205000
    ],
    [
        934460,
        1132292000
    ],
    [
        934450,
        1131007000
    ],
    [
        934440,
        1129182000
    ],
    [
        934200,
        1132622000
    ],
    [
        934190,
        1130627000
    ],
    [
        934160,
        1127122000
    ],
    [
        934130,
        1124622000
    ],
    [
        934120,
        1126532000
    ],
    [
        934070,
        1119622000
    ],
    [
        933420,
        1104025000
    ],
    [
        933360,
        1101711500
    ],
    [
        933290,
        1093669000
    ],
    [
        933280,
        1090866000
    ],
    [
        933240,
        1090000000
    ],
    [
        933210,
        1087958500
    ],
    [
        933140,
        1085323500
    ],
    [
        933120,
        1086958500
    ],
    [
        933110,
        1088000000
    ],
    [
        933060,
        1094565500
    ],
    [
        932970,
        1089000000
    ],
    [
        932900,
        1110735000
    ],
    [
        932860,
        1116310000
    ],
    [
        932830,
        1108376500
    ],
    [
        932780,
        1102000000
    ],
    [
        932740,
        1104228500
    ],
    [
        932680,
        1106747500
    ],
    [
        932660,
        1109735000
    ],
    [
        932650,
        1103735000
    ],
    [
        932600,
        1102000000
    ],
    [
        932590,
        1095500000
    ],
    [
        932560,
        1089500000
    ],
    [
        932510,
        1081698500
    ],
    [
        932450,
        1080234000
    ],
    [
        932420,
        1085350000
    ],
    [
        932400,
        1078850000
    ],
    [
        932310,
        1066703500
    ],
    [
        932290,
        1054000000
    ],
    [
        932270,
        1048563000
    ],
    [
        932240,
        1047563000
    ],
    [
        932220,
        1047979500
    ],
    [
        932190,
        1039979500
    ],
    [
        932170,
        1040870500
    ],
    [
        932130,
        1056500000
    ],
    [
        932110,
        1066850000
    ],
    [
        932050,
        1077500000
    ],
    [
        932040,
        1091000000
    ],
    [
        931830,
        1058910000
    ],
    [
        931790,
        1012910000
    ],
    [
        931780,
        1014183500
    ],
    [
        931730,
        1011000000
    ],
    [
        931720,
        1007625000
    ],
    [
        931620,
        991500000
    ],
    [
        931490,
        990538000
    ],
    [
        931420,
        991500000
    ],
    [
        931350,
        989494500
    ],
    [
        931280,
        988997500
    ],
    [
        931250,
        978014500
    ],
    [
        931210,
        976000000
    ],
    [
        931150,
        970868000
    ],
    [
        931120,
        970619500
    ],
    [
        931080,
        958000000
    ],
    [
        931060,
        957750000
    ],
    [
        931050,
        956761000
    ],
    [
        931010,
        955011000
    ],
    [
        930990,
        955750000
    ],
    [
        930960,
        971098000
    ],
    [
        930930,
        963905000
    ],
    [
        930900,
        961560000
    ],
    [
        930890,
        962000000
    ],
    [
        930830,
        974845000
    ],
    [
        930760,
        971345000
    ],
    [
        930700,
        970733500
    ],
    [
        930680,
        962095000
    ],
    [
        930650,
        957750000
    ],
    [
        930630,
        958000000
    ],
    [
        930570,
        962000000
    ],
    [
        930480,
        963845000
    ],
    [
        930460,
        962986500
    ],
    [
        930450,
        961000000
    ],
    [
        930420,
        959250000
    ],
    [
        930400,
        961000000
    ],
    [
        930390,
        971500000
    ],
    [
        930350,
        982000000
    ],
    [
        930330,
        981519000
    ],
    [
        930260,
        964000000
    ],
    [
        930210,
        960500000
    ],
    [
        930190,
        959138000
    ],
    [
        930130,
        955000000
    ],
    [
        930120,
        956500000
    ],
    [
        930060,
        957000000
    ],
    [
        930020,
        952155000
    ],
    [
        929910,
        951286500
    ],
    [
        929810,
        950000000
    ],
    [
        929760,
        944500000
    ],
    [
        929750,
        950155000
    ],
    [
        929700,
        977729000
    ],
    [
        929660,
        994759500
    ],
    [
        929650,
        995390000
    ],
    [
        929630,
        995866000
    ],
    [
        929590,
        997500000
    ],
    [
        929560,
        1003500000
    ],
    [
        929520,
        1003000000
    ],
    [
        929500,
        1001682500
    ],
    [
        929470,
        1008200000
    ],
    [
        929450,
        1010495000
    ],
    [
        929440,
        1007000000
    ],
    [
        929400,
        1006500000
    ],
    [
        929360,
        1007500000
    ],
    [
        929330,
        1006500000
    ],
    [
        929270,
        1008500000
    ],
    [
        929260,
        1006241000
    ],
    [
        929230,
        1003241000
    ],
    [
        929200,
        1005000000
    ],
    [
        929170,
        1019495000
    ],
    [
        929160,
        1019110500
    ],
    [
        929110,
        1018995000
    ],
    [
        929060,
        1014276500
    ],
    [
        929030,
        1017941500
    ],
    [
        928990,
        1012995000
    ],
    [
        926300,
        1079000000
    ],
    [
        926290,
        1072742500
    ],
    [
        926250,
        1069242500
    ],
    [
        926220,
        1067485500
    ],
    [
        926190,
        1068861500
    ],
    [
        926140,
        1064000000
    ],
    [
        926110,
        1078833000
    ],
    [
        926090,
        1082583000
    ],
    [
        926060,
        1087083000
    ],
    [
        925990,
        1074200000
    ],
    [
        925950,
        1068000000
    ],
    [
        925940,
        1051220000
    ],
    [
        925900,
        1045841000
    ],
    [
        925890,
        1043555000
    ],
    [
        925860,
        1051000000
    ],
    [
        925850,
        1051220000
    ],
    [
        925810,
        1059000000
    ],
    [
        925790,
        1051220000
    ],
    [
        925760,
        1047100000
    ],
    [
        925740,
        1048000000
    ],
    [
        925710,
        1054832000
    ],
    [
        925700,
        1056638000
    ],
    [
        925650,
        1053000000
    ],
    [
        925640,
        1050000000
    ],
    [
        925630,
        1049000000
    ],
    [
        925610,
        1047100000
    ],
    [
        925560,
        1034000000
    ],
    [
        925530,
        1029000000
    ],
    [
        925510,
        1032277000
    ],
    [
        925480,
        1037000000
    ],
    [
        925460,
        1047100000
    ],
    [
        925410,
        1071000000
    ],
    [
        925380,
        1043090000
    ],
    [
        925310,
        1044174000
    ],
    [
        925290,
        1047100000
    ],
    [
        925210,
        1052000000
    ],
    [
        925190,
        1056986000
    ],
    [
        925160,
        1065000000
    ],
    [
        925100,
        1074200000
    ],
    [
        925090,
        1075660000
    ],
    [
        925070,
        1076409000
    ],
    [
        925050,
        1081000000
    ],
    [
        925000,
        1079000000
    ],
    [
        924970,
        1079022000
    ],
    [
        924940,
        1076436000
    ],
    [
        924910,
        1076000000
    ],
    [
        924880,
        1075660000
    ],
    [
        924810,
        1074000000
    ],
    [
        924770,
        1059689500
    ],
    [
        924750,
        1053000000
    ],
    [
        924710,
        1041268500
    ],
    [
        924700,
        1045251000
    ],
    [
        924580,
        1076000000
    ],
    [
        924460,
        1083000000
    ],
    [
        924440,
        1088182000
    ],
    [
        924390,
        1091182000
    ],
    [
        924370,
        1091668000
    ],
    [
        924320,
        1101575000
    ],
    [
        924300,
        1102000000
    ],
    [
        924250,
        1111701500
    ],
    [
        924230,
        1113785000
    ],
    [
        924220,
        1117285000
    ],
    [
        924180,
        1115960000
    ],
    [
        924050,
        1107710000
    ],
    [
        924000,
        1101750000
    ],
    [
        923980,
        1100889500
    ],
    [
        923940,
        1102889500
    ],
    [
        923410,
        1151000000
    ],
    [
        923400,
        1151333500
    ],
    [
        923370,
        1152667000
    ],
    [
        923350,
        1150000000
    ],
    [
        923300,
        1149805000
    ],
    [
        923240,
        1142000000
    ],
    [
        923080,
        1170143000
    ],
    [
        923030,
        1171450000
    ],
    [
        923010,
        1172000000
    ],
    [
        922810,
        1171450000
    ],
    [
        922800,
        1175810000
    ],
    [
        922730,
        1177000000
    ],
    [
        922420,
        1178800000
    ],
    [
        922350,
        1171450000
    ],
    [
        922320,
        1175000000
    ],
    [
        922290,
        1177190000
    ],
    [
        922150,
        1178800000
    ],
    [
        922120,
        1175091000
    ],
    [
        922080,
        1176545500
    ],
    [
        922060,
        1175765000
    ],
    [
        922010,
        1174765000
    ],
    [
        921990,
        1176000000
    ],
    [
        921920,
        1180400000
    ],
    [
        921880,
        1182288000
    ],
    [
        921840,
        1180706500
    ],
    [
        921810,
        1182613000
    ],
    [
        921800,
        1181857000
    ],
    [
        921770,
        1185180000
    ],
    [
        921760,
        1186470000
    ],
    [
        921710,
        1189000000
    ],
    [
        921680,
        1181857000
    ],
    [
        921670,
        1175000000
    ],
    [
        921660,
        1174000000
    ],
    [
        921580,
        1153610000
    ],
    [
        921570,
        1152000000
    ],
    [
        921550,
        1155410000
    ],
    [
        921530,
        1152000000
    ],
    [
        921510,
        1155650000
    ],
    [
        921440,
        1152000000
    ],
    [
        921430,
        1148830000
    ],
    [
        921390,
        1142581000
    ],
    [
        921370,
        1138000000
    ],
    [
        921320,
        1132600000
    ],
    [
        921310,
        1128490000
    ],
    [
        921300,
        1126890000
    ],
    [
        921240,
        1124000000
    ],
    [
        921230,
        1124490000
    ],
    [
        921210,
        1127750000
    ],
    [
        921190,
        1125000000
    ],
    [
        921160,
        1129291000
    ],
    [
        921120,
        1132000000
    ],
    [
        921090,
        1132600000
    ],
    [
        920980,
        1166900000
    ],
    [
        920960,
        1171274000
    ],
    [
        920880,
        1182000000
    ],
    [
        920840,
        1175335000
    ],
    [
        920820,
        1173000000
    ],
    [
        920810,
        1170680000
    ],
    [
        920800,
        1170000000
    ],
    [
        920790,
        1169560000
    ],
    [
        920780,
        1169000000
    ],
    [
        920770,
        1169500000
    ],
    [
        920750,
        1179915000
    ],
    [
        920710,
        1199011458
    ],
    [
        920690,
        1199699500
    ],
    [
        920680,
        1199739500
    ],
    [
        920670,
        1195690000
    ],
    [
        920630,
        1197011458
    ],
    [
        920620,
        1195500000
    ],
    [
        920610,
        1195525000
    ],
    [
        920580,
        1199011458
    ],
    [
        920570,
        1199550000
    ],
    [
        920540,
        1199011458
    ],
    [
        920500,
        1198511458
    ],
    [
        920490,
        1200000000
    ],
    [
        920480,
        1200075500
    ],
    [
        920470,
        1198511458
    ],
    [
        920460,
        1196000000
    ],
    [
        920450,
        1195915465
    ],
    [
        920430,
        1196000000
    ],
    [
        920420,
        1194676811
    ],
    [
        920410,
        1192915000
    ],
    [
        920400,
        1199185000
    ],
    [
        920330,
        1201500000
    ],
    [
        920270,
        1212800000
    ],
    [
        920260,
        1214000000
    ],
    [
        920250,
        1214617887
    ],
    [
        920240,
        1214895816
    ],
    [
        920230,
        1215205000
    ],
    [
        920220,
        1215675000
    ],
    [
        920210,
        1215088674
    ],
    [
        920200,
        1213678674
    ],
    [
        920190,
        1211910816
    ],
    [
        920180,
        1212450000
    ],
    [
        920170,
        1216569758
    ],
    [
        920130,
        1216470000
    ],
    [
        920110,
        1211970000
    ],
    [
        920100,
        1211000000
    ],
    [
        920080,
        1211970000
    ],
    [
        920060,
        1211901500
    ],
    [
        920050,
        1212166500
    ],
    [
        920030,
        1212871500
    ],
    [
        920010,
        1211901500
    ],
    [
        920000,
        1211000000
    ],
    [
        919980,
        1211970000
    ],
    [
        919970,
        1202488000
    ],
    [
        919950,
        1205343000
    ],
    [
        919940,
        1203153000
    ],
    [
        919930,
        1209566500
    ],
    [
        919920,
        1207581500
    ],
    [
        919910,
        1202766500
    ],
    [
        919870,
        1213970000
    ],
    [
        919850,
        1216904500
    ],
    [
        919840,
        1221585881
    ],
    [
        919810,
        1224181381
    ],
    [
        919780,
        1225181381
    ],
    [
        919770,
        1225685000
    ],
    [
        919750,
        1229700000
    ],
    [
        919720,
        1230000000
    ],
    [
        919710,
        1229700000
    ],
    [
        919700,
        1230000000
    ],
    [
        919670,
        1227935000
    ],
    [
        919650,
        1229700000
    ],
    [
        919630,
        1227860000
    ],
    [
        919620,
        1228085000
    ],
    [
        919610,
        1229280000
    ],
    [
        919590,
        1228640000
    ],
    [
        919570,
        1229700000
    ],
    [
        919550,
        1226881381
    ],
    [
        919530,
        1226766381
    ],
    [
        919520,
        1222681381
    ],
    [
        919500,
        1220500000
    ],
    [
        919490,
        1215719500
    ],
    [
        919390,
        1225181381
    ],
    [
        919370,
        1226000000
    ],
    [
        919330,
        1228388500
    ],
    [
        919300,
        1230260500
    ],
    [
        919290,
        1231750500
    ],
    [
        919270,
        1232660500
    ],
    [
        919260,
        1231438000
    ],
    [
        919250,
        1230223000
    ],
    [
        919240,
        1230338000
    ],
    [
        919230,
        1232623000
    ],
    [
        919220,
        1230338000
    ],
    [
        919210,
        1230643000
    ],
    [
        919200,
        1230223000
    ],
    [
        919170,
        1230716000
    ],
    [
        919160,
        1231991000
    ],
    [
        919130,
        1232032000
    ],
    [
        919110,
        1234200000
    ],
    [
        919100,
        1236420000
    ],
    [
        919070,
        1236670000
    ],
    [
        919050,
        1234200000
    ],
    [
        919040,
        1241005000
    ],
    [
        919030,
        1249785000
    ],
    [
        918990,
        1244810000
    ],
    [
        918970,
        1237028000
    ],
    [
        918960,
        1236033000
    ],
    [
        918920,
        1229281381
    ],
    [
        918900,
        1226084881
    ],
    [
        918850,
        1225911381
    ],
    [
        918840,
        1224000881
    ],
    [
        918830,
        1223584500
    ],
    [
        918820,
        1222319500
    ],
    [
        918810,
        1223829500
    ],
    [
        918790,
        1222319500
    ],
    [
        918780,
        1222584500
    ],
    [
        918770,
        1226983745
    ],
    [
        918710,
        1234100000
    ],
    [
        918700,
        1234309442
    ],
    [
        918690,
        1232859000
    ],
    [
        918680,
        1233575156
    ],
    [
        918670,
        1234635156
    ],
    [
        918660,
        1234013728
    ],
    [
        918650,
        1232959000
    ],
    [
        918630,
        1234600000
    ],
    [
        918620,
        1237136500
    ],
    [
        918610,
        1238251500
    ],
    [
        918600,
        1238236500
    ],
    [
        918590,
        1239071673
    ],
    [
        918580,
        1238935959
    ],
    [
        918570,
        1240860000
    ],
    [
        918560,
        1240870000
    ],
    [
        918550,
        1239745000
    ],
    [
        918530,
        1241225500
    ],
    [
        918520,
        1241094959
    ],
    [
        918510,
        1242641000
    ],
    [
        918440,
        1250786000
    ],
    [
        918350,
        1259000000
    ],
    [
        918300,
        1266049500
    ],
    [
        918280,
        1265701500
    ],
    [
        918240,
        1267701500
    ],
    [
        918210,
        1271000000
    ],
    [
        918150,
        1271505000
    ],
    [
        918140,
        1277434000
    ],
    [
        918130,
        1277672276
    ],
    [
        918120,
        1277777990
    ],
    [
        918110,
        1277702276
    ],
    [
        918100,
        1278063704
    ],
    [
        918090,
        1282583643
    ],
    [
        918080,
        1285611476
    ],
    [
        918050,
        1289757175
    ],
    [
        918040,
        1289162032
    ],
    [
        918010,
        1290000000
    ],
    [
        917940,
        1292000000
    ],
    [
        917920,
        1292675746
    ],
    [
        917900,
        1295020721
    ],
    [
        917870,
        1290561500
    ],
    [
        917840,
        1290061500
    ],
    [
        917820,
        1289860603
    ],
    [
        917810,
        1286686532
    ],
    [
        917790,
        1286958478
    ],
    [
        917780,
        1286979906
    ],
    [
        917770,
        1285487960
    ],
    [
        917750,
        1286026532
    ],
    [
        917740,
        1289212032
    ],
    [
        917730,
        1290774192
    ],
    [
        917720,
        1291528478
    ],
    [
        917710,
        1294350478
    ],
    [
        917690,
        1295489175
    ],
    [
        917680,
        1296083460
    ],
    [
        917670,
        1289097746
    ],
    [
        917660,
        1289214140
    ],
    [
        917650,
        1285608000
    ],
    [
        917610,
        1285000000
    ],
    [
        917600,
        1282275000
    ],
    [
        917590,
        1281698809
    ],
    [
        917580,
        1278593603
    ],
    [
        917550,
        1274000000
    ],
    [
        917530,
        1273182603
    ],
    [
        917520,
        1273984031
    ],
    [
        917510,
        1274801531
    ],
    [
        917480,
        1273906500
    ],
    [
        917390,
        1279151975
    ],
    [
        917380,
        1281240000
    ],
    [
        917370,
        1285289765
    ],
    [
        917350,
        1285318532
    ],
    [
        917340,
        1283112500
    ],
    [
        917320,
        1293150436
    ],
    [
        917300,
        1295674965
    ],
    [
        917290,
        1297334310
    ],
    [
        917280,
        1296574309
    ],
    [
        917270,
        1295648595
    ],
    [
        917260,
        1284208595
    ],
    [
        917250,
        1286747272
    ],
    [
        917200,
        1274645500
    ],
    [
        917170,
        1273136500
    ],
    [
        917130,
        1273636500
    ],
    [
        917110,
        1273267500
    ],
    [
        917090,
        1274016317
    ],
    [
        917080,
        1275099174
    ],
    [
        917060,
        1274827746
    ],
    [
        917050,
        1272718344
    ],
    [
        917040,
        1273430731
    ],
    [
        917030,
        1275430731
    ],
    [
        917010,
        1275307874
    ],
    [
        916990,
        1274479500
    ],
    [
        916920,
        1276343500
    ],
    [
        916890,
        1274721500
    ],
    [
        916880,
        1275781500
    ],
    [
        916870,
        1276680888
    ],
    [
        916860,
        1275781500
    ],
    [
        916850,
        1276438603
    ],
    [
        916820,
        1280645000
    ],
    [
        916810,
        1276302889
    ],
    [
        916800,
        1276547076
    ],
    [
        916790,
        1277178505
    ],
    [
        916780,
        1276000000
    ],
    [
        916770,
        1275913417
    ],
    [
        915490,
        1256089511
    ],
    [
        915460,
        1256259511
    ],
    [
        915450,
        1256402368
    ],
    [
        915440,
        1268791174
    ],
    [
        915420,
        1270480716
    ],
    [
        915410,
        1279497644
    ],
    [
        915400,
        1285053309
    ],
    [
        915380,
        1285059024
    ],
    [
        915360,
        1286030510
    ],
    [
        915350,
        1285688603
    ],
    [
        915340,
        1273131492
    ],
    [
        915330,
        1285717207
    ],
    [
        915320,
        1281020064
    ],
    [
        915290,
        1280536586
    ],
    [
        915280,
        1281892064
    ],
    [
        915270,
        1283239302
    ],
    [
        915260,
        1288479527
    ],
    [
        915240,
        1289103055
    ],
    [
        915230,
        1299672387
    ],
    [
        915210,
        1305581358
    ],
    [
        915200,
        1312000000
    ],
    [
        915190,
        1280475000
    ],
    [
        915180,
        1280458087
    ],
    [
        915160,
        1280475000
    ],
    [
        915150,
        1279804755
    ],
    [
        915100,
        1255975000
    ],
    [
        914930,
        1255673500
    ],
    [
        914830,
        1254475000
    ],
    [
        914820,
        1253476409
    ],
    [
        914800,
        1253689266
    ],
    [
        914720,
        1254475000
    ],
    [
        914710,
        1255976745
    ],
    [
        914700,
        1255813602
    ],
    [
        914690,
        1257055235
    ],
    [
        914670,
        1257098092
    ],
    [
        914650,
        1256428000
    ],
    [
        914600,
        1255475000
    ],
    [
        914580,
        1254964126
    ],
    [
        914550,
        1254398412
    ],
    [
        914540,
        1254966983
    ],
    [
        914530,
        1254932698
    ],
    [
        914500,
        1250559000
    ],
    [
        914480,
        1247948078
    ],
    [
        914450,
        1249312877
    ],
    [
        914440,
        1248854306
    ],
    [
        914410,
        1248379338
    ],
    [
        914400,
        1246701287
    ],
    [
        914380,
        1245223406
    ],
    [
        914350,
        1246982173
    ],
    [
        914320,
        1247480198
    ],
    [
        914280,
        1249500745
    ],
    [
        914250,
        1249947031
    ],
    [
        914230,
        1251975000
    ],
    [
        914190,
        1254743500
    ],
    [
        914180,
        1254351514
    ],
    [
        914150,
        1255316540
    ],
    [
        914020,
        1251975000
    ],
    [
        913980,
        1251873602
    ],
    [
        913960,
        1252221357
    ],
    [
        913940,
        1253204534
    ],
    [
        913890,
        1244700000
    ],
    [
        913820,
        1241331000
    ],
    [
        913800,
        1240849500
    ],
    [
        913760,
        1240000000
    ],
    [
        913660,
        1238000000
    ],
    [
        913510,
        1248950000
    ],
    [
        913500,
        1247649175
    ],
    [
        913490,
        1245973460
    ],
    [
        913470,
        1246033229
    ],
    [
        913460,
        1248641000
    ],
    [
        913450,
        1253190174
    ],
    [
        913440,
        1253791000
    ],
    [
        913430,
        1254131000
    ],
    [
        913400,
        1254156483
    ],
    [
        913380,
        1248968824
    ],
    [
        913330,
        1243800000
    ],
    [
        913310,
        1242035000
    ],
    [
        913300,
        1242452316
    ],
    [
        913240,
        1229282000
    ],
    [
        913230,
        1227802000
    ],
    [
        913160,
        1218315000
    ],
    [
        913100,
        1228282000
    ],
    [
        913090,
        1228549459
    ],
    [
        913050,
        1230282000
    ],
    [
        913030,
        1230544651
    ],
    [
        913020,
        1230282000
    ],
    [
        913000,
        1223624744
    ],
    [
        912990,
        1221545030
    ],
    [
        912950,
        1218315000
    ],
    [
        912940,
        1223815000
    ],
    [
        912880,
        1227000000
    ],
    [
        912870,
        1227839173
    ],
    [
        912850,
        1226204887
    ],
    [
        912830,
        1226789173
    ],
    [
        912810,
        1226874887
    ],
    [
        912780,
        1227684887
    ],
    [
        912750,
        1227427000
    ],
    [
        912740,
        1228053523
    ],
    [
        912650,
        1227427000
    ],
    [
        912620,
        1225282000
    ],
    [
        912610,
        1221000000
    ],
    [
        912600,
        1218500000
    ],
    [
        912590,
        1219500000
    ],
    [
        912570,
        1220281744
    ],
    [
        912550,
        1222698152
    ],
    [
        912540,
        1223000000
    ],
    [
        912530,
        1220069216
    ],
    [
        912460,
        1217000000
    ],
    [
        912320,
        1223500000
    ],
    [
        912210,
        1235800000
    ],
    [
        912180,
        1236203000
    ],
    [
        912140,
        1242240000
    ],
    [
        912100,
        1244489000
    ],
    [
        912070,
        1244605888
    ],
    [
        912040,
        1242486500
    ],
    [
        912010,
        1241846500
    ],
    [
        911980,
        1243120425
    ],
    [
        911970,
        1243950425
    ],
    [
        911960,
        1244288173
    ],
    [
        911950,
        1244588173
    ],
    [
        911940,
        1245657253
    ],
    [
        911930,
        1245736015
    ],
    [
        911920,
        1246751015
    ],
    [
        911890,
        1243000000
    ],
    [
        911880,
        1241660000
    ],
    [
        911860,
        1242300000
    ],
    [
        911850,
        1240447500
    ],
    [
        911820,
        1242647500
    ],
    [
        911800,
        1245799593
    ],
    [
        911760,
        1239147500
    ],
    [
        911750,
        1239000000
    ],
    [
        911730,
        1237169000
    ],
    [
        911720,
        1233899030
    ],
    [
        911700,
        1235797758
    ],
    [
        911690,
        1233739995
    ],
    [
        911680,
        1224594083
    ],
    [
        911670,
        1228372000
    ],
    [
        911640,
        1235450000
    ],
    [
        911630,
        1235813140
    ],
    [
        911610,
        1237999831
    ],
    [
        911600,
        1246805745
    ],
    [
        911590,
        1251695000
    ],
    [
        911580,
        1248535382
    ],
    [
        911550,
        1247060000
    ],
    [
        911540,
        1246423144
    ],
    [
        911530,
        1248175000
    ],
    [
        911510,
        1242152500
    ],
    [
        911500,
        1247693000
    ],
    [
        911470,
        1248210000
    ],
    [
        911460,
        1248857459
    ],
    [
        911450,
        1247693000
    ],
    [
        911280,
        1260802500
    ],
    [
        911270,
        1264132500
    ],
    [
        911260,
        1277106733
    ],
    [
        911240,
        1284727939
    ],
    [
        911230,
        1274287500
    ],
    [
        911210,
        1260802500
    ],
    [
        911180,
        1252250000
    ],
    [
        911150,
        1258910000
    ],
    [
        911140,
        1260850641
    ],
    [
        911130,
        1261620888
    ],
    [
        911120,
        1263120888
    ],
    [
        911110,
        1259445000
    ],
    [
        911080,
        1252117000
    ],
    [
        910600,
        1300230000
    ],
    [
        910590,
        1299885746
    ],
    [
        910580,
        1299974318
    ],
    [
        910560,
        1300664746
    ],
    [
        910550,
        1299460000
    ],
    [
        910530,
        1299979903
    ],
    [
        910520,
        1294711000
    ],
    [
        910510,
        1293665000
    ],
    [
        910500,
        1294325000
    ],
    [
        910490,
        1292000000
    ],
    [
        910480,
        1291500000
    ],
    [
        910470,
        1289700000
    ],
    [
        910330,
        1292000000
    ],
    [
        910240,
        1296000000
    ],
    [
        910160,
        1297000000
    ],
    [
        910150,
        1301012065
    ],
    [
        910140,
        1306620000
    ],
    [
        910090,
        1307351000
    ],
    [
        910060,
        1312840000
    ],
    [
        910030,
        1314000000
    ],
    [
        909980,
        1304000000
    ],
    [
        909960,
        1300641000
    ],
    [
        909950,
        1301000000
    ],
    [
        909890,
        1304000000
    ],
    [
        909810,
        1313000000
    ],
    [
        909800,
        1309674303
    ],
    [
        909760,
        1309330000
    ],
    [
        909730,
        1308746564
    ],
    [
        909720,
        1303000000
    ],
    [
        909710,
        1311080000
    ],
    [
        909680,
        1314000000
    ],
    [
        909670,
        1303000000
    ],
    [
        909660,
        1297000000
    ],
    [
        909650,
        1296020000
    ],
    [
        909630,
        1294906216
    ],
    [
        909600,
        1297000000
    ],
    [
        909570,
        1297908755
    ],
    [
        909550,
        1300144065
    ],
    [
        909520,
        1304322000
    ],
    [
        909510,
        1301669779
    ],
    [
        909490,
        1308590000
    ],
    [
        909480,
        1303343557
    ],
    [
        909470,
        1303660000
    ],
    [
        909450,
        1314000000
    ],
    [
        909440,
        1310000000
    ],
    [
        909410,
        1303471690
    ],
    [
        909400,
        1307000000
    ],
    [
        909390,
        1304000000
    ],
    [
        909380,
        1303082438
    ],
    [
        909370,
        1298685207
    ],
    [
        909360,
        1304000000
    ],
    [
        909320,
        1304623493
    ],
    [
        909300,
        1304000000
    ],
    [
        909290,
        1299868636
    ],
    [
        909280,
        1306040000
    ],
    [
        909270,
        1299868636
    ],
    [
        909260,
        1310000000
    ],
    [
        909250,
        1312000000
    ],
    [
        909240,
        1310000000
    ],
    [
        909230,
        1306662351
    ],
    [
        909220,
        1307570000
    ],
    [
        909210,
        1310000000
    ],
    [
        909200,
        1309930000
    ],
    [
        909190,
        1301800000
    ],
    [
        909160,
        1311240000
    ],
    [
        909120,
        1311885000
    ],
    [
        909110,
        1303590000
    ],
    [
        909090,
        1301313000
    ],
    [
        909080,
        1298240000
    ],
    [
        909040,
        1291000000
    ],
    [
        909030,
        1294000000
    ],
    [
        909020,
        1300000000
    ],
    [
        909000,
        1301313000
    ],
    [
        908990,
        1300000000
    ],
    [
        908980,
        1299890000
    ],
    [
        908960,
        1294000000
    ],
    [
        908950,
        1298340000
    ],
    [
        908940,
        1327875000
    ],
    [
        908930,
        1330590000
    ],
    [
        908920,
        1328510000
    ],
    [
        908910,
        1327875000
    ],
    [
        908890,
        1327090248
    ],
    [
        908880,
        1330579735
    ],
    [
        908870,
        1324951231
    ],
    [
        908850,
        1324323077
    ],
    [
        908830,
        1325990000
    ],
    [
        908820,
        1323000000
    ],
    [
        908810,
        1327000000
    ],
    [
        908800,
        1328905000
    ],
    [
        908760,
        1327000000
    ],
    [
        908750,
        1319760000
    ],
    [
        908740,
        1294000000
    ],
    [
        908720,
        1293000000
    ],
    [
        908710,
        1292069000
    ],
    [
        908650,
        1290790000
    ],
    [
        908640,
        1296000000
    ],
    [
        908630,
        1303015000
    ],
    [
        908610,
        1306760000
    ],
    [
        908600,
        1307000000
    ],
    [
        908580,
        1306760000
    ],
    [
        908480,
        1307000000
    ],
    [
        908440,
        1314130000
    ],
    [
        908430,
        1314813741
    ],
    [
        908420,
        1314130000
    ],
    [
        908410,
        1306443659
    ],
    [
        908400,
        1297860000
    ],
    [
        908330,
        1278740000
    ],
    [
        908320,
        1276390550
    ],
    [
        908260,
        1271000000
    ],
    [
        908250,
        1263079000
    ],
    [
        908240,
        1260521219
    ],
    [
        908230,
        1263079000
    ],
    [
        908220,
        1260840000
    ],
    [
        908210,
        1255919320
    ],
    [
        908170,
        1264514000
    ],
    [
        908160,
        1265000000
    ],
    [
        908140,
        1265930000
    ],
    [
        908130,
        1265000000
    ],
    [
        908090,
        1268000000
    ],
    [
        908050,
        1274000000
    ],
    [
        908030,
        1273000000
    ],
    [
        908020,
        1273020635
    ],
    [
        908010,
        1273000000
    ],
    [
        908000,
        1271760000
    ],
    [
        907990,
        1270000000
    ],
    [
        907980,
        1268928000
    ],
    [
        907970,
        1320000000
    ],
    [
        907930,
        1332180000
    ],
    [
        907920,
        1337499716
    ],
    [
        907890,
        1341000000
    ],
    [
        907850,
        1329837000
    ],
    [
        907830,
        1329671142
    ],
    [
        907740,
        1320000000
    ],
    [
        907730,
        1317220000
    ],
    [
        907660,
        1302000000
    ],
    [
        907650,
        1293084064
    ],
    [
        907620,
        1292555385
    ],
    [
        907610,
        1293568706
    ],
    [
        907590,
        1293030000
    ],
    [
        907580,
        1291920000
    ],
    [
        907560,
        1315481738
    ],
    [
        907550,
        1313680000
    ],
    [
        907480,
        1329000000
    ],
    [
        907450,
        1329244000
    ],
    [
        907440,
        1336000000
    ],
    [
        907430,
        1341610000
    ],
    [
        907400,
        1336000000
    ],
    [
        907380,
        1336910000
    ],
    [
        907370,
        1353350000
    ],
    [
        907350,
        1353610000
    ],
    [
        907340,
        1358112000
    ],
    [
        907330,
        1353350000
    ],
    [
        907320,
        1351140000
    ],
    [
        907290,
        1345739000
    ],
    [
        907280,
        1344201111
    ],
    [
        907270,
        1344000000
    ],
    [
        907260,
        1345000000
    ],
    [
        907210,
        1348788185
    ],
    [
        907180,
        1336967000
    ],
    [
        907160,
        1333930000
    ],
    [
        907090,
        1322000000
    ],
    [
        907060,
        1321700000
    ],
    [
        907030,
        1322000000
    ],
    [
        907000,
        1321700000
    ],
    [
        906980,
        1322000000
    ],
    [
        906950,
        1326336295
    ],
    [
        906940,
        1331969780
    ],
    [
        906930,
        1335860066
    ],
    [
        906860,
        1334000000
    ],
    [
        906850,
        1332974083
    ],
    [
        906820,
        1323277455
    ],
    [
        906790,
        1325368884
    ],
    [
        906780,
        1325542923
    ],
    [
        906770,
        1321700000
    ],
    [
        906750,
        1324480574
    ],
    [
        906720,
        1326562665
    ],
    [
        906710,
        1327888637
    ],
    [
        906690,
        1326396588
    ],
    [
        906660,
        1316000000
    ],
    [
        906650,
        1313000000
    ],
    [
        906610,
        1312129000
    ],
    [
        906590,
        1310302759
    ],
    [
        906580,
        1310119779
    ],
    [
        906570,
        1309636922
    ],
    [
        906550,
        1304000000
    ],
    [
        906540,
        1302628958
    ],
    [
        906530,
        1300462350
    ],
    [
        906520,
        1297800000
    ],
    [
        906490,
        1293394000
    ],
    [
        906470,
        1292850000
    ],
    [
        906460,
        1288701778
    ],
    [
        906440,
        1286097442
    ],
    [
        906430,
        1284000000
    ],
    [
        906400,
        1295350921
    ],
    [
        906390,
        1299855684
    ],
    [
        906370,
        1317221208
    ],
    [
        906360,
        1320000000
    ],
    [
        906350,
        1306738000
    ],
    [
        906130,
        1301000000
    ],
    [
        906110,
        1300451683
    ],
    [
        906060,
        1298770000
    ],
    [
        906050,
        1306146463
    ],
    [
        906030,
        1311000000
    ],
    [
        906020,
        1310000000
    ],
    [
        905990,
        1311000000
    ],
    [
        905950,
        1310000000
    ],
    [
        905940,
        1304019764
    ],
    [
        905930,
        1299186207
    ],
    [
        905920,
        1290880000
    ],
    [
        905900,
        1287869031
    ],
    [
        905890,
        1294190339
    ],
    [
        905880,
        1299500000
    ],
    [
        905870,
        1298964064
    ],
    [
        905860,
        1297880000
    ],
    [
        905840,
        1305490000
    ],
    [
        905830,
        1301460000
    ],
    [
        905820,
        1299744064
    ],
    [
        905800,
        1295263591
    ],
    [
        905790,
        1289560000
    ],
    [
        905780,
        1299510487
    ],
    [
        905750,
        1286000000
    ],
    [
        905730,
        1279474000
    ],
    [
        905710,
        1279000000
    ],
    [
        905700,
        1276270000
    ],
    [
        905690,
        1278330000
    ],
    [
        905660,
        1275600000
    ],
    [
        905650,
        1274210000
    ],
    [
        905630,
        1275600000
    ],
    [
        905620,
        1274490000
    ],
    [
        905480,
        1276596000
    ],
    [
        905390,
        1258000000
    ],
    [
        905360,
        1257983000
    ],
    [
        905330,
        1258000000
    ],
    [
        905320,
        1257756000
    ],
    [
        905310,
        1257671116
    ],
    [
        905300,
        1254470000
    ],
    [
        905290,
        1257756000
    ],
    [
        905280,
        1256680000
    ],
    [
        905250,
        1257756000
    ],
    [
        905240,
        1254000000
    ],
    [
        905230,
        1250840000
    ],
    [
        905210,
        1249010000
    ],
    [
        905200,
        1252340000
    ],
    [
        905190,
        1252250000
    ],
    [
        905160,
        1249010000
    ],
    [
        905130,
        1249711745
    ],
    [
        905120,
        1256072177
    ],
    [
        905110,
        1257512177
    ],
    [
        905080,
        1262250000
    ],
    [
        905070,
        1262452832
    ],
    [
        905050,
        1284974773
    ],
    [
        905040,
        1287000000
    ],
    [
        905030,
        1292000000
    ],
    [
        905020,
        1287000000
    ],
    [
        904950,
        1269819000
    ],
    [
        904880,
        1244000000
    ],
    [
        904870,
        1243000000
    ],
    [
        904860,
        1244000000
    ],
    [
        904850,
        1243000000
    ],
    [
        904840,
        1242000000
    ],
    [
        904830,
        1239640074
    ],
    [
        904810,
        1220000000
    ],
    [
        904790,
        1214467928
    ],
    [
        904720,
        1210000000
    ],
    [
        904710,
        1213000000
    ],
    [
        904680,
        1213360000
    ],
    [
        904670,
        1215660000
    ],
    [
        904640,
        1217381852
    ],
    [
        904630,
        1221290000
    ],
    [
        904620,
        1219950000
    ],
    [
        904600,
        1224588632
    ],
    [
        904590,
        1228530347
    ],
    [
        904580,
        1228250000
    ],
    [
        904560,
        1230000000
    ],
    [
        904550,
        1232300000
    ],
    [
        904540,
        1228406404
    ],
    [
        904530,
        1241100000
    ],
    [
        904520,
        1242305976
    ],
    [
        904510,
        1238764102
    ],
    [
        904480,
        1230713745
    ],
    [
        904470,
        1220335000
    ],
    [
        904430,
        1206335000
    ],
    [
        904390,
        1203653500
    ],
    [
        904320,
        1199000000
    ],
    [
        904310,
        1200470000
    ],
    [
        904300,
        1202357500
    ],
    [
        904270,
        1204887500
    ],
    [
        904260,
        1205200000
    ],
    [
        904250,
        1196988545
    ],
    [
        904240,
        1198163545
    ],
    [
        904210,
        1196488545
    ],
    [
        904200,
        1197729999
    ],
    [
        904180,
        1207597458
    ],
    [
        904170,
        1213482500
    ],
    [
        904160,
        1210850867
    ],
    [
        904150,
        1210524664
    ],
    [
        904140,
        1211702500
    ],
    [
        904130,
        1215382500
    ],
    [
        904120,
        1223231252
    ],
    [
        904100,
        1223739000
    ],
    [
        904090,
        1222895377
    ],
    [
        904080,
        1228004000
    ],
    [
        904050,
        1235500000
    ],
    [
        904040,
        1228329000
    ],
    [
        904030,
        1226714926
    ],
    [
        904020,
        1227224000
    ],
    [
        904010,
        1227774048
    ],
    [
        904000,
        1232200000
    ],
    [
        903990,
        1232690515
    ],
    [
        903980,
        1233454513
    ],
    [
        903970,
        1241353013
    ],
    [
        903960,
        1239403500
    ],
    [
        903940,
        1246461959
    ],
    [
        903930,
        1246378500
    ],
    [
        903900,
        1245098500
    ],
    [
        903890,
        1246829953
    ],
    [
        903880,
        1248473500
    ],
    [
        903860,
        1251884000
    ],
    [
        903850,
        1246934316
    ],
    [
        903830,
        1245000000
    ],
    [
        903810,
        1244300000
    ],
    [
        903790,
        1243060348
    ],
    [
        903780,
        1246927101
    ],
    [
        903750,
        1252184000
    ],
    [
        903710,
        1252333000
    ],
    [
        903680,
        1252000000
    ],
    [
        903670,
        1253201174
    ],
    [
        903660,
        1258256174
    ],
    [
        903640,
        1267600000
    ],
    [
        903630,
        1267727468
    ],
    [
        903620,
        1273750000
    ],
    [
        903610,
        1279015394
    ],
    [
        903600,
        1287410000
    ],
    [
        903580,
        1289000000
    ],
    [
        903570,
        1286824173
    ],
    [
        903560,
        1283687932
    ],
    [
        903540,
        1293170000
    ],
    [
        903530,
        1301980000
    ],
    [
        903520,
        1317470000
    ],
    [
        903500,
        1311990000
    ],
    [
        903490,
        1312941208
    ],
    [
        903480,
        1319493000
    ],
    [
        903460,
        1323192227
    ],
    [
        903370,
        1267600000
    ],
    [
        903340,
        1263000000
    ],
    [
        903320,
        1260922039
    ],
    [
        903310,
        1257299474
    ],
    [
        903290,
        1256839000
    ],
    [
        903280,
        1254910000
    ],
    [
        903270,
        1258641964
    ],
    [
        903260,
        1257557205
    ],
    [
        903240,
        1256839000
    ],
    [
        903230,
        1256135326
    ],
    [
        903220,
        1249000000
    ],
    [
        903210,
        1243809776
    ],
    [
        903200,
        1241440000
    ],
    [
        903190,
        1240221204
    ],
    [
        903170,
        1240640000
    ],
    [
        903160,
        1240680000
    ],
    [
        903140,
        1232000000
    ],
    [
        903110,
        1241000000
    ],
    [
        903080,
        1241928892
    ],
    [
        903070,
        1242000000
    ],
    [
        903040,
        1241127658
    ],
    [
        903030,
        1237449204
    ],
    [
        903020,
        1247948633
    ],
    [
        903010,
        1250617205
    ],
    [
        902960,
        1254000000
    ],
    [
        902950,
        1259000000
    ],
    [
        902930,
        1264727000
    ],
    [
        902920,
        1265110000
    ],
    [
        902900,
        1266000000
    ],
    [
        902890,
        1264727000
    ],
    [
        902880,
        1255859491
    ],
    [
        902850,
        1253880000
    ],
    [
        902840,
        1257990000
    ],
    [
        902760,
        1243000000
    ],
    [
        902750,
        1241600000
    ],
    [
        902730,
        1239372000
    ],
    [
        902710,
        1239000000
    ],
    [
        902700,
        1241627247
    ],
    [
        902690,
        1246934188
    ],
    [
        902650,
        1262918000
    ],
    [
        902620,
        1265000000
    ],
    [
        902610,
        1266690000
    ],
    [
        902590,
        1258480000
    ],
    [
        902550,
        1251000000
    ],
    [
        902540,
        1250448062
    ],
    [
        902520,
        1243620000
    ],
    [
        902500,
        1251000000
    ],
    [
        902450,
        1252228000
    ],
    [
        902430,
        1243450000
    ],
    [
        902370,
        1240852000
    ],
    [
        902330,
        1237512000
    ],
    [
        902320,
        1239100000
    ],
    [
        902310,
        1240294347
    ],
    [
        902300,
        1244215000
    ],
    [
        902270,
        1247170000
    ],
    [
        902250,
        1267600000
    ],
    [
        902240,
        1265053000
    ],
    [
        902190,
        1269500000
    ],
    [
        902170,
        1260441500
    ],
    [
        902160,
        1259931000
    ],
    [
        902150,
        1260647373
    ],
    [
        902140,
        1262534635
    ],
    [
        902130,
        1262931000
    ],
    [
        902120,
        1265249414
    ],
    [
        902110,
        1271140000
    ],
    [
        902100,
        1270272097
    ],
    [
        902080,
        1270000000
    ],
    [
        902070,
        1272000000
    ],
    [
        902060,
        1277064063
    ],
    [
        902050,
        1273760000
    ],
    [
        902040,
        1275000000
    ],
    [
        902030,
        1268000000
    ],
    [
        902010,
        1265925000
    ],
    [
        902000,
        1265962500
    ],
    [
        901990,
        1257819317
    ],
    [
        901960,
        1253167317
    ],
    [
        901950,
        1251946513
    ],
    [
        901930,
        1265105246
    ],
    [
        901920,
        1237758316
    ],
    [
        901910,
        1227894083
    ],
    [
        901900,
        1226996500
    ],
    [
        901890,
        1225000000
    ],
    [
        901880,
        1225060000
    ],
    [
        901850,
        1244470000
    ],
    [
        901840,
        1239585000
    ],
    [
        901800,
        1239338500
    ],
    [
        901780,
        1244938000
    ],
    [
        901760,
        1250500000
    ],
    [
        901750,
        1257035000
    ],
    [
        901730,
        1252937159
    ],
    [
        901720,
        1251000000
    ],
    [
        901690,
        1247477881
    ],
    [
        901680,
        1248742328
    ],
    [
        901640,
        1253847459
    ],
    [
        901630,
        1248832031
    ],
    [
        901620,
        1240000000
    ],
    [
        901610,
        1239938000
    ],
    [
        901600,
        1239940000
    ],
    [
        901580,
        1240000000
    ],
    [
        901570,
        1239938000
    ],
    [
        901560,
        1240000000
    ],
    [
        901540,
        1240045500
    ],
    [
        901530,
        1237243911
    ],
    [
        901510,
        1237246768
    ],
    [
        901490,
        1241476000
    ],
    [
        901480,
        1246976000
    ],
    [
        901470,
        1248843980
    ],
    [
        901460,
        1247968266
    ],
    [
        901450,
        1247239695
    ],
    [
        901440,
        1247218888
    ],
    [
        901430,
        1247040316
    ],
    [
        901420,
        1245075578
    ],
    [
        901380,
        1243878000
    ],
    [
        901340,
        1254678000
    ],
    [
        901330,
        1252999005
    ],
    [
        901320,
        1248300000
    ],
    [
        901290,
        1263800000
    ],
    [
        901260,
        1269500000
    ],
    [
        901240,
        1273407460
    ],
    [
        901230,
        1271533729
    ],
    [
        901190,
        1269500000
    ],
    [
        901180,
        1273714216
    ],
    [
        901170,
        1268214216
    ],
    [
        901160,
        1264000000
    ],
    [
        901140,
        1263186500
    ],
    [
        901130,
        1270127500
    ],
    [
        901090,
        1277127500
    ],
    [
        901080,
        1275779817
    ],
    [
        901060,
        1285272318
    ],
    [
        901050,
        1284671589
    ],
    [
        901040,
        1282815000
    ],
    [
        901020,
        1271585000
    ],
    [
        901010,
        1274470231
    ],
    [
        900990,
        1281695000
    ],
    [
        900980,
        1279695000
    ],
    [
        900970,
        1274981746
    ],
    [
        900960,
        1274085000
    ],
    [
        900950,
        1277000000
    ],
    [
        900940,
        1285369000
    ],
    [
        900930,
        1296369000
    ],
    [
        900910,
        1299660000
    ],
    [
        900890,
        1299853758
    ],
    [
        900880,
        1299029427
    ],
    [
        900870,
        1297432318
    ],
    [
        900860,
        1296455000
    ],
    [
        900850,
        1296369000
    ],
    [
        900840,
        1307000000
    ],
    [
        900830,
        1308995000
    ],
    [
        900800,
        1319130000
    ],
    [
        900790,
        1318505000
    ],
    [
        900780,
        1316005000
    ],
    [
        900770,
        1314995000
    ],
    [
        900750,
        1318680000
    ],
    [
        900740,
        1319125000
    ],
    [
        900700,
        1317489500
    ],
    [
        900690,
        1318680000
    ],
    [
        900680,
        1318685000
    ],
    [
        900590,
        1320134500
    ],
    [
        900560,
        1315365000
    ],
    [
        900550,
        1311719104
    ],
    [
        900540,
        1314592437
    ],
    [
        900530,
        1296730890
    ],
    [
        900520,
        1294745000
    ],
    [
        900500,
        1279828500
    ],
    [
        900490,
        1275748031
    ],
    [
        900480,
        1276000000
    ],
    [
        900470,
        1274851500
    ],
    [
        900460,
        1250871500
    ],
    [
        900450,
        1248680644
    ],
    [
        900440,
        1245757500
    ],
    [
        900410,
        1243520000
    ],
    [
        900350,
        1233613000
    ],
    [
        900260,
        1228520000
    ],
    [
        900250,
        1225767173
    ],
    [
        900240,
        1227567203
    ],
    [
        900210,
        1228436676
    ],
    [
        900170,
        1228520000
    ],
    [
        900130,
        1224020000
    ],
    [
        900120,
        1220756137
    ],
    [
        900110,
        1219461000
    ],
    [
        900060,
        1220461000
    ],
    [
        900030,
        1221565000
    ],
    [
        900020,
        1220461000
    ],
    [
        900000,
        1221093968
    ],
    [
        899970,
        1220461000
    ],
    [
        899950,
        1219461000
    ],
    [
        899890,
        1220660000
    ],
    [
        899880,
        1221228337
    ],
    [
        899840,
        1220660000
    ],
    [
        899830,
        1220365000
    ],
    [
        899820,
        1215995000
    ],
    [
        899810,
        1216500000
    ],
    [
        899800,
        1215650000
    ],
    [
        899790,
        1214640000
    ],
    [
        899780,
        1218050000
    ],
    [
        899770,
        1216837462
    ],
    [
        899760,
        1215550000
    ],
    [
        899750,
        1214000000
    ],
    [
        899720,
        1218050000
    ],
    [
        899710,
        1219094344
    ],
    [
        899700,
        1219500000
    ],
    [
        899690,
        1227500000
    ],
    [
        899680,
        1216950007
    ],
    [
        899670,
        1214555664
    ],
    [
        899660,
        1216243594
    ],
    [
        899640,
        1220095185
    ],
    [
        899630,
        1224015173
    ],
    [
        899600,
        1212601500
    ],
    [
        899590,
        1210250000
    ],
    [
        899570,
        1204304159
    ],
    [
        899560,
        1202269159
    ],
    [
        899550,
        1204204155
    ],
    [
        899540,
        1202127315
    ],
    [
        899510,
        1194495000
    ],
    [
        899480,
        1189000000
    ],
    [
        899470,
        1169309856
    ],
    [
        899460,
        1174877000
    ],
    [
        899440,
        1159000000
    ],
    [
        899430,
        1151644696
    ],
    [
        899420,
        1148880000
    ],
    [
        899410,
        1143000000
    ],
    [
        899380,
        1149000000
    ],
    [
        899360,
        1149340000
    ],
    [
        899240,
        1150000000
    ],
    [
        899200,
        1162721000
    ],
    [
        899140,
        1174784000
    ],
    [
        899110,
        1177844336
    ],
    [
        899070,
        1149340000
    ],
    [
        899010,
        1131000000
    ],
    [
        898970,
        1132436000
    ],
    [
        898950,
        1131764000
    ],
    [
        898910,
        1131264000
    ],
    [
        898900,
        1135000000
    ],
    [
        898840,
        1139000000
    ],
    [
        898800,
        1138000000
    ],
    [
        898750,
        1137827500
    ],
    [
        898740,
        1138000000
    ],
    [
        898730,
        1142000000
    ],
    [
        898700,
        1147000000
    ],
    [
        898680,
        1148046000
    ],
    [
        898670,
        1148716000
    ],
    [
        898660,
        1145961000
    ],
    [
        898650,
        1146641000
    ],
    [
        898630,
        1139091000
    ],
    [
        898620,
        1140021000
    ],
    [
        898600,
        1134511000
    ],
    [
        898570,
        1134041000
    ],
    [
        898500,
        1075025000
    ],
    [
        898490,
        1075000000
    ],
    [
        898480,
        1072615000
    ],
    [
        898450,
        1073525000
    ],
    [
        898400,
        1070593000
    ],
    [
        898380,
        1075281500
    ],
    [
        898330,
        1072500000
    ],
    [
        898320,
        1079691500
    ],
    [
        898300,
        1079880000
    ],
    [
        898250,
        1090000000
    ],
    [
        898160,
        1088000000
    ],
    [
        898020,
        1108000000
    ],
    [
        897950,
        1114910500
    ],
    [
        897890,
        1124920000
    ],
    [
        897860,
        1121119500
    ],
    [
        897810,
        1122038500
    ],
    [
        897790,
        1122000000
    ],
    [
        897750,
        1099318500
    ],
    [
        897730,
        1108213500
    ],
    [
        897690,
        1113213500
    ],
    [
        897670,
        1117460000
    ],
    [
        897600,
        1126960000
    ],
    [
        897540,
        1126460000
    ],
    [
        897510,
        1130620500
    ],
    [
        897490,
        1125966500
    ],
    [
        897480,
        1118460000
    ],
    [
        897380,
        1112000000
    ],
    [
        897360,
        1110500000
    ],
    [
        897330,
        1109000000
    ],
    [
        897290,
        1113000000
    ],
    [
        897240,
        1116013500
    ],
    [
        897130,
        1120513500
    ],
    [
        897110,
        1101000000
    ],
    [
        897070,
        1099825000
    ],
    [
        897040,
        1073000000
    ],
    [
        896980,
        1072953000
    ],
    [
        896940,
        1066000000
    ],
    [
        896920,
        1067000000
    ],
    [
        896890,
        1068000000
    ],
    [
        896880,
        1049815000
    ],
    [
        896870,
        1080783000
    ],
    [
        896840,
        1088000000
    ],
    [
        896830,
        1089430000
    ],
    [
        896800,
        1105000000
    ],
    [
        896780,
        1097331000
    ],
    [
        896740,
        1097422000
    ],
    [
        896730,
        1061864000
    ],
    [
        896710,
        1100000000
    ],
    [
        896680,
        1151000000
    ],
    [
        896670,
        1133250000
    ],
    [
        896620,
        1157000000
    ],
    [
        896600,
        1132580000
    ],
    [
        896570,
        1117000000
    ],
    [
        896560,
        1121414000
    ],
    [
        896550,
        1112290000
    ],
    [
        896530,
        1107800000
    ],
    [
        896480,
        1123000000
    ],
    [
        896470,
        1157604000
    ],
    [
        896450,
        1158770000
    ],
    [
        896420,
        1159000000
    ],
    [
        896400,
        1169658500
    ],
    [
        896390,
        1170350000
    ],
    [
        896350,
        1172500000
    ],
    [
        896340,
        1165958500
    ],
    [
        896300,
        1159195000
    ],
    [
        896280,
        1179548000
    ],
    [
        896270,
        1182103000
    ],
    [
        896260,
        1203515000
    ],
    [
        896240,
        1193205000
    ],
    [
        896230,
        1194630000
    ],
    [
        896220,
        1203714500
    ],
    [
        896200,
        1190500000
    ],
    [
        896180,
        1190302000
    ],
    [
        896150,
        1182000000
    ],
    [
        896130,
        1172695000
    ],
    [
        896120,
        1168695000
    ],
    [
        896110,
        1166160000
    ],
    [
        896100,
        1165650000
    ],
    [
        896090,
        1162990000
    ],
    [
        896080,
        1171705000
    ],
    [
        896070,
        1175905000
    ],
    [
        896060,
        1189340000
    ],
    [
        896050,
        1191505000
    ],
    [
        896030,
        1210660000
    ],
    [
        896010,
        1213000000
    ],
    [
        895980,
        1201660000
    ],
    [
        895960,
        1197559000
    ],
    [
        895940,
        1203000000
    ],
    [
        895920,
        1207171500
    ],
    [
        895870,
        1212671500
    ],
    [
        895860,
        1219500000
    ],
    [
        895820,
        1225000000
    ],
    [
        895790,
        1219153500
    ],
    [
        895780,
        1219000000
    ],
    [
        895750,
        1237500000
    ],
    [
        895740,
        1247829500
    ],
    [
        895720,
        1248329500
    ],
    [
        895700,
        1248854500
    ],
    [
        895680,
        1247500000
    ],
    [
        895670,
        1243070000
    ],
    [
        895620,
        1242410500
    ],
    [
        895610,
        1242120000
    ],
    [
        895590,
        1242000000
    ],
    [
        895580,
        1239509000
    ],
    [
        895570,
        1237070000
    ],
    [
        895540,
        1235900000
    ],
    [
        895530,
        1213318000
    ],
    [
        895520,
        1209275000
    ],
    [
        895480,
        1206000000
    ],
    [
        895440,
        1211000000
    ],
    [
        895370,
        1202877000
    ],
    [
        895360,
        1204000000
    ],
    [
        895350,
        1202240000
    ],
    [
        895340,
        1204000000
    ],
    [
        895310,
        1213000000
    ],
    [
        895280,
        1202000000
    ],
    [
        895250,
        1199540000
    ],
    [
        895240,
        1178269000
    ],
    [
        895080,
        1177000000
    ],
    [
        895030,
        1166000000
    ],
    [
        895000,
        1165000000
    ],
    [
        894990,
        1161020000
    ],
    [
        894940,
        1151120000
    ],
    [
        894870,
        1153281000
    ],
    [
        894860,
        1150155000
    ],
    [
        894850,
        1150690000
    ],
    [
        894830,
        1151120000
    ],
    [
        894810,
        1150155000
    ],
    [
        894790,
        1173043000
    ],
    [
        894780,
        1172280000
    ],
    [
        894730,
        1169000000
    ],
    [
        894720,
        1176000000
    ],
    [
        894700,
        1196458000
    ],
    [
        894690,
        1202000000
    ],
    [
        894670,
        1204625000
    ],
    [
        894660,
        1202190000
    ],
    [
        894610,
        1192000000
    ],
    [
        894560,
        1180000000
    ],
    [
        894550,
        1215381000
    ],
    [
        894520,
        1221000000
    ],
    [
        894490,
        1200000000
    ],
    [
        894470,
        1198749000
    ],
    [
        894380,
        1190000000
    ],
    [
        894360,
        1207480000
    ],
    [
        894330,
        1206030000
    ],
    [
        894280,
        1049000000
    ],
    [
        894190,
        1118000000
    ],
    [
        894130,
        1113000000
    ],
    [
        894090,
        1108000000
    ],
    [
        894080,
        1125788000
    ],
    [
        894050,
        1153000000
    ],
    [
        894040,
        1154657000
    ],
    [
        894010,
        1160000000
    ],
    [
        894000,
        1173645000
    ],
    [
        893960,
        1173000000
    ],
    [
        893910,
        1169000000
    ],
    [
        893860,
        1173000000
    ],
    [
        893830,
        1164000000
    ],
    [
        893810,
        1168050000
    ],
    [
        893780,
        1173000000
    ],
    [
        893700,
        1180000000
    ],
    [
        893660,
        1207480000
    ],
    [
        893650,
        1204540000
    ],
    [
        893640,
        1213280000
    ],
    [
        893630,
        1218000000
    ],
    [
        893620,
        1219970000
    ],
    [
        893600,
        1226880000
    ],
    [
        893590,
        1206905000
    ],
    [
        893550,
        1206420000
    ],
    [
        893540,
        1199700000
    ],
    [
        893530,
        1207000000
    ],
    [
        893520,
        1212970000
    ],
    [
        893500,
        1212350000
    ],
    [
        893490,
        1207720000
    ],
    [
        893470,
        1195490000
    ],
    [
        893420,
        1167000000
    ],
    [
        893410,
        1109240000
    ],
    [
        893380,
        1091000000
    ],
    [
        893310,
        1088000000
    ],
    [
        893260,
        1010000000
    ],
    [
        893210,
        1021000000
    ],
    [
        893180,
        1038000000
    ],
    [
        893090,
        1037908000
    ],
    [
        893030,
        1030000000
    ],
    [
        892980,
        1052000000
    ],
    [
        892970,
        1053805000
    ],
    [
        892950,
        1054500000
    ],
    [
        892940,
        1053902500
    ],
    [
        892920,
        1054500000
    ],
    [
        892870,
        1055000000
    ],
    [
        892810,
        1030510500
    ],
    [
        892760,
        977010500
    ],
    [
        892750,
        948000000
    ],
    [
        892740,
        935342000
    ],
    [
        892710,
        908842000
    ],
    [
        892690,
        910641000
    ],
    [
        892660,
        923282000
    ],
    [
        892640,
        942315000
    ],
    [
        892630,
        969000000
    ],
    [
        892590,
        987000000
    ],
    [
        892530,
        999561000
    ],
    [
        892510,
        987000000
    ],
    [
        892480,
        978550000
    ],
    [
        892460,
        978765000
    ],
    [
        892410,
        1019000000
    ],
    [
        892380,
        1020000000
    ],
    [
        892370,
        1058760000
    ],
    [
        892310,
        1064000000
    ],
    [
        892290,
        1109780000
    ],
    [
        892270,
        1079968000
    ],
    [
        892190,
        1124000000
    ],
    [
        892160,
        1134000000
    ],
    [
        892050,
        1105003000
    ],
    [
        892020,
        1099008000
    ],
    [
        891990,
        1070010000
    ],
    [
        891970,
        1068000000
    ],
    [
        891960,
        1060000000
    ],
    [
        891940,
        1061590000
    ],
    [
        891910,
        1063793000
    ],
    [
        891890,
        1070010000
    ],
    [
        891870,
        1067936000
    ],
    [
        891850,
        1073150000
    ],
    [
        891840,
        1076970000
    ],
    [
        891830,
        1073150000
    ],
    [
        891820,
        1108567000
    ],
    [
        891790,
        1126380000
    ],
    [
        891780,
        1137421000
    ],
    [
        891750,
        1137000000
    ],
    [
        891740,
        1128000000
    ],
    [
        891720,
        1126380000
    ],
    [
        891710,
        1127360000
    ],
    [
        891700,
        1130354000
    ],
    [
        891690,
        1128367000
    ],
    [
        891680,
        1122150000
    ],
    [
        891670,
        1121000000
    ],
    [
        891660,
        1122100000
    ],
    [
        891650,
        1111650000
    ],
    [
        891640,
        1123776000
    ],
    [
        891630,
        1116630000
    ],
    [
        891620,
        1110000000
    ],
    [
        891590,
        1146244000
    ],
    [
        891580,
        1149000000
    ],
    [
        891560,
        1195502000
    ],
    [
        891550,
        1197000000
    ],
    [
        891530,
        1206000000
    ],
    [
        891510,
        1195657000
    ],
    [
        891470,
        1158513000
    ],
    [
        891450,
        1152000000
    ],
    [
        891370,
        1228000000
    ],
    [
        891360,
        1234000000
    ],
    [
        891250,
        1248000000
    ],
    [
        891210,
        1245000000
    ],
    [
        891200,
        1239000000
    ],
    [
        891190,
        1225000000
    ],
    [
        891160,
        1222000000
    ],
    [
        891150,
        1225000000
    ],
    [
        891140,
        1239000000
    ],
    [
        891110,
        1247521000
    ],
    [
        891030,
        1239000000
    ],
    [
        890920,
        1236000000
    ],
    [
        890830,
        1237000000
    ],
    [
        890380,
        1248000000
    ],
    [
        890340,
        1246000000
    ],
    [
        890330,
        1240713000
    ],
    [
        890270,
        1237000000
    ],
    [
        890210,
        1235000000
    ],
    [
        890110,
        1226000000
    ],
    [
        890060,
        1229000000
    ],
    [
        890050,
        1235927500
    ],
    [
        890010,
        1249000000
    ],
    [
        890000,
        1265750000
    ],
    [
        889990,
        1268925000
    ],
    [
        889930,
        1294600000
    ],
    [
        889910,
        1296000000
    ],
    [
        889880,
        1302900000
    ],
    [
        889850,
        1292600000
    ],
    [
        889830,
        1290500000
    ],
    [
        889730,
        1294427000
    ],
    [
        889710,
        1295600000
    ],
    [
        889680,
        1293000000
    ],
    [
        889670,
        1292795000
    ],
    [
        889650,
        1290381000
    ],
    [
        889620,
        1284870000
    ],
    [
        889590,
        1274688500
    ],
    [
        889560,
        1273688500
    ],
    [
        889540,
        1271106500
    ],
    [
        889520,
        1264000000
    ],
    [
        889510,
        1266606500
    ],
    [
        889500,
        1264000000
    ],
    [
        889490,
        1264500000
    ],
    [
        889460,
        1263913000
    ],
    [
        889440,
        1263865000
    ],
    [
        889410,
        1262165500
    ],
    [
        889400,
        1272050500
    ],
    [
        889340,
        1270928000
    ],
    [
        889330,
        1278438500
    ],
    [
        889290,
        1283500000
    ],
    [
        889270,
        1284790000
    ],
    [
        889240,
        1292680000
    ],
    [
        889220,
        1293535000
    ],
    [
        889190,
        1292935000
    ],
    [
        889180,
        1292680000
    ],
    [
        889170,
        1291745000
    ],
    [
        889120,
        1290500000
    ],
    [
        889070,
        1290000000
    ],
    [
        889050,
        1291245000
    ],
    [
        889010,
        1293313000
    ],
    [
        888990,
        1292490000
    ],
    [
        888950,
        1291927000
    ],
    [
        888930,
        1291974000
    ],
    [
        888870,
        1290000000
    ],
    [
        888840,
        1290987000
    ],
    [
        888820,
        1282999500
    ],
    [
        888810,
        1280500000
    ],
    [
        888720,
        1281000000
    ],
    [
        888710,
        1281500000
    ],
    [
        888680,
        1282000000
    ],
    [
        888630,
        1280227000
    ],
    [
        888570,
        1281282500
    ],
    [
        888490,
        1280651500
    ],
    [
        888450,
        1282651500
    ],
    [
        888370,
        1282240000
    ],
    [
        888330,
        1280240000
    ],
    [
        888310,
        1273135000
    ],
    [
        888270,
        1261155000
    ],
    [
        888250,
        1262135000
    ],
    [
        888210,
        1267145500
    ],
    [
        888160,
        1265606000
    ],
    [
        888140,
        1268100000
    ],
    [
        888100,
        1286620000
    ],
    [
        888090,
        1286805500
    ],
    [
        888030,
        1277000000
    ],
    [
        888020,
        1274000000
    ],
    [
        888000,
        1270126500
    ],
    [
        887980,
        1277126500
    ],
    [
        887930,
        1281288500
    ],
    [
        887920,
        1282791000
    ],
    [
        887820,
        1265000000
    ],
    [
        887760,
        1258000000
    ],
    [
        887730,
        1300000000
    ],
    [
        887710,
        1308291500
    ],
    [
        887670,
        1319791500
    ],
    [
        887650,
        1318910500
    ],
    [
        887620,
        1313410500
    ],
    [
        887610,
        1314821000
    ],
    [
        887600,
        1337095000
    ],
    [
        887590,
        1347300000
    ],
    [
        887570,
        1348000000
    ],
    [
        887540,
        1353000000
    ],
    [
        887500,
        1373000000
    ],
    [
        887460,
        1364000000
    ],
    [
        887420,
        1364810000
    ],
    [
        887390,
        1365560000
    ],
    [
        887380,
        1375230000
    ],
    [
        887370,
        1382080000
    ],
    [
        887220,
        1365560000
    ],
    [
        887170,
        1355100000
    ],
    [
        887150,
        1354000000
    ],
    [
        887120,
        1352000000
    ],
    [
        887110,
        1347300000
    ],
    [
        887070,
        1342190000
    ],
    [
        887010,
        1342092000
    ],
    [
        886990,
        1341376000
    ],
    [
        886950,
        1347300000
    ],
    [
        886900,
        1357184000
    ],
    [
        886880,
        1366000000
    ],
    [
        886840,
        1370314000
    ],
    [
        886800,
        1383000000
    ],
    [
        886700,
        1353890000
    ],
    [
        886690,
        1351530000
    ],
    [
        886640,
        1356000000
    ],
    [
        886610,
        1360340000
    ],
    [
        886560,
        1360550000
    ],
    [
        886520,
        1357000000
    ],
    [
        886460,
        1347300000
    ],
    [
        886430,
        1343000000
    ],
    [
        886410,
        1347000000
    ],
    [
        886400,
        1351180000
    ],
    [
        886390,
        1353470000
    ],
    [
        886380,
        1354000000
    ],
    [
        886340,
        1356958000
    ],
    [
        886330,
        1356755000
    ],
    [
        886320,
        1354940000
    ],
    [
        886300,
        1354238000
    ],
    [
        886290,
        1357738000
    ],
    [
        886280,
        1358380000
    ],
    [
        886260,
        1359850000
    ],
    [
        886170,
        1361000000
    ],
    [
        886130,
        1373200000
    ],
    [
        886120,
        1376525000
    ],
    [
        886100,
        1374025000
    ],
    [
        886090,
        1374500000
    ],
    [
        886080,
        1374010000
    ],
    [
        886050,
        1373395000
    ],
    [
        886040,
        1373895000
    ],
    [
        886030,
        1383670000
    ],
    [
        886000,
        1389008500
    ],
    [
        885980,
        1389320000
    ],
    [
        885970,
        1389820000
    ],
    [
        885950,
        1391320000
    ],
    [
        885930,
        1382675000
    ],
    [
        885910,
        1370400000
    ],
    [
        885840,
        1370225000
    ],
    [
        885770,
        1361139500
    ],
    [
        885730,
        1353624500
    ],
    [
        885690,
        1353420000
    ],
    [
        885650,
        1331850000
    ],
    [
        885610,
        1327420000
    ],
    [
        885540,
        1317915500
    ],
    [
        885530,
        1317545000
    ],
    [
        885490,
        1317530000
    ],
    [
        885470,
        1316915000
    ],
    [
        885440,
        1314645500
    ],
    [
        885420,
        1313545500
    ],
    [
        885380,
        1315275000
    ],
    [
        885370,
        1315295000
    ],
    [
        885360,
        1315275000
    ],
    [
        885350,
        1316955000
    ],
    [
        885340,
        1317311500
    ],
    [
        885330,
        1314851500
    ],
    [
        885250,
        1313000000
    ],
    [
        885240,
        1311055000
    ],
    [
        885230,
        1312940000
    ],
    [
        885220,
        1311382000
    ],
    [
        885200,
        1308167000
    ],
    [
        885190,
        1305882000
    ],
    [
        885170,
        1311767000
    ],
    [
        885160,
        1305882000
    ],
    [
        885150,
        1306172000
    ],
    [
        885140,
        1309962000
    ],
    [
        885120,
        1306172000
    ],
    [
        885110,
        1316545000
    ],
    [
        885090,
        1321000000
    ],
    [
        885080,
        1322215000
    ],
    [
        885050,
        1324872500
    ],
    [
        885040,
        1323520000
    ],
    [
        885030,
        1322261500
    ],
    [
        884980,
        1324046500
    ],
    [
        884970,
        1327000000
    ],
    [
        884960,
        1323673500
    ],
    [
        884950,
        1315245000
    ],
    [
        884940,
        1316173500
    ],
    [
        884930,
        1315730000
    ],
    [
        884900,
        1312000000
    ],
    [
        884860,
        1333959500
    ],
    [
        884850,
        1332651500
    ],
    [
        884840,
        1331571500
    ],
    [
        884830,
        1331256500
    ],
    [
        884810,
        1329286500
    ],
    [
        884800,
        1331171500
    ],
    [
        884790,
        1330204500
    ],
    [
        884770,
        1309950000
    ],
    [
        884760,
        1303500000
    ],
    [
        884750,
        1297187500
    ],
    [
        884740,
        1295187500
    ],
    [
        884730,
        1297187500
    ],
    [
        884720,
        1301000000
    ],
    [
        884710,
        1297187500
    ],
    [
        884690,
        1300664000
    ],
    [
        884680,
        1299000000
    ],
    [
        884660,
        1300664000
    ],
    [
        884650,
        1303050000
    ],
    [
        884620,
        1299355000
    ],
    [
        884570,
        1299000000
    ],
    [
        884530,
        1315000000
    ],
    [
        884520,
        1314360000
    ],
    [
        884510,
        1315000000
    ],
    [
        884500,
        1320300000
    ],
    [
        884480,
        1318945000
    ],
    [
        884430,
        1321450000
    ],
    [
        884400,
        1322000000
    ],
    [
        884390,
        1321450000
    ],
    [
        884380,
        1324730000
    ],
    [
        884300,
        1327500000
    ],
    [
        884280,
        1321579000
    ],
    [
        884270,
        1322629000
    ],
    [
        884250,
        1322294000
    ],
    [
        884230,
        1321579000
    ],
    [
        884210,
        1323540500
    ],
    [
        884200,
        1326505500
    ],
    [
        884190,
        1325435500
    ],
    [
        884170,
        1324890500
    ],
    [
        884160,
        1323950000
    ],
    [
        884150,
        1326000000
    ],
    [
        884140,
        1322805000
    ],
    [
        884120,
        1332966500
    ],
    [
        884100,
        1330465000
    ],
    [
        884090,
        1328105000
    ],
    [
        884080,
        1330000000
    ],
    [
        884070,
        1331000000
    ],
    [
        884060,
        1325896000
    ],
    [
        884050,
        1328255000
    ],
    [
        884040,
        1331475000
    ],
    [
        884030,
        1340605500
    ],
    [
        884020,
        1341295500
    ],
    [
        884000,
        1348700000
    ],
    [
        883990,
        1353621500
    ],
    [
        883980,
        1367585000
    ],
    [
        883970,
        1366600000
    ],
    [
        883960,
        1361500000
    ],
    [
        883950,
        1352775000
    ],
    [
        883940,
        1349470000
    ],
    [
        883930,
        1340785000
    ],
    [
        883920,
        1333238000
    ],
    [
        883910,
        1344410000
    ],
    [
        883900,
        1353500000
    ],
    [
        883890,
        1357725000
    ],
    [
        883880,
        1356500000
    ],
    [
        883870,
        1360362000
    ],
    [
        883860,
        1371140000
    ],
    [
        883790,
        1351184500
    ],
    [
        883780,
        1347159000
    ],
    [
        883770,
        1341000000
    ],
    [
        883760,
        1341305000
    ],
    [
        883740,
        1341000000
    ],
    [
        883730,
        1333270000
    ],
    [
        883720,
        1334705000
    ],
    [
        883700,
        1349179000
    ],
    [
        883680,
        1351000000
    ],
    [
        883650,
        1365920000
    ],
    [
        883640,
        1366775000
    ],
    [
        883630,
        1360520000
    ],
    [
        883620,
        1361445000
    ],
    [
        883610,
        1362000000
    ],
    [
        883600,
        1361585000
    ],
    [
        883580,
        1362000000
    ],
    [
        883560,
        1373665000
    ],
    [
        883550,
        1377193000
    ],
    [
        883540,
        1376435000
    ],
    [
        883520,
        1367080000
    ],
    [
        883510,
        1370440000
    ],
    [
        883500,
        1370790000
    ],
    [
        883490,
        1373110000
    ],
    [
        883480,
        1377056000
    ],
    [
        883470,
        1376996000
    ],
    [
        883460,
        1376150000
    ],
    [
        883440,
        1375440000
    ],
    [
        883420,
        1366136000
    ],
    [
        883410,
        1365636000
    ],
    [
        883390,
        1353941000
    ],
    [
        883370,
        1349870500
    ],
    [
        883350,
        1346305000
    ],
    [
        883340,
        1344000000
    ],
    [
        883330,
        1343700000
    ],
    [
        883320,
        1344000000
    ],
    [
        883280,
        1335000000
    ],
    [
        883270,
        1332020000
    ],
    [
        883240,
        1327271000
    ],
    [
        883220,
        1326500000
    ],
    [
        883190,
        1338573500
    ],
    [
        883170,
        1339000000
    ],
    [
        883140,
        1340405000
    ],
    [
        883120,
        1339000000
    ],
    [
        883110,
        1328577500
    ],
    [
        883100,
        1327520000
    ],
    [
        883090,
        1328577500
    ],
    [
        883070,
        1327405000
    ],
    [
        883060,
        1329427500
    ],
    [
        883050,
        1329927500
    ],
    [
        883040,
        1329427500
    ],
    [
        883030,
        1331255000
    ],
    [
        883000,
        1329500000
    ],
    [
        882990,
        1330550000
    ],
    [
        882980,
        1330628500
    ],
    [
        882970,
        1329500000
    ],
    [
        882950,
        1336128500
    ],
    [
        882940,
        1341500000
    ],
    [
        882930,
        1343388000
    ],
    [
        882920,
        1351275000
    ],
    [
        882910,
        1349840000
    ],
    [
        882900,
        1349623000
    ],
    [
        882890,
        1356500000
    ],
    [
        882860,
        1378491500
    ],
    [
        882850,
        1373733500
    ],
    [
        882840,
        1371128500
    ],
    [
        882820,
        1353500000
    ],
    [
        882810,
        1351465000
    ],
    [
        882800,
        1351000000
    ],
    [
        882790,
        1352500000
    ],
    [
        882780,
        1354000000
    ],
    [
        882760,
        1351699000
    ],
    [
        882750,
        1350510000
    ],
    [
        882740,
        1350625000
    ],
    [
        882730,
        1349650000
    ],
    [
        882700,
        1349082000
    ],
    [
        882690,
        1343922000
    ],
    [
        882680,
        1336565000
    ],
    [
        882640,
        1325500000
    ],
    [
        882630,
        1322361500
    ],
    [
        882600,
        1320861500
    ],
    [
        882550,
        1320274500
    ],
    [
        882540,
        1318042500
    ],
    [
        882450,
        1314542500
    ],
    [
        882440,
        1315500000
    ],
    [
        882430,
        1321220500
    ],
    [
        882410,
        1328760500
    ],
    [
        882370,
        1330022500
    ],
    [
        882350,
        1332540000
    ],
    [
        882320,
        1334331000
    ],
    [
        882300,
        1333931000
    ],
    [
        882270,
        1329000000
    ],
    [
        882260,
        1325160000
    ],
    [
        882210,
        1321000000
    ],
    [
        882180,
        1334027500
    ],
    [
        882170,
        1335266000
    ],
    [
        882140,
        1331090000
    ],
    [
        882070,
        1327750500
    ],
    [
        882060,
        1328840500
    ],
    [
        881560,
        1249485000
    ],
    [
        881530,
        1251830000
    ],
    [
        881490,
        1254000000
    ],
    [
        881440,
        1261810000
    ],
    [
        881410,
        1262000000
    ],
    [
        881400,
        1262816000
    ],
    [
        881370,
        1258000000
    ],
    [
        881360,
        1257000000
    ],
    [
        881310,
        1252000000
    ],
    [
        881290,
        1259000000
    ],
    [
        881250,
        1258578000
    ],
    [
        881220,
        1258809000
    ],
    [
        881200,
        1265000000
    ],
    [
        881180,
        1265380000
    ],
    [
        881120,
        1258000000
    ],
    [
        881100,
        1260971000
    ],
    [
        881090,
        1265000000
    ],
    [
        881070,
        1271000000
    ],
    [
        881040,
        1282120000
    ],
    [
        881000,
        1286559000
    ],
    [
        880980,
        1265000000
    ],
    [
        880970,
        1244000000
    ],
    [
        880950,
        1249660000
    ],
    [
        880860,
        1265000000
    ],
    [
        880820,
        1265960000
    ],
    [
        880760,
        1258000000
    ],
    [
        880740,
        1265000000
    ],
    [
        880730,
        1272346000
    ],
    [
        880680,
        1275104000
    ],
    [
        880660,
        1265000000
    ],
    [
        880620,
        1259000000
    ],
    [
        880570,
        1252000000
    ],
    [
        880550,
        1249660000
    ],
    [
        880500,
        1254572000
    ],
    [
        880440,
        1263320000
    ],
    [
        880400,
        1244000000
    ],
    [
        880360,
        1265400000
    ],
    [
        880230,
        1239440000
    ],
    [
        880180,
        1259970000
    ],
    [
        880170,
        1256100000
    ],
    [
        880110,
        1251000000
    ],
    [
        880100,
        1239440000
    ],
    [
        880030,
        1234820000
    ],
    [
        880010,
        1237967000
    ],
    [
        879990,
        1233853000
    ],
    [
        879950,
        1237000000
    ],
    [
        879920,
        1238290000
    ],
    [
        879910,
        1245000000
    ],
    [
        879900,
        1246667000
    ],
    [
        879870,
        1245000000
    ],
    [
        879860,
        1248000000
    ],
    [
        879840,
        1252000000
    ],
    [
        879820,
        1306240000
    ],
    [
        879770,
        1312000000
    ],
    [
        879740,
        1341970000
    ],
    [
        879720,
        1343000000
    ],
    [
        879700,
        1350721000
    ],
    [
        879670,
        1364000000
    ],
    [
        879630,
        1372000000
    ],
    [
        879610,
        1358701000
    ],
    [
        879580,
        1351000000
    ],
    [
        879560,
        1338095000
    ],
    [
        879550,
        1325914500
    ],
    [
        879530,
        1325154500
    ],
    [
        879470,
        1325990000
    ],
    [
        879450,
        1323935000
    ],
    [
        879440,
        1325500500
    ],
    [
        879430,
        1320850000
    ],
    [
        879410,
        1318545000
    ],
    [
        879400,
        1316988500
    ],
    [
        879390,
        1317323500
    ],
    [
        879340,
        1291000000
    ],
    [
        879310,
        1300000000
    ],
    [
        879290,
        1300629500
    ],
    [
        879280,
        1300000000
    ],
    [
        879250,
        1303629500
    ],
    [
        879240,
        1306000000
    ],
    [
        879220,
        1314274000
    ],
    [
        879200,
        1321419000
    ],
    [
        879180,
        1322191500
    ],
    [
        879140,
        1316001500
    ],
    [
        879110,
        1314000000
    ],
    [
        879070,
        1327433500
    ],
    [
        879010,
        1319235000
    ],
    [
        878990,
        1324890000
    ],
    [
        878940,
        1311545000
    ],
    [
        878900,
        1324078500
    ],
    [
        878880,
        1319235000
    ],
    [
        878870,
        1305045000
    ],
    [
        878840,
        1298500000
    ],
    [
        878820,
        1303258500
    ],
    [
        878790,
        1314545000
    ],
    [
        878770,
        1318500000
    ],
    [
        878660,
        1327690000
    ],
    [
        878650,
        1325690000
    ],
    [
        878640,
        1323781000
    ],
    [
        878620,
        1312281000
    ],
    [
        878600,
        1307990000
    ],
    [
        878590,
        1302000000
    ],
    [
        878530,
        1291000000
    ],
    [
        878510,
        1299500000
    ],
    [
        878500,
        1307490000
    ],
    [
        878460,
        1313490000
    ],
    [
        878430,
        1316822500
    ],
    [
        878420,
        1318196000
    ],
    [
        878400,
        1315196000
    ],
    [
        878350,
        1310509000
    ],
    [
        878330,
        1303387000
    ],
    [
        878320,
        1305387000
    ],
    [
        878290,
        1317000000
    ],
    [
        878260,
        1326690000
    ],
    [
        878250,
        1327000000
    ],
    [
        878220,
        1334673500
    ],
    [
        878170,
        1341500000
    ],
    [
        878150,
        1346473500
    ],
    [
        878140,
        1357492000
    ],
    [
        878130,
        1357500000
    ],
    [
        878120,
        1354960000
    ],
    [
        878110,
        1352300000
    ],
    [
        878100,
        1371385000
    ],
    [
        878080,
        1368951500
    ],
    [
        878050,
        1362235000
    ],
    [
        878040,
        1376885000
    ],
    [
        877990,
        1382885000
    ],
    [
        877970,
        1390798500
    ],
    [
        877910,
        1378803500
    ],
    [
        877830,
        1373510000
    ],
    [
        877770,
        1369385000
    ],
    [
        877690,
        1367885000
    ],
    [
        877680,
        1369000000
    ],
    [
        877670,
        1367885000
    ],
    [
        877610,
        1365870500
    ],
    [
        877550,
        1378885000
    ],
    [
        877530,
        1363985500
    ],
    [
        877490,
        1362145000
    ],
    [
        877430,
        1360645000
    ],
    [
        877420,
        1363895500
    ],
    [
        877390,
        1376750500
    ],
    [
        877360,
        1388000000
    ],
    [
        877330,
        1392194000
    ],
    [
        877300,
        1389935000
    ],
    [
        877290,
        1379895000
    ],
    [
        877270,
        1382719000
    ],
    [
        877260,
        1379000000
    ],
    [
        877250,
        1372475000
    ],
    [
        877240,
        1377530000
    ],
    [
        877200,
        1359173500
    ],
    [
        877190,
        1358000000
    ],
    [
        877180,
        1356450000
    ],
    [
        877150,
        1359398000
    ],
    [
        877130,
        1363919000
    ],
    [
        877110,
        1360419000
    ],
    [
        877100,
        1360310000
    ],
    [
        877090,
        1360275000
    ],
    [
        877080,
        1358070000
    ],
    [
        877050,
        1381334500
    ],
    [
        877030,
        1382000000
    ],
    [
        877020,
        1383900000
    ],
    [
        876970,
        1410000000
    ],
    [
        876960,
        1413587500
    ],
    [
        876950,
        1417612500
    ],
    [
        876940,
        1428203000
    ],
    [
        876930,
        1432138000
    ],
    [
        876900,
        1408638000
    ],
    [
        876890,
        1394195000
    ],
    [
        876880,
        1398265500
    ],
    [
        876870,
        1400000000
    ],
    [
        876860,
        1405265500
    ],
    [
        876850,
        1400000000
    ],
    [
        876840,
        1405605000
    ],
    [
        876830,
        1402475000
    ],
    [
        876820,
        1401195000
    ],
    [
        876770,
        1419000000
    ],
    [
        876740,
        1445588500
    ],
    [
        876720,
        1455887000
    ],
    [
        876690,
        1452000000
    ],
    [
        876680,
        1446829500
    ],
    [
        876650,
        1442329500
    ],
    [
        876630,
        1448000000
    ],
    [
        876570,
        1457300000
    ],
    [
        876530,
        1467800000
    ],
    [
        876490,
        1456563000
    ],
    [
        876460,
        1452993000
    ],
    [
        876430,
        1433193000
    ],
    [
        876410,
        1436800000
    ],
    [
        876400,
        1413500000
    ],
    [
        876380,
        1386620000
    ],
    [
        876360,
        1357370000
    ],
    [
        876350,
        1351469000
    ],
    [
        876330,
        1350219000
    ],
    [
        876250,
        1349000000
    ],
    [
        876230,
        1336000000
    ],
    [
        876210,
        1342562000
    ],
    [
        876180,
        1355250000
    ],
    [
        876170,
        1359000000
    ],
    [
        876160,
        1359614500
    ],
    [
        876150,
        1370425000
    ],
    [
        876140,
        1375700000
    ],
    [
        876120,
        1389765000
    ],
    [
        876110,
        1399710000
    ],
    [
        876100,
        1401545000
    ],
    [
        876070,
        1404000000
    ],
    [
        875990,
        1397745000
    ],
    [
        875980,
        1374250000
    ],
    [
        875970,
        1367500000
    ],
    [
        875950,
        1355454500
    ],
    [
        875940,
        1361305000
    ],
    [
        875930,
        1378077500
    ],
    [
        875920,
        1373937500
    ],
    [
        875910,
        1380152500
    ],
    [
        875900,
        1364020000
    ],
    [
        875890,
        1367220000
    ],
    [
        875860,
        1284665000
    ],
    [
        875820,
        1269912500
    ],
    [
        875810,
        1265690000
    ],
    [
        875790,
        1275500000
    ],
    [
        875780,
        1276505000
    ],
    [
        875770,
        1284085000
    ],
    [
        875750,
        1219050000
    ],
    [
        875730,
        1180458500
    ],
    [
        875720,
        1191000000
    ],
    [
        875710,
        1191550000
    ],
    [
        875700,
        1195901000
    ],
    [
        875690,
        1194951000
    ],
    [
        875680,
        1194291000
    ],
    [
        875670,
        1207845000
    ],
    [
        875660,
        1212500000
    ],
    [
        875640,
        1238679500
    ],
    [
        875630,
        1240365000
    ],
    [
        875620,
        1280211000
    ],
    [
        875590,
        1288471000
    ],
    [
        875580,
        1286826000
    ],
    [
        875570,
        1278826000
    ],
    [
        875540,
        1274740000
    ],
    [
        875520,
        1284814500
    ],
    [
        875450,
        1300000000
    ],
    [
        875430,
        1277592000
    ],
    [
        875400,
        1275240000
    ],
    [
        875380,
        1273740000
    ],
    [
        875340,
        1238881000
    ],
    [
        875310,
        1255740000
    ],
    [
        875280,
        1252240000
    ],
    [
        875250,
        1234780000
    ],
    [
        875210,
        1238280000
    ],
    [
        875180,
        1237624500
    ],
    [
        875150,
        1231624500
    ],
    [
        875130,
        1230623500
    ],
    [
        875100,
        1233123500
    ],
    [
        875090,
        1249372000
    ],
    [
        875080,
        1271612000
    ],
    [
        875050,
        1274740000
    ],
    [
        875030,
        1276000000
    ],
    [
        875020,
        1270740000
    ],
    [
        875010,
        1265000000
    ],
    [
        875000,
        1273495000
    ],
    [
        874970,
        1271165000
    ],
    [
        874960,
        1272500000
    ],
    [
        874940,
        1280000000
    ],
    [
        874930,
        1285500000
    ],
    [
        874920,
        1286474000
    ],
    [
        874910,
        1280000000
    ],
    [
        874890,
        1293974000
    ],
    [
        874880,
        1294360000
    ],
    [
        874870,
        1293974000
    ],
    [
        874840,
        1295000000
    ],
    [
        874810,
        1305000000
    ],
    [
        874790,
        1306380000
    ],
    [
        874770,
        1305000000
    ],
    [
        874730,
        1341093500
    ],
    [
        874700,
        1359000000
    ],
    [
        874660,
        1398477500
    ],
    [
        874650,
        1396150000
    ],
    [
        874640,
        1400975000
    ],
    [
        874620,
        1378158000
    ],
    [
        874580,
        1376000000
    ],
    [
        874520,
        1387500000
    ],
    [
        874510,
        1388475000
    ],
    [
        874500,
        1394815500
    ],
    [
        874460,
        1405755500
    ],
    [
        874430,
        1409260500
    ],
    [
        874420,
        1409655500
    ],
    [
        874410,
        1409650500
    ],
    [
        874400,
        1408200000
    ],
    [
        874390,
        1408240000
    ],
    [
        874320,
        1408070000
    ],
    [
        874310,
        1409000000
    ],
    [
        874300,
        1408070000
    ],
    [
        874290,
        1409000000
    ],
    [
        874280,
        1419962500
    ],
    [
        874250,
        1427757500
    ],
    [
        874230,
        1428802000
    ],
    [
        874180,
        1430802000
    ],
    [
        874120,
        1433211500
    ],
    [
        874100,
        1428817000
    ],
    [
        874060,
        1415000000
    ],
    [
        874040,
        1414705000
    ],
    [
        874000,
        1410324000
    ],
    [
        873980,
        1409500000
    ],
    [
        873940,
        1410000000
    ],
    [
        873930,
        1412205000
    ],
    [
        873920,
        1413205000
    ],
    [
        873870,
        1413705000
    ],
    [
        873770,
        1425389000
    ],
    [
        873750,
        1424935500
    ],
    [
        873700,
        1430500000
    ],
    [
        873690,
        1431865000
    ],
    [
        873660,
        1439418500
    ],
    [
        873650,
        1441320000
    ],
    [
        873640,
        1445000000
    ],
    [
        873630,
        1443204000
    ],
    [
        873620,
        1447419000
    ],
    [
        873610,
        1448554000
    ],
    [
        873590,
        1446438000
    ],
    [
        873570,
        1439673000
    ],
    [
        873550,
        1441468000
    ],
    [
        873540,
        1443765000
    ],
    [
        873530,
        1447610000
    ],
    [
        873510,
        1457537500
    ],
    [
        873500,
        1462457500
    ],
    [
        873490,
        1456520000
    ],
    [
        873480,
        1464910000
    ],
    [
        873440,
        1458500000
    ],
    [
        873420,
        1442422000
    ],
    [
        873400,
        1434117000
    ],
    [
        873390,
        1433707000
    ],
    [
        873370,
        1434569000
    ],
    [
        873350,
        1417000000
    ],
    [
        873330,
        1416050000
    ],
    [
        873320,
        1406584000
    ],
    [
        873310,
        1405500000
    ],
    [
        873290,
        1406200000
    ],
    [
        873280,
        1412276500
    ],
    [
        873260,
        1416550000
    ],
    [
        873250,
        1421072500
    ],
    [
        873230,
        1417622500
    ],
    [
        873220,
        1423050000
    ],
    [
        873210,
        1428012500
    ],
    [
        873200,
        1429332500
    ],
    [
        873190,
        1433095500
    ],
    [
        873180,
        1427095500
    ],
    [
        873160,
        1426000000
    ],
    [
        873150,
        1420360000
    ],
    [
        872630,
        1425610000
    ],
    [
        872610,
        1427000000
    ],
    [
        872600,
        1427271000
    ],
    [
        872580,
        1427000000
    ],
    [
        872570,
        1426630000
    ],
    [
        872540,
        1431130000
    ],
    [
        872520,
        1436765500
    ],
    [
        872510,
        1438235000
    ],
    [
        872500,
        1440265500
    ],
    [
        872490,
        1437795000
    ],
    [
        872470,
        1434568500
    ],
    [
        872440,
        1424578500
    ],
    [
        872430,
        1415345500
    ],
    [
        872420,
        1410500000
    ],
    [
        872410,
        1405990000
    ],
    [
        872380,
        1388112500
    ],
    [
        872360,
        1385178000
    ],
    [
        872320,
        1382178000
    ],
    [
        872310,
        1384050000
    ],
    [
        872300,
        1406529000
    ],
    [
        872280,
        1434529000
    ],
    [
        872260,
        1436000000
    ],
    [
        872240,
        1435500000
    ],
    [
        872210,
        1436135000
    ],
    [
        872200,
        1444500000
    ],
    [
        872180,
        1445910000
    ],
    [
        872170,
        1444850000
    ],
    [
        872160,
        1443350000
    ],
    [
        872130,
        1442686500
    ],
    [
        872120,
        1444000000
    ],
    [
        872110,
        1443914500
    ],
    [
        872100,
        1448470000
    ],
    [
        872090,
        1449690000
    ],
    [
        872080,
        1447414500
    ],
    [
        872070,
        1447455000
    ],
    [
        872040,
        1447414500
    ],
    [
        872020,
        1447675000
    ],
    [
        872010,
        1448810000
    ],
    [
        872000,
        1450570000
    ],
    [
        871960,
        1438962000
    ],
    [
        871940,
        1436095500
    ],
    [
        871930,
        1437000000
    ],
    [
        871910,
        1438095500
    ],
    [
        871900,
        1439150000
    ],
    [
        871870,
        1459867500
    ],
    [
        871860,
        1459975000
    ],
    [
        871850,
        1461395000
    ],
    [
        871830,
        1443109000
    ],
    [
        871810,
        1439054000
    ],
    [
        871800,
        1445554000
    ],
    [
        871790,
        1446525000
    ],
    [
        871780,
        1445554000
    ],
    [
        871760,
        1447000000
    ],
    [
        871750,
        1449335000
    ],
    [
        871740,
        1447520000
    ],
    [
        871730,
        1448870000
    ],
    [
        871720,
        1448665000
    ],
    [
        871710,
        1471970000
    ],
    [
        871680,
        1488370000
    ],
    [
        871670,
        1489330000
    ],
    [
        871580,
        1488370000
    ],
    [
        871560,
        1494590000
    ],
    [
        871550,
        1494535000
    ],
    [
        871540,
        1491000000
    ],
    [
        871500,
        1489000000
    ],
    [
        871490,
        1488315000
    ],
    [
        871460,
        1488370000
    ],
    [
        871450,
        1488012500
    ],
    [
        871440,
        1489642500
    ],
    [
        871400,
        1489000000
    ],
    [
        871390,
        1496490000
    ],
    [
        871370,
        1500140000
    ],
    [
        871360,
        1503870000
    ],
    [
        871350,
        1497315000
    ],
    [
        871340,
        1503100000
    ],
    [
        871330,
        1507950000
    ],
    [
        871320,
        1503213500
    ],
    [
        871310,
        1502933500
    ],
    [
        871290,
        1501978500
    ],
    [
        871280,
        1496203500
    ],
    [
        871270,
        1491182000
    ],
    [
        871260,
        1497067000
    ],
    [
        871240,
        1487990000
    ],
    [
        871220,
        1485000000
    ],
    [
        871210,
        1482500000
    ],
    [
        871200,
        1489475000
    ],
    [
        871190,
        1485490000
    ],
    [
        871180,
        1488895000
    ],
    [
        871170,
        1489447500
    ],
    [
        871160,
        1489570000
    ],
    [
        871130,
        1484457500
    ],
    [
        871120,
        1481000000
    ],
    [
        871110,
        1480500000
    ],
    [
        871080,
        1478441000
    ],
    [
        871070,
        1478776000
    ],
    [
        871060,
        1478500000
    ],
    [
        871040,
        1474630000
    ],
    [
        871030,
        1474265000
    ],
    [
        871020,
        1473715000
    ],
    [
        870990,
        1485863500
    ],
    [
        870970,
        1490980000
    ],
    [
        870950,
        1501000000
    ],
    [
        870940,
        1495010000
    ],
    [
        870920,
        1482317000
    ],
    [
        870900,
        1482170000
    ],
    [
        870890,
        1482110000
    ],
    [
        870870,
        1478390000
    ],
    [
        870860,
        1468050000
    ],
    [
        870850,
        1451640000
    ],
    [
        870840,
        1454120000
    ],
    [
        870830,
        1449540000
    ],
    [
        870800,
        1446700000
    ],
    [
        870790,
        1455000000
    ],
    [
        870750,
        1473000000
    ],
    [
        870720,
        1429000000
    ],
    [
        870700,
        1446700000
    ],
    [
        870680,
        1458000000
    ],
    [
        870610,
        1495000000
    ],
    [
        870590,
        1474000000
    ],
    [
        870560,
        1456297000
    ],
    [
        870530,
        1449000000
    ],
    [
        870500,
        1446700000
    ],
    [
        870420,
        1446992000
    ],
    [
        870360,
        1449000000
    ],
    [
        870330,
        1484000000
    ],
    [
        870300,
        1485657000
    ],
    [
        870250,
        1492000000
    ],
    [
        870190,
        1488000000
    ],
    [
        870150,
        1484000000
    ],
    [
        870120,
        1519000000
    ],
    [
        870100,
        1521390000
    ],
    [
        870080,
        1537142000
    ],
    [
        870070,
        1541660000
    ],
    [
        870060,
        1555420000
    ],
    [
        870000,
        1542000000
    ],
    [
        869950,
        1535000000
    ],
    [
        869930,
        1539000000
    ],
    [
        869920,
        1535490000
    ],
    [
        869900,
        1530117000
    ],
    [
        869850,
        1524000000
    ],
    [
        869830,
        1521745491
    ],
    [
        869820,
        1521000000
    ],
    [
        869800,
        1522044429
    ],
    [
        869790,
        1522710000
    ],
    [
        869770,
        1527768792
    ],
    [
        869750,
        1534000000
    ],
    [
        869740,
        1535554000
    ],
    [
        869730,
        1534000000
    ],
    [
        869720,
        1535554000
    ],
    [
        869710,
        1530000000
    ],
    [
        869700,
        1529060000
    ],
    [
        869690,
        1530000000
    ],
    [
        869680,
        1533552000
    ],
    [
        869670,
        1530486069
    ],
    [
        869660,
        1529497000
    ],
    [
        869650,
        1534250000
    ],
    [
        869640,
        1529497000
    ],
    [
        869630,
        1526860000
    ],
    [
        869620,
        1528000000
    ],
    [
        869610,
        1550060000
    ],
    [
        869590,
        1561500000
    ],
    [
        869580,
        1561680000
    ],
    [
        869560,
        1550060000
    ],
    [
        869540,
        1548000000
    ],
    [
        869490,
        1570000000
    ],
    [
        869460,
        1585180000
    ],
    [
        869450,
        1596000000
    ],
    [
        869440,
        1597000000
    ],
    [
        869430,
        1596800000
    ],
    [
        869420,
        1594219747
    ],
    [
        869410,
        1599000000
    ],
    [
        869400,
        1596270000
    ],
    [
        869390,
        1588000000
    ],
    [
        869350,
        1587000000
    ],
    [
        869320,
        1585180000
    ],
    [
        869300,
        1592275000
    ],
    [
        869260,
        1584284000
    ],
    [
        869250,
        1582272650
    ],
    [
        869240,
        1584284000
    ],
    [
        869220,
        1588864000
    ],
    [
        869210,
        1580000000
    ],
    [
        869190,
        1576752449
    ],
    [
        869180,
        1580000000
    ],
    [
        869160,
        1575630000
    ],
    [
        869110,
        1561000000
    ],
    [
        869100,
        1558620000
    ],
    [
        869050,
        1527000000
    ],
    [
        869040,
        1525760000
    ],
    [
        869030,
        1521891000
    ],
    [
        869000,
        1516165341
    ],
    [
        868990,
        1515000000
    ],
    [
        868940,
        1525000000
    ],
    [
        868930,
        1528349278
    ],
    [
        868920,
        1549367507
    ],
    [
        868910,
        1558620000
    ],
    [
        868890,
        1566559000
    ],
    [
        868880,
        1569197406
    ],
    [
        868870,
        1566559000
    ],
    [
        868860,
        1571120000
    ],
    [
        868850,
        1575280000
    ],
    [
        868840,
        1561293388
    ],
    [
        868830,
        1577650000
    ],
    [
        868820,
        1577595058
    ],
    [
        868810,
        1580755000
    ],
    [
        868800,
        1585081638
    ],
    [
        868790,
        1580000000
    ],
    [
        868760,
        1579000000
    ],
    [
        868750,
        1576637117
    ],
    [
        868720,
        1573093000
    ],
    [
        868710,
        1588000000
    ],
    [
        868670,
        1595000000
    ],
    [
        868650,
        1596922000
    ],
    [
        868640,
        1609000000
    ],
    [
        868630,
        1612660000
    ],
    [
        868610,
        1615374000
    ],
    [
        868590,
        1612190000
    ],
    [
        868580,
        1608864529
    ],
    [
        868560,
        1563000000
    ],
    [
        868550,
        1552762428
    ],
    [
        868540,
        1563000000
    ],
    [
        868520,
        1550000000
    ],
    [
        868500,
        1548000000
    ],
    [
        868480,
        1532000000
    ],
    [
        868470,
        1525260000
    ],
    [
        868440,
        1522606000
    ],
    [
        868430,
        1520552000
    ],
    [
        868380,
        1507000000
    ],
    [
        868370,
        1508616873
    ],
    [
        868350,
        1502853000
    ],
    [
        868330,
        1509000000
    ],
    [
        868320,
        1519390000
    ],
    [
        868300,
        1524119715
    ],
    [
        868290,
        1526000000
    ],
    [
        868270,
        1525000000
    ],
    [
        868260,
        1523434429
    ],
    [
        868200,
        1519562000
    ],
    [
        868180,
        1526643130
    ],
    [
        868110,
        1518000000
    ],
    [
        868090,
        1522322293
    ],
    [
        868070,
        1523450296
    ],
    [
        868050,
        1524090296
    ],
    [
        868040,
        1522151527
    ],
    [
        868030,
        1528828000
    ],
    [
        868020,
        1530360873
    ],
    [
        868010,
        1537567000
    ],
    [
        867960,
        1509000000
    ],
    [
        867900,
        1504000000
    ],
    [
        867860,
        1488230000
    ],
    [
        867850,
        1487000000
    ],
    [
        867830,
        1488230000
    ],
    [
        867820,
        1491000000
    ],
    [
        867800,
        1494000000
    ],
    [
        867750,
        1519390000
    ],
    [
        867710,
        1516000000
    ],
    [
        867700,
        1516101540
    ],
    [
        867690,
        1516000000
    ],
    [
        867660,
        1543552000
    ],
    [
        867650,
        1546440000
    ],
    [
        867630,
        1544610000
    ],
    [
        867610,
        1543000000
    ],
    [
        867590,
        1544629000
    ],
    [
        867570,
        1538731095
    ],
    [
        867560,
        1537000000
    ],
    [
        867550,
        1549022527
    ],
    [
        867520,
        1570500000
    ],
    [
        867510,
        1571000000
    ],
    [
        867480,
        1560000000
    ],
    [
        867470,
        1559136731
    ],
    [
        867460,
        1558990000
    ],
    [
        867440,
        1545902000
    ],
    [
        867420,
        1544000000
    ],
    [
        867410,
        1562000000
    ],
    [
        867400,
        1564993000
    ],
    [
        867350,
        1562000000
    ],
    [
        867340,
        1569980000
    ],
    [
        867310,
        1587000000
    ],
    [
        867300,
        1578999280
    ],
    [
        867290,
        1587000000
    ],
    [
        867280,
        1563000000
    ],
    [
        867270,
        1562190000
    ],
    [
        867260,
        1562000000
    ],
    [
        867250,
        1563000000
    ],
    [
        867200,
        1596000000
    ],
    [
        867170,
        1596633000
    ],
    [
        867150,
        1589000000
    ],
    [
        867130,
        1578210000
    ],
    [
        867100,
        1574000000
    ],
    [
        867050,
        1572000000
    ],
    [
        867010,
        1598000000
    ],
    [
        867000,
        1601586228
    ],
    [
        866980,
        1611890000
    ],
    [
        866970,
        1619000000
    ],
    [
        866960,
        1626000000
    ],
    [
        866950,
        1619000000
    ],
    [
        866920,
        1633036000
    ],
    [
        866910,
        1633921529
    ],
    [
        866900,
        1639000000
    ],
    [
        866860,
        1626000000
    ],
    [
        866850,
        1622000000
    ],
    [
        866810,
        1618300000
    ],
    [
        866800,
        1619254003
    ],
    [
        866770,
        1647537000
    ],
    [
        866740,
        1625000000
    ],
    [
        866720,
        1624000000
    ],
    [
        866710,
        1618000000
    ],
    [
        866700,
        1614096295
    ],
    [
        866690,
        1614963893
    ],
    [
        866670,
        1618000000
    ],
    [
        866620,
        1639000000
    ],
    [
        866580,
        1622000000
    ],
    [
        866570,
        1618270000
    ],
    [
        866560,
        1590615000
    ],
    [
        866540,
        1583000000
    ],
    [
        866520,
        1582180000
    ],
    [
        866490,
        1583000000
    ],
    [
        866480,
        1582180000
    ],
    [
        866470,
        1571900000
    ],
    [
        866460,
        1563490000
    ],
    [
        866450,
        1568342206
    ],
    [
        866440,
        1560580000
    ],
    [
        866420,
        1568487000
    ],
    [
        866410,
        1571000000
    ],
    [
        866400,
        1573000000
    ],
    [
        866380,
        1582180000
    ],
    [
        866370,
        1580010650
    ],
    [
        866360,
        1582180000
    ],
    [
        866350,
        1582719000
    ],
    [
        866340,
        1582180000
    ],
    [
        866330,
        1586445000
    ],
    [
        866320,
        1582180000
    ],
    [
        866300,
        1586445000
    ],
    [
        866290,
        1610000000
    ],
    [
        866280,
        1602000000
    ],
    [
        866270,
        1605790000
    ],
    [
        866260,
        1614970000
    ],
    [
        866250,
        1611361202
    ],
    [
        866240,
        1602000000
    ],
    [
        866230,
        1600506000
    ],
    [
        866220,
        1594000000
    ],
    [
        866210,
        1593352908
    ],
    [
        866200,
        1584300000
    ],
    [
        866190,
        1576000000
    ],
    [
        866170,
        1573429000
    ],
    [
        866150,
        1594000000
    ],
    [
        866130,
        1607977761
    ],
    [
        866120,
        1608000000
    ],
    [
        866110,
        1604720000
    ],
    [
        866100,
        1602257920
    ],
    [
        866090,
        1607757920
    ],
    [
        866070,
        1628000000
    ],
    [
        866060,
        1628231853
    ],
    [
        866040,
        1628000000
    ],
    [
        866030,
        1630336895
    ],
    [
        866020,
        1633778456
    ],
    [
        866010,
        1629443456
    ],
    [
        866000,
        1631108287
    ],
    [
        865990,
        1634560000
    ],
    [
        865970,
        1626365000
    ],
    [
        865960,
        1618865000
    ],
    [
        865950,
        1609395027
    ],
    [
        865890,
        1597597724
    ],
    [
        865880,
        1607320000
    ],
    [
        865870,
        1609930000
    ],
    [
        865860,
        1607224991
    ],
    [
        865850,
        1607259635
    ],
    [
        865840,
        1606754635
    ],
    [
        865820,
        1610000000
    ],
    [
        865810,
        1606975208
    ],
    [
        865800,
        1600783936
    ],
    [
        865790,
        1607534436
    ],
    [
        865780,
        1610465318
    ],
    [
        865770,
        1592965000
    ],
    [
        865750,
        1595029000
    ],
    [
        865740,
        1589519916
    ],
    [
        865730,
        1576050000
    ],
    [
        865720,
        1565046403
    ],
    [
        865710,
        1567416403
    ],
    [
        865700,
        1560550972
    ],
    [
        865690,
        1552705972
    ],
    [
        865680,
        1536010000
    ],
    [
        865670,
        1518521047
    ],
    [
        865660,
        1519495500
    ],
    [
        865650,
        1509000000
    ],
    [
        865610,
        1518000000
    ],
    [
        865600,
        1522500000
    ],
    [
        865590,
        1538156500
    ],
    [
        865570,
        1563371500
    ],
    [
        865560,
        1573822548
    ],
    [
        865540,
        1574640000
    ],
    [
        865530,
        1575000000
    ],
    [
        865520,
        1580000000
    ],
    [
        865510,
        1579284337
    ],
    [
        865500,
        1575190000
    ],
    [
        865480,
        1578050000
    ],
    [
        865470,
        1579013947
    ],
    [
        865460,
        1592684000
    ],
    [
        865450,
        1597974000
    ],
    [
        865440,
        1614538000
    ],
    [
        865430,
        1618596372
    ],
    [
        865410,
        1594923000
    ],
    [
        865400,
        1583966768
    ],
    [
        865390,
        1565835360
    ],
    [
        865380,
        1565000000
    ],
    [
        865370,
        1558824214
    ],
    [
        865360,
        1551478881
    ],
    [
        865350,
        1548857482
    ],
    [
        865340,
        1560742482
    ],
    [
        865320,
        1575048500
    ],
    [
        865310,
        1579027687
    ],
    [
        865300,
        1584000000
    ],
    [
        865290,
        1602109012
    ],
    [
        865280,
        1601289000
    ],
    [
        865270,
        1608285195
    ],
    [
        865260,
        1609534000
    ],
    [
        865250,
        1616520000
    ],
    [
        865240,
        1621965000
    ],
    [
        865230,
        1621743170
    ],
    [
        865220,
        1620505000
    ],
    [
        865210,
        1611000000
    ],
    [
        865190,
        1605978424
    ],
    [
        865180,
        1609135000
    ],
    [
        865170,
        1631694637
    ],
    [
        865160,
        1637550000
    ],
    [
        865150,
        1653914162
    ],
    [
        865140,
        1648005000
    ],
    [
        865110,
        1621587000
    ],
    [
        865100,
        1596050000
    ],
    [
        865070,
        1558976000
    ],
    [
        865060,
        1549630000
    ],
    [
        865050,
        1544043864
    ],
    [
        865040,
        1543590000
    ],
    [
        865030,
        1548130000
    ],
    [
        865020,
        1530821306
    ],
    [
        865010,
        1533835000
    ],
    [
        865000,
        1517927000
    ],
    [
        864990,
        1518162000
    ],
    [
        864980,
        1521812961
    ],
    [
        864970,
        1515397000
    ],
    [
        864960,
        1530942770
    ],
    [
        864950,
        1520416074
    ],
    [
        864910,
        1554601500
    ],
    [
        864890,
        1566000000
    ],
    [
        864870,
        1571125000
    ],
    [
        864860,
        1574032658
    ],
    [
        864850,
        1574000000
    ],
    [
        864840,
        1571940000
    ],
    [
        864830,
        1579293463
    ],
    [
        864820,
        1599260000
    ],
    [
        864810,
        1611090000
    ],
    [
        864790,
        1620216274
    ],
    [
        864780,
        1608760000
    ],
    [
        864760,
        1594577983
    ],
    [
        864750,
        1596210000
    ],
    [
        864740,
        1600265941
    ],
    [
        864730,
        1587861539
    ],
    [
        864720,
        1585225039
    ],
    [
        864680,
        1590837000
    ],
    [
        864670,
        1611922206
    ],
    [
        864650,
        1610466000
    ],
    [
        864640,
        1607040000
    ],
    [
        864590,
        1668310000
    ],
    [
        864560,
        1674000000
    ],
    [
        864520,
        1633000000
    ],
    [
        864510,
        1626000000
    ],
    [
        864460,
        1568250000
    ],
    [
        864430,
        1565002000
    ],
    [
        864420,
        1551339371
    ],
    [
        864410,
        1529000000
    ],
    [
        864400,
        1524247524
    ],
    [
        864390,
        1513000000
    ],
    [
        864380,
        1512995000
    ],
    [
        864370,
        1512490000
    ],
    [
        864360,
        1509990000
    ],
    [
        864340,
        1539730000
    ],
    [
        864330,
        1544000000
    ],
    [
        864320,
        1539730000
    ],
    [
        864310,
        1537990000
    ],
    [
        864300,
        1530196513
    ],
    [
        864280,
        1507975665
    ],
    [
        864260,
        1498000000
    ],
    [
        864210,
        1516000000
    ],
    [
        864200,
        1542598499
    ],
    [
        864180,
        1591260000
    ],
    [
        864170,
        1592704000
    ],
    [
        864150,
        1580000000
    ],
    [
        864140,
        1558325072
    ],
    [
        864130,
        1555000000
    ],
    [
        864120,
        1554866979
    ],
    [
        864110,
        1606090000
    ],
    [
        864100,
        1572000000
    ],
    [
        864090,
        1570960000
    ],
    [
        864040,
        1539730000
    ],
    [
        864010,
        1558255000
    ],
    [
        864000,
        1606985000
    ],
    [
        863990,
        1603021000
    ],
    [
        863970,
        1657068000
    ],
    [
        863920,
        1724000000
    ],
    [
        863910,
        1693657000
    ],
    [
        863870,
        1691000000
    ],
    [
        863840,
        1720000000
    ],
    [
        863830,
        1727000000
    ],
    [
        863820,
        1733262289
    ],
    [
        863800,
        1777000000
    ],
    [
        863790,
        1782300000
    ],
    [
        863780,
        1787755000
    ],
    [
        863740,
        1820000000
    ],
    [
        863700,
        1843000000
    ],
    [
        863650,
        1870000000
    ],
    [
        863640,
        1821786999
    ],
    [
        863630,
        1804948000
    ],
    [
        863620,
        1826939415
    ],
    [
        863610,
        1804948000
    ],
    [
        863600,
        1743350000
    ],
    [
        863590,
        1702316202
    ],
    [
        863580,
        1678110000
    ],
    [
        863570,
        1673915000
    ],
    [
        863560,
        1673985000
    ],
    [
        863500,
        1686000000
    ],
    [
        863480,
        1684000000
    ],
    [
        863470,
        1691270000
    ],
    [
        863460,
        1684000000
    ],
    [
        863450,
        1709435000
    ],
    [
        863420,
        1730000000
    ],
    [
        863400,
        1732487000
    ],
    [
        863340,
        1767000000
    ],
    [
        863330,
        1730144454
    ],
    [
        863320,
        1748736197
    ],
    [
        863310,
        1738184000
    ],
    [
        863290,
        1717000000
    ],
    [
        863240,
        1786000000
    ],
    [
        863220,
        1783000000
    ],
    [
        863200,
        1783750000
    ],
    [
        863190,
        1783000000
    ],
    [
        863130,
        1868000000
    ],
    [
        863100,
        1936850000
    ],
    [
        863090,
        1933900000
    ],
    [
        863080,
        1909460000
    ],
    [
        863070,
        1886400000
    ],
    [
        863060,
        1919029000
    ],
    [
        863050,
        1901217506
    ],
    [
        863040,
        1886400000
    ],
    [
        863030,
        1885233434
    ],
    [
        862990,
        1933900000
    ],
    [
        862980,
        1944410000
    ],
    [
        862960,
        1933900000
    ],
    [
        862930,
        1899754000
    ],
    [
        862900,
        1886000000
    ],
    [
        862880,
        1933900000
    ],
    [
        862870,
        1965861000
    ],
    [
        862850,
        1992500000
    ],
    [
        862820,
        1993995000
    ],
    [
        862810,
        1984155000
    ],
    [
        862800,
        2007000000
    ],
    [
        862790,
        1978391217
    ],
    [
        862780,
        1982250000
    ],
    [
        862770,
        1986000000
    ],
    [
        862760,
        2034995000
    ],
    [
        862750,
        1991880000
    ],
    [
        862740,
        1964595000
    ],
    [
        862720,
        1879517500
    ],
    [
        862690,
        1777930500
    ],
    [
        862680,
        1768433467
    ],
    [
        862670,
        1748214815
    ],
    [
        862660,
        1741000000
    ],
    [
        862650,
        1663350000
    ],
    [
        862640,
        1661768379
    ],
    [
        862630,
        1654112000
    ],
    [
        862620,
        1663350000
    ],
    [
        862610,
        1656457610
    ],
    [
        862600,
        1637012205
    ],
    [
        862570,
        1556987595
    ],
    [
        862560,
        1619850000
    ],
    [
        862540,
        1649791500
    ],
    [
        862490,
        1684945000
    ],
    [
        862480,
        1673850000
    ],
    [
        862470,
        1669852885
    ],
    [
        862460,
        1655350000
    ],
    [
        862440,
        1673850000
    ],
    [
        862420,
        1711448500
    ],
    [
        862410,
        1717473791
    ],
    [
        862400,
        1728527468
    ],
    [
        862390,
        1722200153
    ],
    [
        862380,
        1728456060
    ],
    [
        862370,
        1737303629
    ],
    [
        862360,
        1739300749
    ],
    [
        862350,
        1733648563
    ],
    [
        862340,
        1720464234
    ],
    [
        862330,
        1726994149
    ],
    [
        862320,
        1741403858
    ],
    [
        862300,
        1744348959
    ],
    [
        862280,
        1762845059
    ],
    [
        862270,
        1768664707
    ],
    [
        862260,
        1822491788
    ],
    [
        862240,
        1824260577
    ],
    [
        862230,
        1835054500
    ],
    [
        862220,
        1835476257
    ],
    [
        862210,
        1821479499
    ],
    [
        862190,
        1875737284
    ],
    [
        862180,
        1885982695
    ],
    [
        862150,
        1745125000
    ],
    [
        862140,
        1718549500
    ],
    [
        862130,
        1711000000
    ],
    [
        862110,
        1685451000
    ],
    [
        862100,
        1676691000
    ],
    [
        862090,
        1696180000
    ],
    [
        862070,
        1751437500
    ],
    [
        862060,
        1752252500
    ],
    [
        862050,
        1733050761
    ],
    [
        862020,
        1708000000
    ],
    [
        862010,
        1712382963
    ],
    [
        862000,
        1709500000
    ],
    [
        861990,
        1686350000
    ],
    [
        861980,
        1659650000
    ],
    [
        861970,
        1655890000
    ],
    [
        861960,
        1667822938
    ],
    [
        861950,
        1670850000
    ],
    [
        861940,
        1673000000
    ],
    [
        861920,
        1663500000
    ],
    [
        861910,
        1654262000
    ],
    [
        861900,
        1654543588
    ],
    [
        861880,
        1663500000
    ],
    [
        861870,
        1656677590
    ],
    [
        861860,
        1644105044
    ],
    [
        861850,
        1630415000
    ],
    [
        861840,
        1643650000
    ],
    [
        861830,
        1630000000
    ],
    [
        861820,
        1637017408
    ],
    [
        861810,
        1630000000
    ],
    [
        861800,
        1628028191
    ],
    [
        861780,
        1579000000
    ],
    [
        861750,
        1577500000
    ],
    [
        861740,
        1576070000
    ],
    [
        861720,
        1579122000
    ],
    [
        861710,
        1584649000
    ],
    [
        861660,
        1571000000
    ],
    [
        861620,
        1560000000
    ],
    [
        861610,
        1558596201
    ],
    [
        861600,
        1562117492
    ],
    [
        861580,
        1554892848
    ],
    [
        861450,
        1484000000
    ],
    [
        861440,
        1482530000
    ],
    [
        861390,
        1479526000
    ],
    [
        861370,
        1481201000
    ],
    [
        861360,
        1466274273
    ],
    [
        861260,
        1410850000
    ],
    [
        861240,
        1408354000
    ],
    [
        861230,
        1406220000
    ],
    [
        861220,
        1408354000
    ],
    [
        861210,
        1406220000
    ],
    [
        861200,
        1408401380
    ],
    [
        861190,
        1406220000
    ],
    [
        861180,
        1404438103
    ],
    [
        861160,
        1406220000
    ],
    [
        861140,
        1402000000
    ],
    [
        861130,
        1424000000
    ],
    [
        861110,
        1442464000
    ],
    [
        861070,
        1445000000
    ],
    [
        861060,
        1473830000
    ],
    [
        861030,
        1479360000
    ],
    [
        861010,
        1496504000
    ],
    [
        860990,
        1473830000
    ],
    [
        860980,
        1514309149
    ],
    [
        860970,
        1514959495
    ],
    [
        860950,
        1509360835
    ],
    [
        860940,
        1502295605
    ],
    [
        860930,
        1509123000
    ],
    [
        860910,
        1478420035
    ],
    [
        860890,
        1502715916
    ],
    [
        860880,
        1491766000
    ],
    [
        860860,
        1465378822
    ],
    [
        860850,
        1483625948
    ],
    [
        860830,
        1461345000
    ],
    [
        860790,
        1440610000
    ],
    [
        860780,
        1440000000
    ],
    [
        860760,
        1438000000
    ],
    [
        860750,
        1447427077
    ],
    [
        860730,
        1459980000
    ],
    [
        860710,
        1438000000
    ],
    [
        860700,
        1433750000
    ],
    [
        860690,
        1427235000
    ],
    [
        860680,
        1433750000
    ],
    [
        860670,
        1429500000
    ],
    [
        860660,
        1439299346
    ],
    [
        860650,
        1446480000
    ],
    [
        860640,
        1418376208
    ],
    [
        860630,
        1422583791
    ],
    [
        860620,
        1424870000
    ],
    [
        860610,
        1418183000
    ],
    [
        860590,
        1441290000
    ],
    [
        860580,
        1439338906
    ],
    [
        860570,
        1443545000
    ],
    [
        860560,
        1439890000
    ],
    [
        860550,
        1441940000
    ],
    [
        860540,
        1434624874
    ],
    [
        860530,
        1444000000
    ],
    [
        860520,
        1457565144
    ],
    [
        860510,
        1472417700
    ],
    [
        860490,
        1467170000
    ],
    [
        860480,
        1485320000
    ],
    [
        860470,
        1521150000
    ],
    [
        860440,
        1524000000
    ],
    [
        860410,
        1491582000
    ],
    [
        860400,
        1487000000
    ],
    [
        860390,
        1485320000
    ],
    [
        860380,
        1471967000
    ],
    [
        860370,
        1471790000
    ],
    [
        860360,
        1476893670
    ],
    [
        860350,
        1459952913
    ],
    [
        860340,
        1475418874
    ],
    [
        860330,
        1471133437
    ],
    [
        860320,
        1485779000
    ],
    [
        860300,
        1482250000
    ],
    [
        860290,
        1485320000
    ],
    [
        860260,
        1478094000
    ],
    [
        860250,
        1483561980
    ],
    [
        860240,
        1478094000
    ],
    [
        860230,
        1471410000
    ],
    [
        860220,
        1486252409
    ],
    [
        860210,
        1505000000
    ],
    [
        860170,
        1489000000
    ],
    [
        860150,
        1477243000
    ],
    [
        860090,
        1453000000
    ],
    [
        860080,
        1448786424
    ],
    [
        860070,
        1450270000
    ],
    [
        860060,
        1447660000
    ],
    [
        860040,
        1446818701
    ],
    [
        860030,
        1460390000
    ],
    [
        860020,
        1471990000
    ],
    [
        860010,
        1466360000
    ],
    [
        860000,
        1477995000
    ],
    [
        859980,
        1469657000
    ],
    [
        859960,
        1469000000
    ],
    [
        859940,
        1460000000
    ],
    [
        859930,
        1459930000
    ],
    [
        859910,
        1458575242
    ],
    [
        859880,
        1463310000
    ],
    [
        859860,
        1460476581
    ],
    [
        859840,
        1462000000
    ],
    [
        859830,
        1441860000
    ],
    [
        859800,
        1411400000
    ],
    [
        859780,
        1396000000
    ],
    [
        859770,
        1389789047
    ],
    [
        859750,
        1393000000
    ],
    [
        859740,
        1382625206
    ],
    [
        859730,
        1393000000
    ],
    [
        859700,
        1373163000
    ],
    [
        859690,
        1363000000
    ],
    [
        859670,
        1347167132
    ],
    [
        859660,
        1340656000
    ],
    [
        859640,
        1339000000
    ],
    [
        859630,
        1336480000
    ],
    [
        859620,
        1337536945
    ],
    [
        859600,
        1339640000
    ],
    [
        859570,
        1408000000
    ],
    [
        859530,
        1418000000
    ],
    [
        859510,
        1420927000
    ],
    [
        859500,
        1412940000
    ],
    [
        859490,
        1411010000
    ],
    [
        859480,
        1418509847
    ],
    [
        859470,
        1421295332
    ],
    [
        859380,
        1337000000
    ],
    [
        859360,
        1325579000
    ],
    [
        859340,
        1325061989
    ],
    [
        859330,
        1317000000
    ],
    [
        859320,
        1318574250
    ],
    [
        859310,
        1292803000
    ],
    [
        859300,
        1290410968
    ],
    [
        859290,
        1289003500
    ],
    [
        859280,
        1288741623
    ],
    [
        859270,
        1279109462
    ],
    [
        859260,
        1283874760
    ],
    [
        859250,
        1290670208
    ],
    [
        859240,
        1313107708
    ],
    [
        859230,
        1324441000
    ],
    [
        859220,
        1325941000
    ],
    [
        859210,
        1331806492
    ],
    [
        859200,
        1325941000
    ],
    [
        859190,
        1332937000
    ],
    [
        859150,
        1379890000
    ],
    [
        859140,
        1385450000
    ],
    [
        859130,
        1383890223
    ],
    [
        859120,
        1389546163
    ],
    [
        859100,
        1403000000
    ],
    [
        859050,
        1380900000
    ],
    [
        859040,
        1381531938
    ],
    [
        859020,
        1403000000
    ],
    [
        858990,
        1401185696
    ],
    [
        858980,
        1406020000
    ],
    [
        858960,
        1383725000
    ],
    [
        858920,
        1380900000
    ],
    [
        858910,
        1362252728
    ],
    [
        858900,
        1336000000
    ],
    [
        858880,
        1338381319
    ],
    [
        858830,
        1335000000
    ],
    [
        858790,
        1317000000
    ],
    [
        858780,
        1319062431
    ],
    [
        858770,
        1320241629
    ],
    [
        858750,
        1312007126
    ],
    [
        858720,
        1312000000
    ],
    [
        858700,
        1322567000
    ],
    [
        858660,
        1333000000
    ],
    [
        858640,
        1378880000
    ],
    [
        858600,
        1393514000
    ],
    [
        858590,
        1395890518
    ],
    [
        858580,
        1412000000
    ],
    [
        858560,
        1378880000
    ],
    [
        858550,
        1360310000
    ],
    [
        858520,
        1348000000
    ],
    [
        858510,
        1347390000
    ],
    [
        858500,
        1329820000
    ],
    [
        858460,
        1329000000
    ],
    [
        858440,
        1338000000
    ],
    [
        858430,
        1350556467
    ],
    [
        858420,
        1345605986
    ],
    [
        858410,
        1341280501
    ],
    [
        858390,
        1378943000
    ],
    [
        858380,
        1378948897
    ],
    [
        858370,
        1380543394
    ],
    [
        858360,
        1380920000
    ],
    [
        858350,
        1380900000
    ],
    [
        858340,
        1380000000
    ],
    [
        858330,
        1371850000
    ],
    [
        858320,
        1380555535
    ],
    [
        858310,
        1380900000
    ],
    [
        858290,
        1367000000
    ],
    [
        858250,
        1361507000
    ],
    [
        858240,
        1360717339
    ],
    [
        858230,
        1359310000
    ],
    [
        858210,
        1356424860
    ],
    [
        858190,
        1380900000
    ],
    [
        858180,
        1393470000
    ],
    [
        858170,
        1380900000
    ],
    [
        858160,
        1380310000
    ],
    [
        858150,
        1380000000
    ],
    [
        858140,
        1376125000
    ],
    [
        858130,
        1370775500
    ],
    [
        858110,
        1371183548
    ],
    [
        858100,
        1373047755
    ],
    [
        858090,
        1365952246
    ],
    [
        858060,
        1368000000
    ],
    [
        858030,
        1411047000
    ],
    [
        858010,
        1424000000
    ],
    [
        857990,
        1432350000
    ],
    [
        857980,
        1432850000
    ],
    [
        857970,
        1432350000
    ],
    [
        857960,
        1430584844
    ],
    [
        857950,
        1430859991
    ],
    [
        857930,
        1430720645
    ],
    [
        857920,
        1423627126
    ],
    [
        857910,
        1428688000
    ],
    [
        857900,
        1431941406
    ],
    [
        857890,
        1427929406
    ],
    [
        857880,
        1428688000
    ],
    [
        857870,
        1425962642
    ],
    [
        857850,
        1418470000
    ],
    [
        857820,
        1418970000
    ],
    [
        857800,
        1418199000
    ],
    [
        857760,
        1417199000
    ],
    [
        857750,
        1424850000
    ],
    [
        857730,
        1435850000
    ],
    [
        857690,
        1432700000
    ],
    [
        857680,
        1434598816
    ],
    [
        857620,
        1432700000
    ],
    [
        857610,
        1431355265
    ],
    [
        857590,
        1426885000
    ],
    [
        857540,
        1455855000
    ],
    [
        857530,
        1458005609
    ],
    [
        857480,
        1408000000
    ],
    [
        857470,
        1393000000
    ],
    [
        857410,
        1371000000
    ],
    [
        857390,
        1338701833
    ],
    [
        857370,
        1371000000
    ],
    [
        857350,
        1325352000
    ],
    [
        857280,
        1272000000
    ],
    [
        857260,
        1219000000
    ],
    [
        857250,
        1212818833
    ],
    [
        857240,
        1207000000
    ],
    [
        857220,
        1219000000
    ],
    [
        857210,
        1214586582
    ],
    [
        857200,
        1234363002
    ],
    [
        857190,
        1242670000
    ],
    [
        857180,
        1266230000
    ],
    [
        857160,
        1143000000
    ],
    [
        857150,
        1134360000
    ],
    [
        857120,
        1097322000
    ],
    [
        857110,
        1079790307
    ],
    [
        857100,
        1077350000
    ],
    [
        857090,
        1076992538
    ],
    [
        857080,
        1073360709
    ],
    [
        857070,
        1082210000
    ],
    [
        857060,
        1098220000
    ],
    [
        857050,
        1084790000
    ],
    [
        857040,
        1086820000
    ],
    [
        857030,
        1074165810
    ],
    [
        857020,
        1059383803
    ],
    [
        857010,
        1094206000
    ],
    [
        856990,
        1034000000
    ],
    [
        856950,
        976610000
    ],
    [
        856940,
        970000000
    ],
    [
        856930,
        966000000
    ],
    [
        856910,
        960963000
    ],
    [
        856900,
        953930000
    ],
    [
        856890,
        939927000
    ],
    [
        856880,
        941000000
    ],
    [
        856870,
        947380000
    ],
    [
        856860,
        954218646
    ],
    [
        856840,
        939927000
    ],
    [
        856810,
        957250000
    ],
    [
        856780,
        925000000
    ],
    [
        856740,
        928463000
    ],
    [
        856730,
        948000000
    ],
    [
        856720,
        975311000
    ],
    [
        856710,
        976530000
    ],
    [
        856690,
        991928859
    ],
    [
        856680,
        1003000000
    ],
    [
        856630,
        976000000
    ],
    [
        856620,
        964051943
    ],
    [
        856610,
        959000000
    ],
    [
        856600,
        968870000
    ],
    [
        856590,
        962390000
    ],
    [
        856580,
        1041221000
    ],
    [
        856570,
        1043836371
    ],
    [
        856560,
        1041221000
    ],
    [
        856550,
        1044000000
    ],
    [
        856540,
        1050230000
    ],
    [
        856530,
        1065650000
    ],
    [
        856520,
        1073054878
    ],
    [
        856510,
        1072014976
    ],
    [
        856500,
        1079000000
    ],
    [
        856480,
        1049906000
    ],
    [
        856470,
        1025820000
    ],
    [
        856460,
        1005347651
    ],
    [
        856450,
        1038367000
    ],
    [
        856440,
        1051729100
    ],
    [
        856430,
        1046950000
    ],
    [
        856420,
        1065970000
    ],
    [
        856400,
        1086020000
    ],
    [
        856390,
        1089970000
    ],
    [
        856380,
        1106959100
    ],
    [
        856370,
        1104420000
    ],
    [
        856360,
        1110170517
    ],
    [
        856350,
        1117830000
    ],
    [
        856330,
        1142000000
    ],
    [
        856290,
        1179492000
    ],
    [
        856280,
        1189846966
    ],
    [
        856270,
        1190510000
    ],
    [
        856250,
        1187540000
    ],
    [
        856240,
        1185580000
    ],
    [
        856230,
        1180556000
    ],
    [
        856220,
        1195290000
    ],
    [
        856210,
        1196580000
    ],
    [
        856180,
        1195290000
    ],
    [
        856170,
        1195900000
    ],
    [
        856160,
        1208413987
    ],
    [
        856130,
        1202000000
    ],
    [
        856110,
        1197437051
    ],
    [
        856090,
        1195290000
    ],
    [
        856080,
        1201880000
    ],
    [
        856070,
        1210100000
    ],
    [
        856060,
        1219530000
    ],
    [
        855990,
        1237920000
    ],
    [
        855980,
        1234710568
    ],
    [
        855940,
        1212000000
    ],
    [
        855930,
        1210010000
    ],
    [
        855920,
        1195290000
    ],
    [
        855910,
        1210650000
    ],
    [
        855900,
        1218759636
    ],
    [
        855890,
        1226626231
    ],
    [
        855870,
        1235000000
    ],
    [
        855860,
        1234604432
    ],
    [
        855850,
        1232000000
    ],
    [
        855840,
        1233190000
    ],
    [
        855830,
        1227123489
    ],
    [
        855820,
        1230003489
    ],
    [
        855810,
        1231197466
    ],
    [
        855800,
        1247497285
    ],
    [
        855790,
        1254000000
    ],
    [
        855750,
        1235000000
    ],
    [
        855740,
        1228991000
    ],
    [
        855700,
        1203000000
    ],
    [
        855690,
        1195290000
    ],
    [
        855680,
        1203000000
    ],
    [
        855670,
        1201501192
    ],
    [
        855660,
        1196902000
    ],
    [
        855650,
        1195290000
    ],
    [
        855640,
        1199280000
    ],
    [
        855630,
        1195861713
    ],
    [
        855610,
        1201000000
    ],
    [
        855590,
        1203060000
    ],
    [
        855580,
        1234000000
    ],
    [
        855570,
        1236000000
    ],
    [
        855560,
        1239239320
    ],
    [
        855550,
        1252000000
    ],
    [
        855540,
        1253680000
    ],
    [
        855530,
        1251100000
    ],
    [
        855520,
        1251000000
    ],
    [
        855510,
        1250840000
    ],
    [
        855500,
        1238840000
    ],
    [
        855490,
        1248467949
    ],
    [
        855480,
        1261130000
    ],
    [
        855460,
        1286940000
    ],
    [
        855450,
        1283363000
    ],
    [
        855440,
        1294000000
    ],
    [
        855420,
        1283363000
    ],
    [
        855410,
        1269396000
    ],
    [
        855400,
        1267450000
    ],
    [
        855390,
        1269396000
    ],
    [
        855340,
        1271000000
    ],
    [
        855320,
        1268173000
    ],
    [
        855310,
        1269385246
    ],
    [
        855300,
        1275930000
    ],
    [
        855280,
        1283000000
    ],
    [
        855250,
        1295018000
    ],
    [
        855240,
        1286620000
    ],
    [
        855230,
        1282820000
    ],
    [
        855220,
        1282129944
    ],
    [
        855190,
        1260000000
    ],
    [
        855180,
        1238879000
    ],
    [
        855170,
        1259000000
    ],
    [
        855160,
        1260000000
    ],
    [
        855150,
        1263131263
    ],
    [
        855140,
        1252850000
    ],
    [
        855130,
        1260577579
    ],
    [
        855120,
        1262918488
    ],
    [
        855100,
        1231000000
    ],
    [
        855050,
        1219090000
    ],
    [
        855040,
        1222358794
    ],
    [
        855030,
        1226000000
    ],
    [
        854980,
        1231000000
    ],
    [
        854970,
        1235000000
    ],
    [
        854930,
        1236000000
    ],
    [
        854920,
        1239010544
    ],
    [
        854900,
        1270000000
    ],
    [
        854890,
        1272746000
    ],
    [
        854880,
        1278148930
    ],
    [
        854870,
        1276920358
    ],
    [
        854840,
        1297000000
    ],
    [
        854800,
        1338000000
    ],
    [
        854790,
        1353470000
    ],
    [
        854780,
        1353516461
    ],
    [
        854770,
        1339792231
    ],
    [
        854760,
        1350000000
    ],
    [
        854750,
        1365900000
    ],
    [
        854740,
        1366120000
    ],
    [
        854730,
        1350000000
    ],
    [
        854720,
        1350134261
    ],
    [
        854710,
        1371440000
    ],
    [
        854700,
        1363000000
    ],
    [
        854690,
        1362080000
    ],
    [
        854670,
        1358590000
    ],
    [
        854660,
        1379990000
    ],
    [
        854650,
        1383000000
    ],
    [
        854640,
        1363270000
    ],
    [
        854630,
        1388652581
    ],
    [
        854620,
        1378000000
    ],
    [
        854600,
        1363000000
    ],
    [
        854590,
        1365597800
    ],
    [
        854580,
        1380919000
    ],
    [
        854570,
        1394000000
    ],
    [
        854550,
        1380919000
    ],
    [
        854490,
        1310080000
    ],
    [
        854480,
        1312390000
    ],
    [
        854450,
        1410030000
    ],
    [
        854440,
        1431000000
    ],
    [
        854430,
        1440761354
    ],
    [
        854420,
        1433240000
    ],
    [
        854400,
        1470000000
    ],
    [
        854390,
        1479901720
    ],
    [
        854370,
        1470000000
    ],
    [
        854350,
        1489400000
    ],
    [
        854330,
        1501675000
    ],
    [
        854320,
        1493370000
    ],
    [
        854310,
        1491000000
    ],
    [
        854300,
        1496599382
    ],
    [
        854290,
        1489400000
    ],
    [
        854280,
        1491000000
    ],
    [
        854260,
        1496430000
    ],
    [
        854250,
        1452000000
    ],
    [
        854240,
        1450915000
    ],
    [
        854230,
        1461035000
    ],
    [
        854220,
        1468430000
    ],
    [
        854210,
        1481215000
    ],
    [
        854200,
        1466000000
    ],
    [
        854190,
        1462985000
    ],
    [
        854180,
        1472007772
    ],
    [
        854170,
        1532215000
    ],
    [
        854160,
        1578315000
    ],
    [
        854150,
        1580561000
    ],
    [
        854130,
        1519660000
    ],
    [
        853930,
        1513320000
    ],
    [
        853890,
        1509000000
    ],
    [
        853870,
        1496430000
    ],
    [
        853860,
        1494654162
    ],
    [
        853830,
        1496430000
    ],
    [
        853820,
        1494802000
    ],
    [
        853790,
        1484000000
    ],
    [
        853750,
        1467000000
    ],
    [
        853460,
        1375730000
    ],
    [
        853400,
        1344800000
    ],
    [
        853340,
        1332000000
    ],
    [
        853330,
        1323530000
    ],
    [
        853310,
        1334021749
    ],
    [
        853300,
        1336120790
    ],
    [
        853290,
        1332470000
    ],
    [
        853270,
        1323530000
    ],
    [
        853250,
        1324250956
    ],
    [
        853230,
        1323530000
    ],
    [
        853200,
        1317120000
    ],
    [
        853160,
        1312748000
    ],
    [
        853150,
        1313800000
    ],
    [
        853140,
        1312748000
    ],
    [
        853120,
        1309000000
    ],
    [
        853090,
        1302000000
    ],
    [
        853080,
        1294000000
    ],
    [
        853070,
        1302000000
    ],
    [
        853060,
        1292056000
    ],
    [
        853050,
        1292000000
    ],
    [
        853040,
        1292056000
    ],
    [
        853030,
        1290230000
    ],
    [
        853020,
        1292000000
    ],
    [
        853000,
        1258787000
    ],
    [
        852990,
        1258000000
    ],
    [
        852980,
        1269530000
    ],
    [
        852970,
        1269060000
    ],
    [
        852930,
        1291230000
    ],
    [
        852920,
        1325000000
    ],
    [
        852910,
        1329000000
    ],
    [
        852890,
        1342000000
    ],
    [
        852880,
        1337730000
    ],
    [
        852870,
        1325470000
    ],
    [
        852850,
        1331674908
    ],
    [
        852820,
        1339000000
    ],
    [
        852810,
        1342000000
    ],
    [
        852800,
        1344800000
    ],
    [
        852790,
        1342160000
    ],
    [
        852780,
        1342779000
    ],
    [
        852760,
        1317385500
    ],
    [
        852740,
        1298385500
    ],
    [
        852720,
        1295000000
    ],
    [
        852700,
        1220000000
    ],
    [
        852690,
        1226680000
    ],
    [
        852680,
        1220000000
    ],
    [
        852660,
        1232000000
    ],
    [
        852650,
        1233500000
    ],
    [
        852640,
        1244037000
    ],
    [
        852610,
        1277000000
    ],
    [
        852590,
        1279473000
    ],
    [
        852580,
        1283658000
    ],
    [
        852570,
        1279473000
    ],
    [
        852560,
        1284083000
    ],
    [
        852550,
        1286080000
    ],
    [
        852540,
        1290615000
    ],
    [
        852530,
        1291899000
    ],
    [
        852520,
        1290000000
    ],
    [
        852510,
        1289130000
    ],
    [
        852500,
        1265500000
    ],
    [
        852490,
        1261495000
    ],
    [
        852470,
        1264822500
    ],
    [
        852460,
        1248770000
    ],
    [
        852450,
        1247450000
    ],
    [
        852370,
        1197526500
    ],
    [
        852360,
        1181590500
    ],
    [
        852350,
        1176000000
    ],
    [
        852330,
        1190090500
    ],
    [
        852310,
        1193430000
    ],
    [
        852280,
        1194000000
    ],
    [
        852260,
        1165005000
    ],
    [
        852250,
        1167690000
    ],
    [
        852230,
        1156000000
    ],
    [
        852220,
        1145500000
    ],
    [
        852210,
        1124456000
    ],
    [
        852200,
        1126816000
    ],
    [
        852190,
        1115726000
    ],
    [
        852180,
        1179052000
    ],
    [
        852170,
        1197152000
    ],
    [
        852140,
        1254152000
    ],
    [
        852130,
        1276077000
    ],
    [
        852120,
        1266982000
    ],
    [
        852080,
        1309500000
    ],
    [
        852070,
        1315868000
    ],
    [
        852060,
        1322408000
    ],
    [
        852050,
        1328040000
    ],
    [
        852040,
        1329465000
    ],
    [
        852030,
        1328665000
    ],
    [
        852010,
        1326900000
    ],
    [
        852000,
        1315900000
    ],
    [
        851980,
        1309000000
    ],
    [
        851970,
        1331500000
    ],
    [
        851960,
        1333655000
    ],
    [
        851940,
        1349000000
    ],
    [
        851930,
        1351765000
    ],
    [
        851920,
        1359552000
    ],
    [
        851910,
        1351035000
    ],
    [
        851900,
        1345855000
    ],
    [
        851890,
        1344834500
    ],
    [
        851870,
        1338279500
    ],
    [
        851860,
        1329020000
    ],
    [
        851850,
        1318605000
    ],
    [
        851840,
        1390865000
    ],
    [
        851820,
        1409035000
    ],
    [
        851810,
        1408615000
    ],
    [
        851800,
        1410690000
    ],
    [
        851790,
        1436371000
    ],
    [
        851780,
        1438371000
    ],
    [
        851770,
        1434435000
    ],
    [
        851760,
        1437380000
    ],
    [
        851750,
        1430140000
    ],
    [
        851730,
        1425260000
    ],
    [
        851720,
        1423250000
    ],
    [
        851690,
        1445326000
    ],
    [
        851670,
        1383165000
    ],
    [
        851660,
        1371250000
    ],
    [
        851630,
        1352000000
    ],
    [
        851620,
        1198970000
    ],
    [
        851610,
        1172625000
    ],
    [
        851570,
        1170500000
    ],
    [
        851560,
        1075530000
    ],
    [
        851550,
        1035755000
    ],
    [
        851530,
        1011000000
    ],
    [
        851520,
        1171381000
    ],
    [
        851510,
        1157161000
    ],
    [
        851500,
        1292661000
    ],
    [
        851470,
        1300661000
    ],
    [
        851460,
        1303806000
    ],
    [
        851450,
        1342797000
    ],
    [
        851440,
        1345707000
    ],
    [
        851400,
        1386500000
    ],
    [
        851370,
        1388750000
    ],
    [
        851350,
        1426975000
    ],
    [
        851330,
        1444000000
    ],
    [
        851310,
        1449051500
    ],
    [
        851300,
        1459051500
    ],
    [
        851240,
        1464500000
    ],
    [
        851180,
        1476485000
    ],
    [
        851170,
        1451845000
    ],
    [
        851160,
        1450530000
    ],
    [
        851140,
        1446500000
    ],
    [
        851120,
        1461985000
    ],
    [
        851090,
        1484000000
    ],
    [
        851080,
        1489210000
    ],
    [
        851070,
        1491995000
    ],
    [
        851060,
        1484000000
    ],
    [
        851050,
        1482130000
    ],
    [
        851040,
        1458605000
    ],
    [
        851030,
        1464835000
    ],
    [
        851020,
        1468400000
    ],
    [
        851010,
        1478230000
    ],
    [
        851000,
        1450590000
    ],
    [
        850990,
        1561404500
    ],
    [
        850960,
        1562000000
    ],
    [
        850940,
        1567364500
    ],
    [
        850930,
        1570514500
    ],
    [
        850910,
        1578900000
    ],
    [
        850900,
        1577864500
    ],
    [
        850890,
        1581395000
    ],
    [
        850870,
        1583927500
    ],
    [
        850860,
        1587927500
    ],
    [
        850830,
        1591000000
    ],
    [
        850820,
        1591095000
    ],
    [
        850810,
        1599949500
    ],
    [
        850750,
        1667500000
    ],
    [
        850730,
        1672985000
    ],
    [
        850710,
        1669500000
    ],
    [
        850690,
        1672985000
    ],
    [
        850680,
        1669500000
    ],
    [
        850660,
        1667000000
    ],
    [
        850640,
        1670500000
    ],
    [
        850630,
        1672890000
    ],
    [
        850620,
        1670500000
    ],
    [
        850600,
        1672985000
    ],
    [
        850590,
        1682485000
    ],
    [
        850580,
        1695860000
    ],
    [
        850570,
        1702305000
    ],
    [
        850560,
        1705505000
    ],
    [
        850550,
        1712500000
    ],
    [
        850530,
        1707810000
    ],
    [
        850520,
        1704310000
    ],
    [
        850510,
        1703335000
    ],
    [
        850500,
        1701175000
    ],
    [
        850490,
        1700995000
    ],
    [
        850480,
        1700676000
    ],
    [
        850470,
        1696251000
    ],
    [
        850460,
        1691360000
    ],
    [
        850450,
        1699000000
    ],
    [
        850440,
        1700286000
    ],
    [
        850430,
        1699885000
    ],
    [
        850420,
        1680397000
    ],
    [
        850410,
        1677932000
    ],
    [
        850390,
        1682927000
    ],
    [
        850380,
        1675977000
    ],
    [
        850370,
        1688066000
    ],
    [
        850360,
        1674985000
    ],
    [
        850330,
        1672000000
    ],
    [
        850310,
        1674985000
    ],
    [
        850300,
        1672985000
    ],
    [
        850290,
        1668800500
    ],
    [
        850280,
        1666340500
    ],
    [
        850270,
        1665300500
    ],
    [
        850260,
        1588895000
    ],
    [
        850220,
        1566395000
    ],
    [
        850200,
        1504736000
    ],
    [
        850160,
        1484000000
    ],
    [
        850130,
        1472500000
    ],
    [
        850090,
        1463500000
    ],
    [
        850070,
        1466000000
    ],
    [
        850060,
        1489895000
    ],
    [
        850020,
        1520742500
    ],
    [
        850000,
        1523150000
    ],
    [
        849950,
        1517395000
    ],
    [
        849890,
        1506108500
    ],
    [
        849870,
        1497105500
    ],
    [
        849860,
        1493210500
    ],
    [
        849820,
        1491710500
    ],
    [
        849800,
        1499117500
    ],
    [
        849750,
        1504512500
    ],
    [
        849680,
        1513660500
    ],
    [
        849660,
        1523995000
    ],
    [
        849590,
        1516995000
    ],
    [
        849570,
        1516305000
    ],
    [
        849540,
        1516995000
    ],
    [
        849530,
        1515085000
    ],
    [
        849450,
        1494000000
    ],
    [
        849440,
        1503449500
    ],
    [
        849430,
        1498994500
    ],
    [
        849410,
        1502404500
    ],
    [
        849400,
        1487935000
    ],
    [
        849390,
        1486390000
    ],
    [
        849380,
        1486260000
    ],
    [
        849340,
        1463645000
    ],
    [
        849320,
        1470000000
    ],
    [
        849270,
        1464000000
    ],
    [
        849250,
        1463828500
    ],
    [
        849210,
        1435000000
    ],
    [
        849180,
        1420000000
    ],
    [
        849140,
        1411000000
    ],
    [
        849130,
        1413990000
    ],
    [
        849110,
        1422000000
    ],
    [
        849100,
        1433343500
    ],
    [
        849090,
        1440188500
    ],
    [
        849080,
        1446890000
    ],
    [
        849070,
        1441465000
    ],
    [
        849040,
        1457591500
    ],
    [
        849030,
        1460695000
    ],
    [
        849020,
        1462995000
    ],
    [
        849000,
        1462500000
    ],
    [
        848990,
        1460695000
    ],
    [
        848980,
        1462360000
    ],
    [
        848960,
        1461801000
    ],
    [
        848950,
        1450000000
    ],
    [
        848940,
        1448000000
    ],
    [
        848920,
        1439900000
    ],
    [
        848900,
        1413768000
    ],
    [
        848890,
        1407579000
    ],
    [
        848880,
        1383842500
    ],
    [
        848840,
        1379905000
    ],
    [
        848810,
        1382957000
    ],
    [
        848790,
        1381405000
    ],
    [
        848730,
        1391905000
    ],
    [
        848670,
        1388905000
    ],
    [
        848640,
        1385405000
    ],
    [
        848560,
        1397000000
    ],
    [
        848540,
        1391000000
    ],
    [
        848500,
        1382905000
    ],
    [
        848470,
        1381061000
    ],
    [
        848430,
        1390656000
    ],
    [
        848360,
        1392474500
    ],
    [
        848340,
        1393879500
    ],
    [
        848290,
        1390379500
    ],
    [
        848270,
        1387522000
    ],
    [
        848220,
        1366905000
    ],
    [
        848210,
        1360421500
    ],
    [
        848200,
        1354430000
    ],
    [
        848190,
        1329930000
    ],
    [
        848160,
        1335921500
    ],
    [
        848130,
        1309607000
    ],
    [
        848090,
        1314607000
    ],
    [
        848060,
        1307673000
    ],
    [
        848020,
        1298173000
    ],
    [
        848000,
        1306727500
    ],
    [
        847950,
        1334000000
    ],
    [
        847920,
        1345829500
    ],
    [
        847890,
        1346329500
    ],
    [
        847860,
        1342436500
    ],
    [
        847810,
        1381000000
    ],
    [
        847790,
        1392955000
    ],
    [
        847740,
        1414355000
    ],
    [
        847720,
        1411694500
    ],
    [
        847680,
        1401955000
    ],
    [
        847650,
        1401000000
    ],
    [
        847620,
        1386202500
    ],
    [
        847590,
        1378000000
    ],
    [
        847540,
        1357129000
    ],
    [
        847520,
        1381955000
    ],
    [
        847480,
        1394455000
    ],
    [
        847460,
        1391506000
    ],
    [
        847420,
        1406955000
    ],
    [
        847400,
        1428683000
    ],
    [
        847360,
        1452500000
    ],
    [
        847330,
        1453000000
    ],
    [
        847290,
        1457400000
    ],
    [
        847280,
        1461185000
    ],
    [
        847270,
        1463685000
    ],
    [
        847200,
        1466000000
    ],
    [
        847160,
        1478847000
    ],
    [
        847130,
        1489000000
    ],
    [
        847090,
        1502133000
    ],
    [
        847060,
        1501094500
    ],
    [
        847020,
        1500594500
    ],
    [
        847000,
        1505000000
    ],
    [
        846930,
        1514595000
    ],
    [
        846890,
        1525649000
    ],
    [
        846870,
        1522724000
    ],
    [
        846830,
        1519095000
    ],
    [
        846810,
        1518562000
    ],
    [
        846740,
        1512000000
    ],
    [
        846670,
        1497000000
    ],
    [
        846600,
        1496000000
    ],
    [
        846550,
        1483000000
    ],
    [
        846530,
        1481055500
    ],
    [
        846500,
        1481000000
    ],
    [
        846470,
        1485000000
    ],
    [
        846460,
        1485322000
    ],
    [
        846420,
        1486822000
    ],
    [
        846400,
        1488500000
    ],
    [
        846360,
        1496860000
    ],
    [
        846350,
        1490522000
    ],
    [
        846340,
        1484897000
    ],
    [
        846330,
        1482735000
    ],
    [
        846290,
        1482000000
    ],
    [
        846270,
        1475504500
    ],
    [
        846220,
        1457185000
    ],
    [
        846200,
        1456902500
    ],
    [
        846150,
        1451902500
    ],
    [
        846130,
        1449184000
    ],
    [
        846080,
        1468685000
    ],
    [
        846060,
        1475000000
    ],
    [
        846010,
        1477000000
    ],
    [
        845950,
        1475893500
    ],
    [
        845930,
        1474475000
    ],
    [
        845890,
        1468500000
    ],
    [
        845870,
        1468487500
    ],
    [
        845830,
        1471987500
    ],
    [
        845810,
        1468685000
    ],
    [
        845790,
        1463340000
    ],
    [
        845780,
        1468685000
    ],
    [
        845760,
        1473940000
    ],
    [
        845750,
        1454000000
    ],
    [
        845720,
        1452960000
    ],
    [
        845710,
        1454000000
    ],
    [
        845700,
        1458095000
    ],
    [
        845690,
        1464994500
    ],
    [
        845660,
        1476459500
    ],
    [
        845650,
        1479755000
    ],
    [
        845630,
        1489060000
    ],
    [
        845620,
        1510603000
    ],
    [
        845610,
        1512758000
    ],
    [
        845600,
        1512408000
    ],
    [
        845580,
        1515283000
    ],
    [
        845560,
        1507007000
    ],
    [
        845500,
        1487500000
    ],
    [
        845490,
        1494075000
    ],
    [
        845480,
        1503321000
    ],
    [
        845460,
        1506391000
    ],
    [
        845430,
        1501159500
    ],
    [
        845400,
        1495159500
    ],
    [
        845390,
        1493706000
    ],
    [
        845380,
        1494596000
    ],
    [
        845370,
        1484560000
    ],
    [
        845360,
        1484000000
    ],
    [
        845350,
        1485120000
    ],
    [
        845330,
        1484000000
    ],
    [
        845290,
        1485120000
    ],
    [
        845280,
        1497854000
    ],
    [
        845270,
        1499000000
    ],
    [
        845230,
        1497000000
    ],
    [
        845220,
        1497854000
    ],
    [
        845200,
        1497000000
    ],
    [
        845190,
        1493150000
    ],
    [
        845180,
        1485546000
    ],
    [
        845170,
        1491640000
    ],
    [
        845160,
        1486860000
    ],
    [
        845150,
        1500000000
    ],
    [
        845130,
        1507323000
    ],
    [
        845080,
        1511000000
    ],
    [
        845070,
        1518937000
    ],
    [
        845060,
        1511000000
    ],
    [
        845010,
        1537000000
    ],
    [
        844990,
        1539640000
    ],
    [
        844920,
        1544000000
    ],
    [
        844870,
        1554000000
    ],
    [
        844860,
        1551686000
    ],
    [
        844850,
        1554000000
    ],
    [
        844840,
        1560000000
    ],
    [
        844830,
        1553990000
    ],
    [
        844810,
        1551686000
    ],
    [
        844790,
        1560000000
    ],
    [
        844770,
        1560800000
    ],
    [
        844750,
        1561000000
    ],
    [
        844740,
        1557000000
    ],
    [
        844730,
        1555770000
    ],
    [
        844720,
        1555500000
    ],
    [
        844700,
        1547823000
    ],
    [
        844690,
        1545320000
    ],
    [
        844680,
        1547823000
    ],
    [
        844670,
        1540750000
    ],
    [
        844660,
        1522000000
    ],
    [
        844600,
        1557000000
    ],
    [
        844590,
        1553070000
    ],
    [
        844580,
        1549927000
    ],
    [
        844560,
        1549160000
    ],
    [
        844540,
        1549000000
    ],
    [
        844520,
        1548000000
    ],
    [
        844490,
        1542008000
    ],
    [
        844470,
        1537070000
    ],
    [
        844450,
        1534000000
    ],
    [
        844420,
        1530000000
    ],
    [
        844410,
        1525748000
    ],
    [
        844400,
        1530000000
    ],
    [
        844340,
        1545000000
    ],
    [
        844310,
        1560800000
    ],
    [
        844300,
        1562000000
    ],
    [
        844290,
        1566000000
    ],
    [
        844270,
        1573780000
    ],
    [
        844260,
        1574212000
    ],
    [
        844250,
        1571000000
    ],
    [
        844240,
        1574000000
    ],
    [
        844230,
        1570800000
    ],
    [
        844220,
        1572370000
    ],
    [
        844200,
        1574000000
    ],
    [
        844160,
        1584000000
    ],
    [
        844130,
        1560800000
    ],
    [
        844110,
        1559000000
    ],
    [
        844100,
        1560800000
    ],
    [
        844090,
        1556464500
    ],
    [
        844080,
        1555149500
    ],
    [
        844060,
        1548573000
    ],
    [
        844030,
        1547573000
    ],
    [
        844020,
        1551000000
    ],
    [
        844000,
        1552352500
    ],
    [
        843990,
        1544352500
    ],
    [
        843970,
        1546000000
    ],
    [
        843960,
        1546500000
    ],
    [
        843860,
        1523390000
    ],
    [
        843770,
        1515890000
    ],
    [
        843760,
        1509546000
    ],
    [
        843750,
        1494656000
    ],
    [
        843700,
        1481000000
    ],
    [
        843630,
        1488895000
    ],
    [
        843570,
        1483160000
    ],
    [
        843530,
        1488895000
    ],
    [
        843510,
        1489469500
    ],
    [
        843480,
        1491159500
    ],
    [
        843450,
        1492690000
    ],
    [
        843440,
        1502437000
    ],
    [
        843430,
        1509652000
    ],
    [
        843370,
        1507160000
    ],
    [
        843350,
        1499913000
    ],
    [
        843310,
        1489660000
    ],
    [
        843290,
        1475964000
    ],
    [
        843230,
        1467000000
    ],
    [
        843170,
        1473000000
    ],
    [
        843160,
        1474375000
    ],
    [
        843150,
        1473935000
    ],
    [
        843140,
        1475370000
    ],
    [
        843130,
        1471720000
    ],
    [
        843120,
        1459546500
    ],
    [
        843080,
        1440500000
    ],
    [
        843060,
        1427335000
    ],
    [
        843010,
        1422335000
    ],
    [
        843000,
        1418510000
    ],
    [
        842970,
        1437970500
    ],
    [
        842960,
        1441326000
    ],
    [
        842950,
        1439000000
    ],
    [
        842920,
        1454326000
    ],
    [
        842900,
        1490900000
    ],
    [
        842870,
        1520476000
    ],
    [
        842810,
        1519400000
    ],
    [
        842800,
        1524000000
    ],
    [
        842790,
        1530000000
    ],
    [
        842780,
        1536500000
    ],
    [
        842750,
        1539887500
    ],
    [
        842730,
        1537000000
    ],
    [
        842710,
        1532888500
    ],
    [
        842700,
        1527973500
    ],
    [
        842680,
        1523352000
    ],
    [
        842660,
        1519752000
    ],
    [
        842650,
        1517345000
    ],
    [
        842640,
        1519752000
    ],
    [
        842630,
        1516405000
    ],
    [
        842620,
        1512900000
    ],
    [
        842610,
        1515500000
    ],
    [
        842570,
        1521957000
    ],
    [
        842540,
        1529490000
    ],
    [
        842530,
        1524450000
    ],
    [
        842520,
        1543620000
    ],
    [
        842510,
        1549605000
    ],
    [
        842500,
        1550835000
    ],
    [
        842490,
        1539030000
    ],
    [
        842460,
        1612765000
    ],
    [
        842450,
        1605500000
    ],
    [
        842410,
        1611000000
    ],
    [
        842390,
        1604850000
    ],
    [
        842360,
        1607000000
    ],
    [
        842330,
        1593000000
    ],
    [
        842310,
        1590000000
    ],
    [
        842240,
        1560120000
    ],
    [
        842230,
        1527319000
    ],
    [
        842180,
        1539000000
    ],
    [
        842170,
        1542040000
    ],
    [
        842160,
        1546000000
    ],
    [
        842150,
        1545000000
    ],
    [
        842130,
        1546000000
    ],
    [
        842110,
        1545000000
    ],
    [
        842070,
        1524000000
    ],
    [
        842060,
        1522000000
    ],
    [
        842050,
        1520000000
    ],
    [
        842020,
        1497000000
    ],
    [
        842010,
        1487206000
    ],
    [
        842000,
        1497000000
    ],
    [
        841990,
        1561050000
    ],
    [
        841970,
        1620800000
    ],
    [
        841960,
        1629000000
    ],
    [
        841940,
        1635960000
    ],
    [
        841910,
        1651560000
    ],
    [
        841890,
        1657000000
    ],
    [
        841880,
        1653650000
    ],
    [
        841870,
        1653750000
    ],
    [
        841860,
        1653070000
    ],
    [
        841850,
        1656000000
    ],
    [
        841840,
        1651900000
    ],
    [
        841830,
        1650000000
    ],
    [
        841810,
        1653730000
    ],
    [
        841800,
        1650000000
    ],
    [
        841770,
        1632400000
    ],
    [
        841760,
        1631456000
    ],
    [
        841750,
        1632450000
    ],
    [
        841730,
        1641575000
    ],
    [
        841720,
        1640540000
    ],
    [
        841710,
        1630000000
    ],
    [
        841700,
        1628480000
    ],
    [
        841690,
        1633810000
    ],
    [
        841680,
        1623000000
    ],
    [
        841670,
        1615930000
    ],
    [
        841630,
        1629000000
    ],
    [
        841610,
        1647200000
    ],
    [
        841570,
        1650000000
    ],
    [
        841560,
        1660389000
    ],
    [
        841550,
        1666600000
    ],
    [
        841510,
        1660194500
    ],
    [
        841490,
        1656000000
    ],
    [
        841480,
        1649600000
    ],
    [
        841440,
        1647100000
    ],
    [
        841430,
        1653158000
    ],
    [
        841420,
        1657058000
    ],
    [
        841410,
        1667881622
    ],
    [
        841300,
        1675673622
    ],
    [
        841250,
        1677823622
    ],
    [
        841240,
        1680500000
    ],
    [
        841190,
        1681420000
    ],
    [
        841170,
        1682000000
    ],
    [
        841070,
        1691478500
    ],
    [
        841040,
        1692500000
    ],
    [
        841000,
        1700846500
    ],
    [
        840990,
        1704500000
    ],
    [
        840980,
        1705500000
    ],
    [
        840960,
        1704255150
    ],
    [
        840930,
        1702500000
    ],
    [
        840900,
        1714795000
    ],
    [
        840880,
        1717900392
    ],
    [
        840860,
        1717830000
    ],
    [
        840850,
        1714795000
    ],
    [
        840830,
        1714000000
    ],
    [
        840820,
        1714395000
    ],
    [
        840800,
        1714000000
    ],
    [
        840790,
        1712465000
    ],
    [
        840780,
        1712865000
    ],
    [
        840770,
        1709638733
    ],
    [
        840750,
        1715648689
    ],
    [
        840720,
        1713738774
    ],
    [
        840690,
        1713465000
    ],
    [
        840670,
        1708320000
    ],
    [
        840660,
        1704355000
    ],
    [
        840630,
        1703500000
    ],
    [
        840620,
        1701381442
    ],
    [
        840610,
        1696190739
    ],
    [
        840590,
        1699000000
    ],
    [
        840580,
        1698582331
    ],
    [
        840570,
        1694815000
    ],
    [
        840560,
        1694156887
    ],
    [
        840550,
        1693815000
    ],
    [
        840540,
        1688478839
    ],
    [
        840520,
        1693500000
    ],
    [
        840510,
        1693115324
    ],
    [
        840500,
        1689638000
    ],
    [
        840480,
        1688000000
    ],
    [
        840470,
        1684164460
    ],
    [
        840460,
        1686584000
    ],
    [
        840420,
        1677000000
    ],
    [
        840390,
        1678000000
    ],
    [
        840380,
        1676609000
    ],
    [
        840370,
        1676683681
    ],
    [
        840360,
        1674959000
    ],
    [
        840350,
        1676850000
    ],
    [
        840340,
        1673686500
    ],
    [
        840330,
        1673881500
    ],
    [
        840320,
        1672531500
    ],
    [
        840310,
        1671116500
    ],
    [
        840300,
        1669201651
    ],
    [
        840290,
        1658748500
    ],
    [
        840270,
        1651000000
    ],
    [
        840250,
        1650132000
    ],
    [
        840210,
        1636284201
    ],
    [
        840190,
        1645000000
    ],
    [
        840170,
        1635239000
    ],
    [
        840160,
        1627119597
    ],
    [
        840150,
        1623350000
    ],
    [
        840140,
        1631054182
    ],
    [
        840130,
        1649697233
    ],
    [
        840120,
        1651000000
    ],
    [
        840110,
        1664248268
    ],
    [
        840090,
        1677000000
    ],
    [
        840070,
        1676507000
    ],
    [
        840050,
        1666000000
    ],
    [
        840040,
        1668500000
    ],
    [
        840030,
        1660619500
    ],
    [
        840020,
        1655313158
    ],
    [
        839990,
        1643000000
    ],
    [
        839980,
        1642457436
    ],
    [
        839960,
        1638245500
    ],
    [
        839950,
        1640200714
    ],
    [
        839940,
        1640906269
    ],
    [
        839920,
        1638128876
    ],
    [
        839910,
        1648600500
    ],
    [
        839900,
        1641004840
    ],
    [
        839880,
        1641605340
    ],
    [
        839870,
        1646803519
    ],
    [
        839860,
        1649603102
    ],
    [
        839850,
        1646301102
    ],
    [
        839840,
        1643207658
    ],
    [
        839800,
        1623175000
    ],
    [
        839780,
        1622359500
    ],
    [
        839770,
        1622534500
    ],
    [
        839750,
        1623269052
    ],
    [
        839740,
        1617987552
    ],
    [
        839730,
        1620393500
    ],
    [
        839700,
        1601000000
    ],
    [
        839680,
        1598000000
    ],
    [
        839670,
        1597923991
    ],
    [
        839640,
        1592210500
    ],
    [
        839630,
        1592710500
    ],
    [
        839620,
        1590650000
    ],
    [
        839610,
        1606005911
    ],
    [
        839600,
        1626248000
    ],
    [
        839580,
        1632448000
    ],
    [
        839560,
        1629449237
    ],
    [
        839550,
        1625801237
    ],
    [
        839540,
        1628800000
    ],
    [
        839530,
        1612670000
    ],
    [
        839510,
        1606500000
    ],
    [
        839500,
        1612670000
    ],
    [
        839450,
        1619691000
    ],
    [
        839440,
        1614643000
    ],
    [
        839430,
        1610305437
    ],
    [
        839420,
        1626139217
    ],
    [
        839410,
        1626800000
    ],
    [
        839400,
        1622618000
    ],
    [
        839380,
        1648257500
    ],
    [
        839370,
        1655115325
    ],
    [
        839360,
        1659476699
    ],
    [
        839350,
        1653894543
    ],
    [
        839340,
        1653169543
    ],
    [
        839330,
        1644699979
    ],
    [
        839320,
        1626390015
    ],
    [
        839310,
        1641390015
    ],
    [
        839300,
        1651435000
    ],
    [
        839280,
        1695500000
    ],
    [
        839250,
        1731540000
    ],
    [
        839240,
        1731770000
    ],
    [
        839230,
        1730150000
    ],
    [
        839220,
        1740172395
    ],
    [
        839210,
        1737975650
    ],
    [
        839200,
        1742610500
    ],
    [
        839190,
        1749190000
    ],
    [
        839180,
        1752225000
    ],
    [
        839170,
        1750000000
    ],
    [
        839150,
        1781237500
    ],
    [
        839140,
        1791432500
    ],
    [
        839120,
        1798103000
    ],
    [
        839090,
        1803803000
    ],
    [
        839080,
        1806645000
    ],
    [
        839070,
        1804648442
    ],
    [
        839060,
        1803173442
    ],
    [
        839030,
        1800603000
    ],
    [
        839020,
        1803803000
    ],
    [
        839000,
        1808920000
    ],
    [
        838990,
        1816035631
    ],
    [
        838980,
        1815387761
    ],
    [
        838970,
        1823000000
    ],
    [
        838960,
        1816105000
    ],
    [
        838950,
        1818358246
    ],
    [
        838940,
        1811820013
    ],
    [
        838930,
        1823616304
    ],
    [
        838920,
        1805507403
    ],
    [
        838910,
        1811305000
    ],
    [
        838900,
        1799000000
    ],
    [
        838880,
        1795722500
    ],
    [
        838860,
        1788606000
    ],
    [
        838840,
        1792087075
    ],
    [
        838830,
        1784106000
    ],
    [
        838810,
        1793000000
    ],
    [
        838790,
        1806522500
    ],
    [
        838780,
        1806188526
    ],
    [
        838760,
        1801589859
    ],
    [
        838730,
        1813790648
    ],
    [
        838720,
        1818247500
    ],
    [
        838700,
        1824105000
    ],
    [
        838640,
        1819605000
    ],
    [
        838510,
        1692500000
    ],
    [
        838500,
        1691238749
    ],
    [
        838480,
        1695448626
    ],
    [
        838470,
        1697156058
    ],
    [
        838450,
        1700163000
    ],
    [
        838440,
        1699750000
    ],
    [
        838400,
        1695750000
    ],
    [
        838380,
        1693824000
    ],
    [
        838340,
        1696074000
    ],
    [
        838330,
        1696202284
    ],
    [
        838320,
        1695551107
    ],
    [
        838300,
        1696383324
    ],
    [
        838280,
        1695970000
    ],
    [
        838250,
        1687989000
    ],
    [
        838210,
        1685500000
    ],
    [
        838190,
        1682616956
    ],
    [
        838180,
        1680850000
    ],
    [
        838170,
        1680500000
    ],
    [
        838160,
        1677515000
    ],
    [
        838130,
        1677928500
    ],
    [
        838120,
        1680500000
    ],
    [
        838100,
        1679500000
    ],
    [
        838090,
        1679438808
    ],
    [
        838080,
        1679857197
    ],
    [
        838070,
        1680210017
    ],
    [
        838010,
        1682000000
    ],
    [
        838000,
        1686920000
    ],
    [
        837990,
        1687000000
    ],
    [
        837980,
        1683063070
    ],
    [
        837970,
        1683910099
    ],
    [
        837950,
        1687000000
    ],
    [
        837930,
        1677218879
    ],
    [
        837920,
        1681144205
    ],
    [
        837910,
        1682570000
    ],
    [
        837890,
        1681154000
    ],
    [
        837870,
        1682570000
    ],
    [
        837850,
        1686000000
    ],
    [
        837830,
        1692000000
    ],
    [
        837820,
        1694054814
    ],
    [
        837810,
        1701127282
    ],
    [
        837790,
        1709480000
    ],
    [
        837780,
        1700183000
    ],
    [
        837750,
        1708349000
    ],
    [
        837680,
        1713000000
    ],
    [
        837660,
        1710114862
    ],
    [
        837650,
        1712628638
    ],
    [
        837640,
        1706740000
    ],
    [
        837590,
        1699000000
    ],
    [
        837570,
        1700000000
    ],
    [
        837560,
        1699000000
    ],
    [
        837550,
        1693451206
    ],
    [
        837540,
        1698635300
    ],
    [
        837510,
        1680355000
    ],
    [
        837500,
        1673000000
    ],
    [
        837490,
        1664445000
    ],
    [
        837480,
        1677429419
    ],
    [
        837450,
        1669000000
    ],
    [
        837440,
        1688000000
    ],
    [
        837380,
        1691000000
    ],
    [
        837370,
        1669000000
    ],
    [
        837320,
        1690000000
    ],
    [
        837300,
        1691000000
    ],
    [
        837250,
        1692000000
    ],
    [
        837230,
        1691000000
    ],
    [
        837210,
        1687505316
    ],
    [
        837200,
        1681098015
    ],
    [
        837180,
        1681000000
    ],
    [
        837120,
        1691000000
    ],
    [
        837100,
        1695125000
    ],
    [
        837050,
        1691000000
    ],
    [
        837040,
        1688000000
    ],
    [
        837030,
        1686084594
    ],
    [
        837010,
        1673471000
    ],
    [
        837000,
        1671000000
    ],
    [
        836990,
        1674358997
    ],
    [
        836950,
        1679000000
    ],
    [
        836940,
        1687089144
    ],
    [
        836930,
        1705579000
    ],
    [
        836900,
        1706740000
    ],
    [
        836880,
        1707000000
    ],
    [
        836870,
        1706919316
    ],
    [
        836850,
        1706740000
    ],
    [
        836840,
        1709440374
    ],
    [
        836830,
        1713553000
    ],
    [
        836810,
        1717109148
    ],
    [
        836740,
        1706740000
    ],
    [
        836700,
        1722863000
    ],
    [
        836690,
        1723000000
    ],
    [
        836680,
        1725000000
    ],
    [
        836660,
        1727160000
    ],
    [
        836650,
        1727980000
    ],
    [
        836640,
        1732000000
    ],
    [
        836550,
        1735000000
    ],
    [
        836530,
        1741000000
    ],
    [
        836500,
        1743000000
    ],
    [
        836460,
        1761819000
    ],
    [
        836450,
        1760440000
    ],
    [
        836440,
        1761141137
    ],
    [
        836420,
        1755318000
    ],
    [
        836370,
        1754000000
    ],
    [
        836310,
        1757000000
    ],
    [
        836280,
        1791000000
    ],
    [
        836250,
        1799000000
    ],
    [
        836240,
        1800877207
    ],
    [
        836230,
        1816670000
    ],
    [
        836210,
        1824717000
    ],
    [
        836190,
        1816670000
    ],
    [
        836150,
        1799000000
    ],
    [
        836140,
        1796530057
    ],
    [
        836130,
        1796000000
    ],
    [
        836120,
        1782000000
    ],
    [
        836100,
        1779000000
    ],
    [
        836080,
        1773713125
    ],
    [
        836070,
        1774632910
    ],
    [
        836050,
        1769757281
    ],
    [
        836040,
        1770725496
    ],
    [
        836010,
        1773625095
    ],
    [
        836000,
        1782604000
    ],
    [
        835990,
        1783000000
    ],
    [
        835970,
        1783169268
    ],
    [
        835930,
        1784000000
    ],
    [
        835920,
        1793767000
    ],
    [
        835890,
        1793860000
    ],
    [
        835860,
        1795000000
    ],
    [
        835790,
        1791000000
    ],
    [
        835740,
        1793860000
    ],
    [
        835720,
        1790000000
    ],
    [
        835650,
        1767000000
    ],
    [
        835590,
        1761000000
    ],
    [
        835520,
        1773000000
    ],
    [
        835510,
        1778892145
    ],
    [
        835500,
        1793860000
    ],
    [
        835480,
        1796255792
    ],
    [
        835470,
        1796441000
    ],
    [
        835460,
        1803489776
    ],
    [
        835450,
        1796000000
    ],
    [
        835430,
        1795187398
    ],
    [
        835420,
        1795606849
    ],
    [
        835410,
        1791546000
    ],
    [
        835390,
        1784736823
    ],
    [
        835380,
        1779862712
    ],
    [
        835360,
        1779459765
    ],
    [
        835350,
        1780573000
    ],
    [
        835280,
        1753000000
    ],
    [
        835260,
        1736704000
    ],
    [
        835240,
        1727380000
    ],
    [
        835200,
        1726000000
    ],
    [
        835170,
        1742920000
    ],
    [
        835160,
        1747656000
    ],
    [
        835150,
        1753000000
    ],
    [
        835140,
        1758895611
    ],
    [
        835100,
        1764958000
    ],
    [
        835070,
        1781000000
    ],
    [
        835010,
        1791000000
    ],
    [
        834970,
        1787407000
    ],
    [
        834960,
        1794017719
    ],
    [
        834950,
        1799530000
    ],
    [
        834940,
        1805000000
    ],
    [
        834910,
        1799530000
    ],
    [
        834900,
        1795000000
    ],
    [
        834890,
        1796890000
    ],
    [
        834880,
        1795705982
    ],
    [
        834870,
        1806161000
    ],
    [
        834860,
        1808350302
    ],
    [
        834850,
        1806161000
    ],
    [
        834830,
        1808230000
    ],
    [
        834820,
        1804265000
    ],
    [
        834810,
        1809500000
    ],
    [
        834790,
        1810087389
    ],
    [
        834780,
        1807070030
    ],
    [
        834770,
        1804070030
    ],
    [
        834760,
        1802500000
    ],
    [
        834750,
        1803906969
    ],
    [
        834740,
        1804874757
    ],
    [
        834720,
        1802500000
    ],
    [
        834710,
        1796823863
    ],
    [
        834700,
        1790000000
    ],
    [
        834690,
        1787071000
    ],
    [
        834680,
        1782841000
    ],
    [
        834670,
        1782086825
    ],
    [
        834660,
        1785015825
    ],
    [
        834650,
        1790000000
    ],
    [
        834630,
        1788536008
    ],
    [
        834610,
        1786000000
    ],
    [
        834590,
        1782734000
    ],
    [
        834580,
        1778115227
    ],
    [
        834560,
        1771295150
    ],
    [
        834550,
        1771577069
    ],
    [
        834540,
        1774672226
    ],
    [
        834530,
        1769201000
    ],
    [
        834490,
        1765201000
    ],
    [
        834480,
        1765865139
    ],
    [
        834470,
        1766015526
    ],
    [
        834420,
        1765000000
    ],
    [
        834400,
        1758925000
    ],
    [
        834380,
        1751504000
    ],
    [
        834370,
        1749786402
    ],
    [
        834360,
        1747790837
    ],
    [
        834340,
        1745000000
    ],
    [
        834330,
        1745375750
    ],
    [
        834320,
        1745000000
    ],
    [
        834310,
        1746560000
    ],
    [
        834300,
        1749368438
    ],
    [
        834290,
        1751308438
    ],
    [
        834270,
        1752257700
    ],
    [
        834260,
        1752425000
    ],
    [
        834250,
        1749560000
    ],
    [
        834230,
        1748375705
    ],
    [
        834210,
        1735175500
    ],
    [
        834200,
        1730619528
    ],
    [
        834190,
        1735175500
    ],
    [
        834170,
        1724752526
    ],
    [
        834150,
        1718694500
    ],
    [
        834130,
        1715924298
    ],
    [
        834120,
        1714000000
    ],
    [
        834110,
        1711457378
    ],
    [
        834080,
        1712837500
    ],
    [
        834070,
        1717000000
    ],
    [
        834050,
        1717900000
    ],
    [
        834040,
        1718900000
    ],
    [
        834010,
        1719656500
    ],
    [
        834000,
        1722493405
    ],
    [
        833980,
        1721500000
    ],
    [
        833970,
        1758097000
    ],
    [
        833950,
        1761332000
    ],
    [
        833940,
        1763322912
    ],
    [
        833930,
        1756580912
    ],
    [
        833920,
        1754666825
    ],
    [
        833910,
        1751060000
    ],
    [
        833880,
        1748060000
    ],
    [
        833850,
        1751060000
    ],
    [
        833840,
        1741645000
    ],
    [
        833830,
        1744550000
    ],
    [
        833820,
        1753310659
    ],
    [
        833790,
        1740000000
    ],
    [
        833760,
        1760934000
    ],
    [
        833740,
        1766420390
    ],
    [
        833730,
        1767154588
    ],
    [
        833720,
        1766154588
    ],
    [
        833710,
        1762795000
    ],
    [
        833700,
        1761985124
    ],
    [
        833690,
        1764501131
    ],
    [
        833680,
        1757323631
    ],
    [
        833580,
        1744077000
    ],
    [
        833570,
        1751904726
    ],
    [
        833560,
        1754585000
    ],
    [
        833550,
        1752565000
    ],
    [
        833540,
        1746537350
    ],
    [
        833530,
        1746040000
    ],
    [
        833520,
        1757000000
    ],
    [
        833510,
        1778500000
    ],
    [
        833490,
        1802589000
    ],
    [
        833480,
        1804175443
    ],
    [
        833470,
        1807830000
    ],
    [
        833460,
        1811000000
    ],
    [
        833450,
        1813430000
    ],
    [
        833440,
        1818146435
    ],
    [
        833430,
        1816095000
    ],
    [
        833420,
        1814365000
    ],
    [
        833400,
        1811000000
    ],
    [
        833390,
        1817659500
    ],
    [
        833370,
        1822919500
    ],
    [
        833360,
        1823660000
    ],
    [
        833350,
        1842475000
    ],
    [
        833340,
        1848960000
    ],
    [
        833330,
        1856000000
    ],
    [
        833320,
        1859000000
    ],
    [
        833310,
        1851448754
    ],
    [
        833290,
        1849434060
    ],
    [
        833270,
        1845770453
    ],
    [
        833260,
        1846000000
    ],
    [
        833250,
        1845980000
    ],
    [
        833240,
        1844316276
    ],
    [
        833230,
        1845980000
    ],
    [
        833220,
        1851458435
    ],
    [
        833210,
        1851748435
    ],
    [
        833200,
        1855903435
    ],
    [
        833190,
        1838941546
    ],
    [
        833170,
        1843821294
    ],
    [
        833160,
        1846900000
    ],
    [
        833140,
        1847255785
    ],
    [
        833110,
        1849900000
    ],
    [
        833100,
        1845474155
    ],
    [
        833050,
        1837400000
    ],
    [
        833020,
        1832306443
    ],
    [
        833010,
        1833206213
    ],
    [
        833000,
        1833528332
    ],
    [
        832980,
        1830147546
    ],
    [
        832970,
        1830254495
    ],
    [
        832950,
        1830947221
    ],
    [
        832930,
        1834621849
    ],
    [
        832920,
        1839900000
    ],
    [
        832910,
        1835793735
    ],
    [
        832900,
        1835258973
    ],
    [
        832890,
        1837900000
    ],
    [
        832880,
        1829331178
    ],
    [
        832830,
        1807990000
    ],
    [
        832820,
        1807500000
    ],
    [
        832810,
        1806000000
    ],
    [
        832800,
        1807990000
    ],
    [
        832780,
        1806000000
    ],
    [
        832760,
        1814547886
    ],
    [
        832750,
        1807335000
    ],
    [
        832740,
        1810981358
    ],
    [
        832730,
        1811907874
    ],
    [
        832720,
        1810131576
    ],
    [
        832710,
        1808284658
    ],
    [
        832700,
        1808500000
    ],
    [
        832690,
        1805466657
    ],
    [
        832680,
        1802136657
    ],
    [
        832660,
        1793170000
    ],
    [
        832650,
        1792579092
    ],
    [
        832640,
        1789923330
    ],
    [
        832630,
        1788838136
    ],
    [
        832620,
        1809238000
    ],
    [
        832610,
        1802880000
    ],
    [
        832600,
        1817000000
    ],
    [
        832590,
        1806103037
    ],
    [
        832580,
        1802930000
    ],
    [
        832570,
        1807000000
    ],
    [
        832560,
        1800200000
    ],
    [
        832540,
        1804930000
    ],
    [
        832530,
        1794000000
    ],
    [
        832510,
        1796000000
    ],
    [
        832500,
        1790316743
    ],
    [
        832470,
        1787164000
    ],
    [
        832440,
        1783000000
    ],
    [
        832420,
        1789980000
    ],
    [
        832390,
        1792712849
    ],
    [
        832370,
        1803000000
    ],
    [
        832360,
        1802068716
    ],
    [
        832350,
        1802000000
    ],
    [
        832340,
        1800510000
    ],
    [
        832330,
        1794827598
    ],
    [
        832310,
        1800194266
    ],
    [
        832300,
        1802000000
    ],
    [
        832290,
        1804170000
    ],
    [
        832270,
        1805074187
    ],
    [
        832260,
        1800000000
    ],
    [
        832200,
        1759000000
    ],
    [
        832190,
        1757836526
    ],
    [
        832160,
        1756000000
    ],
    [
        832150,
        1755891245
    ],
    [
        832090,
        1757030000
    ],
    [
        832080,
        1756215812
    ],
    [
        832070,
        1756100000
    ],
    [
        832060,
        1754646980
    ],
    [
        832050,
        1744851000
    ],
    [
        832040,
        1742822315
    ],
    [
        832010,
        1742060000
    ],
    [
        831610,
        1756100000
    ],
    [
        831590,
        1742060000
    ],
    [
        831540,
        1736500000
    ],
    [
        831520,
        1733000000
    ],
    [
        831500,
        1730173000
    ],
    [
        831470,
        1732486230
    ],
    [
        831460,
        1736500000
    ],
    [
        831420,
        1730000000
    ],
    [
        831410,
        1727058000
    ],
    [
        831390,
        1730000000
    ],
    [
        831340,
        1736500000
    ],
    [
        831320,
        1737000000
    ],
    [
        831280,
        1754323000
    ],
    [
        831270,
        1756100000
    ],
    [
        831260,
        1759820000
    ],
    [
        831250,
        1759000000
    ],
    [
        831230,
        1757000000
    ],
    [
        831210,
        1756100000
    ],
    [
        831200,
        1756317071
    ],
    [
        831190,
        1756100000
    ],
    [
        831150,
        1748000000
    ],
    [
        831140,
        1746900000
    ],
    [
        831130,
        1745554000
    ],
    [
        831120,
        1745748616
    ],
    [
        831100,
        1736500000
    ],
    [
        831080,
        1736000000
    ],
    [
        831070,
        1730000000
    ],
    [
        831030,
        1718000000
    ],
    [
        831010,
        1721150011
    ],
    [
        831000,
        1720658770
    ],
    [
        830990,
        1724108766
    ],
    [
        830950,
        1709000000
    ],
    [
        830940,
        1718000000
    ],
    [
        830920,
        1730010000
    ],
    [
        830890,
        1730000000
    ],
    [
        830880,
        1718134011
    ],
    [
        830870,
        1713850000
    ],
    [
        830860,
        1707620000
    ],
    [
        830850,
        1716480000
    ],
    [
        830840,
        1720624000
    ],
    [
        830830,
        1723033760
    ],
    [
        830820,
        1723463538
    ],
    [
        830810,
        1720624000
    ],
    [
        830790,
        1726330000
    ],
    [
        830770,
        1700000000
    ],
    [
        830760,
        1699600000
    ],
    [
        830750,
        1698910000
    ],
    [
        830740,
        1696500000
    ],
    [
        830730,
        1695500000
    ],
    [
        830720,
        1695978546
    ],
    [
        830710,
        1693603856
    ],
    [
        830700,
        1686723856
    ],
    [
        830690,
        1686996658
    ],
    [
        830680,
        1687864700
    ],
    [
        830670,
        1677320000
    ],
    [
        830660,
        1698000000
    ],
    [
        830650,
        1698193101
    ],
    [
        830640,
        1703940000
    ],
    [
        830630,
        1712000000
    ],
    [
        830620,
        1700000000
    ],
    [
        830610,
        1712000000
    ],
    [
        830600,
        1725650000
    ],
    [
        830590,
        1725490000
    ],
    [
        830560,
        1747920000
    ],
    [
        830550,
        1762700000
    ],
    [
        830490,
        1814000000
    ],
    [
        830460,
        1870000000
    ],
    [
        830450,
        1879045037
    ],
    [
        830440,
        1870000000
    ],
    [
        830430,
        1850000000
    ],
    [
        830380,
        1841760000
    ],
    [
        830360,
        1844313759
    ],
    [
        830340,
        1847476000
    ],
    [
        830330,
        1840260000
    ],
    [
        830320,
        1847269314
    ],
    [
        830310,
        1855050000
    ],
    [
        830300,
        1852517441
    ],
    [
        830290,
        1849450000
    ],
    [
        830260,
        1846000000
    ],
    [
        830240,
        1841940000
    ],
    [
        830220,
        1835977691
    ],
    [
        830210,
        1837515725
    ],
    [
        830200,
        1836117313
    ],
    [
        830190,
        1834500000
    ],
    [
        830180,
        1821876526
    ],
    [
        830170,
        1796373000
    ],
    [
        830130,
        1820000000
    ],
    [
        830110,
        1834500000
    ],
    [
        830070,
        1845710000
    ],
    [
        830060,
        1836355314
    ],
    [
        830050,
        1834500000
    ],
    [
        830040,
        1823636000
    ],
    [
        830000,
        1819000000
    ],
    [
        829970,
        1817000000
    ],
    [
        829960,
        1786715000
    ],
    [
        829930,
        1780670000
    ],
    [
        829910,
        1769420000
    ],
    [
        829890,
        1779746787
    ],
    [
        829880,
        1769420000
    ],
    [
        829870,
        1774080000
    ],
    [
        829830,
        1769861000
    ],
    [
        829820,
        1769420000
    ],
    [
        829810,
        1777000000
    ],
    [
        829780,
        1824130000
    ],
    [
        829730,
        1827260000
    ],
    [
        829700,
        1825334500
    ],
    [
        829690,
        1818000000
    ],
    [
        829670,
        1823000000
    ],
    [
        829660,
        1840000000
    ],
    [
        829640,
        1848000000
    ],
    [
        829630,
        1852640000
    ],
    [
        829620,
        1845683804
    ],
    [
        829580,
        1856910000
    ],
    [
        829570,
        1866329087
    ],
    [
        829560,
        1863000000
    ],
    [
        829550,
        1863472556
    ],
    [
        829540,
        1863000000
    ],
    [
        829530,
        1863130000
    ],
    [
        829520,
        1856910000
    ],
    [
        829510,
        1856890000
    ],
    [
        829490,
        1865460000
    ],
    [
        829390,
        1867200000
    ],
    [
        829380,
        1865000000
    ],
    [
        829370,
        1867200000
    ],
    [
        829350,
        1891209990
    ],
    [
        829330,
        1895120146
    ],
    [
        829310,
        1896000000
    ],
    [
        829290,
        1907299624
    ],
    [
        829270,
        1906693173
    ],
    [
        829260,
        1917000000
    ],
    [
        829240,
        1910912000
    ],
    [
        829180,
        1901000000
    ],
    [
        829160,
        1898412915
    ],
    [
        829100,
        1902000000
    ],
    [
        829060,
        1906843000
    ],
    [
        829050,
        1916000000
    ],
    [
        829040,
        1918464394
    ],
    [
        829030,
        1912023737
    ],
    [
        829000,
        1924498000
    ],
    [
        828940,
        1916315000
    ],
    [
        828920,
        1922794000
    ],
    [
        828880,
        1897000000
    ],
    [
        828800,
        1867200000
    ],
    [
        828760,
        1862320000
    ],
    [
        828740,
        1862000000
    ],
    [
        828730,
        1861000000
    ],
    [
        828710,
        1860530743
    ],
    [
        828690,
        1862000000
    ],
    [
        828680,
        1862320000
    ],
    [
        828670,
        1862156000
    ],
    [
        828640,
        1862320000
    ],
    [
        828620,
        1862487000
    ],
    [
        828600,
        1862320000
    ],
    [
        828590,
        1862487000
    ],
    [
        828580,
        1863746599
    ],
    [
        828570,
        1865214000
    ],
    [
        828560,
        1867200000
    ],
    [
        828530,
        1865214000
    ],
    [
        828520,
        1858000000
    ],
    [
        828510,
        1858520000
    ],
    [
        828490,
        1855020000
    ],
    [
        828470,
        1852135000
    ],
    [
        828460,
        1848305000
    ],
    [
        828450,
        1850595000
    ],
    [
        828430,
        1867200000
    ],
    [
        828410,
        1874000000
    ],
    [
        828390,
        1882600000
    ],
    [
        828350,
        1890000000
    ],
    [
        828330,
        1888000000
    ],
    [
        828290,
        1883000000
    ],
    [
        828270,
        1881288500
    ],
    [
        828240,
        1883288500
    ],
    [
        828220,
        1882524500
    ],
    [
        828180,
        1889524500
    ],
    [
        828160,
        1898250000
    ],
    [
        828100,
        1913250000
    ],
    [
        828050,
        1911750000
    ],
    [
        828040,
        1912403500
    ],
    [
        828010,
        1913307000
    ],
    [
        827940,
        1920000000
    ],
    [
        827900,
        1921158000
    ],
    [
        827870,
        1886709000
    ],
    [
        827620,
        1760020000
    ],
    [
        827550,
        1755659000
    ],
    [
        827530,
        1749820000
    ],
    [
        827490,
        1749000000
    ],
    [
        827460,
        1744930000
    ],
    [
        827410,
        1673690000
    ],
    [
        827370,
        1662900000
    ],
    [
        826990,
        1673690000
    ],
    [
        826960,
        1673010000
    ],
    [
        826920,
        1667380000
    ],
    [
        826890,
        1668000000
    ],
    [
        826790,
        1670642000
    ],
    [
        826770,
        1672000000
    ],
    [
        826730,
        1667380000
    ],
    [
        826700,
        1665000000
    ],
    [
        826660,
        1655601000
    ],
    [
        826640,
        1649000000
    ],
    [
        826590,
        1662900000
    ],
    [
        826550,
        1665000000
    ],
    [
        826540,
        1669000000
    ],
    [
        826500,
        1671865000
    ],
    [
        826440,
        1670101000
    ],
    [
        826370,
        1672974000
    ],
    [
        826350,
        1669000000
    ],
    [
        826280,
        1668000000
    ],
    [
        826230,
        1672000000
    ],
    [
        826210,
        1691946000
    ],
    [
        826100,
        1695000000
    ],
    [
        826080,
        1698456000
    ],
    [
        826010,
        1714000000
    ],
    [
        825960,
        1715240000
    ],
    [
        825940,
        1716000000
    ],
    [
        825870,
        1717000000
    ],
    [
        825850,
        1709000000
    ],
    [
        825810,
        1715240000
    ],
    [
        825790,
        1695770000
    ],
    [
        825730,
        1692000000
    ],
    [
        825660,
        1699000000
    ],
    [
        825590,
        1692000000
    ],
    [
        825530,
        1715000000
    ],
    [
        825500,
        1717633000
    ],
    [
        825490,
        1725000000
    ],
    [
        825470,
        1726000000
    ],
    [
        825440,
        1730181000
    ],
    [
        825420,
        1730000000
    ],
    [
        825400,
        1723437000
    ],
    [
        825380,
        1720200000
    ],
    [
        825370,
        1715000000
    ],
    [
        825330,
        1721000000
    ],
    [
        825320,
        1732000000
    ],
    [
        825310,
        1730260000
    ],
    [
        825280,
        1730000000
    ],
    [
        825230,
        1701000000
    ],
    [
        825220,
        1702580000
    ],
    [
        825210,
        1703210000
    ],
    [
        825200,
        1702230000
    ],
    [
        825190,
        1693762500
    ],
    [
        825180,
        1696327500
    ],
    [
        825170,
        1690147500
    ],
    [
        825160,
        1688415000
    ],
    [
        825150,
        1686680000
    ],
    [
        825140,
        1686221500
    ],
    [
        825120,
        1685300000
    ],
    [
        825110,
        1683600000
    ],
    [
        825090,
        1680948500
    ],
    [
        825080,
        1679558500
    ],
    [
        825070,
        1678875000
    ],
    [
        825050,
        1690324500
    ],
    [
        825040,
        1691474500
    ],
    [
        825020,
        1696750000
    ],
    [
        824980,
        1698830000
    ],
    [
        824710,
        1685030000
    ],
    [
        824640,
        1681453000
    ],
    [
        824610,
        1672521500
    ],
    [
        824590,
        1664871500
    ],
    [
        824580,
        1663411500
    ],
    [
        824570,
        1661551500
    ],
    [
        824550,
        1658425000
    ],
    [
        824510,
        1651850000
    ],
    [
        824490,
        1648724500
    ],
    [
        824480,
        1644749500
    ],
    [
        824470,
        1647724500
    ],
    [
        824460,
        1643059500
    ],
    [
        824450,
        1642355000
    ],
    [
        824440,
        1634451000
    ],
    [
        824430,
        1632076000
    ],
    [
        824420,
        1631746000
    ],
    [
        824410,
        1630895000
    ],
    [
        824400,
        1631875000
    ],
    [
        824380,
        1651850000
    ],
    [
        824370,
        1654350000
    ],
    [
        824360,
        1658350000
    ],
    [
        824350,
        1660225000
    ],
    [
        824340,
        1658350000
    ],
    [
        824330,
        1656980000
    ],
    [
        824320,
        1658815000
    ],
    [
        824310,
        1662085000
    ],
    [
        824280,
        1655635000
    ],
    [
        824270,
        1656625000
    ],
    [
        824250,
        1651500000
    ],
    [
        824220,
        1646966500
    ],
    [
        824210,
        1649940000
    ],
    [
        824200,
        1648371500
    ],
    [
        824190,
        1650221500
    ],
    [
        824180,
        1651180000
    ],
    [
        824170,
        1657165000
    ],
    [
        824160,
        1646361500
    ],
    [
        824150,
        1642055000
    ],
    [
        824140,
        1640694000
    ],
    [
        824100,
        1634889000
    ],
    [
        824080,
        1633375000
    ],
    [
        823990,
        1614465000
    ],
    [
        823940,
        1676000000
    ],
    [
        823930,
        1676900000
    ],
    [
        823920,
        1681995000
    ],
    [
        823900,
        1679840000
    ],
    [
        823890,
        1678480000
    ],
    [
        823870,
        1684000000
    ],
    [
        823860,
        1687240000
    ],
    [
        823840,
        1686000000
    ],
    [
        823830,
        1689820000
    ],
    [
        823820,
        1686679000
    ],
    [
        823810,
        1686869500
    ],
    [
        823760,
        1706700000
    ],
    [
        823750,
        1711265500
    ],
    [
        823700,
        1708000000
    ],
    [
        823690,
        1707080000
    ],
    [
        823680,
        1730000000
    ],
    [
        823660,
        1733691500
    ],
    [
        823590,
        1735000000
    ],
    [
        823550,
        1721116500
    ],
    [
        823530,
        1710000000
    ],
    [
        823520,
        1721500000
    ],
    [
        823480,
        1733000000
    ],
    [
        823450,
        1735040000
    ],
    [
        823430,
        1731002000
    ],
    [
        823410,
        1721600000
    ],
    [
        823390,
        1718497000
    ],
    [
        823380,
        1715030000
    ],
    [
        823370,
        1707000000
    ],
    [
        823340,
        1706000000
    ],
    [
        823280,
        1701040000
    ],
    [
        823250,
        1707000000
    ],
    [
        823190,
        1717767000
    ],
    [
        823170,
        1711000000
    ],
    [
        823100,
        1714000000
    ],
    [
        823070,
        1707000000
    ],
    [
        823060,
        1716010000
    ],
    [
        823000,
        1729155000
    ],
    [
        822990,
        1724000000
    ],
    [
        822810,
        1775400000
    ],
    [
        822750,
        1789000000
    ],
    [
        822680,
        1808340000
    ],
    [
        822650,
        1787000000
    ],
    [
        822620,
        1780469000
    ],
    [
        822610,
        1782070000
    ],
    [
        822580,
        1780469000
    ],
    [
        822570,
        1776173000
    ],
    [
        822560,
        1783491113
    ],
    [
        822540,
        1775786500
    ],
    [
        822530,
        1766810000
    ],
    [
        822520,
        1765130000
    ],
    [
        822510,
        1758110000
    ],
    [
        822500,
        1763850000
    ],
    [
        822450,
        1762000000
    ],
    [
        822430,
        1764157500
    ],
    [
        822390,
        1768157500
    ],
    [
        822380,
        1774765000
    ],
    [
        822360,
        1783491113
    ],
    [
        822330,
        1780002056
    ],
    [
        822320,
        1787105000
    ],
    [
        822310,
        1792710000
    ],
    [
        822260,
        1787810000
    ],
    [
        822250,
        1785955556
    ],
    [
        822230,
        1782745556
    ],
    [
        822200,
        1782000000
    ],
    [
        822190,
        1774820000
    ],
    [
        822180,
        1774965000
    ],
    [
        822170,
        1774000000
    ],
    [
        822160,
        1774045000
    ],
    [
        822140,
        1772586000
    ],
    [
        822110,
        1777086000
    ],
    [
        822100,
        1783245556
    ],
    [
        822090,
        1785410000
    ],
    [
        822050,
        1801000000
    ],
    [
        822040,
        1794710000
    ],
    [
        822030,
        1789935000
    ],
    [
        822000,
        1745635000
    ],
    [
        821980,
        1739712888
    ],
    [
        821970,
        1730981540
    ],
    [
        821960,
        1747467098
    ],
    [
        821950,
        1743389633
    ],
    [
        821940,
        1745525000
    ],
    [
        821930,
        1764070000
    ],
    [
        821920,
        1778970000
    ],
    [
        821910,
        1788420000
    ],
    [
        821880,
        1823283938
    ],
    [
        821870,
        1831880000
    ],
    [
        821840,
        1806498000
    ],
    [
        821820,
        1785118000
    ],
    [
        821790,
        1779000000
    ],
    [
        821780,
        1780286649
    ],
    [
        821770,
        1769786649
    ],
    [
        821760,
        1778200158
    ],
    [
        821750,
        1782227660
    ],
    [
        821730,
        1758110000
    ],
    [
        821720,
        1758000000
    ],
    [
        821710,
        1766602691
    ],
    [
        821700,
        1775921213
    ],
    [
        821690,
        1775259373
    ],
    [
        821680,
        1770553378
    ],
    [
        821590,
        1773811558
    ],
    [
        821580,
        1756584058
    ],
    [
        821570,
        1754257500
    ],
    [
        821560,
        1752332555
    ],
    [
        821540,
        1754257500
    ],
    [
        821530,
        1747661000
    ],
    [
        821500,
        1662500000
    ],
    [
        821480,
        1653876500
    ],
    [
        821470,
        1652386500
    ],
    [
        821460,
        1655345000
    ],
    [
        821450,
        1655325000
    ],
    [
        821440,
        1664845000
    ],
    [
        821430,
        1667413200
    ],
    [
        821420,
        1669818000
    ],
    [
        821400,
        1671000000
    ],
    [
        821360,
        1681306500
    ],
    [
        821350,
        1683385628
    ],
    [
        821330,
        1684360354
    ],
    [
        821320,
        1687042500
    ],
    [
        821310,
        1685995866
    ],
    [
        821300,
        1680900645
    ],
    [
        821290,
        1681474513
    ],
    [
        821280,
        1686351500
    ],
    [
        821270,
        1678739139
    ],
    [
        821260,
        1681869928
    ],
    [
        821240,
        1680643647
    ],
    [
        821230,
        1683882147
    ],
    [
        821220,
        1693851855
    ],
    [
        821210,
        1710500000
    ],
    [
        821200,
        1705082544
    ],
    [
        821190,
        1710500000
    ],
    [
        821180,
        1709232000
    ],
    [
        821130,
        1655000000
    ],
    [
        821120,
        1652400000
    ],
    [
        821100,
        1645261214
    ],
    [
        821090,
        1642873167
    ],
    [
        821080,
        1616881283
    ],
    [
        821070,
        1635081849
    ],
    [
        821060,
        1645400000
    ],
    [
        821050,
        1655529108
    ],
    [
        821030,
        1682000000
    ],
    [
        821010,
        1648666000
    ],
    [
        821000,
        1646076260
    ],
    [
        820970,
        1645676941
    ],
    [
        820960,
        1651000000
    ],
    [
        820950,
        1640277127
    ],
    [
        820930,
        1646979165
    ],
    [
        820910,
        1658949643
    ],
    [
        820900,
        1670000000
    ],
    [
        820860,
        1672000000
    ],
    [
        820850,
        1653161000
    ],
    [
        820810,
        1632000000
    ],
    [
        820800,
        1629663895
    ],
    [
        820760,
        1628000000
    ],
    [
        820720,
        1634000000
    ],
    [
        820700,
        1617786000
    ],
    [
        820660,
        1572000000
    ],
    [
        820650,
        1571461000
    ],
    [
        820630,
        1568658108
    ],
    [
        820620,
        1566060000
    ],
    [
        820610,
        1569505389
    ],
    [
        820600,
        1569297000
    ],
    [
        820570,
        1532000000
    ],
    [
        820540,
        1530653000
    ],
    [
        820510,
        1517000000
    ],
    [
        820490,
        1511483000
    ],
    [
        820450,
        1509000000
    ],
    [
        820440,
        1508420000
    ],
    [
        820390,
        1508000000
    ],
    [
        820380,
        1507698000
    ],
    [
        820350,
        1491000000
    ],
    [
        820340,
        1475952000
    ],
    [
        820300,
        1471000000
    ],
    [
        820290,
        1465023104
    ],
    [
        820270,
        1462327000
    ],
    [
        820250,
        1475000000
    ],
    [
        820230,
        1485000000
    ],
    [
        820220,
        1487000000
    ],
    [
        820170,
        1485000000
    ],
    [
        820150,
        1487000000
    ],
    [
        820110,
        1470000000
    ],
    [
        820090,
        1457300000
    ],
    [
        820060,
        1441000000
    ],
    [
        820040,
        1430000000
    ],
    [
        820020,
        1427232963
    ],
    [
        819980,
        1424500000
    ],
    [
        819950,
        1419000000
    ],
    [
        819940,
        1417841000
    ],
    [
        819930,
        1423590690
    ],
    [
        819880,
        1435675000
    ],
    [
        819870,
        1433779682
    ],
    [
        819840,
        1429000000
    ],
    [
        819830,
        1423511570
    ],
    [
        819810,
        1429000000
    ],
    [
        819800,
        1442809000
    ],
    [
        819780,
        1443910000
    ],
    [
        819770,
        1442809000
    ],
    [
        819750,
        1451383754
    ],
    [
        819700,
        1448000000
    ],
    [
        819640,
        1447506000
    ],
    [
        819580,
        1410349000
    ],
    [
        819570,
        1423000000
    ],
    [
        819560,
        1424000000
    ],
    [
        819510,
        1437789000
    ],
    [
        819500,
        1434788652
    ],
    [
        819460,
        1443910000
    ],
    [
        819450,
        1430712000
    ],
    [
        819440,
        1443910000
    ],
    [
        819430,
        1448000000
    ],
    [
        819420,
        1452840000
    ],
    [
        819390,
        1436320000
    ],
    [
        819370,
        1425457000
    ],
    [
        819340,
        1412000000
    ],
    [
        819330,
        1412588686
    ],
    [
        819240,
        1415000000
    ],
    [
        819200,
        1412488000
    ],
    [
        819190,
        1399749032
    ],
    [
        819170,
        1389848154
    ],
    [
        819160,
        1410743153
    ],
    [
        819130,
        1420412000
    ],
    [
        819120,
        1413457322
    ],
    [
        819100,
        1384210000
    ],
    [
        819080,
        1371478000
    ],
    [
        819070,
        1345000000
    ],
    [
        819040,
        1349322000
    ],
    [
        819030,
        1346642286
    ],
    [
        819020,
        1286000000
    ],
    [
        819000,
        1295274000
    ],
    [
        818990,
        1302000000
    ],
    [
        818950,
        1333000000
    ],
    [
        818910,
        1335000000
    ],
    [
        818890,
        1345283000
    ],
    [
        818880,
        1336564235
    ],
    [
        818870,
        1359271140
    ],
    [
        818860,
        1365108738
    ],
    [
        818850,
        1366256238
    ],
    [
        818840,
        1368862558
    ],
    [
        818820,
        1362007212
    ],
    [
        818810,
        1362106660
    ],
    [
        818780,
        1348500000
    ],
    [
        818760,
        1346370000
    ],
    [
        818750,
        1339965000
    ],
    [
        818740,
        1338978449
    ],
    [
        818700,
        1335465000
    ],
    [
        818690,
        1329402000
    ],
    [
        818660,
        1325874000
    ],
    [
        818650,
        1324267908
    ],
    [
        818630,
        1326000000
    ],
    [
        818610,
        1320388659
    ],
    [
        818600,
        1322344539
    ],
    [
        818580,
        1327474000
    ],
    [
        818560,
        1313400000
    ],
    [
        818550,
        1310463000
    ],
    [
        818500,
        1298000000
    ],
    [
        818490,
        1292552000
    ],
    [
        818440,
        1281000000
    ],
    [
        818430,
        1277994209
    ],
    [
        818390,
        1282000000
    ],
    [
        818380,
        1280110847
    ],
    [
        818330,
        1276683000
    ],
    [
        818310,
        1283000000
    ],
    [
        818300,
        1265230000
    ],
    [
        818240,
        1264000000
    ],
    [
        818200,
        1260000000
    ],
    [
        818170,
        1265230000
    ],
    [
        818130,
        1267311000
    ],
    [
        818110,
        1266278000
    ],
    [
        818100,
        1272806870
    ],
    [
        818080,
        1272726546
    ],
    [
        818070,
        1277197066
    ],
    [
        818050,
        1266543566
    ],
    [
        818040,
        1295000000
    ],
    [
        818030,
        1268020529
    ],
    [
        818020,
        1272622765
    ],
    [
        818000,
        1268400416
    ],
    [
        817970,
        1297000000
    ],
    [
        817930,
        1313400000
    ],
    [
        817920,
        1310480545
    ],
    [
        817910,
        1308405000
    ],
    [
        817870,
        1308000000
    ],
    [
        817860,
        1301612848
    ],
    [
        817850,
        1300760000
    ],
    [
        817840,
        1295487000
    ],
    [
        817800,
        1284000000
    ],
    [
        817730,
        1286000000
    ],
    [
        817720,
        1311000000
    ],
    [
        817690,
        1311665000
    ],
    [
        817670,
        1309950334
    ],
    [
        817660,
        1310233182
    ],
    [
        817640,
        1301272000
    ],
    [
        817630,
        1298033861
    ],
    [
        817620,
        1297893858
    ],
    [
        817600,
        1294000000
    ],
    [
        817590,
        1294144498
    ],
    [
        817570,
        1295983591
    ],
    [
        817560,
        1297726732
    ],
    [
        817550,
        1306115542
    ],
    [
        817530,
        1310135576
    ],
    [
        817510,
        1303000000
    ],
    [
        817500,
        1294310000
    ],
    [
        817490,
        1295351098
    ],
    [
        817480,
        1294310000
    ],
    [
        817470,
        1305133098
    ],
    [
        817420,
        1312022000
    ],
    [
        817400,
        1306000000
    ],
    [
        817370,
        1307054000
    ],
    [
        817350,
        1300000000
    ],
    [
        817330,
        1290900000
    ],
    [
        817320,
        1285000000
    ],
    [
        817310,
        1282241266
    ],
    [
        817290,
        1275589000
    ],
    [
        817270,
        1285000000
    ],
    [
        817250,
        1290900000
    ],
    [
        817240,
        1290335420
    ],
    [
        817230,
        1289406710
    ],
    [
        817210,
        1287782146
    ],
    [
        817190,
        1276340000
    ],
    [
        817170,
        1275680000
    ],
    [
        817150,
        1277000000
    ],
    [
        817120,
        1295000000
    ],
    [
        817100,
        1298994000
    ],
    [
        817040,
        1302000000
    ],
    [
        817030,
        1306606007
    ],
    [
        817010,
        1299162000
    ],
    [
        816990,
        1298476000
    ],
    [
        816970,
        1306213569
    ],
    [
        816950,
        1305000000
    ],
    [
        816920,
        1324345000
    ],
    [
        816860,
        1352000000
    ],
    [
        816810,
        1354000000
    ],
    [
        816790,
        1371000000
    ],
    [
        816770,
        1369518109
    ],
    [
        816750,
        1364000000
    ],
    [
        816740,
        1360850794
    ],
    [
        816730,
        1354000000
    ],
    [
        816710,
        1357463215
    ],
    [
        816690,
        1354000000
    ],
    [
        816670,
        1373000000
    ],
    [
        816610,
        1381230000
    ],
    [
        816590,
        1393318534
    ],
    [
        816570,
        1388224000
    ],
    [
        816560,
        1381850856
    ],
    [
        816540,
        1386839179
    ],
    [
        816530,
        1381230000
    ],
    [
        816520,
        1388224000
    ],
    [
        816490,
        1370000000
    ],
    [
        816460,
        1383378000
    ],
    [
        816450,
        1360391425
    ],
    [
        816440,
        1382570000
    ],
    [
        816430,
        1381950010
    ],
    [
        816420,
        1409180000
    ],
    [
        816410,
        1422530000
    ],
    [
        816400,
        1394275000
    ],
    [
        816390,
        1389000000
    ],
    [
        816370,
        1380530000
    ],
    [
        816360,
        1383149900
    ],
    [
        816350,
        1392740000
    ],
    [
        816340,
        1382323119
    ],
    [
        816330,
        1408430000
    ],
    [
        816320,
        1412877058
    ],
    [
        816310,
        1414525177
    ],
    [
        816300,
        1409680000
    ],
    [
        816290,
        1408430000
    ],
    [
        816280,
        1414449271
    ],
    [
        816270,
        1418910000
    ],
    [
        816260,
        1426670503
    ],
    [
        816250,
        1416574000
    ],
    [
        816230,
        1406950000
    ],
    [
        816220,
        1416780000
    ],
    [
        816210,
        1406600000
    ],
    [
        816190,
        1399900000
    ],
    [
        816180,
        1407661000
    ],
    [
        816140,
        1402000000
    ],
    [
        816130,
        1399900000
    ],
    [
        816120,
        1402000000
    ],
    [
        816110,
        1389000000
    ],
    [
        816090,
        1385354713
    ],
    [
        816080,
        1386950000
    ],
    [
        816060,
        1361550000
    ],
    [
        816050,
        1357674000
    ],
    [
        816040,
        1354000000
    ],
    [
        816030,
        1354050000
    ],
    [
        816010,
        1350000000
    ],
    [
        816000,
        1317435000
    ],
    [
        815990,
        1289600000
    ],
    [
        815930,
        1265000000
    ],
    [
        815920,
        1249100394
    ],
    [
        815910,
        1236247925
    ],
    [
        815900,
        1237820081
    ],
    [
        815890,
        1251530208
    ],
    [
        815870,
        1269000000
    ],
    [
        815860,
        1267204269
    ],
    [
        815850,
        1272893025
    ],
    [
        815820,
        1289600000
    ],
    [
        815810,
        1268699000
    ],
    [
        815760,
        1253000000
    ],
    [
        815740,
        1240011000
    ],
    [
        815700,
        1218560000
    ],
    [
        815690,
        1215187000
    ],
    [
        815660,
        1193473556
    ],
    [
        815590,
        1172720000
    ],
    [
        815540,
        1173424000
    ],
    [
        815490,
        1196499000
    ],
    [
        815460,
        1197573321
    ],
    [
        815430,
        1178530000
    ],
    [
        815420,
        1173041689
    ],
    [
        815410,
        1150500000
    ],
    [
        815400,
        1175428000
    ],
    [
        815390,
        1177000000
    ],
    [
        815350,
        1175428000
    ],
    [
        815320,
        1151000000
    ],
    [
        815300,
        1144000000
    ],
    [
        815290,
        1138650000
    ],
    [
        815260,
        1166925000
    ],
    [
        815220,
        1176000000
    ],
    [
        815190,
        1200355000
    ],
    [
        815150,
        1213000000
    ],
    [
        815130,
        1218560000
    ],
    [
        815120,
        1223025452
    ],
    [
        815100,
        1227652847
    ],
    [
        815090,
        1219000000
    ],
    [
        815080,
        1218520000
    ],
    [
        815070,
        1219000000
    ],
    [
        815060,
        1216000000
    ],
    [
        815050,
        1225740000
    ],
    [
        815040,
        1227603000
    ],
    [
        815030,
        1237220000
    ],
    [
        815010,
        1217720000
    ],
    [
        815000,
        1235290000
    ],
    [
        814980,
        1240000000
    ],
    [
        814970,
        1227460000
    ],
    [
        814960,
        1222528610
    ],
    [
        814950,
        1205034000
    ],
    [
        814940,
        1216380000
    ],
    [
        814930,
        1210990000
    ],
    [
        814910,
        1219120000
    ],
    [
        814900,
        1229400000
    ],
    [
        814870,
        1277667000
    ],
    [
        814860,
        1273132000
    ],
    [
        814850,
        1278000000
    ],
    [
        814830,
        1282463035
    ],
    [
        814820,
        1274889579
    ],
    [
        814810,
        1273832806
    ],
    [
        814800,
        1289600000
    ],
    [
        814780,
        1294031858
    ],
    [
        814770,
        1299485000
    ],
    [
        814760,
        1294450000
    ],
    [
        814750,
        1300000000
    ],
    [
        814730,
        1311000000
    ],
    [
        814720,
        1338710000
    ],
    [
        814710,
        1357252205
    ],
    [
        814700,
        1360090000
    ],
    [
        814680,
        1366000000
    ],
    [
        814660,
        1355050000
    ],
    [
        814650,
        1338710000
    ],
    [
        814630,
        1336000000
    ],
    [
        814610,
        1335000000
    ],
    [
        814600,
        1329844022
    ],
    [
        814580,
        1329413320
    ],
    [
        814570,
        1335000000
    ],
    [
        814550,
        1326405000
    ],
    [
        814520,
        1326000000
    ],
    [
        814480,
        1339372000
    ],
    [
        814460,
        1339245000
    ],
    [
        814220,
        1265000000
    ],
    [
        814190,
        1257353000
    ],
    [
        814150,
        1247000000
    ],
    [
        814140,
        1245595000
    ],
    [
        814130,
        1243738336
    ],
    [
        814070,
        1242000000
    ],
    [
        814050,
        1236320000
    ],
    [
        814020,
        1265000000
    ],
    [
        814000,
        1260000000
    ],
    [
        813990,
        1265000000
    ],
    [
        813980,
        1260350000
    ],
    [
        813970,
        1249585346
    ],
    [
        813960,
        1238179164
    ],
    [
        813940,
        1256060000
    ],
    [
        813930,
        1265000000
    ],
    [
        813890,
        1256060000
    ],
    [
        813880,
        1254000000
    ],
    [
        813870,
        1253370663
    ],
    [
        813860,
        1249008000
    ],
    [
        813850,
        1235340000
    ],
    [
        813830,
        1235159398
    ],
    [
        813820,
        1251260000
    ],
    [
        813810,
        1261980000
    ],
    [
        813800,
        1264864057
    ],
    [
        813790,
        1251561000
    ],
    [
        813780,
        1252450000
    ],
    [
        813750,
        1265000000
    ],
    [
        813740,
        1288610000
    ],
    [
        813700,
        1288600000
    ],
    [
        813690,
        1297187481
    ],
    [
        813680,
        1298700185
    ],
    [
        813670,
        1300000000
    ],
    [
        813660,
        1297942346
    ],
    [
        813650,
        1315623986
    ],
    [
        813640,
        1270170000
    ],
    [
        813620,
        1265000000
    ],
    [
        813590,
        1255721000
    ],
    [
        813580,
        1263000000
    ],
    [
        813570,
        1258211217
    ],
    [
        813560,
        1255000000
    ],
    [
        813550,
        1264662084
    ],
    [
        813540,
        1246550000
    ],
    [
        813530,
        1243100000
    ],
    [
        813520,
        1243470000
    ],
    [
        813510,
        1243100000
    ],
    [
        813500,
        1240341186
    ],
    [
        813490,
        1243100000
    ],
    [
        813480,
        1229000000
    ],
    [
        813460,
        1222846670
    ],
    [
        813450,
        1223116670
    ],
    [
        813430,
        1229780000
    ],
    [
        813420,
        1220871161
    ],
    [
        813410,
        1216958500
    ],
    [
        813400,
        1217726301
    ],
    [
        813390,
        1206015317
    ],
    [
        813380,
        1204897002
    ],
    [
        813370,
        1198095000
    ],
    [
        813360,
        1209681000
    ],
    [
        813310,
        1228181000
    ],
    [
        813300,
        1246284500
    ],
    [
        813270,
        1265284500
    ],
    [
        813260,
        1275049000
    ],
    [
        813250,
        1281258215
    ],
    [
        813230,
        1282049000
    ],
    [
        813220,
        1281734570
    ],
    [
        813200,
        1274873604
    ],
    [
        813190,
        1271701271
    ],
    [
        813170,
        1270110160
    ],
    [
        813160,
        1277612037
    ],
    [
        813140,
        1282254073
    ],
    [
        813130,
        1288766730
    ],
    [
        813110,
        1298272031
    ],
    [
        813100,
        1304252000
    ],
    [
        813080,
        1296042000
    ],
    [
        813040,
        1286822000
    ],
    [
        813030,
        1279228500
    ],
    [
        813020,
        1276345302
    ],
    [
        813010,
        1278387256
    ],
    [
        812990,
        1279257117
    ],
    [
        812980,
        1277448552
    ],
    [
        812960,
        1269545208
    ],
    [
        812930,
        1265494052
    ],
    [
        812920,
        1263290000
    ],
    [
        812900,
        1284466500
    ],
    [
        812890,
        1289466500
    ],
    [
        812880,
        1292159561
    ],
    [
        812870,
        1296640500
    ],
    [
        812860,
        1298791909
    ],
    [
        812850,
        1301640500
    ],
    [
        812840,
        1305895000
    ],
    [
        812820,
        1304042986
    ],
    [
        812800,
        1299437000
    ],
    [
        812790,
        1295795405
    ],
    [
        812780,
        1292677250
    ],
    [
        812760,
        1306373331
    ],
    [
        812750,
        1317289500
    ],
    [
        812740,
        1318264500
    ],
    [
        812730,
        1318687775
    ],
    [
        812720,
        1309792968
    ],
    [
        812710,
        1306757293
    ],
    [
        812690,
        1319662500
    ],
    [
        812680,
        1322387676
    ],
    [
        812670,
        1320765548
    ],
    [
        812660,
        1323047708
    ],
    [
        812650,
        1316260409
    ],
    [
        812630,
        1318920157
    ],
    [
        812620,
        1318688599
    ],
    [
        812600,
        1329841686
    ],
    [
        812590,
        1330020000
    ],
    [
        812570,
        1330520000
    ],
    [
        812550,
        1325949000
    ],
    [
        812530,
        1330520000
    ],
    [
        812520,
        1331306361
    ],
    [
        812510,
        1330335861
    ],
    [
        812500,
        1327549500
    ],
    [
        812490,
        1331634500
    ],
    [
        812480,
        1342440000
    ],
    [
        812470,
        1343052698
    ],
    [
        812460,
        1335704650
    ],
    [
        812450,
        1334500000
    ],
    [
        812440,
        1339485000
    ],
    [
        812420,
        1340185000
    ],
    [
        812410,
        1328065000
    ],
    [
        812380,
        1325685000
    ],
    [
        812370,
        1329475000
    ],
    [
        812350,
        1315000000
    ],
    [
        812330,
        1309500000
    ],
    [
        812300,
        1308903017
    ],
    [
        812290,
        1303720000
    ],
    [
        812240,
        1284587000
    ],
    [
        812220,
        1282211318
    ],
    [
        812200,
        1285424000
    ],
    [
        812190,
        1290000000
    ],
    [
        812180,
        1293986211
    ],
    [
        812150,
        1306000000
    ],
    [
        812140,
        1287930000
    ],
    [
        812080,
        1286000000
    ],
    [
        812070,
        1282340000
    ],
    [
        812060,
        1293780000
    ],
    [
        812050,
        1292700000
    ],
    [
        812040,
        1295000000
    ],
    [
        812030,
        1289979633
    ],
    [
        812010,
        1289283718
    ],
    [
        812000,
        1277880000
    ],
    [
        811990,
        1275606526
    ],
    [
        811980,
        1277980000
    ],
    [
        811970,
        1277277491
    ],
    [
        811960,
        1285158835
    ],
    [
        811920,
        1264146000
    ],
    [
        811910,
        1251831519
    ],
    [
        811890,
        1237000000
    ],
    [
        811820,
        1217000000
    ],
    [
        811810,
        1208468000
    ],
    [
        811800,
        1198887801
    ],
    [
        811790,
        1186000000
    ],
    [
        811780,
        1180845622
    ],
    [
        811770,
        1174738000
    ],
    [
        811760,
        1160449241
    ],
    [
        811750,
        1160860000
    ],
    [
        811740,
        1161313771
    ],
    [
        811710,
        1200217000
    ],
    [
        811690,
        1202760000
    ],
    [
        811680,
        1211230000
    ],
    [
        811650,
        1240000000
    ],
    [
        811640,
        1241000000
    ],
    [
        811620,
        1257322000
    ],
    [
        811610,
        1255631709
    ],
    [
        811600,
        1241000000
    ],
    [
        811590,
        1240600000
    ],
    [
        811570,
        1241000000
    ],
    [
        811560,
        1230930000
    ],
    [
        811540,
        1233337543
    ],
    [
        811530,
        1216384468
    ],
    [
        811520,
        1213227750
    ],
    [
        811390,
        1223110000
    ],
    [
        811380,
        1210000000
    ],
    [
        811360,
        1223110000
    ],
    [
        811340,
        1248000000
    ],
    [
        811330,
        1287000000
    ],
    [
        811320,
        1294650000
    ],
    [
        811290,
        1309500000
    ],
    [
        811270,
        1309710000
    ],
    [
        811260,
        1312050000
    ],
    [
        811250,
        1315161000
    ],
    [
        811240,
        1312050000
    ],
    [
        811230,
        1315161000
    ],
    [
        811220,
        1307320000
    ],
    [
        811210,
        1309500000
    ],
    [
        811200,
        1319140000
    ],
    [
        811190,
        1316880000
    ],
    [
        811180,
        1312770000
    ],
    [
        811170,
        1324840000
    ],
    [
        811150,
        1333000000
    ],
    [
        811130,
        1330047764
    ],
    [
        811120,
        1330000000
    ],
    [
        811110,
        1332000000
    ],
    [
        811100,
        1323033718
    ],
    [
        811090,
        1324390000
    ],
    [
        811080,
        1323646086
    ],
    [
        811070,
        1313935422
    ],
    [
        811060,
        1309500000
    ],
    [
        811040,
        1317000000
    ],
    [
        811030,
        1311240000
    ],
    [
        811020,
        1309500000
    ],
    [
        811010,
        1314980000
    ],
    [
        811000,
        1310000000
    ],
    [
        810990,
        1315010000
    ],
    [
        810980,
        1315020000
    ],
    [
        810970,
        1308500000
    ],
    [
        810960,
        1304600000
    ],
    [
        810950,
        1290771218
    ],
    [
        810940,
        1299166092
    ],
    [
        810930,
        1300000000
    ],
    [
        810920,
        1299166092
    ],
    [
        810900,
        1300000000
    ],
    [
        810890,
        1297210000
    ],
    [
        810880,
        1309970000
    ],
    [
        810870,
        1311630489
    ],
    [
        810860,
        1312000000
    ],
    [
        810850,
        1299990000
    ],
    [
        810840,
        1280000000
    ],
    [
        810830,
        1277570000
    ],
    [
        810820,
        1285698508
    ],
    [
        810810,
        1308200000
    ],
    [
        810800,
        1318618083
    ],
    [
        810050,
        1531415908
    ],
    [
        810040,
        1530956000
    ],
    [
        810030,
        1529546547
    ],
    [
        810020,
        1525440547
    ],
    [
        810010,
        1538444957
    ],
    [
        810000,
        1535874731
    ],
    [
        809980,
        1524862292
    ],
    [
        809970,
        1532623283
    ],
    [
        809940,
        1533663000
    ],
    [
        809930,
        1523585642
    ],
    [
        809910,
        1532537816
    ],
    [
        809890,
        1536415269
    ],
    [
        809880,
        1546159500
    ],
    [
        809860,
        1547270969
    ],
    [
        809850,
        1545468474
    ],
    [
        809840,
        1566777012
    ],
    [
        809830,
        1593814500
    ],
    [
        809820,
        1429054132
    ],
    [
        809800,
        1431314500
    ],
    [
        809730,
        1349601500
    ],
    [
        809720,
        1336356000
    ],
    [
        809710,
        1330503038
    ],
    [
        809690,
        1325003169
    ],
    [
        809680,
        1329960000
    ],
    [
        809670,
        1332770000
    ],
    [
        809660,
        1334500000
    ],
    [
        809640,
        1330417500
    ],
    [
        809630,
        1327370000
    ],
    [
        809590,
        1330417500
    ],
    [
        809550,
        1325854000
    ],
    [
        809540,
        1323935000
    ],
    [
        809530,
        1325215000
    ],
    [
        809470,
        1305878500
    ],
    [
        809460,
        1302280000
    ],
    [
        809430,
        1258527500
    ],
    [
        809400,
        1241527500
    ],
    [
        809380,
        1241162118
    ],
    [
        809370,
        1241585156
    ],
    [
        809320,
        1242840000
    ],
    [
        809270,
        1226386000
    ],
    [
        809260,
        1220895861
    ],
    [
        809240,
        1216964812
    ],
    [
        809200,
        1199468000
    ],
    [
        809190,
        1186371245
    ],
    [
        809180,
        1165984249
    ],
    [
        809150,
        1164366401
    ],
    [
        809140,
        1170690313
    ],
    [
        809120,
        1168830159
    ],
    [
        809100,
        1160449909
    ],
    [
        809090,
        1151005992
    ],
    [
        809080,
        1140212597
    ],
    [
        809070,
        1137110333
    ],
    [
        809060,
        1131480676
    ],
    [
        809000,
        1161928000
    ],
    [
        808990,
        1162641671
    ],
    [
        808970,
        1163913363
    ],
    [
        808960,
        1160217808
    ],
    [
        808940,
        1158584322
    ],
    [
        808930,
        1151885613
    ],
    [
        808920,
        1148949660
    ],
    [
        808910,
        1139372873
    ],
    [
        808900,
        1138999539
    ],
    [
        808890,
        1133334248
    ],
    [
        808870,
        1138685279
    ],
    [
        808860,
        1144496967
    ],
    [
        808850,
        1172073959
    ],
    [
        808840,
        1171538382
    ],
    [
        808830,
        1165419754
    ],
    [
        808820,
        1166437000
    ],
    [
        808800,
        1180077608
    ],
    [
        808790,
        1181223156
    ],
    [
        808780,
        1182518397
    ],
    [
        808760,
        1198974589
    ],
    [
        808750,
        1201962000
    ],
    [
        808740,
        1198963480
    ],
    [
        808730,
        1188653780
    ],
    [
        808720,
        1191791448
    ],
    [
        808710,
        1188424948
    ],
    [
        808700,
        1179899621
    ],
    [
        808680,
        1169433821
    ],
    [
        808660,
        1180569707
    ],
    [
        808640,
        1179293454
    ],
    [
        808630,
        1171843463
    ],
    [
        808620,
        1176245109
    ],
    [
        808600,
        1159436500
    ],
    [
        808590,
        1166541093
    ],
    [
        808580,
        1193717563
    ],
    [
        808570,
        1187591319
    ],
    [
        808560,
        1193821494
    ],
    [
        808550,
        1216679337
    ],
    [
        808530,
        1218085500
    ],
    [
        808520,
        1222127058
    ],
    [
        808510,
        1176993702
    ],
    [
        808500,
        1099565000
    ],
    [
        808490,
        1246715500
    ],
    [
        808480,
        1275715500
    ],
    [
        808470,
        1347585500
    ],
    [
        808460,
        1414685437
    ],
    [
        808450,
        1424676000
    ],
    [
        808440,
        1419701000
    ],
    [
        808430,
        1417441000
    ],
    [
        808420,
        1430312511
    ],
    [
        808410,
        1425837511
    ],
    [
        808400,
        1421543511
    ],
    [
        808390,
        1445050000
    ],
    [
        808380,
        1447134586
    ],
    [
        808370,
        1457005711
    ],
    [
        808360,
        1460495711
    ],
    [
        808350,
        1457144000
    ],
    [
        808340,
        1456216011
    ],
    [
        808330,
        1456572011
    ],
    [
        808290,
        1490470767
    ],
    [
        808280,
        1492027854
    ],
    [
        808270,
        1515912960
    ],
    [
        808260,
        1528925000
    ],
    [
        808250,
        1529141000
    ],
    [
        808240,
        1526356000
    ],
    [
        808060,
        1492000000
    ],
    [
        808000,
        1491318000
    ],
    [
        807980,
        1492000000
    ],
    [
        807970,
        1484000000
    ],
    [
        807960,
        1487760589
    ],
    [
        807950,
        1487990000
    ],
    [
        807940,
        1492399000
    ],
    [
        807910,
        1484000000
    ],
    [
        807900,
        1478933308
    ],
    [
        807890,
        1476819975
    ],
    [
        807880,
        1471600000
    ],
    [
        807870,
        1480900000
    ],
    [
        807860,
        1484000000
    ],
    [
        807850,
        1477681000
    ],
    [
        807840,
        1470276291
    ],
    [
        807810,
        1471600000
    ],
    [
        807780,
        1484000000
    ],
    [
        807770,
        1499814000
    ],
    [
        807750,
        1503030000
    ],
    [
        807730,
        1512185002
    ],
    [
        807700,
        1513043000
    ],
    [
        807690,
        1512490000
    ],
    [
        807670,
        1504000000
    ],
    [
        807660,
        1492681000
    ],
    [
        807640,
        1485000000
    ],
    [
        807620,
        1484820000
    ],
    [
        807580,
        1484000000
    ],
    [
        807550,
        1484272000
    ],
    [
        807500,
        1484820000
    ],
    [
        807470,
        1485000000
    ],
    [
        807460,
        1518000000
    ],
    [
        807450,
        1513266000
    ],
    [
        807350,
        1495000000
    ],
    [
        807310,
        1499220000
    ],
    [
        807080,
        1484000000
    ],
    [
        807070,
        1479730000
    ],
    [
        807060,
        1479740000
    ],
    [
        807050,
        1481660000
    ],
    [
        807040,
        1475310000
    ],
    [
        807030,
        1484000000
    ],
    [
        807020,
        1483061646
    ],
    [
        807010,
        1483880000
    ],
    [
        807000,
        1480794413
    ],
    [
        806990,
        1494000000
    ],
    [
        806980,
        1483287711
    ],
    [
        806970,
        1483897609
    ],
    [
        806950,
        1477231000
    ],
    [
        806940,
        1474000000
    ],
    [
        806930,
        1472000000
    ],
    [
        806920,
        1470293701
    ],
    [
        806890,
        1471620000
    ],
    [
        806880,
        1470000000
    ],
    [
        806870,
        1470319584
    ],
    [
        806860,
        1473095000
    ],
    [
        806850,
        1471170674
    ],
    [
        806840,
        1473095000
    ],
    [
        806830,
        1474000000
    ],
    [
        806820,
        1467000000
    ],
    [
        806810,
        1464620000
    ],
    [
        806800,
        1460000000
    ],
    [
        806790,
        1460690000
    ],
    [
        806760,
        1467000000
    ],
    [
        806720,
        1467190000
    ],
    [
        806710,
        1465500958
    ],
    [
        806700,
        1460690000
    ],
    [
        806690,
        1459440000
    ],
    [
        806680,
        1454744000
    ],
    [
        806670,
        1461920000
    ],
    [
        806660,
        1467190000
    ],
    [
        806650,
        1457857000
    ],
    [
        806640,
        1452180000
    ],
    [
        806580,
        1446000000
    ],
    [
        806570,
        1471000000
    ],
    [
        806560,
        1454335107
    ],
    [
        806550,
        1426660000
    ],
    [
        806540,
        1405853000
    ],
    [
        806520,
        1446000000
    ],
    [
        806490,
        1454260000
    ],
    [
        806480,
        1456961000
    ],
    [
        806470,
        1471000000
    ],
    [
        806410,
        1479000000
    ],
    [
        806370,
        1484000000
    ],
    [
        806280,
        1485010000
    ],
    [
        806250,
        1487591000
    ],
    [
        806240,
        1488648585
    ],
    [
        806230,
        1497990000
    ],
    [
        806220,
        1507685807
    ],
    [
        806200,
        1505380870
    ],
    [
        806180,
        1505142232
    ],
    [
        806170,
        1507835540
    ],
    [
        806130,
        1498673000
    ],
    [
        806060,
        1497990000
    ],
    [
        806050,
        1485713000
    ],
    [
        806030,
        1488300697
    ],
    [
        805990,
        1498262569
    ],
    [
        805960,
        1501000000
    ],
    [
        805940,
        1497990000
    ],
    [
        805910,
        1497251000
    ],
    [
        805880,
        1495000000
    ],
    [
        805860,
        1495247000
    ],
    [
        805850,
        1493000000
    ],
    [
        805840,
        1494000000
    ],
    [
        805830,
        1495904046
    ],
    [
        805820,
        1498090000
    ],
    [
        805810,
        1498319085
    ],
    [
        805790,
        1515000000
    ],
    [
        805760,
        1516064000
    ],
    [
        805740,
        1520219793
    ],
    [
        805700,
        1526580000
    ],
    [
        805690,
        1536000000
    ],
    [
        805630,
        1535000000
    ],
    [
        805620,
        1534000000
    ],
    [
        805550,
        1536000000
    ],
    [
        805510,
        1526580000
    ],
    [
        805490,
        1525000000
    ],
    [
        805470,
        1523826000
    ],
    [
        805450,
        1522000000
    ],
    [
        805440,
        1516143886
    ],
    [
        805430,
        1515000000
    ],
    [
        805420,
        1518210000
    ],
    [
        805410,
        1518180000
    ],
    [
        805400,
        1518622747
    ],
    [
        805390,
        1518000000
    ],
    [
        805380,
        1518180000
    ],
    [
        805370,
        1518000000
    ],
    [
        805360,
        1530489000
    ],
    [
        805350,
        1540307022
    ],
    [
        805340,
        1539000000
    ],
    [
        805330,
        1533930000
    ],
    [
        805320,
        1539000000
    ],
    [
        805280,
        1545913000
    ],
    [
        805260,
        1548178062
    ],
    [
        805250,
        1547337706
    ],
    [
        805240,
        1543700000
    ],
    [
        805230,
        1552975639
    ],
    [
        805160,
        1534000000
    ],
    [
        805120,
        1530890000
    ],
    [
        805100,
        1529000000
    ],
    [
        805090,
        1531651095
    ],
    [
        805070,
        1526984005
    ],
    [
        805060,
        1525147000
    ],
    [
        805050,
        1526620000
    ],
    [
        805040,
        1528771852
    ],
    [
        805030,
        1535450000
    ],
    [
        804990,
        1531810000
    ],
    [
        804960,
        1526810000
    ],
    [
        804940,
        1522385000
    ],
    [
        804920,
        1516301000
    ],
    [
        804900,
        1515129815
    ],
    [
        804870,
        1501166000
    ],
    [
        804860,
        1497349159
    ],
    [
        804830,
        1496166000
    ],
    [
        804810,
        1496108000
    ],
    [
        804770,
        1502108000
    ],
    [
        804760,
        1505676297
    ],
    [
        804750,
        1507187362
    ],
    [
        804740,
        1508187362
    ],
    [
        804720,
        1505765500
    ],
    [
        804710,
        1508767016
    ],
    [
        804680,
        1511452174
    ],
    [
        804660,
        1517000000
    ],
    [
        804650,
        1514847832
    ],
    [
        804640,
        1512003000
    ],
    [
        804610,
        1512678745
    ],
    [
        804590,
        1496257452
    ],
    [
        804570,
        1496968470
    ],
    [
        804560,
        1493560363
    ],
    [
        804550,
        1494720781
    ],
    [
        804540,
        1491796281
    ],
    [
        804530,
        1488488334
    ],
    [
        804520,
        1487061410
    ],
    [
        804510,
        1494406410
    ],
    [
        804500,
        1495980188
    ],
    [
        804470,
        1508420500
    ],
    [
        804450,
        1509606000
    ],
    [
        804440,
        1512237163
    ],
    [
        804430,
        1515500000
    ],
    [
        804420,
        1516317000
    ],
    [
        804410,
        1518952000
    ],
    [
        804400,
        1528766927
    ],
    [
        804390,
        1531460500
    ],
    [
        804380,
        1527085770
    ],
    [
        804370,
        1532480130
    ],
    [
        804360,
        1534602530
    ],
    [
        804350,
        1539704500
    ],
    [
        804340,
        1536180000
    ],
    [
        804330,
        1539185000
    ],
    [
        804320,
        1539704500
    ],
    [
        804300,
        1534745000
    ],
    [
        804290,
        1533155000
    ],
    [
        804280,
        1528725103
    ],
    [
        804270,
        1529495000
    ],
    [
        804260,
        1539000000
    ],
    [
        804250,
        1532180000
    ],
    [
        804180,
        1525025000
    ],
    [
        804170,
        1523419978
    ],
    [
        804160,
        1525050000
    ],
    [
        804130,
        1524000000
    ],
    [
        804120,
        1515159000
    ],
    [
        804110,
        1517902753
    ],
    [
        804100,
        1522093753
    ],
    [
        804090,
        1524000000
    ],
    [
        804060,
        1497073500
    ],
    [
        804030,
        1487500000
    ],
    [
        804020,
        1471000000
    ],
    [
        804000,
        1470319700
    ],
    [
        803990,
        1468538000
    ],
    [
        803980,
        1466518500
    ],
    [
        803970,
        1461018500
    ],
    [
        803960,
        1455335000
    ],
    [
        803940,
        1454360000
    ],
    [
        803920,
        1454000000
    ],
    [
        803910,
        1455335000
    ],
    [
        803900,
        1457594052
    ],
    [
        803890,
        1458789052
    ],
    [
        803880,
        1452178029
    ],
    [
        803870,
        1458335000
    ],
    [
        803860,
        1463265339
    ],
    [
        803850,
        1475813000
    ],
    [
        803840,
        1486485093
    ],
    [
        803830,
        1487331672
    ],
    [
        803820,
        1476896881
    ],
    [
        803790,
        1460000000
    ],
    [
        803780,
        1460930795
    ],
    [
        803770,
        1460220612
    ],
    [
        803760,
        1457500000
    ],
    [
        803750,
        1464536675
    ],
    [
        803740,
        1457500000
    ],
    [
        803730,
        1452285511
    ],
    [
        803720,
        1485530000
    ],
    [
        803710,
        1470263695
    ],
    [
        803700,
        1512120000
    ],
    [
        803690,
        1520020000
    ],
    [
        803660,
        1528000000
    ],
    [
        803650,
        1545590000
    ],
    [
        803640,
        1559900000
    ],
    [
        803630,
        1542420000
    ],
    [
        803620,
        1561959000
    ],
    [
        803610,
        1548051478
    ],
    [
        803600,
        1538613000
    ],
    [
        803580,
        1556985000
    ],
    [
        803570,
        1557645000
    ],
    [
        803560,
        1556305547
    ],
    [
        803550,
        1561237295
    ],
    [
        803540,
        1561867341
    ],
    [
        803530,
        1564000000
    ],
    [
        803510,
        1545695477
    ],
    [
        803500,
        1542000000
    ],
    [
        803490,
        1539187770
    ],
    [
        803480,
        1542000000
    ],
    [
        803470,
        1542401103
    ],
    [
        803460,
        1548150000
    ],
    [
        803450,
        1549649500
    ],
    [
        803440,
        1552243082
    ],
    [
        803430,
        1551849492
    ],
    [
        803420,
        1550199992
    ],
    [
        803400,
        1548963915
    ],
    [
        803390,
        1551963915
    ],
    [
        803380,
        1553285000
    ],
    [
        803360,
        1546151000
    ],
    [
        803350,
        1555500000
    ],
    [
        803340,
        1568402832
    ],
    [
        803330,
        1562682832
    ],
    [
        803320,
        1574650000
    ],
    [
        803310,
        1578315000
    ],
    [
        803290,
        1578500000
    ],
    [
        803280,
        1577887500
    ],
    [
        803270,
        1576000000
    ],
    [
        803260,
        1574650000
    ],
    [
        803250,
        1578652500
    ],
    [
        803240,
        1578737500
    ],
    [
        803230,
        1580387500
    ],
    [
        803220,
        1581000000
    ],
    [
        803210,
        1584108000
    ],
    [
        803200,
        1583000000
    ],
    [
        803190,
        1581000000
    ],
    [
        803180,
        1582000000
    ],
    [
        803170,
        1584108000
    ],
    [
        803130,
        1586000000
    ],
    [
        803090,
        1594912000
    ],
    [
        803080,
        1602720000
    ],
    [
        803070,
        1602445000
    ],
    [
        803050,
        1603000000
    ],
    [
        803010,
        1602445000
    ],
    [
        802990,
        1603000000
    ],
    [
        802980,
        1608470000
    ],
    [
        802970,
        1608417000
    ],
    [
        802940,
        1609905000
    ],
    [
        802930,
        1610000000
    ],
    [
        802920,
        1610800000
    ],
    [
        802860,
        1610000000
    ],
    [
        802850,
        1614607000
    ],
    [
        802830,
        1616000000
    ],
    [
        802820,
        1614607000
    ],
    [
        802780,
        1608000000
    ],
    [
        802770,
        1607370000
    ],
    [
        802760,
        1603910000
    ],
    [
        802750,
        1606550000
    ],
    [
        802720,
        1601328500
    ],
    [
        802700,
        1606000000
    ],
    [
        802660,
        1608320500
    ],
    [
        802640,
        1600514500
    ],
    [
        802630,
        1594500000
    ],
    [
        802620,
        1594505000
    ],
    [
        802610,
        1595014500
    ],
    [
        802590,
        1595398000
    ],
    [
        802570,
        1589000000
    ],
    [
        802560,
        1588580000
    ],
    [
        802530,
        1593670000
    ],
    [
        802510,
        1612874000
    ],
    [
        802500,
        1603330000
    ],
    [
        802490,
        1612874000
    ],
    [
        802450,
        1606267000
    ],
    [
        802420,
        1600976000
    ],
    [
        802410,
        1606270000
    ],
    [
        802370,
        1615640000
    ],
    [
        802360,
        1621250000
    ],
    [
        802350,
        1625000000
    ],
    [
        802330,
        1609063000
    ],
    [
        802310,
        1600310000
    ],
    [
        802270,
        1585421000
    ],
    [
        802260,
        1579750000
    ],
    [
        802250,
        1573300000
    ],
    [
        802240,
        1590900000
    ],
    [
        802200,
        1571960000
    ],
    [
        802170,
        1583317000
    ],
    [
        802160,
        1586610000
    ],
    [
        802140,
        1590880000
    ],
    [
        802080,
        1585711000
    ],
    [
        802050,
        1570000000
    ],
    [
        801870,
        1613800000
    ],
    [
        801800,
        1616944000
    ],
    [
        801740,
        1619000000
    ],
    [
        801720,
        1614983000
    ],
    [
        801650,
        1613800000
    ],
    [
        801620,
        1615130000
    ],
    [
        801610,
        1614820000
    ],
    [
        801600,
        1627230000
    ],
    [
        801450,
        1630000000
    ],
    [
        801430,
        1625500000
    ],
    [
        801390,
        1625000000
    ],
    [
        801350,
        1624140000
    ],
    [
        801340,
        1627270000
    ],
    [
        801330,
        1626340000
    ],
    [
        801310,
        1625500000
    ],
    [
        801280,
        1625454000
    ],
    [
        801270,
        1625270000
    ],
    [
        801260,
        1625454000
    ],
    [
        801240,
        1625270000
    ],
    [
        801210,
        1625500000
    ],
    [
        801200,
        1622830000
    ],
    [
        801190,
        1626350000
    ],
    [
        801150,
        1622830000
    ],
    [
        801140,
        1614000000
    ],
    [
        801130,
        1613870000
    ],
    [
        801100,
        1618000000
    ],
    [
        801090,
        1614000000
    ],
    [
        801080,
        1618000000
    ],
    [
        801060,
        1623887000
    ],
    [
        801050,
        1626120000
    ],
    [
        801040,
        1623500000
    ],
    [
        801030,
        1625985000
    ],
    [
        801020,
        1625201500
    ],
    [
        801010,
        1629430000
    ],
    [
        801000,
        1627055000
    ],
    [
        800980,
        1629663000
    ],
    [
        800950,
        1633000000
    ],
    [
        800930,
        1641399000
    ],
    [
        800900,
        1655000000
    ],
    [
        800800,
        1656300000
    ],
    [
        800780,
        1655000000
    ],
    [
        800770,
        1655200000
    ],
    [
        800760,
        1644094000
    ],
    [
        800750,
        1649150000
    ],
    [
        800730,
        1651700000
    ],
    [
        800700,
        1668000000
    ],
    [
        800680,
        1678998000
    ],
    [
        800670,
        1690300000
    ],
    [
        800650,
        1699000000
    ],
    [
        800630,
        1702000000
    ],
    [
        800600,
        1717614000
    ],
    [
        800400,
        1733000000
    ],
    [
        800330,
        1725704000
    ],
    [
        800240,
        1728450000
    ],
    [
        800190,
        1722000000
    ],
    [
        800170,
        1716338000
    ],
    [
        800130,
        1716000000
    ],
    [
        800110,
        1710200000
    ],
    [
        799980,
        1699000000
    ],
    [
        799860,
        1691960000
    ],
    [
        799760,
        1690300000
    ],
    [
        799750,
        1674000000
    ],
    [
        799730,
        1657530000
    ],
    [
        799710,
        1655060000
    ],
    [
        799690,
        1645539000
    ],
    [
        799660,
        1667676000
    ],
    [
        799620,
        1688826000
    ],
    [
        799600,
        1688771000
    ],
    [
        799590,
        1692150000
    ],
    [
        796720,
        1687160000
    ],
    [
        796710,
        1680904500
    ],
    [
        796700,
        1683904500
    ],
    [
        796690,
        1676115000
    ],
    [
        796680,
        1683635000
    ],
    [
        796660,
        1677000000
    ],
    [
        796650,
        1679085000
    ],
    [
        796640,
        1675824000
    ],
    [
        796630,
        1680260000
    ],
    [
        796620,
        1681480000
    ],
    [
        796580,
        1686000000
    ],
    [
        796550,
        1693960000
    ],
    [
        796520,
        1710000000
    ],
    [
        796500,
        1715000000
    ],
    [
        796450,
        1699020000
    ],
    [
        796400,
        1714650000
    ],
    [
        796330,
        1715000000
    ],
    [
        796290,
        1714650000
    ],
    [
        796260,
        1700000000
    ],
    [
        796080,
        1701000000
    ],
    [
        796060,
        1705907000
    ],
    [
        796000,
        1714650000
    ],
    [
        795980,
        1715548000
    ],
    [
        795960,
        1732000000
    ],
    [
        795920,
        1739000000
    ],
    [
        795910,
        1742420000
    ],
    [
        795900,
        1757000000
    ],
    [
        795870,
        1740795000
    ],
    [
        795840,
        1739000000
    ],
    [
        795830,
        1736020000
    ],
    [
        795820,
        1736000000
    ],
    [
        795770,
        1732000000
    ],
    [
        795760,
        1726546000
    ],
    [
        795730,
        1698920000
    ],
    [
        795700,
        1697029000
    ],
    [
        795640,
        1726310000
    ],
    [
        795430,
        1732000000
    ],
    [
        795380,
        1739000000
    ],
    [
        795360,
        1749280000
    ],
    [
        795330,
        1763000000
    ],
    [
        795320,
        1763397000
    ],
    [
        795310,
        1763000000
    ],
    [
        795300,
        1765000000
    ],
    [
        795290,
        1763000000
    ],
    [
        795280,
        1758310000
    ],
    [
        795270,
        1748122000
    ],
    [
        795260,
        1758310000
    ],
    [
        795250,
        1750000000
    ],
    [
        795240,
        1758310000
    ],
    [
        795230,
        1750000000
    ],
    [
        795220,
        1755980000
    ],
    [
        795210,
        1756170000
    ],
    [
        795190,
        1753960000
    ],
    [
        795180,
        1761020000
    ],
    [
        795160,
        1761880000
    ],
    [
        795100,
        1748000000
    ],
    [
        795060,
        1733000000
    ],
    [
        795030,
        1731400000
    ],
    [
        794990,
        1721000000
    ],
    [
        794960,
        1731400000
    ],
    [
        794920,
        1732951000
    ],
    [
        794860,
        1731400000
    ],
    [
        794830,
        1739000000
    ],
    [
        794800,
        1755869000
    ],
    [
        794690,
        1731400000
    ],
    [
        794650,
        1726000000
    ],
    [
        794610,
        1701000000
    ],
    [
        794600,
        1700000000
    ],
    [
        794590,
        1688960000
    ],
    [
        794580,
        1680080000
    ],
    [
        794520,
        1697000000
    ],
    [
        794510,
        1705000000
    ],
    [
        794500,
        1708000000
    ],
    [
        794470,
        1713717000
    ],
    [
        794450,
        1712000000
    ],
    [
        794400,
        1707550000
    ],
    [
        794390,
        1712000000
    ],
    [
        794380,
        1719440000
    ],
    [
        794370,
        1714460000
    ],
    [
        794350,
        1724315000
    ],
    [
        794340,
        1726830000
    ],
    [
        794310,
        1730810000
    ],
    [
        794300,
        1722910000
    ],
    [
        794290,
        1730000000
    ],
    [
        794280,
        1718000000
    ],
    [
        794260,
        1716299000
    ],
    [
        794250,
        1715180000
    ],
    [
        794240,
        1716299000
    ],
    [
        794220,
        1693000000
    ],
    [
        794190,
        1688000000
    ],
    [
        794180,
        1679330000
    ],
    [
        794170,
        1688000000
    ],
    [
        794160,
        1690280000
    ],
    [
        794120,
        1709000000
    ],
    [
        794110,
        1725070000
    ],
    [
        794060,
        1740950000
    ],
    [
        794040,
        1757608000
    ],
    [
        794030,
        1740950000
    ],
    [
        794010,
        1740475000
    ],
    [
        794000,
        1740110000
    ],
    [
        793990,
        1740000000
    ],
    [
        793970,
        1770326000
    ],
    [
        793960,
        1787795000
    ],
    [
        793950,
        1785000000
    ],
    [
        793940,
        1797500000
    ],
    [
        793930,
        1814060000
    ],
    [
        793920,
        1809500000
    ],
    [
        793910,
        1823972500
    ],
    [
        793890,
        1797500000
    ],
    [
        793820,
        1780000000
    ],
    [
        793800,
        1767939000
    ],
    [
        793790,
        1763644000
    ],
    [
        793780,
        1760119000
    ],
    [
        793770,
        1776250000
    ],
    [
        793760,
        1781010000
    ],
    [
        793750,
        1765370000
    ],
    [
        793730,
        1801000000
    ],
    [
        793710,
        1801594500
    ],
    [
        793680,
        1822426500
    ],
    [
        793620,
        1874500000
    ],
    [
        793580,
        1902500000
    ],
    [
        793550,
        1927435000
    ],
    [
        793500,
        2001560000
    ],
    [
        793360,
        2019000000
    ],
    [
        793320,
        2032500000
    ],
    [
        793240,
        2001560000
    ],
    [
        793220,
        2010907500
    ],
    [
        793180,
        2001560000
    ],
    [
        793150,
        1985060000
    ],
    [
        793130,
        1970372000
    ],
    [
        793120,
        1969145000
    ],
    [
        793100,
        1975835000
    ],
    [
        793060,
        2014745000
    ],
    [
        793020,
        1956560000
    ],
    [
        793010,
        1898931000
    ],
    [
        793000,
        1866656000
    ],
    [
        792990,
        1866181000
    ],
    [
        792960,
        1923000000
    ],
    [
        792940,
        1923480500
    ],
    [
        792900,
        1927000000
    ],
    [
        792880,
        1924880000
    ],
    [
        792850,
        1878061000
    ],
    [
        792830,
        1871940000
    ],
    [
        792810,
        1868000000
    ],
    [
        792800,
        1843850000
    ],
    [
        792780,
        1845000000
    ],
    [
        792770,
        1860005000
    ],
    [
        792760,
        1865790000
    ],
    [
        792750,
        1877210000
    ],
    [
        792730,
        1891500000
    ],
    [
        792700,
        1901500000
    ],
    [
        792690,
        1957985000
    ],
    [
        792680,
        1956775000
    ],
    [
        792670,
        1925375000
    ],
    [
        792620,
        1925000000
    ],
    [
        792550,
        1909000000
    ],
    [
        792510,
        1840000000
    ],
    [
        792500,
        1836050000
    ],
    [
        792490,
        1817490000
    ],
    [
        792450,
        1791000000
    ],
    [
        792400,
        1581200000
    ],
    [
        792360,
        1559340000
    ],
    [
        791690,
        1535979000
    ],
    [
        791670,
        1530000000
    ],
    [
        791630,
        1528422000
    ],
    [
        791600,
        1524000000
    ],
    [
        791560,
        1513892000
    ],
    [
        791550,
        1515220000
    ],
    [
        791510,
        1524910000
    ],
    [
        791500,
        1525000000
    ],
    [
        791480,
        1532790000
    ],
    [
        791450,
        1551000000
    ],
    [
        791370,
        1559120000
    ],
    [
        791350,
        1551000000
    ],
    [
        791340,
        1558440000
    ],
    [
        791330,
        1548000000
    ],
    [
        791320,
        1553570000
    ],
    [
        791310,
        1548000000
    ],
    [
        791300,
        1550000000
    ],
    [
        791290,
        1549990000
    ],
    [
        791220,
        1575410000
    ],
    [
        791190,
        1569774000
    ],
    [
        791160,
        1569540000
    ],
    [
        791150,
        1575010000
    ],
    [
        791130,
        1581200000
    ],
    [
        791120,
        1589000000
    ],
    [
        791110,
        1592631000
    ],
    [
        791060,
        1593000000
    ],
    [
        791000,
        1598000000
    ],
    [
        790980,
        1607050000
    ],
    [
        790970,
        1618310000
    ],
    [
        790950,
        1622000000
    ],
    [
        790900,
        1624900000
    ],
    [
        790890,
        1622990000
    ],
    [
        790850,
        1622000000
    ],
    [
        790760,
        1632770000
    ],
    [
        790730,
        1641000000
    ],
    [
        790660,
        1644000000
    ],
    [
        790590,
        1649000000
    ],
    [
        790550,
        1637000000
    ],
    [
        790460,
        1631000000
    ],
    [
        790390,
        1639000000
    ],
    [
        790250,
        1625000000
    ],
    [
        790180,
        1626000000
    ],
    [
        790060,
        1663000000
    ],
    [
        790050,
        1660590000
    ],
    [
        790040,
        1654690000
    ],
    [
        789990,
        1636000000
    ],
    [
        789980,
        1618260000
    ],
    [
        789970,
        1623000000
    ],
    [
        789960,
        1623030000
    ],
    [
        789950,
        1629990000
    ],
    [
        789940,
        1624980000
    ],
    [
        789910,
        1653000000
    ],
    [
        789860,
        1663200000
    ],
    [
        789840,
        1692000000
    ],
    [
        789820,
        1694000000
    ],
    [
        789800,
        1698000000
    ],
    [
        789770,
        1697845000
    ],
    [
        789740,
        1698000000
    ],
    [
        789730,
        1696655000
    ],
    [
        789720,
        1692410000
    ],
    [
        789710,
        1694000000
    ],
    [
        789680,
        1671458500
    ],
    [
        789670,
        1664183500
    ],
    [
        789660,
        1665238500
    ],
    [
        789650,
        1669795000
    ],
    [
        789640,
        1673335000
    ],
    [
        789630,
        1657185000
    ],
    [
        789610,
        1655000000
    ],
    [
        789600,
        1663715000
    ],
    [
        789590,
        1664911000
    ],
    [
        789580,
        1657901500
    ],
    [
        789570,
        1655000000
    ],
    [
        789530,
        1666901500
    ],
    [
        789510,
        1680466500
    ],
    [
        789500,
        1683936500
    ],
    [
        789490,
        1688966500
    ],
    [
        789460,
        1696500000
    ],
    [
        789410,
        1704776000
    ],
    [
        789390,
        1699345000
    ],
    [
        789360,
        1697018000
    ],
    [
        789340,
        1702803000
    ],
    [
        789320,
        1707310000
    ],
    [
        789300,
        1725319000
    ],
    [
        789270,
        1734834000
    ],
    [
        789260,
        1740515000
    ],
    [
        789160,
        1758250000
    ],
    [
        789130,
        1755650500
    ],
    [
        789080,
        1745000000
    ],
    [
        789030,
        1752000000
    ],
    [
        789010,
        1761750000
    ],
    [
        788960,
        1781148500
    ],
    [
        788950,
        1783513000
    ],
    [
        788870,
        1777000000
    ],
    [
        788850,
        1805430000
    ],
    [
        788840,
        1807000000
    ],
    [
        788820,
        1776250000
    ],
    [
        788780,
        1769188500
    ],
    [
        788770,
        1761938500
    ],
    [
        788760,
        1776000000
    ],
    [
        788740,
        1776165000
    ],
    [
        788710,
        1757165000
    ],
    [
        788700,
        1757000000
    ],
    [
        788680,
        1749833000
    ],
    [
        788640,
        1744333000
    ],
    [
        788630,
        1736748000
    ],
    [
        788610,
        1738415000
    ],
    [
        788600,
        1758700000
    ],
    [
        788570,
        1760000000
    ],
    [
        788560,
        1717130500
    ],
    [
        788550,
        1707155500
    ],
    [
        788540,
        1679630500
    ],
    [
        788510,
        1676630500
    ],
    [
        788480,
        1643480500
    ],
    [
        788440,
        1642925500
    ],
    [
        788430,
        1638000000
    ],
    [
        788420,
        1642885000
    ],
    [
        788410,
        1585372000
    ],
    [
        788360,
        1535550000
    ],
    [
        788350,
        1537500000
    ],
    [
        788340,
        1537865000
    ],
    [
        788330,
        1543470000
    ],
    [
        788320,
        1545580000
    ],
    [
        788310,
        1548415000
    ],
    [
        788300,
        1549905500
    ],
    [
        788280,
        1545405500
    ],
    [
        788270,
        1541945000
    ],
    [
        788260,
        1545405500
    ],
    [
        788230,
        1533000000
    ],
    [
        788220,
        1545599000
    ],
    [
        788210,
        1549594000
    ],
    [
        788190,
        1545599000
    ],
    [
        788180,
        1565995000
    ],
    [
        788170,
        1561750000
    ],
    [
        788090,
        1594445000
    ],
    [
        788080,
        1605665000
    ],
    [
        788070,
        1608915000
    ],
    [
        788060,
        1613620000
    ],
    [
        788040,
        1585000000
    ],
    [
        788030,
        1580605000
    ],
    [
        788020,
        1594245000
    ],
    [
        788010,
        1603550000
    ],
    [
        788000,
        1603750000
    ],
    [
        787990,
        1613150000
    ],
    [
        787980,
        1621195000
    ],
    [
        787950,
        1636380000
    ],
    [
        787940,
        1649240000
    ],
    [
        787930,
        1658855000
    ],
    [
        787910,
        1687000000
    ],
    [
        787900,
        1687545000
    ],
    [
        787880,
        1688000000
    ],
    [
        787870,
        1673036000
    ],
    [
        787860,
        1664080000
    ],
    [
        787840,
        1633000000
    ],
    [
        787830,
        1615175000
    ],
    [
        787760,
        1612175000
    ],
    [
        787650,
        1608675000
    ],
    [
        787630,
        1602643500
    ],
    [
        787610,
        1572143500
    ],
    [
        787590,
        1545909500
    ],
    [
        787580,
        1550409500
    ],
    [
        787560,
        1580000000
    ],
    [
        787530,
        1606000000
    ],
    [
        787510,
        1562814000
    ],
    [
        787440,
        1506300000
    ],
    [
        787380,
        1529000000
    ],
    [
        787320,
        1517000000
    ],
    [
        787310,
        1517820000
    ],
    [
        787290,
        1539446500
    ],
    [
        787270,
        1540795000
    ],
    [
        787250,
        1543947000
    ],
    [
        787240,
        1525180000
    ],
    [
        787210,
        1530947000
    ],
    [
        787190,
        1522000000
    ],
    [
        787140,
        1404000000
    ],
    [
        787130,
        1407000000
    ],
    [
        787120,
        1401000000
    ],
    [
        787110,
        1403500000
    ],
    [
        787100,
        1402295000
    ],
    [
        787090,
        1407000000
    ],
    [
        787080,
        1407725000
    ],
    [
        787070,
        1412995000
    ],
    [
        787060,
        1412225000
    ],
    [
        787040,
        1416000000
    ],
    [
        787030,
        1412225000
    ],
    [
        787020,
        1408725000
    ],
    [
        786980,
        1343887500
    ],
    [
        786960,
        1328500000
    ],
    [
        786950,
        1329000000
    ],
    [
        786930,
        1325495000
    ],
    [
        786920,
        1324000000
    ],
    [
        786910,
        1333500000
    ],
    [
        786900,
        1331000000
    ],
    [
        786860,
        1353009000
    ],
    [
        786850,
        1363620000
    ],
    [
        786830,
        1356540000
    ],
    [
        786820,
        1372185000
    ],
    [
        786810,
        1381055000
    ],
    [
        786790,
        1375725000
    ],
    [
        786780,
        1389735000
    ],
    [
        786760,
        1395010000
    ],
    [
        786740,
        1393005000
    ],
    [
        786730,
        1364181500
    ],
    [
        786720,
        1324431500
    ],
    [
        786710,
        1319945000
    ],
    [
        786700,
        1294069500
    ],
    [
        786690,
        1282569500
    ],
    [
        786660,
        1282069500
    ],
    [
        786640,
        1283500000
    ],
    [
        786630,
        1281930000
    ],
    [
        786620,
        1284000000
    ],
    [
        786610,
        1295980000
    ],
    [
        786600,
        1306455500
    ],
    [
        786580,
        1288933000
    ],
    [
        786570,
        1276933000
    ],
    [
        786510,
        1273000000
    ],
    [
        786470,
        1282986000
    ],
    [
        786460,
        1293700000
    ],
    [
        786450,
        1291620000
    ],
    [
        786440,
        1291000000
    ],
    [
        786420,
        1284850000
    ],
    [
        786380,
        1285000000
    ],
    [
        786350,
        1294423000
    ],
    [
        786320,
        1295000000
    ],
    [
        786310,
        1296580000
    ],
    [
        786260,
        1326000000
    ],
    [
        786250,
        1334110000
    ],
    [
        786230,
        1354827000
    ],
    [
        786220,
        1355000000
    ],
    [
        786210,
        1358970000
    ],
    [
        786200,
        1376000000
    ],
    [
        786160,
        1381111000
    ],
    [
        786140,
        1385000000
    ],
    [
        786080,
        1386000000
    ],
    [
        785980,
        1399000000
    ],
    [
        785970,
        1403000000
    ],
    [
        785940,
        1414106000
    ],
    [
        785920,
        1419000000
    ],
    [
        785910,
        1452000000
    ],
    [
        785880,
        1456931000
    ],
    [
        785860,
        1457370000
    ],
    [
        785830,
        1452000000
    ],
    [
        785800,
        1379000000
    ],
    [
        785770,
        1357000000
    ],
    [
        785760,
        1345895000
    ],
    [
        785700,
        1338230000
    ],
    [
        785630,
        1334000000
    ],
    [
        785570,
        1302000000
    ],
    [
        785550,
        1276140000
    ],
    [
        785540,
        1264320000
    ],
    [
        785530,
        1300565000
    ],
    [
        785520,
        1302000000
    ],
    [
        785510,
        1294490000
    ],
    [
        785460,
        1275000000
    ],
    [
        785440,
        1262000000
    ],
    [
        785420,
        1228000000
    ],
    [
        785390,
        1213820000
    ],
    [
        785370,
        1205022000
    ],
    [
        785300,
        1198000000
    ],
    [
        785270,
        1186000000
    ],
    [
        785260,
        1185600000
    ],
    [
        785230,
        1185000000
    ],
    [
        785210,
        1170000000
    ],
    [
        785200,
        1150750000
    ],
    [
        785190,
        1170000000
    ],
    [
        785180,
        1179512000
    ],
    [
        785170,
        1175650000
    ],
    [
        785130,
        1170000000
    ],
    [
        785100,
        1162616000
    ],
    [
        784970,
        1081750000
    ],
    [
        784910,
        1075000000
    ],
    [
        784890,
        1057000000
    ],
    [
        784870,
        1051020000
    ],
    [
        784840,
        1048000000
    ],
    [
        784800,
        1042000000
    ],
    [
        784780,
        1051020000
    ],
    [
        784730,
        1052405000
    ],
    [
        784710,
        1065000000
    ],
    [
        784640,
        1067000000
    ],
    [
        784570,
        1064000000
    ],
    [
        784520,
        1067593000
    ],
    [
        784500,
        1079000000
    ],
    [
        784450,
        1076000000
    ],
    [
        784440,
        1073060000
    ],
    [
        784430,
        1076000000
    ],
    [
        784360,
        1083000000
    ],
    [
        784290,
        1086000000
    ],
    [
        784250,
        1088000000
    ],
    [
        784230,
        1086535000
    ],
    [
        784120,
        1066200000
    ],
    [
        784100,
        1058811000
    ],
    [
        784040,
        1057000000
    ],
    [
        783980,
        1051000000
    ],
    [
        783910,
        1051020000
    ],
    [
        783800,
        1041000000
    ],
    [
        783790,
        1044000000
    ],
    [
        783780,
        1042770000
    ],
    [
        783730,
        1041000000
    ],
    [
        783710,
        1034300000
    ],
    [
        783640,
        1019520000
    ],
    [
        783620,
        1013010000
    ],
    [
        783610,
        1016140000
    ],
    [
        783600,
        1008900000
    ],
    [
        783590,
        1011420000
    ],
    [
        783580,
        1001725000
    ],
    [
        783530,
        993000000
    ],
    [
        783500,
        989841000
    ],
    [
        783460,
        986000000
    ],
    [
        783440,
        984400000
    ],
    [
        783400,
        984255000
    ],
    [
        783380,
        982000000
    ],
    [
        783370,
        977400000
    ],
    [
        783340,
        975469000
    ],
    [
        783310,
        975000000
    ],
    [
        783280,
        967645000
    ],
    [
        783270,
        966430000
    ],
    [
        783250,
        962000000
    ],
    [
        783240,
        956782000
    ],
    [
        783230,
        958282000
    ],
    [
        783210,
        956782000
    ],
    [
        783190,
        954005000
    ],
    [
        783180,
        947315000
    ],
    [
        783170,
        948505000
    ],
    [
        783160,
        946070000
    ],
    [
        783150,
        948505000
    ],
    [
        783130,
        945210000
    ],
    [
        783120,
        951435500
    ],
    [
        783100,
        951000000
    ],
    [
        783090,
        951435500
    ],
    [
        783080,
        951100000
    ],
    [
        783070,
        952108000
    ],
    [
        783030,
        950108000
    ],
    [
        783020,
        951030000
    ],
    [
        783010,
        948500000
    ],
    [
        782970,
        970505000
    ],
    [
        782950,
        979200000
    ],
    [
        782910,
        980162500
    ],
    [
        782900,
        977715000
    ],
    [
        782890,
        980260000
    ],
    [
        782860,
        974353000
    ],
    [
        782850,
        973970000
    ],
    [
        782830,
        972500000
    ],
    [
        782820,
        962984000
    ],
    [
        782810,
        962019000
    ],
    [
        782800,
        960780000
    ],
    [
        782790,
        965000000
    ],
    [
        782750,
        966000000
    ],
    [
        782740,
        966255500
    ],
    [
        782730,
        970405000
    ],
    [
        782720,
        968500000
    ],
    [
        782700,
        996481000
    ],
    [
        782690,
        996890000
    ],
    [
        782670,
        999500000
    ],
    [
        782660,
        1000340500
    ],
    [
        782650,
        1000135000
    ],
    [
        782610,
        1002840500
    ],
    [
        782590,
        1006973000
    ],
    [
        782580,
        1007973000
    ],
    [
        782570,
        1008973000
    ],
    [
        782560,
        1007973000
    ],
    [
        782540,
        1006551500
    ],
    [
        782530,
        1005051500
    ],
    [
        782520,
        1003000000
    ],
    [
        782510,
        1001590000
    ],
    [
        782490,
        1001292000
    ],
    [
        782460,
        1001702000
    ],
    [
        782450,
        1003885000
    ],
    [
        782440,
        1003985000
    ],
    [
        782420,
        1010385000
    ],
    [
        782410,
        1013780000
    ],
    [
        782400,
        1011160000
    ],
    [
        782390,
        1016184500
    ],
    [
        782380,
        1011409500
    ],
    [
        782370,
        1016029500
    ],
    [
        782360,
        1017819500
    ],
    [
        782350,
        1025120000
    ],
    [
        782340,
        1022000000
    ],
    [
        782330,
        1012444500
    ],
    [
        782270,
        1004616000
    ],
    [
        782260,
        997040000
    ],
    [
        782250,
        999975000
    ],
    [
        782240,
        999611500
    ],
    [
        782230,
        999010000
    ],
    [
        782210,
        995500000
    ],
    [
        782200,
        994070000
    ],
    [
        782180,
        993451500
    ],
    [
        782170,
        989910000
    ],
    [
        782160,
        992000000
    ],
    [
        782150,
        989675000
    ],
    [
        782140,
        992000000
    ],
    [
        782100,
        1003583500
    ],
    [
        782090,
        1002265500
    ],
    [
        782070,
        1000305500
    ],
    [
        782060,
        1005775000
    ],
    [
        782050,
        1005765000
    ],
    [
        782030,
        1004425500
    ],
    [
        782010,
        1007500000
    ],
    [
        781960,
        1010134000
    ],
    [
        781940,
        1018000000
    ],
    [
        781810,
        1015500000
    ],
    [
        781760,
        1015000000
    ],
    [
        781740,
        1012663000
    ],
    [
        781710,
        1012000000
    ],
    [
        781680,
        1014000000
    ],
    [
        781650,
        1022590000
    ],
    [
        781630,
        1020977500
    ],
    [
        781590,
        1023567500
    ],
    [
        781560,
        1021835000
    ],
    [
        781520,
        1012000000
    ],
    [
        781500,
        1011664500
    ],
    [
        781460,
        1013664500
    ],
    [
        781430,
        1008918000
    ],
    [
        781400,
        1003918000
    ],
    [
        781370,
        1004310000
    ],
    [
        781320,
        1005310000
    ],
    [
        781300,
        1007000000
    ],
    [
        781250,
        1014000000
    ],
    [
        781240,
        1023933000
    ],
    [
        781220,
        1024155000
    ],
    [
        781210,
        1027455000
    ],
    [
        781200,
        1029865000
    ],
    [
        781190,
        1026361000
    ],
    [
        781180,
        1028224000
    ],
    [
        781150,
        1027859000
    ],
    [
        781110,
        1029000000
    ],
    [
        781100,
        1027708000
    ],
    [
        781090,
        1029000000
    ],
    [
        781080,
        1028410000
    ],
    [
        781050,
        1027708000
    ],
    [
        780960,
        1043500000
    ],
    [
        780950,
        1047210000
    ],
    [
        780920,
        1044220000
    ],
    [
        780900,
        1048000000
    ],
    [
        780890,
        1046680000
    ],
    [
        780780,
        1013461714
    ],
    [
        780760,
        1000010000
    ],
    [
        780730,
        994000000
    ],
    [
        780680,
        991750000
    ],
    [
        780660,
        989403000
    ],
    [
        780650,
        1011064000
    ],
    [
        780620,
        1013461714
    ],
    [
        780590,
        1015000000
    ],
    [
        780580,
        1021141000
    ],
    [
        780520,
        1025000000
    ],
    [
        780510,
        1027350000
    ],
    [
        780490,
        1026000000
    ],
    [
        780480,
        1021020000
    ],
    [
        780460,
        1022570000
    ],
    [
        780450,
        1021080000
    ],
    [
        780420,
        1019811000
    ],
    [
        780390,
        1024000000
    ],
    [
        780340,
        1043960000
    ],
    [
        780330,
        1044310000
    ],
    [
        780320,
        1044000000
    ],
    [
        780280,
        1046000000
    ],
    [
        780240,
        1043960000
    ],
    [
        780230,
        1038000000
    ],
    [
        780220,
        1042910000
    ],
    [
        780210,
        1043960000
    ],
    [
        780200,
        1041590000
    ],
    [
        780190,
        1042357000
    ],
    [
        780130,
        1038000000
    ],
    [
        780120,
        1039810000
    ],
    [
        780110,
        1040000000
    ],
    [
        780100,
        1038000000
    ],
    [
        780090,
        1039180000
    ],
    [
        780080,
        1038000000
    ],
    [
        780060,
        1043960000
    ],
    [
        780000,
        1038000000
    ],
    [
        779990,
        1039120000
    ],
    [
        779970,
        1038000000
    ],
    [
        779960,
        1038950000
    ],
    [
        779950,
        1043000000
    ],
    [
        779930,
        1041219000
    ],
    [
        779860,
        1038000000
    ],
    [
        779820,
        1022000000
    ],
    [
        779800,
        1016370000
    ],
    [
        779780,
        1013461714
    ],
    [
        779770,
        1009460000
    ],
    [
        779690,
        1009801000
    ],
    [
        779650,
        1012618000
    ],
    [
        779640,
        1013461714
    ],
    [
        779630,
        1012618000
    ],
    [
        779620,
        1015187767
    ],
    [
        779610,
        1013566000
    ],
    [
        779580,
        1003000000
    ],
    [
        779570,
        1000883000
    ],
    [
        779560,
        993995000
    ],
    [
        779540,
        993506897
    ],
    [
        779520,
        988656635
    ],
    [
        779510,
        1000216500
    ],
    [
        779500,
        1000637361
    ],
    [
        779490,
        999590616
    ],
    [
        779480,
        1007000000
    ],
    [
        779380,
        999990000
    ],
    [
        779360,
        1005000000
    ],
    [
        779320,
        1007523000
    ],
    [
        779300,
        1010095500
    ],
    [
        779290,
        1011401134
    ],
    [
        779250,
        1009595500
    ],
    [
        779230,
        1009000000
    ],
    [
        779220,
        1008000000
    ],
    [
        779180,
        1005105000
    ],
    [
        779170,
        1008000000
    ],
    [
        779160,
        1010621500
    ],
    [
        779120,
        1013000000
    ],
    [
        779100,
        1015086500
    ],
    [
        779070,
        1033500000
    ],
    [
        779040,
        1037583500
    ],
    [
        779000,
        1045500000
    ],
    [
        778980,
        1050500000
    ],
    [
        778960,
        1053500000
    ],
    [
        778930,
        1055596500
    ],
    [
        778910,
        1050710198
    ],
    [
        778870,
        1057500000
    ],
    [
        778840,
        1069375000
    ],
    [
        778800,
        1082693500
    ],
    [
        778770,
        1083375000
    ],
    [
        778760,
        1079031218
    ],
    [
        778750,
        1073624572
    ],
    [
        778730,
        1072533500
    ],
    [
        778720,
        1081011000
    ],
    [
        778710,
        1082664773
    ],
    [
        778700,
        1083407050
    ],
    [
        778690,
        1082816251
    ],
    [
        778660,
        1084293791
    ],
    [
        778650,
        1088091336
    ],
    [
        778640,
        1093811948
    ],
    [
        778630,
        1095829682
    ],
    [
        778620,
        1108399241
    ],
    [
        778610,
        1110174357
    ],
    [
        778600,
        1109235012
    ],
    [
        778590,
        1112090500
    ],
    [
        778570,
        1112473366
    ],
    [
        778490,
        1109628195
    ],
    [
        778480,
        1109172142
    ],
    [
        778460,
        1112421001
    ],
    [
        778450,
        1116884500
    ],
    [
        778430,
        1113516150
    ],
    [
        778420,
        1111774889
    ],
    [
        778390,
        1094875000
    ],
    [
        778380,
        1074875000
    ],
    [
        778350,
        1063000000
    ],
    [
        778330,
        1053500000
    ],
    [
        778320,
        1051367023
    ],
    [
        778310,
        1046924904
    ],
    [
        778300,
        1052846500
    ],
    [
        778270,
        1054346500
    ],
    [
        778260,
        1052846500
    ],
    [
        778250,
        1054346500
    ],
    [
        778230,
        1049172440
    ],
    [
        778220,
        1053500000
    ],
    [
        778200,
        1051561424
    ],
    [
        778190,
        1047384000
    ],
    [
        778160,
        1053500000
    ],
    [
        778140,
        1060266500
    ],
    [
        778130,
        1060586219
    ],
    [
        778120,
        1060266500
    ],
    [
        778110,
        1073530919
    ],
    [
        778060,
        1072375000
    ],
    [
        778050,
        1066724866
    ],
    [
        778040,
        1073099866
    ],
    [
        778030,
        1066875000
    ],
    [
        778020,
        1072772097
    ],
    [
        778010,
        1073378082
    ],
    [
        778000,
        1092000000
    ],
    [
        777990,
        1087086243
    ],
    [
        777980,
        1108375578
    ],
    [
        777970,
        1109725848
    ],
    [
        777960,
        1113001188
    ],
    [
        777950,
        1088193500
    ],
    [
        777940,
        1085988500
    ],
    [
        777930,
        1102073500
    ],
    [
        777900,
        1050000000
    ],
    [
        777880,
        1027500000
    ],
    [
        777870,
        1010893121
    ],
    [
        777840,
        977000000
    ],
    [
        777830,
        974700000
    ],
    [
        777820,
        971700000
    ],
    [
        777810,
        971559587
    ],
    [
        777800,
        962218500
    ],
    [
        777790,
        961689855
    ],
    [
        777780,
        948000000
    ],
    [
        777740,
        936695000
    ],
    [
        777730,
        928198433
    ],
    [
        777720,
        930361851
    ],
    [
        777710,
        942004443
    ],
    [
        777700,
        941262024
    ],
    [
        777670,
        938354000
    ],
    [
        777630,
        937195000
    ],
    [
        777620,
        927888940
    ],
    [
        777610,
        934301494
    ],
    [
        777600,
        930833662
    ],
    [
        777580,
        932652562
    ],
    [
        777560,
        933000000
    ],
    [
        777540,
        929902000
    ],
    [
        777530,
        918863624
    ],
    [
        777510,
        929902000
    ],
    [
        777500,
        925915884
    ],
    [
        777480,
        928079434
    ],
    [
        777470,
        930874662
    ],
    [
        777460,
        926911168
    ],
    [
        777450,
        909029500
    ],
    [
        777440,
        903084409
    ],
    [
        777430,
        903626072
    ],
    [
        777410,
        902061756
    ],
    [
        777400,
        908248450
    ],
    [
        777390,
        908521491
    ],
    [
        777360,
        909000000
    ],
    [
        777340,
        893273000
    ],
    [
        777310,
        884000000
    ],
    [
        777240,
        877928000
    ],
    [
        777230,
        868025600
    ],
    [
        777220,
        869428000
    ],
    [
        777200,
        848445000
    ],
    [
        777190,
        839550500
    ],
    [
        777180,
        838095000
    ],
    [
        777160,
        828755128
    ],
    [
        777150,
        821109000
    ],
    [
        777140,
        815350000
    ],
    [
        777130,
        811448338
    ],
    [
        777110,
        809493329
    ],
    [
        777100,
        809055500
    ],
    [
        777090,
        811906500
    ],
    [
        777060,
        809000000
    ],
    [
        777050,
        814916198
    ],
    [
        777010,
        819396500
    ],
    [
        777000,
        823295000
    ],
    [
        776990,
        826422218
    ],
    [
        776980,
        826985000
    ],
    [
        776970,
        828000000
    ],
    [
        776960,
        827595587
    ],
    [
        776940,
        824213000
    ],
    [
        776930,
        822000000
    ],
    [
        776890,
        821430000
    ],
    [
        776870,
        828000000
    ],
    [
        776860,
        830956563
    ],
    [
        776850,
        834082939
    ],
    [
        776840,
        833306000
    ],
    [
        776810,
        829500000
    ],
    [
        776800,
        833500000
    ],
    [
        776790,
        833921575
    ],
    [
        776770,
        829921575
    ],
    [
        776760,
        827745000
    ],
    [
        776750,
        827000000
    ],
    [
        776730,
        825618000
    ],
    [
        776720,
        828323500
    ],
    [
        776710,
        829985500
    ],
    [
        776700,
        837275542
    ],
    [
        776690,
        841678500
    ],
    [
        776680,
        847800000
    ],
    [
        776670,
        850500000
    ],
    [
        776660,
        852996685
    ],
    [
        776650,
        851950000
    ],
    [
        776640,
        849000000
    ],
    [
        776630,
        841000000
    ],
    [
        776620,
        834090000
    ],
    [
        776610,
        830368068
    ],
    [
        776590,
        828419596
    ],
    [
        776580,
        827332894
    ],
    [
        776570,
        840871000
    ],
    [
        776560,
        838000000
    ],
    [
        776540,
        840000000
    ],
    [
        776520,
        815000000
    ],
    [
        776510,
        811000000
    ],
    [
        776500,
        808720000
    ],
    [
        776480,
        805816500
    ],
    [
        776470,
        809477846
    ],
    [
        776460,
        799561269
    ],
    [
        776450,
        810344440
    ],
    [
        776440,
        814962920
    ],
    [
        776430,
        809753884
    ],
    [
        776420,
        815615607
    ],
    [
        776410,
        811234500
    ],
    [
        776400,
        807102555
    ],
    [
        776390,
        815448416
    ],
    [
        776360,
        820514500
    ],
    [
        776350,
        812998435
    ],
    [
        776340,
        810138778
    ],
    [
        776330,
        809900941
    ],
    [
        776300,
        815091000
    ],
    [
        776290,
        807960215
    ],
    [
        776280,
        807836715
    ],
    [
        776270,
        814377500
    ],
    [
        776250,
        795500000
    ],
    [
        776240,
        795314601
    ],
    [
        776230,
        791310956
    ],
    [
        776220,
        794206422
    ],
    [
        776210,
        801500000
    ],
    [
        776200,
        803000000
    ],
    [
        776190,
        795661000
    ],
    [
        776180,
        793545446
    ],
    [
        776160,
        772500000
    ],
    [
        776130,
        759065000
    ],
    [
        776120,
        756440000
    ],
    [
        776110,
        752711000
    ],
    [
        776100,
        753651000
    ],
    [
        776060,
        728315000
    ],
    [
        776050,
        727654024
    ],
    [
        776040,
        730815000
    ],
    [
        776030,
        732912718
    ],
    [
        776020,
        732483500
    ],
    [
        776010,
        733170000
    ],
    [
        775990,
        735315000
    ],
    [
        775980,
        730115000
    ],
    [
        775950,
        730633000
    ],
    [
        775930,
        729500000
    ],
    [
        775910,
        713431500
    ],
    [
        775900,
        711285095
    ],
    [
        775890,
        708000000
    ],
    [
        775880,
        710825000
    ],
    [
        775870,
        708080524
    ],
    [
        775860,
        708000000
    ],
    [
        775850,
        710638885
    ],
    [
        775840,
        711000000
    ],
    [
        775830,
        712325000
    ],
    [
        775820,
        712522519
    ],
    [
        775810,
        710834016
    ],
    [
        775800,
        729455000
    ],
    [
        775790,
        729079401
    ],
    [
        775780,
        729983500
    ],
    [
        775770,
        727045618
    ],
    [
        775760,
        730915000
    ],
    [
        775740,
        718475000
    ],
    [
        775700,
        710000000
    ],
    [
        775690,
        704843980
    ],
    [
        775680,
        711885000
    ],
    [
        775670,
        705484675
    ],
    [
        775660,
        712000000
    ],
    [
        775650,
        705025000
    ],
    [
        775640,
        705850000
    ],
    [
        775630,
        707550000
    ],
    [
        775610,
        705084653
    ],
    [
        775580,
        717693000
    ],
    [
        775480,
        693660000
    ],
    [
        775460,
        687051000
    ],
    [
        775450,
        685237705
    ],
    [
        775440,
        687051000
    ],
    [
        775430,
        687436518
    ],
    [
        775420,
        686690000
    ],
    [
        775400,
        684274500
    ],
    [
        775390,
        684209500
    ],
    [
        775380,
        691058162
    ],
    [
        775370,
        688798868
    ],
    [
        775360,
        686995000
    ],
    [
        775350,
        686960313
    ],
    [
        775340,
        689000000
    ],
    [
        775330,
        692870000
    ],
    [
        775320,
        694005123
    ],
    [
        775300,
        697591968
    ],
    [
        775290,
        698987500
    ],
    [
        775280,
        691505000
    ],
    [
        775270,
        684280073
    ],
    [
        775260,
        689865073
    ],
    [
        775250,
        684517324
    ],
    [
        775240,
        679229881
    ],
    [
        775230,
        669500000
    ],
    [
        775220,
        667049000
    ],
    [
        775210,
        668659000
    ],
    [
        775200,
        673745218
    ],
    [
        775190,
        688495000
    ],
    [
        775160,
        686734000
    ],
    [
        775140,
        703005000
    ],
    [
        775130,
        704788068
    ],
    [
        775120,
        711210000
    ],
    [
        775110,
        711675000
    ],
    [
        775100,
        713171107
    ],
    [
        775090,
        713718000
    ],
    [
        775070,
        709220625
    ],
    [
        775030,
        704958500
    ],
    [
        775020,
        702000000
    ],
    [
        775010,
        703005000
    ],
    [
        775000,
        702516213
    ],
    [
        774970,
        697319969
    ],
    [
        774960,
        696248208
    ],
    [
        774950,
        694000000
    ],
    [
        774930,
        696141218
    ],
    [
        774920,
        696188404
    ],
    [
        774910,
        692201663
    ],
    [
        774900,
        694495000
    ],
    [
        774890,
        692679274
    ],
    [
        774880,
        694055000
    ],
    [
        774870,
        693507607
    ],
    [
        774860,
        693855648
    ],
    [
        774830,
        703125500
    ],
    [
        774820,
        704005000
    ],
    [
        774810,
        704912218
    ],
    [
        774800,
        706519456
    ],
    [
        774780,
        707019456
    ],
    [
        774770,
        712056576
    ],
    [
        774760,
        713004500
    ],
    [
        774750,
        710003492
    ],
    [
        774740,
        702205000
    ],
    [
        774730,
        701710000
    ],
    [
        774700,
        696202500
    ],
    [
        774690,
        692373107
    ],
    [
        774680,
        687703552
    ],
    [
        774670,
        687569009
    ],
    [
        774660,
        689000000
    ],
    [
        774650,
        691154174
    ],
    [
        774640,
        691940674
    ],
    [
        774630,
        693175385
    ],
    [
        774620,
        693369486
    ],
    [
        774610,
        689220000
    ],
    [
        774600,
        688430000
    ],
    [
        774590,
        687430000
    ],
    [
        774580,
        685944500
    ],
    [
        774570,
        686529920
    ],
    [
        774560,
        690420347
    ],
    [
        774550,
        692405347
    ],
    [
        774530,
        688419365
    ],
    [
        774520,
        689170500
    ],
    [
        774510,
        688002337
    ],
    [
        774500,
        683732718
    ],
    [
        774490,
        680223607
    ],
    [
        774480,
        678465500
    ],
    [
        774470,
        686705482
    ],
    [
        774460,
        678000000
    ],
    [
        774430,
        701764500
    ],
    [
        774420,
        705137713
    ],
    [
        774410,
        711160000
    ],
    [
        774400,
        711522500
    ],
    [
        774390,
        709665000
    ],
    [
        774380,
        709000000
    ],
    [
        774370,
        710820535
    ],
    [
        774360,
        712791761
    ],
    [
        774350,
        709000000
    ],
    [
        774330,
        709167905
    ],
    [
        774310,
        709143964
    ],
    [
        774300,
        709281167
    ],
    [
        774290,
        705885500
    ],
    [
        774280,
        710290120
    ],
    [
        774260,
        707290120
    ],
    [
        774220,
        744952000
    ],
    [
        774190,
        768077308
    ],
    [
        774180,
        770971885
    ],
    [
        774170,
        773687425
    ],
    [
        774160,
        772848425
    ],
    [
        774150,
        775510758
    ],
    [
        774140,
        772707014
    ],
    [
        774130,
        777219773
    ],
    [
        774120,
        776545000
    ],
    [
        774100,
        771264500
    ],
    [
        774090,
        777480184
    ],
    [
        774070,
        778000000
    ],
    [
        774060,
        784697661
    ],
    [
        774050,
        796218500
    ],
    [
        774040,
        796642054
    ],
    [
        774030,
        799651782
    ],
    [
        774020,
        801933282
    ],
    [
        774010,
        800710000
    ],
    [
        773980,
        805931500
    ],
    [
        773970,
        808926851
    ],
    [
        773950,
        812749851
    ],
    [
        773940,
        813323000
    ],
    [
        773930,
        814138000
    ],
    [
        773910,
        813323000
    ],
    [
        773900,
        813838440
    ],
    [
        773890,
        814330440
    ],
    [
        773880,
        813815000
    ],
    [
        773870,
        816678500
    ],
    [
        773860,
        815558500
    ],
    [
        773840,
        816170343
    ],
    [
        773830,
        818666829
    ],
    [
        773820,
        827205000
    ],
    [
        773810,
        826882086
    ],
    [
        773800,
        829845000
    ],
    [
        773780,
        831136465
    ],
    [
        773740,
        832000000
    ],
    [
        773730,
        830295000
    ],
    [
        773720,
        829699806
    ],
    [
        773700,
        830295000
    ],
    [
        773670,
        829054995
    ],
    [
        773660,
        830226180
    ],
    [
        773650,
        835916180
    ],
    [
        773640,
        841375000
    ],
    [
        773630,
        843095620
    ],
    [
        773620,
        842753500
    ],
    [
        773610,
        844323500
    ],
    [
        773600,
        829138500
    ],
    [
        773530,
        823315000
    ],
    [
        773520,
        825261920
    ],
    [
        773480,
        829978000
    ],
    [
        773440,
        825096000
    ],
    [
        773430,
        823023691
    ],
    [
        773410,
        825096000
    ],
    [
        773400,
        824965997
    ],
    [
        773380,
        826804825
    ],
    [
        773360,
        826581356
    ],
    [
        773350,
        828096106
    ],
    [
        773320,
        827277000
    ],
    [
        773280,
        826315000
    ],
    [
        773260,
        821482500
    ],
    [
        773210,
        818815000
    ],
    [
        773190,
        811605000
    ],
    [
        773170,
        809290000
    ],
    [
        773160,
        808246662
    ],
    [
        773130,
        809034440
    ],
    [
        773120,
        809290000
    ],
    [
        773090,
        806000000
    ],
    [
        773080,
        805578884
    ],
    [
        773060,
        806000000
    ],
    [
        773050,
        807290000
    ],
    [
        773010,
        807790000
    ],
    [
        772990,
        806000000
    ],
    [
        772950,
        805000000
    ],
    [
        772940,
        806123500
    ],
    [
        772930,
        805998884
    ],
    [
        772920,
        805000000
    ],
    [
        772870,
        804000000
    ],
    [
        772860,
        803607260
    ],
    [
        772850,
        803110000
    ],
    [
        772840,
        800251221
    ],
    [
        772830,
        800268000
    ],
    [
        772820,
        791608000
    ],
    [
        772810,
        799492305
    ],
    [
        772800,
        791609565
    ],
    [
        772780,
        790551926
    ],
    [
        772750,
        803110000
    ],
    [
        772740,
        803369770
    ],
    [
        772730,
        804950000
    ],
    [
        772720,
        808000000
    ],
    [
        772690,
        809715354
    ],
    [
        772680,
        810000000
    ],
    [
        772670,
        807330505
    ],
    [
        772660,
        806861500
    ],
    [
        772650,
        803770938
    ],
    [
        772610,
        802450000
    ],
    [
        772600,
        801934500
    ],
    [
        772590,
        803384500
    ],
    [
        772580,
        803359500
    ],
    [
        772570,
        801934500
    ],
    [
        772560,
        805295000
    ],
    [
        772550,
        803880597
    ],
    [
        772480,
        825000000
    ],
    [
        772440,
        837234000
    ],
    [
        772430,
        831133510
    ],
    [
        772420,
        829356096
    ],
    [
        772410,
        833228063
    ],
    [
        772400,
        839400000
    ],
    [
        772390,
        845430000
    ],
    [
        772370,
        847943769
    ],
    [
        772340,
        852000000
    ],
    [
        772330,
        852170000
    ],
    [
        772320,
        852478223
    ],
    [
        772310,
        853219349
    ],
    [
        772300,
        854000000
    ],
    [
        772290,
        852873008
    ],
    [
        772280,
        854000000
    ],
    [
        772270,
        856105000
    ],
    [
        772260,
        830170000
    ],
    [
        772250,
        830680000
    ],
    [
        772240,
        830410000
    ],
    [
        772230,
        828470000
    ],
    [
        772210,
        832000000
    ],
    [
        772200,
        833526500
    ],
    [
        772180,
        834631500
    ],
    [
        772170,
        833178279
    ],
    [
        772160,
        833526500
    ],
    [
        772150,
        832000000
    ],
    [
        772140,
        833635000
    ],
    [
        772130,
        833595000
    ],
    [
        772120,
        834150000
    ],
    [
        772110,
        833105000
    ],
    [
        772090,
        838478697
    ],
    [
        772080,
        836532439
    ],
    [
        772070,
        835637439
    ],
    [
        772060,
        836105000
    ],
    [
        772050,
        836455000
    ],
    [
        772020,
        839331000
    ],
    [
        772000,
        833743500
    ],
    [
        771990,
        832878606
    ],
    [
        771980,
        829151651
    ],
    [
        771970,
        829117207
    ],
    [
        771960,
        833743500
    ],
    [
        771940,
        831230238
    ],
    [
        771930,
        829800221
    ],
    [
        771920,
        825309713
    ],
    [
        771910,
        834000000
    ],
    [
        771890,
        834605000
    ],
    [
        771880,
        834000000
    ],
    [
        771860,
        834605000
    ],
    [
        771820,
        837341000
    ],
    [
        771800,
        838000000
    ],
    [
        771760,
        840076000
    ],
    [
        771740,
        838105000
    ],
    [
        771730,
        838163329
    ],
    [
        771690,
        836605000
    ],
    [
        771670,
        838000000
    ],
    [
        771660,
        836605000
    ],
    [
        771620,
        834091500
    ],
    [
        771610,
        829907506
    ],
    [
        771600,
        825747632
    ],
    [
        771560,
        852199500
    ],
    [
        771550,
        848948818
    ],
    [
        771530,
        875000000
    ],
    [
        771470,
        890117000
    ],
    [
        771460,
        894105573
    ],
    [
        771430,
        902750000
    ],
    [
        771420,
        904000000
    ],
    [
        771410,
        903175346
    ],
    [
        771400,
        903918551
    ],
    [
        771390,
        910840567
    ],
    [
        771380,
        913036067
    ],
    [
        771360,
        911811067
    ],
    [
        771340,
        913000000
    ],
    [
        771330,
        896930000
    ],
    [
        771310,
        897212500
    ],
    [
        771300,
        893730000
    ],
    [
        771290,
        891174548
    ],
    [
        771280,
        891629218
    ],
    [
        771270,
        896425000
    ],
    [
        771260,
        905244345
    ],
    [
        771250,
        905335781
    ],
    [
        771240,
        897875000
    ],
    [
        771230,
        885000000
    ],
    [
        771220,
        887439160
    ],
    [
        771210,
        883582292
    ],
    [
        771200,
        890644500
    ],
    [
        771190,
        897418929
    ],
    [
        771170,
        901535000
    ],
    [
        771160,
        901520000
    ],
    [
        771150,
        905812570
    ],
    [
        771140,
        908250000
    ],
    [
        771130,
        909108933
    ],
    [
        771110,
        917450203
    ],
    [
        771100,
        922934807
    ],
    [
        771090,
        923944807
    ],
    [
        771070,
        925962413
    ],
    [
        771060,
        921720000
    ],
    [
        771050,
        922060000
    ],
    [
        771040,
        922592334
    ],
    [
        771030,
        930526584
    ],
    [
        771010,
        928289000
    ],
    [
        770990,
        924655000
    ],
    [
        770980,
        925775500
    ],
    [
        770950,
        926363031
    ],
    [
        770940,
        944120500
    ],
    [
        770900,
        950304000
    ],
    [
        770880,
        950731706
    ],
    [
        770870,
        951269172
    ],
    [
        770850,
        954479500
    ],
    [
        770820,
        945979500
    ],
    [
        770800,
        943641070
    ],
    [
        770780,
        940529156
    ],
    [
        770760,
        940804711
    ],
    [
        770740,
        939705562
    ],
    [
        770730,
        939636000
    ],
    [
        770720,
        941000000
    ],
    [
        770710,
        941293454
    ],
    [
        770670,
        958321500
    ],
    [
        770660,
        959372733
    ],
    [
        770650,
        962000000
    ],
    [
        770640,
        964363265
    ],
    [
        770600,
        976165500
    ],
    [
        770590,
        978715500
    ],
    [
        770520,
        979995000
    ],
    [
        770500,
        977995000
    ],
    [
        770480,
        975565000
    ],
    [
        770450,
        976000000
    ],
    [
        770430,
        974728756
    ],
    [
        770420,
        976246768
    ],
    [
        770400,
        978919500
    ],
    [
        770380,
        979000000
    ],
    [
        770370,
        980270923
    ],
    [
        770350,
        983413431
    ],
    [
        770340,
        977858000
    ],
    [
        770330,
        963813000
    ],
    [
        770310,
        954475000
    ],
    [
        770300,
        952000000
    ],
    [
        770270,
        948662500
    ],
    [
        770260,
        950309127
    ],
    [
        770250,
        946502466
    ],
    [
        770230,
        949462904
    ],
    [
        770220,
        956875000
    ],
    [
        770210,
        959153500
    ],
    [
        770200,
        950255000
    ],
    [
        770170,
        948255000
    ],
    [
        770140,
        944755000
    ],
    [
        770110,
        940143000
    ],
    [
        770100,
        936804052
    ],
    [
        770090,
        937194052
    ],
    [
        770080,
        936883781
    ],
    [
        770070,
        938383781
    ],
    [
        770050,
        941570960
    ],
    [
        770040,
        935674310
    ],
    [
        770030,
        943000000
    ],
    [
        770020,
        942685500
    ],
    [
        770010,
        941873793
    ],
    [
        769990,
        941685828
    ],
    [
        769980,
        933179832
    ],
    [
        769970,
        940858264
    ],
    [
        769960,
        933270264
    ],
    [
        769950,
        929562672
    ],
    [
        769940,
        938192780
    ],
    [
        769930,
        914750000
    ],
    [
        769910,
        914518878
    ],
    [
        769900,
        911883127
    ],
    [
        769890,
        910135000
    ],
    [
        769880,
        917361273
    ],
    [
        769850,
        907750000
    ],
    [
        769830,
        903500000
    ],
    [
        769810,
        899458500
    ],
    [
        769790,
        882690946
    ],
    [
        769770,
        884593500
    ],
    [
        769760,
        884449903
    ],
    [
        769740,
        876300000
    ],
    [
        769700,
        873135000
    ],
    [
        769690,
        872784898
    ],
    [
        769680,
        871976059
    ],
    [
        769670,
        864318916
    ],
    [
        769640,
        865610000
    ],
    [
        769620,
        863982000
    ],
    [
        769610,
        861610000
    ],
    [
        769590,
        860958773
    ],
    [
        769570,
        859593329
    ],
    [
        769560,
        858344440
    ],
    [
        769550,
        858482217
    ],
    [
        769510,
        855000000
    ],
    [
        769500,
        852424037
    ],
    [
        769490,
        851523725
    ],
    [
        769480,
        849953225
    ],
    [
        769460,
        847101531
    ],
    [
        769450,
        850840202
    ],
    [
        769440,
        858761451
    ],
    [
        769400,
        862739500
    ],
    [
        769390,
        860542178
    ],
    [
        769380,
        858253132
    ],
    [
        769370,
        863911343
    ],
    [
        769360,
        864500000
    ],
    [
        769350,
        863571984
    ],
    [
        769310,
        864500000
    ],
    [
        769300,
        863515372
    ],
    [
        769280,
        862988884
    ],
    [
        769160,
        864000000
    ],
    [
        769150,
        862311106
    ],
    [
        769090,
        858500000
    ],
    [
        769070,
        856562533
    ],
    [
        769040,
        860978580
    ],
    [
        769030,
        863308417
    ],
    [
        769010,
        858682000
    ],
    [
        768970,
        844000000
    ],
    [
        768960,
        842730000
    ],
    [
        768940,
        851237725
    ],
    [
        768930,
        851292332
    ],
    [
        768920,
        847229343
    ],
    [
        768900,
        837230000
    ],
    [
        768890,
        836114729
    ],
    [
        768880,
        831467480
    ],
    [
        768840,
        841230000
    ],
    [
        768830,
        841730000
    ],
    [
        768820,
        842795000
    ],
    [
        768810,
        841730000
    ],
    [
        768800,
        845444220
    ],
    [
        768790,
        842795000
    ],
    [
        768780,
        841500000
    ],
    [
        768770,
        843818775
    ],
    [
        768760,
        839968353
    ],
    [
        768750,
        838394061
    ],
    [
        768730,
        842021500
    ],
    [
        768690,
        853620000
    ],
    [
        768680,
        856455000
    ],
    [
        768670,
        855555656
    ],
    [
        768650,
        856455000
    ],
    [
        768640,
        854068329
    ],
    [
        768630,
        852005000
    ],
    [
        768610,
        851172218
    ],
    [
        768570,
        850521000
    ],
    [
        768550,
        852005000
    ],
    [
        768520,
        853411500
    ],
    [
        768510,
        853541000
    ],
    [
        768490,
        854451000
    ],
    [
        768430,
        852680000
    ],
    [
        768390,
        853000000
    ],
    [
        768380,
        854723603
    ],
    [
        768370,
        858614259
    ],
    [
        768360,
        860915551
    ],
    [
        768350,
        861725551
    ],
    [
        768340,
        862130551
    ],
    [
        768330,
        857928993
    ],
    [
        768320,
        856790000
    ],
    [
        768280,
        864000000
    ],
    [
        768260,
        865155000
    ],
    [
        768220,
        871270500
    ],
    [
        768190,
        876341000
    ],
    [
        768150,
        886000000
    ],
    [
        768130,
        886682638
    ],
    [
        768120,
        891660993
    ],
    [
        768090,
        887500000
    ],
    [
        768030,
        890534000
    ],
    [
        768010,
        895124000
    ],
    [
        767960,
        905500000
    ],
    [
        767870,
        907000000
    ],
    [
        767840,
        917383000
    ],
    [
        767830,
        920065167
    ],
    [
        767810,
        918000000
    ],
    [
        767790,
        928662619
    ],
    [
        767780,
        932952397
    ],
    [
        767770,
        934659977
    ],
    [
        767760,
        937819000
    ],
    [
        767750,
        939496626
    ],
    [
        767740,
        939961000
    ],
    [
        767730,
        940505513
    ],
    [
        767720,
        940357855
    ],
    [
        767690,
        941539923
    ],
    [
        767670,
        945922247
    ],
    [
        767660,
        948503709
    ],
    [
        767650,
        948185908
    ],
    [
        767640,
        949761217
    ],
    [
        767630,
        944933882
    ],
    [
        767620,
        951161207
    ],
    [
        767600,
        952878000
    ],
    [
        767560,
        951978000
    ],
    [
        767550,
        944997302
    ],
    [
        767540,
        946977059
    ],
    [
        767530,
        944024500
    ],
    [
        767520,
        942320178
    ],
    [
        767510,
        944024500
    ],
    [
        767500,
        945189000
    ],
    [
        767490,
        929500000
    ],
    [
        767480,
        913210000
    ],
    [
        767420,
        910710000
    ],
    [
        767370,
        911549000
    ],
    [
        767350,
        911174000
    ],
    [
        767340,
        908964000
    ],
    [
        767330,
        909058007
    ],
    [
        767320,
        912964000
    ],
    [
        767310,
        912010819
    ],
    [
        767300,
        915000000
    ],
    [
        767270,
        904000000
    ],
    [
        767260,
        897518500
    ],
    [
        767240,
        895140000
    ],
    [
        767230,
        899140000
    ],
    [
        767220,
        900682195
    ],
    [
        767190,
        904000000
    ],
    [
        767150,
        905500000
    ],
    [
        767140,
        903860099
    ],
    [
        767130,
        902524904
    ],
    [
        767120,
        903110469
    ],
    [
        767110,
        903159904
    ],
    [
        767100,
        899000000
    ],
    [
        767090,
        901970500
    ],
    [
        767080,
        899871209
    ],
    [
        767070,
        899000000
    ],
    [
        767060,
        898000000
    ],
    [
        767050,
        897938443
    ],
    [
        767040,
        908135959
    ],
    [
        767030,
        906945000
    ],
    [
        767020,
        906142047
    ],
    [
        767010,
        908444126
    ],
    [
        767000,
        910600456
    ],
    [
        766990,
        908876500
    ],
    [
        766980,
        914000000
    ],
    [
        766970,
        909876500
    ],
    [
        766950,
        908346828
    ],
    [
        766940,
        904871500
    ],
    [
        766930,
        899576107
    ],
    [
        766870,
        888949500
    ],
    [
        766860,
        882855106
    ],
    [
        766850,
        885118541
    ],
    [
        766840,
        880758541
    ],
    [
        766830,
        880920000
    ],
    [
        766810,
        878685386
    ],
    [
        766790,
        878156860
    ],
    [
        766780,
        874734698
    ],
    [
        766770,
        873725000
    ],
    [
        766760,
        875075000
    ],
    [
        766750,
        876750000
    ],
    [
        766740,
        875000000
    ],
    [
        766730,
        873725000
    ],
    [
        766710,
        874563316
    ],
    [
        766700,
        882635000
    ],
    [
        766680,
        883721618
    ],
    [
        766660,
        886770000
    ],
    [
        766650,
        888359988
    ],
    [
        766640,
        887052587
    ],
    [
        766630,
        886000000
    ],
    [
        766620,
        881821056
    ],
    [
        766580,
        886000000
    ],
    [
        766570,
        877082633
    ],
    [
        766390,
        879000000
    ],
    [
        766380,
        876740880
    ],
    [
        766360,
        872450000
    ],
    [
        766340,
        872334292
    ],
    [
        766330,
        872450000
    ],
    [
        766310,
        870015000
    ],
    [
        766300,
        872450000
    ],
    [
        766260,
        870015000
    ],
    [
        766240,
        872450000
    ],
    [
        766230,
        859624848
    ],
    [
        766210,
        867000000
    ],
    [
        766200,
        866054748
    ],
    [
        766190,
        867000000
    ],
    [
        766170,
        815000000
    ],
    [
        766120,
        784000000
    ],
    [
        766110,
        780899391
    ],
    [
        766100,
        775081992
    ],
    [
        766060,
        777000000
    ],
    [
        766030,
        771267000
    ],
    [
        766020,
        764000000
    ],
    [
        766000,
        762843325
    ],
    [
        765990,
        763176000
    ],
    [
        765970,
        760079645
    ],
    [
        765950,
        758230436
    ],
    [
        765930,
        758065992
    ],
    [
        765920,
        761357613
    ],
    [
        765900,
        755243000
    ],
    [
        765840,
        734380000
    ],
    [
        765790,
        733000000
    ],
    [
        765770,
        731655251
    ],
    [
        765760,
        728170000
    ],
    [
        765750,
        727336735
    ],
    [
        765740,
        720730000
    ],
    [
        765730,
        723584922
    ],
    [
        765720,
        734000000
    ],
    [
        765700,
        734045000
    ],
    [
        765650,
        734000000
    ],
    [
        765640,
        730220000
    ],
    [
        765630,
        733225132
    ],
    [
        765620,
        730000000
    ],
    [
        765610,
        728170000
    ],
    [
        765600,
        725951000
    ],
    [
        765590,
        728170000
    ],
    [
        765580,
        724746488
    ],
    [
        765560,
        727940000
    ],
    [
        765550,
        724287000
    ],
    [
        765530,
        722762881
    ],
    [
        765520,
        720457395
    ],
    [
        765510,
        716763992
    ],
    [
        765500,
        715314881
    ],
    [
        765490,
        715000000
    ],
    [
        765480,
        715314881
    ],
    [
        765460,
        713077000
    ],
    [
        765410,
        721312000
    ],
    [
        765370,
        725000000
    ],
    [
        765360,
        736477000
    ],
    [
        765350,
        738995000
    ],
    [
        765340,
        741744584
    ],
    [
        765330,
        741000000
    ],
    [
        765300,
        742495500
    ],
    [
        765290,
        743167500
    ],
    [
        765270,
        741651594
    ],
    [
        765250,
        743000000
    ],
    [
        765240,
        741526201
    ],
    [
        765230,
        741710000
    ],
    [
        765220,
        743000000
    ],
    [
        765180,
        739585000
    ],
    [
        765170,
        736566930
    ],
    [
        765160,
        734650000
    ],
    [
        765150,
        736918662
    ],
    [
        765140,
        733845000
    ],
    [
        765130,
        732702107
    ],
    [
        765120,
        739052802
    ],
    [
        765110,
        740950000
    ],
    [
        765100,
        737450000
    ],
    [
        765090,
        736610000
    ],
    [
        765080,
        738120000
    ],
    [
        765070,
        734667281
    ],
    [
        765060,
        736162876
    ],
    [
        765040,
        734000000
    ],
    [
        765030,
        732000000
    ],
    [
        764990,
        731970500
    ],
    [
        764970,
        732000000
    ],
    [
        764930,
        740232500
    ],
    [
        764900,
        742799500
    ],
    [
        764870,
        741945107
    ],
    [
        764860,
        739589551
    ],
    [
        764850,
        740373056
    ],
    [
        764840,
        733000000
    ],
    [
        764830,
        731458000
    ],
    [
        764810,
        733000000
    ],
    [
        764800,
        733151500
    ],
    [
        764790,
        733940518
    ],
    [
        764780,
        736217000
    ],
    [
        764750,
        741217000
    ],
    [
        764740,
        742500000
    ],
    [
        764730,
        740640500
    ],
    [
        764710,
        743000000
    ],
    [
        764670,
        746495000
    ],
    [
        764640,
        746483500
    ],
    [
        764630,
        749221085
    ],
    [
        764620,
        748612607
    ],
    [
        764610,
        746483500
    ],
    [
        764550,
        773446000
    ],
    [
        764530,
        776946000
    ],
    [
        764510,
        778946000
    ],
    [
        764490,
        780812773
    ],
    [
        764480,
        777349693
    ],
    [
        764470,
        779353693
    ],
    [
        764460,
        773185000
    ],
    [
        764390,
        759730000
    ],
    [
        764380,
        757934997
    ],
    [
        764370,
        760664997
    ],
    [
        764350,
        758300839
    ],
    [
        764330,
        759807917
    ],
    [
        764320,
        759003211
    ],
    [
        764310,
        763032354
    ],
    [
        764270,
        751500000
    ],
    [
        764240,
        743515500
    ],
    [
        764230,
        743020500
    ],
    [
        764220,
        742839516
    ],
    [
        764210,
        738953301
    ],
    [
        764200,
        738536726
    ],
    [
        764190,
        737866726
    ],
    [
        764180,
        736877377
    ],
    [
        764170,
        742528874
    ],
    [
        764160,
        741193874
    ],
    [
        764150,
        740585000
    ],
    [
        764130,
        738923000
    ],
    [
        764120,
        740281643
    ],
    [
        764100,
        735954440
    ],
    [
        764090,
        736670000
    ],
    [
        764080,
        737675000
    ],
    [
        764070,
        733990000
    ],
    [
        764050,
        735000000
    ],
    [
        764040,
        733150000
    ],
    [
        764030,
        727990000
    ],
    [
        764020,
        723778663
    ],
    [
        764010,
        721712434
    ],
    [
        764000,
        722940000
    ],
    [
        763990,
        722945000
    ],
    [
        763970,
        727944500
    ],
    [
        763950,
        717950000
    ],
    [
        763930,
        715650500
    ],
    [
        763920,
        715000000
    ],
    [
        763910,
        716150500
    ],
    [
        763900,
        714948000
    ],
    [
        763890,
        714896000
    ],
    [
        763870,
        715000000
    ],
    [
        763860,
        712748552
    ],
    [
        763850,
        713805770
    ],
    [
        763840,
        721899495
    ],
    [
        763830,
        725578496
    ],
    [
        763820,
        733439223
    ],
    [
        763790,
        712386036
    ],
    [
        763780,
        707711107
    ],
    [
        763770,
        709564037
    ],
    [
        763750,
        694872500
    ],
    [
        763710,
        685360000
    ],
    [
        763690,
        680090000
    ],
    [
        763670,
        674690000
    ],
    [
        763650,
        674333218
    ],
    [
        763640,
        673040698
    ],
    [
        763630,
        670600000
    ],
    [
        763610,
        690282500
    ],
    [
        763590,
        690860000
    ],
    [
        763580,
        690358494
    ],
    [
        763560,
        691109605
    ],
    [
        763550,
        690402774
    ],
    [
        763540,
        691008000
    ],
    [
        763530,
        689868000
    ],
    [
        763510,
        691984639
    ],
    [
        763490,
        693429528
    ],
    [
        763480,
        689512922
    ],
    [
        763470,
        690714000
    ],
    [
        763460,
        687971887
    ],
    [
        763450,
        684923000
    ],
    [
        763410,
        683423000
    ],
    [
        763400,
        684500000
    ],
    [
        763380,
        683517500
    ],
    [
        763370,
        683038342
    ],
    [
        763360,
        682047122
    ],
    [
        763350,
        681000000
    ],
    [
        763340,
        683012899
    ],
    [
        763330,
        682611000
    ],
    [
        763310,
        681950000
    ],
    [
        763280,
        690000000
    ],
    [
        763260,
        690888000
    ],
    [
        763250,
        695388000
    ],
    [
        763240,
        695396891
    ],
    [
        763230,
        695857682
    ],
    [
        763210,
        699238000
    ],
    [
        763180,
        703000000
    ],
    [
        763170,
        708000000
    ],
    [
        763160,
        710000000
    ],
    [
        763150,
        722958500
    ],
    [
        763120,
        734905000
    ],
    [
        763100,
        737450000
    ],
    [
        763040,
        740402500
    ],
    [
        763030,
        743452500
    ],
    [
        763010,
        743055589
    ],
    [
        763000,
        740402500
    ],
    [
        762980,
        742950000
    ],
    [
        762970,
        744785000
    ],
    [
        762960,
        744762933
    ],
    [
        762940,
        744568218
    ],
    [
        762930,
        743990000
    ],
    [
        762920,
        745062000
    ],
    [
        762910,
        744861651
    ],
    [
        762890,
        743402000
    ],
    [
        762880,
        746337677
    ],
    [
        762860,
        746467388
    ],
    [
        762850,
        750342319
    ],
    [
        762840,
        751137000
    ],
    [
        762830,
        754534472
    ],
    [
        762820,
        750532000
    ],
    [
        762810,
        753104820
    ],
    [
        762800,
        749631081
    ],
    [
        762790,
        754089000
    ],
    [
        762780,
        753450724
    ],
    [
        762770,
        763168500
    ],
    [
        762750,
        756924578
    ],
    [
        762740,
        762583500
    ],
    [
        762730,
        768465000
    ],
    [
        762720,
        770964429
    ],
    [
        762710,
        765829934
    ],
    [
        762700,
        771497455
    ],
    [
        762690,
        768213696
    ],
    [
        762680,
        767758669
    ],
    [
        762660,
        744128000
    ],
    [
        762610,
        742000000
    ],
    [
        762600,
        738970000
    ],
    [
        762590,
        740950000
    ],
    [
        762580,
        739900000
    ],
    [
        762570,
        720998505
    ],
    [
        762550,
        721687107
    ],
    [
        762530,
        723125000
    ],
    [
        762500,
        718625000
    ],
    [
        762490,
        712692733
    ],
    [
        762480,
        717627577
    ],
    [
        762470,
        713217457
    ],
    [
        762420,
        707125000
    ],
    [
        762410,
        705841522
    ],
    [
        762380,
        706125000
    ],
    [
        762360,
        702374500
    ],
    [
        762350,
        702430500
    ],
    [
        762340,
        699165163
    ],
    [
        762320,
        699548885
    ],
    [
        762310,
        700888935
    ],
    [
        762300,
        702708435
    ],
    [
        762280,
        701384082
    ],
    [
        762270,
        690218735
    ],
    [
        762260,
        694248721
    ],
    [
        762240,
        704625000
    ],
    [
        762190,
        705290189
    ],
    [
        762170,
        703682034
    ],
    [
        762160,
        707211000
    ],
    [
        762120,
        700000000
    ],
    [
        762100,
        683725000
    ],
    [
        762060,
        666888500
    ],
    [
        762050,
        666613085
    ],
    [
        762040,
        667174585
    ],
    [
        762030,
        667582106
    ],
    [
        762020,
        657157106
    ],
    [
        761960,
        657800000
    ],
    [
        761950,
        655300000
    ],
    [
        761930,
        653392000
    ],
    [
        761920,
        652169349
    ],
    [
        761910,
        653392000
    ],
    [
        761890,
        653046431
    ],
    [
        761880,
        652451173
    ],
    [
        761870,
        656049774
    ],
    [
        761860,
        656376355
    ],
    [
        761850,
        655557992
    ],
    [
        761840,
        656425122
    ],
    [
        761820,
        660001732
    ],
    [
        761800,
        661100500
    ],
    [
        761740,
        649300000
    ],
    [
        761730,
        648612822
    ],
    [
        761690,
        645300000
    ],
    [
        761670,
        643618000
    ],
    [
        761660,
        643363000
    ],
    [
        761640,
        639683000
    ],
    [
        761620,
        639575661
    ],
    [
        761600,
        636601949
    ],
    [
        761580,
        636556000
    ],
    [
        761570,
        637236000
    ],
    [
        761550,
        636556000
    ],
    [
        761530,
        641894274
    ],
    [
        761520,
        642922600
    ],
    [
        761510,
        639185000
    ],
    [
        761500,
        638690000
    ],
    [
        761490,
        640448500
    ],
    [
        761480,
        640230000
    ],
    [
        761470,
        638641547
    ],
    [
        761450,
        638000000
    ],
    [
        761440,
        638674000
    ],
    [
        761410,
        638000000
    ],
    [
        761400,
        637968552
    ],
    [
        761390,
        637927996
    ],
    [
        761380,
        636427500
    ],
    [
        761370,
        634927500
    ],
    [
        761350,
        634500000
    ],
    [
        761340,
        634247812
    ],
    [
        761320,
        632583200
    ],
    [
        761300,
        627675812
    ],
    [
        761290,
        627555000
    ],
    [
        761280,
        626943034
    ],
    [
        761260,
        624002311
    ],
    [
        761240,
        622000000
    ],
    [
        761230,
        621877557
    ],
    [
        761220,
        621919261
    ],
    [
        761210,
        621191926
    ],
    [
        761200,
        621691926
    ],
    [
        761190,
        622000000
    ],
    [
        761180,
        621500000
    ],
    [
        761170,
        628652719
    ],
    [
        761160,
        630105500
    ],
    [
        761150,
        630776790
    ],
    [
        761140,
        631785500
    ],
    [
        761130,
        631170000
    ],
    [
        761120,
        630510000
    ],
    [
        761100,
        635502662
    ],
    [
        761090,
        641245000
    ],
    [
        761070,
        641769842
    ],
    [
        761050,
        644000000
    ],
    [
        761040,
        644562294
    ],
    [
        761030,
        646580000
    ],
    [
        761010,
        647279996
    ],
    [
        761000,
        644767284
    ],
    [
        760990,
        642291000
    ],
    [
        760980,
        641136000
    ],
    [
        760940,
        640345000
    ],
    [
        760930,
        638693515
    ],
    [
        760920,
        638350000
    ],
    [
        760900,
        631725023
    ],
    [
        760870,
        630365000
    ],
    [
        760850,
        634013769
    ],
    [
        760820,
        625705000
    ],
    [
        760810,
        625295760
    ],
    [
        760800,
        626938441
    ],
    [
        760790,
        626303441
    ],
    [
        760780,
        625470080
    ],
    [
        760760,
        625422285
    ],
    [
        760750,
        625870345
    ],
    [
        760740,
        625010902
    ],
    [
        760730,
        620943348
    ],
    [
        760690,
        628000000
    ],
    [
        760680,
        630051000
    ],
    [
        760660,
        632027046
    ],
    [
        760640,
        634000000
    ],
    [
        760620,
        637095000
    ],
    [
        760610,
        634206037
    ],
    [
        760600,
        634000000
    ],
    [
        760590,
        633977441
    ],
    [
        760580,
        635477441
    ],
    [
        760570,
        632913281
    ],
    [
        760550,
        632755000
    ],
    [
        760530,
        638845000
    ],
    [
        760520,
        646163500
    ],
    [
        760490,
        650818500
    ],
    [
        760480,
        656818500
    ],
    [
        760470,
        656979441
    ],
    [
        760450,
        664500000
    ],
    [
        760410,
        669268500
    ],
    [
        760400,
        670245000
    ],
    [
        760390,
        670609725
    ],
    [
        760380,
        672719500
    ],
    [
        760370,
        671000000
    ],
    [
        760340,
        672719500
    ],
    [
        760320,
        671000000
    ],
    [
        760300,
        673363500
    ],
    [
        760290,
        674200000
    ],
    [
        760280,
        674245000
    ],
    [
        760270,
        674569500
    ],
    [
        760260,
        674895000
    ],
    [
        760250,
        675415107
    ],
    [
        760230,
        674569500
    ],
    [
        760200,
        674395000
    ],
    [
        760170,
        661223500
    ],
    [
        760160,
        657394629
    ],
    [
        760150,
        659700629
    ],
    [
        760140,
        660154500
    ],
    [
        760100,
        659700629
    ],
    [
        760090,
        655381129
    ],
    [
        760080,
        655171129
    ],
    [
        760050,
        673010500
    ],
    [
        760020,
        674729237
    ],
    [
        760010,
        674578500
    ],
    [
        760000,
        675395000
    ],
    [
        759990,
        674578500
    ],
    [
        759980,
        675895000
    ],
    [
        759970,
        674578500
    ],
    [
        759940,
        675895000
    ],
    [
        759930,
        677296500
    ],
    [
        759900,
        679791500
    ],
    [
        759870,
        681397618
    ],
    [
        759850,
        687880000
    ],
    [
        759800,
        689000000
    ],
    [
        759780,
        695500000
    ],
    [
        759770,
        698211203
    ],
    [
        759760,
        697042314
    ],
    [
        759750,
        698891203
    ],
    [
        759730,
        697748001
    ],
    [
        759700,
        695500000
    ],
    [
        759690,
        697780000
    ],
    [
        759680,
        691540659
    ],
    [
        759670,
        690000000
    ],
    [
        759660,
        689753993
    ],
    [
        759650,
        689910000
    ],
    [
        759640,
        690680881
    ],
    [
        759630,
        690000000
    ],
    [
        759620,
        688710000
    ],
    [
        759610,
        689360000
    ],
    [
        759600,
        691056328
    ],
    [
        759580,
        694000000
    ],
    [
        759570,
        699320000
    ],
    [
        759560,
        697925771
    ],
    [
        759550,
        694000000
    ],
    [
        759540,
        690000000
    ],
    [
        759530,
        692899326
    ],
    [
        759460,
        699000000
    ],
    [
        759420,
        703635000
    ],
    [
        759380,
        701449000
    ],
    [
        759340,
        709000000
    ],
    [
        759310,
        709155471
    ],
    [
        759280,
        709000000
    ],
    [
        759240,
        710570000
    ],
    [
        759220,
        712000000
    ],
    [
        759210,
        725100000
    ],
    [
        759190,
        731714637
    ],
    [
        759180,
        737533788
    ],
    [
        759160,
        737335664
    ],
    [
        759150,
        744285548
    ],
    [
        759100,
        733000000
    ],
    [
        759040,
        727666000
    ],
    [
        759020,
        730560000
    ],
    [
        758980,
        726000000
    ],
    [
        758970,
        725862000
    ],
    [
        758940,
        725100000
    ],
    [
        758930,
        722722659
    ],
    [
        758920,
        735864789
    ],
    [
        758900,
        710570000
    ],
    [
        758870,
        704000000
    ],
    [
        758860,
        703066175
    ],
    [
        758830,
        702000000
    ],
    [
        758810,
        701649000
    ],
    [
        758800,
        703000000
    ],
    [
        758790,
        699950000
    ],
    [
        758780,
        696000000
    ],
    [
        758760,
        698000000
    ],
    [
        758750,
        694210000
    ],
    [
        758730,
        684860000
    ],
    [
        758720,
        684341000
    ],
    [
        758690,
        681620000
    ],
    [
        758670,
        683275000
    ],
    [
        758640,
        667000000
    ],
    [
        758620,
        666551000
    ],
    [
        758590,
        662888590
    ],
    [
        758580,
        666551000
    ],
    [
        758560,
        678950000
    ],
    [
        758540,
        686172028
    ],
    [
        758530,
        690366860
    ],
    [
        758510,
        687602826
    ],
    [
        758500,
        694984000
    ],
    [
        758470,
        678950000
    ],
    [
        758450,
        669641000
    ],
    [
        758410,
        640000000
    ],
    [
        758390,
        622244000
    ],
    [
        758330,
        608000000
    ],
    [
        758300,
        606000000
    ],
    [
        758260,
        606230000
    ],
    [
        758200,
        606000000
    ],
    [
        758180,
        604748216
    ],
    [
        758140,
        604451000
    ],
    [
        758120,
        607791000
    ],
    [
        758050,
        601000000
    ],
    [
        758030,
        601161924
    ],
    [
        758020,
        606118501
    ],
    [
        758010,
        608950000
    ],
    [
        757990,
        617000000
    ],
    [
        757980,
        617052000
    ],
    [
        757970,
        608491294
    ],
    [
        757950,
        610023327
    ],
    [
        757940,
        611183800
    ],
    [
        757920,
        612055000
    ],
    [
        757870,
        608000000
    ],
    [
        757850,
        602237000
    ],
    [
        757810,
        601000000
    ],
    [
        757800,
        597174329
    ],
    [
        757790,
        591880000
    ],
    [
        757780,
        583352000
    ],
    [
        757710,
        575000000
    ],
    [
        757690,
        574903834
    ],
    [
        757670,
        576084100
    ],
    [
        757650,
        577252773
    ],
    [
        757640,
        580771327
    ],
    [
        757590,
        575000000
    ],
    [
        757580,
        571860000
    ],
    [
        757520,
        571186000
    ],
    [
        757510,
        572943549
    ],
    [
        757490,
        574000000
    ],
    [
        757480,
        575748959
    ],
    [
        757460,
        579124684
    ],
    [
        757450,
        577189430
    ],
    [
        757430,
        576985000
    ],
    [
        757410,
        575000000
    ],
    [
        757390,
        574278311
    ],
    [
        757380,
        574413144
    ],
    [
        757360,
        571906000
    ],
    [
        757340,
        571860000
    ],
    [
        757330,
        573855572
    ],
    [
        757320,
        585000000
    ],
    [
        757310,
        585750000
    ],
    [
        757300,
        595000000
    ],
    [
        757290,
        595800000
    ],
    [
        757280,
        596342657
    ],
    [
        757260,
        596000000
    ],
    [
        757190,
        595000000
    ],
    [
        757150,
        593103000
    ],
    [
        757100,
        596000000
    ],
    [
        757080,
        596530000
    ],
    [
        757070,
        593650000
    ],
    [
        757060,
        589900000
    ],
    [
        757040,
        601000000
    ],
    [
        757030,
        601990000
    ],
    [
        757020,
        607704000
    ],
    [
        757010,
        602275447
    ],
    [
        757000,
        607704000
    ],
    [
        756990,
        608000000
    ],
    [
        756940,
        608992000
    ],
    [
        756930,
        604000000
    ],
    [
        756920,
        605470000
    ],
    [
        756900,
        604050000
    ],
    [
        756880,
        606963000
    ],
    [
        756870,
        606000000
    ],
    [
        756860,
        606963000
    ],
    [
        756850,
        610450428
    ],
    [
        756780,
        613000000
    ],
    [
        756760,
        606824000
    ],
    [
        756740,
        604567608
    ],
    [
        756730,
        602000000
    ],
    [
        756700,
        596000000
    ],
    [
        756690,
        593810000
    ],
    [
        756670,
        596000000
    ],
    [
        756610,
        602000000
    ],
    [
        756590,
        600016263
    ],
    [
        756580,
        598000000
    ],
    [
        756560,
        598278325
    ],
    [
        756550,
        598000000
    ],
    [
        756490,
        609000000
    ],
    [
        756450,
        610050000
    ],
    [
        756440,
        610060000
    ],
    [
        756400,
        617416000
    ],
    [
        756390,
        617215075
    ],
    [
        756380,
        617416000
    ],
    [
        756350,
        617557000
    ],
    [
        756320,
        612000000
    ],
    [
        756310,
        610463195
    ],
    [
        756260,
        610050000
    ],
    [
        756240,
        610060000
    ],
    [
        756230,
        614078882
    ],
    [
        756220,
        615039441
    ],
    [
        756210,
        615316996
    ],
    [
        756200,
        614785717
    ],
    [
        756190,
        615947242
    ],
    [
        756180,
        618067742
    ],
    [
        756170,
        617120500
    ],
    [
        756150,
        614000000
    ],
    [
        756140,
        615108459
    ],
    [
        756100,
        628248000
    ],
    [
        756080,
        629000000
    ],
    [
        756070,
        631000000
    ],
    [
        756030,
        633726000
    ],
    [
        756010,
        644000000
    ],
    [
        755960,
        650000000
    ],
    [
        755920,
        639000000
    ],
    [
        755890,
        637000000
    ],
    [
        755870,
        636092000
    ],
    [
        755820,
        636000000
    ],
    [
        755800,
        635000000
    ],
    [
        755790,
        638034145
    ],
    [
        755770,
        639000000
    ],
    [
        755750,
        635000000
    ],
    [
        755710,
        646083000
    ],
    [
        755680,
        651410000
    ],
    [
        755670,
        655000000
    ],
    [
        755660,
        651410000
    ],
    [
        755650,
        650000000
    ],
    [
        755640,
        649679974
    ],
    [
        755630,
        649000000
    ],
    [
        755590,
        657802000
    ],
    [
        755560,
        665000000
    ],
    [
        755550,
        670299000
    ],
    [
        755540,
        671060000
    ],
    [
        755530,
        679860000
    ],
    [
        755480,
        679990000
    ],
    [
        755470,
        686643121
    ],
    [
        755460,
        689090000
    ],
    [
        755450,
        685632188
    ],
    [
        755440,
        698380000
    ],
    [
        755430,
        701025894
    ],
    [
        755420,
        701779664
    ],
    [
        755410,
        705480000
    ],
    [
        755400,
        703260000
    ],
    [
        755390,
        702430000
    ],
    [
        755380,
        701860000
    ],
    [
        755370,
        708923362
    ],
    [
        755360,
        715000000
    ],
    [
        755350,
        719620000
    ],
    [
        755340,
        715000000
    ],
    [
        755330,
        715190000
    ],
    [
        755320,
        729708000
    ],
    [
        755310,
        733000000
    ],
    [
        755250,
        729000000
    ],
    [
        755240,
        713240000
    ],
    [
        755230,
        724490000
    ],
    [
        755220,
        728241000
    ],
    [
        755210,
        726960000
    ],
    [
        755200,
        736000000
    ],
    [
        755190,
        734000000
    ],
    [
        755180,
        734990000
    ],
    [
        755170,
        734054013
    ],
    [
        755160,
        733321304
    ],
    [
        755140,
        739736603
    ],
    [
        755080,
        706330000
    ],
    [
        755040,
        692000000
    ],
    [
        755010,
        691000000
    ],
    [
        755000,
        687000000
    ],
    [
        754970,
        684571000
    ],
    [
        754940,
        679990000
    ],
    [
        754910,
        660550000
    ],
    [
        754900,
        657353993
    ],
    [
        754890,
        657613347
    ],
    [
        754870,
        651773326
    ],
    [
        754800,
        657000000
    ],
    [
        754730,
        672000000
    ],
    [
        754660,
        679000000
    ],
    [
        754590,
        677000000
    ],
    [
        754520,
        696000000
    ],
    [
        754490,
        706330000
    ],
    [
        754480,
        707198634
    ],
    [
        754470,
        708000000
    ],
    [
        754460,
        710855957
    ],
    [
        754450,
        708000000
    ],
    [
        754380,
        707000000
    ],
    [
        754330,
        686000000
    ],
    [
        754310,
        673150000
    ],
    [
        754270,
        660000000
    ],
    [
        754260,
        650039030
    ],
    [
        754240,
        649990000
    ],
    [
        754170,
        657000000
    ],
    [
        754150,
        635000000
    ],
    [
        754140,
        629020000
    ],
    [
        754040,
        595000000
    ],
    [
        754030,
        589990000
    ],
    [
        754020,
        583460000
    ],
    [
        754000,
        583845000
    ],
    [
        753990,
        581990000
    ],
    [
        753980,
        578225728
    ],
    [
        753970,
        589290000
    ],
    [
        753960,
        591490000
    ],
    [
        753900,
        585000000
    ],
    [
        753860,
        577180000
    ],
    [
        753830,
        573000000
    ],
    [
        753790,
        568000000
    ],
    [
        753760,
        561000000
    ],
    [
        753720,
        557194000
    ],
    [
        753670,
        542000000
    ],
    [
        753660,
        540847000
    ],
    [
        753650,
        540000000
    ],
    [
        753620,
        537950842
    ],
    [
        753610,
        530000000
    ],
    [
        753600,
        528234161
    ],
    [
        753590,
        529000000
    ],
    [
        753580,
        530000000
    ],
    [
        753560,
        529000000
    ],
    [
        753550,
        525468000
    ],
    [
        753530,
        525580000
    ],
    [
        753520,
        525468000
    ],
    [
        753510,
        524332535
    ],
    [
        753480,
        528078000
    ],
    [
        753440,
        523000000
    ],
    [
        753410,
        522172000
    ],
    [
        753370,
        521000000
    ],
    [
        753360,
        517973844
    ],
    [
        753350,
        515273000
    ],
    [
        753340,
        513826065
    ],
    [
        753330,
        513000000
    ],
    [
        753320,
        512703650
    ],
    [
        753300,
        512096439
    ],
    [
        753290,
        513000000
    ],
    [
        753280,
        505977781
    ],
    [
        753270,
        511302925
    ],
    [
        753250,
        510625472
    ],
    [
        753230,
        517507460
    ],
    [
        753220,
        521000000
    ],
    [
        753200,
        518817901
    ],
    [
        753190,
        518693806
    ],
    [
        753170,
        524207996
    ],
    [
        753160,
        521788717
    ],
    [
        753140,
        512522000
    ],
    [
        753100,
        501000000
    ],
    [
        753080,
        479440000
    ],
    [
        753010,
        466000000
    ],
    [
        752980,
        461191000
    ],
    [
        752970,
        457060552
    ],
    [
        752960,
        451000000
    ],
    [
        752950,
        450000000
    ],
    [
        752940,
        451000000
    ],
    [
        752880,
        450000000
    ],
    [
        752860,
        447761439
    ],
    [
        752850,
        447162234
    ],
    [
        752830,
        446580217
    ],
    [
        752820,
        448017995
    ],
    [
        752810,
        446000000
    ],
    [
        752740,
        454000000
    ],
    [
        752670,
        462000000
    ],
    [
        752600,
        474000000
    ],
    [
        752580,
        477000000
    ],
    [
        752570,
        477487928
    ],
    [
        752560,
        476750000
    ],
    [
        752540,
        476162650
    ],
    [
        752530,
        475749000
    ],
    [
        752510,
        474782004
    ],
    [
        752500,
        471500000
    ],
    [
        752490,
        475290000
    ],
    [
        752470,
        471531000
    ],
    [
        752460,
        469000000
    ],
    [
        752450,
        467650000
    ],
    [
        752440,
        468400000
    ],
    [
        752430,
        469000000
    ],
    [
        752410,
        468400000
    ],
    [
        752380,
        468000000
    ],
    [
        752370,
        466000000
    ],
    [
        752360,
        466850000
    ],
    [
        752350,
        466317773
    ],
    [
        752340,
        465908884
    ],
    [
        752330,
        467640000
    ],
    [
        752320,
        466934439
    ],
    [
        752310,
        468000000
    ],
    [
        752300,
        468400000
    ],
    [
        752290,
        467000000
    ],
    [
        752280,
        467780000
    ],
    [
        752230,
        461000000
    ],
    [
        752220,
        457131518
    ],
    [
        752210,
        460860000
    ],
    [
        752200,
        455940000
    ],
    [
        752190,
        461250000
    ],
    [
        752180,
        461320000
    ],
    [
        752170,
        462060000
    ],
    [
        752160,
        461827678
    ],
    [
        752140,
        462690000
    ],
    [
        752110,
        463000000
    ],
    [
        752090,
        464810000
    ],
    [
        752080,
        461880000
    ],
    [
        752070,
        461765965
    ],
    [
        752060,
        460760000
    ],
    [
        752040,
        464330000
    ],
    [
        752020,
        459000000
    ],
    [
        752010,
        454750000
    ],
    [
        752000,
        455590000
    ],
    [
        751970,
        457510000
    ],
    [
        751940,
        457697583
    ],
    [
        751920,
        457485476
    ],
    [
        751910,
        457943816
    ],
    [
        751900,
        457230000
    ],
    [
        751880,
        455000000
    ],
    [
        751870,
        454783000
    ],
    [
        751860,
        454390000
    ],
    [
        751850,
        451776821
    ],
    [
        751830,
        455000000
    ],
    [
        751790,
        459117000
    ],
    [
        751760,
        461000000
    ],
    [
        751720,
        461920000
    ],
    [
        751620,
        462000000
    ],
    [
        751580,
        463000000
    ],
    [
        751560,
        460165606
    ],
    [
        751550,
        460282000
    ],
    [
        751520,
        458000000
    ],
    [
        751510,
        457950559
    ],
    [
        751480,
        456190000
    ],
    [
        751440,
        455196000
    ],
    [
        751430,
        455590000
    ],
    [
        751410,
        456190000
    ],
    [
        751390,
        458294662
    ],
    [
        751370,
        458579015
    ],
    [
        751360,
        456190000
    ],
    [
        751280,
        455880000
    ],
    [
        751270,
        455715402
    ],
    [
        751240,
        455880000
    ],
    [
        751200,
        456000000
    ],
    [
        751150,
        457000000
    ],
    [
        751140,
        456980000
    ],
    [
        751110,
        456111000
    ],
    [
        751100,
        457000000
    ],
    [
        751090,
        456854152
    ],
    [
        751060,
        456475656
    ],
    [
        751020,
        455380000
    ],
    [
        751010,
        455000000
    ],
    [
        751000,
        454560000
    ],
    [
        750990,
        454090000
    ],
    [
        750980,
        454860000
    ],
    [
        750970,
        454560000
    ],
    [
        750950,
        456000000
    ],
    [
        750920,
        454560000
    ],
    [
        750880,
        453664000
    ],
    [
        750860,
        454000000
    ],
    [
        750840,
        454560000
    ],
    [
        750810,
        454885018
    ],
    [
        750800,
        454560000
    ],
    [
        750790,
        454717450
    ],
    [
        750780,
        457984343
    ],
    [
        750770,
        458188000
    ],
    [
        750760,
        457990000
    ],
    [
        750740,
        456166411
    ],
    [
        750730,
        455027650
    ],
    [
        750720,
        453825000
    ],
    [
        750710,
        453200000
    ],
    [
        750700,
        452930990
    ],
    [
        750690,
        453970000
    ],
    [
        750680,
        454000000
    ],
    [
        750670,
        453825000
    ],
    [
        750640,
        437186000
    ],
    [
        750630,
        434247639
    ],
    [
        750620,
        435232775
    ],
    [
        750610,
        435202775
    ],
    [
        750600,
        433535000
    ],
    [
        750560,
        434245000
    ],
    [
        750550,
        435015293
    ],
    [
        750540,
        434483348
    ],
    [
        750530,
        435005000
    ],
    [
        750520,
        435807000
    ],
    [
        750510,
        434665949
    ],
    [
        750490,
        435807000
    ],
    [
        750480,
        435132000
    ],
    [
        750450,
        432195000
    ],
    [
        750440,
        428052500
    ],
    [
        750430,
        428165886
    ],
    [
        750410,
        427500886
    ],
    [
        750400,
        428115500
    ],
    [
        750390,
        428034059
    ],
    [
        750380,
        428268442
    ],
    [
        750370,
        428201761
    ],
    [
        750350,
        428169000
    ],
    [
        750340,
        428500000
    ],
    [
        750320,
        429541485
    ],
    [
        750310,
        432675000
    ],
    [
        750300,
        433000000
    ],
    [
        750290,
        435273962
    ],
    [
        750280,
        435728406
    ],
    [
        750260,
        441000000
    ],
    [
        750250,
        440916000
    ],
    [
        750240,
        436925000
    ],
    [
        750180,
        433366000
    ],
    [
        750170,
        433100000
    ],
    [
        750160,
        434118291
    ],
    [
        750150,
        430476500
    ],
    [
        750130,
        430433773
    ],
    [
        750120,
        430000000
    ],
    [
        750110,
        433643815
    ],
    [
        750090,
        433965456
    ],
    [
        750080,
        436010500
    ],
    [
        750040,
        433000000
    ],
    [
        750030,
        432091000
    ],
    [
        750020,
        431182000
    ],
    [
        750000,
        430341551
    ],
    [
        749990,
        429990000
    ],
    [
        749970,
        427878000
    ],
    [
        749960,
        427000000
    ],
    [
        749940,
        426468957
    ],
    [
        749930,
        424678140
    ],
    [
        749910,
        423490000
    ],
    [
        749890,
        420000000
    ],
    [
        749880,
        418420000
    ],
    [
        749840,
        419169000
    ],
    [
        749810,
        417340000
    ],
    [
        749800,
        418725000
    ],
    [
        749790,
        419067297
    ],
    [
        749780,
        419119000
    ],
    [
        749660,
        416647442
    ],
    [
        749650,
        415699164
    ],
    [
        749640,
        414766543
    ],
    [
        749630,
        414773210
    ],
    [
        749620,
        415351052
    ],
    [
        749610,
        415712500
    ],
    [
        749590,
        416000000
    ],
    [
        749580,
        418037654
    ],
    [
        749560,
        418361200
    ],
    [
        749540,
        420000000
    ],
    [
        749530,
        420004997
    ],
    [
        749520,
        420121029
    ],
    [
        749500,
        422618720
    ],
    [
        749490,
        421856386
    ],
    [
        749480,
        420977886
    ],
    [
        749470,
        419873664
    ],
    [
        749450,
        421000000
    ],
    [
        749430,
        420710475
    ],
    [
        749420,
        420639364
    ],
    [
        749410,
        420678253
    ],
    [
        749390,
        420606031
    ],
    [
        749380,
        420811587
    ],
    [
        749370,
        420921986
    ],
    [
        749360,
        422921986
    ],
    [
        749340,
        424013202
    ],
    [
        749330,
        423772271
    ],
    [
        749310,
        422878465
    ],
    [
        749300,
        420964871
    ],
    [
        749290,
        421910082
    ],
    [
        749270,
        421641193
    ],
    [
        749250,
        418283000
    ],
    [
        749230,
        417019588
    ],
    [
        749220,
        417283000
    ],
    [
        749210,
        414590783
    ],
    [
        749200,
        417157302
    ],
    [
        749190,
        417588000
    ],
    [
        749180,
        417172664
    ],
    [
        749160,
        416792313
    ],
    [
        749150,
        415437997
    ],
    [
        749140,
        416351236
    ],
    [
        749120,
        416472214
    ],
    [
        749110,
        416416659
    ],
    [
        749080,
        415641331
    ],
    [
        749070,
        416519331
    ],
    [
        749050,
        415296881
    ],
    [
        749040,
        415263548
    ],
    [
        749030,
        419825556
    ],
    [
        749020,
        418655955
    ],
    [
        748980,
        415500000
    ],
    [
        748970,
        414595573
    ],
    [
        748960,
        417129340
    ],
    [
        748950,
        413336225
    ],
    [
        748940,
        413954440
    ],
    [
        748930,
        414399321
    ],
    [
        748910,
        411000000
    ],
    [
        748890,
        409414026
    ],
    [
        748860,
        409114764
    ],
    [
        748850,
        406660000
    ],
    [
        748840,
        409312996
    ],
    [
        748830,
        408980711
    ],
    [
        748820,
        409822888
    ],
    [
        748810,
        407105787
    ],
    [
        748790,
        407067598
    ],
    [
        748780,
        407622477
    ],
    [
        748760,
        406432208
    ],
    [
        748750,
        406034202
    ],
    [
        748740,
        406467979
    ],
    [
        748730,
        406996587
    ],
    [
        748720,
        406460587
    ],
    [
        748710,
        404913558
    ],
    [
        748700,
        404969073
    ],
    [
        748670,
        403660000
    ],
    [
        748660,
        405000000
    ],
    [
        748640,
        406000000
    ],
    [
        748590,
        406053000
    ],
    [
        748560,
        405000000
    ],
    [
        748510,
        404718000
    ],
    [
        748490,
        404388000
    ],
    [
        748440,
        402000000
    ],
    [
        748410,
        399439000
    ],
    [
        748400,
        398219500
    ],
    [
        748390,
        397000000
    ],
    [
        748380,
        396732500
    ],
    [
        748330,
        397232500
    ],
    [
        748310,
        397597500
    ],
    [
        748300,
        395080060
    ],
    [
        748250,
        394000000
    ],
    [
        748210,
        397325000
    ],
    [
        748190,
        399000000
    ],
    [
        748140,
        401152500
    ],
    [
        748080,
        403630000
    ],
    [
        748020,
        403404500
    ],
    [
        748010,
        403630000
    ],
    [
        748000,
        403788690
    ],
    [
        747980,
        404738442
    ],
    [
        747970,
        404811775
    ],
    [
        747960,
        405000000
    ],
    [
        747950,
        404939553
    ],
    [
        747930,
        404130000
    ],
    [
        747910,
        405253775
    ],
    [
        747880,
        405639442
    ],
    [
        747870,
        405578331
    ],
    [
        747850,
        405999083
    ],
    [
        747830,
        405547119
    ],
    [
        747820,
        404630000
    ],
    [
        747810,
        404548898
    ],
    [
        747800,
        404341216
    ],
    [
        747770,
        401000000
    ],
    [
        747760,
        400742631
    ],
    [
        747750,
        399937000
    ],
    [
        747730,
        399314109
    ],
    [
        747710,
        399110618
    ],
    [
        747700,
        398536830
    ],
    [
        747690,
        398599830
    ],
    [
        747680,
        398443163
    ],
    [
        747660,
        398668053
    ],
    [
        747650,
        398952498
    ],
    [
        747630,
        398239498
    ],
    [
        747610,
        398407463
    ],
    [
        747590,
        397640500
    ],
    [
        747580,
        401686625
    ],
    [
        747550,
        401761375
    ],
    [
        747530,
        399964125
    ],
    [
        747520,
        400141416
    ],
    [
        747500,
        401391220
    ],
    [
        747490,
        402211886
    ],
    [
        747470,
        403071886
    ],
    [
        747440,
        403000000
    ],
    [
        747430,
        402886672
    ],
    [
        747420,
        402794172
    ],
    [
        747400,
        399987556
    ],
    [
        747390,
        401067614
    ],
    [
        747380,
        401703138
    ],
    [
        747370,
        401967582
    ],
    [
        747360,
        403060082
    ],
    [
        747350,
        402598971
    ],
    [
        747340,
        402571261
    ],
    [
        747330,
        403849560
    ],
    [
        747310,
        404000000
    ],
    [
        747300,
        401991961
    ],
    [
        747280,
        400677945
    ],
    [
        747270,
        400076781
    ],
    [
        747260,
        400021225
    ],
    [
        747250,
        400144602
    ],
    [
        747240,
        401343819
    ],
    [
        747230,
        401367152
    ],
    [
        747210,
        401859810
    ],
    [
        747190,
        401680386
    ],
    [
        747180,
        399911500
    ],
    [
        747170,
        399541500
    ],
    [
        747160,
        399477942
    ],
    [
        747150,
        398951442
    ],
    [
        747140,
        398384775
    ],
    [
        747130,
        398078664
    ],
    [
        747120,
        399722948
    ],
    [
        747110,
        398474998
    ],
    [
        747100,
        399389998
    ],
    [
        747090,
        396841500
    ],
    [
        747080,
        397125818
    ],
    [
        747070,
        397000000
    ],
    [
        747060,
        396177750
    ],
    [
        747050,
        395685000
    ],
    [
        747040,
        395535553
    ],
    [
        747020,
        397000000
    ],
    [
        747010,
        395819220
    ],
    [
        747000,
        395077583
    ],
    [
        746980,
        395520000
    ],
    [
        746970,
        397808500
    ],
    [
        746960,
        399250000
    ],
    [
        746950,
        399120000
    ],
    [
        746940,
        401500000
    ],
    [
        746930,
        402900000
    ],
    [
        746910,
        403666997
    ],
    [
        746900,
        404061997
    ],
    [
        746880,
        403000000
    ],
    [
        746850,
        404839586
    ],
    [
        746840,
        403330000
    ],
    [
        746820,
        403251751
    ],
    [
        746810,
        401993000
    ],
    [
        746790,
        399000000
    ],
    [
        746700,
        398730000
    ],
    [
        746690,
        399087830
    ],
    [
        746560,
        398730000
    ],
    [
        746550,
        397442440
    ],
    [
        746510,
        393450000
    ],
    [
        746500,
        393235996
    ],
    [
        746480,
        393000000
    ],
    [
        746460,
        398730000
    ],
    [
        746450,
        400000000
    ],
    [
        746410,
        405000000
    ],
    [
        746390,
        403309000
    ],
    [
        746350,
        403000000
    ],
    [
        746340,
        402997000
    ],
    [
        746330,
        402998500
    ],
    [
        746290,
        404498500
    ],
    [
        746270,
        406000000
    ],
    [
        746260,
        408317291
    ],
    [
        746250,
        408077500
    ],
    [
        746240,
        408393175
    ],
    [
        746230,
        409367500
    ],
    [
        746220,
        410993500
    ],
    [
        746210,
        412207471
    ],
    [
        746180,
        412937000
    ],
    [
        746170,
        412734877
    ],
    [
        746150,
        409846150
    ],
    [
        746140,
        409668372
    ],
    [
        746100,
        412580000
    ],
    [
        746090,
        407710000
    ],
    [
        746080,
        405480000
    ],
    [
        746050,
        404000000
    ],
    [
        746030,
        400834822
    ],
    [
        746010,
        404000000
    ],
    [
        746000,
        406020000
    ],
    [
        745980,
        409070000
    ],
    [
        745970,
        409700000
    ],
    [
        745960,
        417968000
    ],
    [
        745950,
        421634633
    ],
    [
        745920,
        417968000
    ],
    [
        745870,
        417000000
    ],
    [
        745860,
        416705000
    ],
    [
        745790,
        417000000
    ],
    [
        745780,
        414438594
    ],
    [
        745770,
        414996552
    ],
    [
        745750,
        414691552
    ],
    [
        745740,
        413336552
    ],
    [
        745700,
        413560500
    ],
    [
        745690,
        414300500
    ],
    [
        745680,
        422000000
    ],
    [
        745670,
        428135220
    ],
    [
        745660,
        435037523
    ],
    [
        745650,
        436016335
    ],
    [
        745640,
        436646335
    ],
    [
        745630,
        435248108
    ],
    [
        745620,
        436381091
    ],
    [
        745610,
        435629000
    ],
    [
        745600,
        437881571
    ],
    [
        745570,
        423000000
    ],
    [
        745540,
        421871500
    ],
    [
        745530,
        419000000
    ],
    [
        745520,
        417000000
    ],
    [
        745510,
        418986821
    ],
    [
        745500,
        417000000
    ],
    [
        745490,
        414588969
    ],
    [
        745480,
        415128709
    ],
    [
        745470,
        410994331
    ],
    [
        745440,
        409421000
    ],
    [
        745420,
        411000000
    ],
    [
        745360,
        413000000
    ],
    [
        745320,
        413507000
    ],
    [
        745290,
        414000000
    ],
    [
        745250,
        411000000
    ],
    [
        745230,
        412529864
    ],
    [
        745220,
        412025441
    ],
    [
        745200,
        417551500
    ],
    [
        745190,
        418368892
    ],
    [
        745180,
        420912609
    ],
    [
        745160,
        424991441
    ],
    [
        745110,
        418000000
    ],
    [
        745100,
        417533076
    ],
    [
        745090,
        416000000
    ],
    [
        745070,
        415038966
    ],
    [
        745050,
        415055632
    ],
    [
        745030,
        413780077
    ],
    [
        745020,
        414454521
    ],
    [
        745010,
        416000000
    ],
    [
        745000,
        413372442
    ],
    [
        744980,
        411417442
    ],
    [
        744970,
        409545000
    ],
    [
        744960,
        408545170
    ],
    [
        744950,
        408000000
    ],
    [
        744910,
        415500000
    ],
    [
        744900,
        426773321
    ],
    [
        744890,
        428194590
    ],
    [
        744880,
        429547019
    ],
    [
        744790,
        424000000
    ],
    [
        744780,
        422989128
    ],
    [
        744770,
        422610000
    ],
    [
        744750,
        417500000
    ],
    [
        744740,
        416165771
    ],
    [
        744730,
        417590810
    ],
    [
        744700,
        419000000
    ],
    [
        744690,
        418925000
    ],
    [
        744680,
        418323203
    ],
    [
        744670,
        421125000
    ],
    [
        744660,
        422182331
    ],
    [
        744640,
        421916085
    ],
    [
        744610,
        420665000
    ],
    [
        744580,
        419989000
    ],
    [
        744570,
        420665000
    ],
    [
        744560,
        421356587
    ],
    [
        744550,
        421596811
    ],
    [
        744540,
        422660000
    ],
    [
        744510,
        423500000
    ],
    [
        744490,
        421505000
    ],
    [
        744480,
        419226000
    ],
    [
        744460,
        419196000
    ],
    [
        744450,
        416152435
    ],
    [
        744440,
        416407828
    ],
    [
        744430,
        421437442
    ],
    [
        744420,
        422004154
    ],
    [
        744410,
        423661970
    ],
    [
        744400,
        422083775
    ],
    [
        744390,
        421693775
    ],
    [
        744380,
        418750000
    ],
    [
        744370,
        418748303
    ],
    [
        744360,
        416928578
    ],
    [
        744340,
        416250000
    ],
    [
        744320,
        417278578
    ],
    [
        744310,
        416485737
    ],
    [
        744300,
        416808980
    ],
    [
        744290,
        412645000
    ],
    [
        744270,
        413500000
    ],
    [
        744260,
        410946756
    ],
    [
        744250,
        410990500
    ],
    [
        744240,
        409990500
    ],
    [
        744230,
        408612553
    ],
    [
        744220,
        408974775
    ],
    [
        744200,
        408862553
    ],
    [
        744190,
        408475331
    ],
    [
        744180,
        407833775
    ],
    [
        744160,
        408192221
    ],
    [
        744150,
        408531000
    ],
    [
        744140,
        409136000
    ],
    [
        744130,
        408840000
    ],
    [
        744120,
        410000000
    ],
    [
        744090,
        416099500
    ],
    [
        744070,
        415971615
    ],
    [
        744050,
        416487500
    ],
    [
        744040,
        416359220
    ],
    [
        744020,
        416894963
    ],
    [
        744000,
        417742331
    ],
    [
        743990,
        418124442
    ],
    [
        743970,
        418273442
    ],
    [
        743950,
        417616775
    ],
    [
        743930,
        417852935
    ],
    [
        743920,
        418438886
    ],
    [
        743900,
        417785188
    ],
    [
        743870,
        417532664
    ],
    [
        743860,
        417683831
    ],
    [
        743840,
        417305859
    ],
    [
        743820,
        417115859
    ],
    [
        743810,
        417295061
    ],
    [
        743790,
        417164509
    ],
    [
        743770,
        415843691
    ],
    [
        743750,
        416000000
    ],
    [
        743740,
        415079886
    ],
    [
        743730,
        414605267
    ],
    [
        743720,
        412250500
    ],
    [
        743680,
        410765000
    ],
    [
        743650,
        410042109
    ],
    [
        743640,
        408474886
    ],
    [
        743630,
        408508220
    ],
    [
        743610,
        408567109
    ],
    [
        743600,
        408283370
    ],
    [
        743560,
        407000000
    ],
    [
        743540,
        406910294
    ],
    [
        743530,
        407670000
    ],
    [
        743500,
        408263412
    ],
    [
        743480,
        408590775
    ],
    [
        743470,
        408646852
    ],
    [
        743450,
        409685875
    ],
    [
        743440,
        409396053
    ],
    [
        743430,
        407603553
    ],
    [
        743420,
        408673748
    ],
    [
        743410,
        406955109
    ],
    [
        743400,
        406750109
    ],
    [
        743390,
        406839107
    ],
    [
        743370,
        406997515
    ],
    [
        743350,
        404754440
    ],
    [
        743340,
        404805551
    ],
    [
        743330,
        404981617
    ],
    [
        743280,
        404710000
    ],
    [
        743230,
        401000000
    ],
    [
        743220,
        400217204
    ],
    [
        743190,
        400508315
    ],
    [
        743180,
        400519426
    ],
    [
        743170,
        401266440
    ],
    [
        743150,
        399300000
    ],
    [
        743130,
        400535329
    ],
    [
        743120,
        400059773
    ],
    [
        743110,
        403000000
    ],
    [
        743060,
        402521000
    ],
    [
        743050,
        401880344
    ],
    [
        743040,
        401000000
    ],
    [
        743030,
        397484985
    ],
    [
        743020,
        397198318
    ],
    [
        742990,
        401000000
    ],
    [
        742960,
        404520597
    ],
    [
        742950,
        404429748
    ],
    [
        742940,
        403000000
    ],
    [
        742930,
        406000000
    ],
    [
        742890,
        416000000
    ],
    [
        742880,
        421000000
    ],
    [
        742870,
        420499000
    ],
    [
        742850,
        418000000
    ],
    [
        742840,
        415237442
    ],
    [
        742830,
        416248410
    ],
    [
        742820,
        415061645
    ],
    [
        742810,
        416215645
    ],
    [
        742800,
        418811609
    ],
    [
        742790,
        418590497
    ],
    [
        742780,
        419212886
    ],
    [
        742770,
        419713524
    ],
    [
        742760,
        419927968
    ],
    [
        742750,
        418000000
    ],
    [
        742740,
        408921782
    ],
    [
        742730,
        402770000
    ],
    [
        742720,
        400973905
    ],
    [
        742710,
        402770000
    ],
    [
        742690,
        404782500
    ],
    [
        742680,
        406262000
    ],
    [
        742660,
        408992000
    ],
    [
        742650,
        403271060
    ],
    [
        742620,
        403174500
    ],
    [
        742610,
        404270000
    ],
    [
        742600,
        408332220
    ],
    [
        742590,
        411505000
    ],
    [
        742580,
        412974418
    ],
    [
        742560,
        411795000
    ],
    [
        742550,
        411124875
    ],
    [
        742540,
        411000000
    ],
    [
        742530,
        416500000
    ],
    [
        742520,
        417883976
    ],
    [
        742510,
        420084775
    ],
    [
        742500,
        419648236
    ],
    [
        742490,
        418657331
    ],
    [
        742470,
        418000000
    ],
    [
        742450,
        417256442
    ],
    [
        742440,
        415103942
    ],
    [
        742430,
        413245156
    ],
    [
        742420,
        413155314
    ],
    [
        742390,
        412847500
    ],
    [
        742380,
        411237000
    ],
    [
        742370,
        411594763
    ],
    [
        742330,
        410737000
    ],
    [
        742310,
        411000000
    ],
    [
        742250,
        412000000
    ],
    [
        742240,
        415024000
    ],
    [
        742230,
        415398664
    ],
    [
        742220,
        415024000
    ],
    [
        742200,
        417040000
    ],
    [
        742190,
        418645500
    ],
    [
        742160,
        421605500
    ],
    [
        742140,
        422095000
    ],
    [
        742120,
        424569500
    ],
    [
        742100,
        425650942
    ],
    [
        742080,
        426857928
    ],
    [
        742070,
        427153331
    ],
    [
        742050,
        424714907
    ],
    [
        742040,
        424195220
    ],
    [
        742020,
        423718553
    ],
    [
        742010,
        423080000
    ],
    [
        741990,
        422905906
    ],
    [
        741970,
        422595000
    ],
    [
        741940,
        425095000
    ],
    [
        741920,
        426861669
    ],
    [
        741910,
        427352780
    ],
    [
        741890,
        427447417
    ],
    [
        741880,
        427344386
    ],
    [
        741870,
        429952831
    ],
    [
        741860,
        430535553
    ],
    [
        741840,
        430197006
    ],
    [
        741830,
        431234602
    ],
    [
        741820,
        431273491
    ],
    [
        741810,
        433847186
    ],
    [
        741800,
        433599186
    ],
    [
        741790,
        432454161
    ],
    [
        741770,
        431143997
    ],
    [
        741760,
        431116442
    ],
    [
        741750,
        431391635
    ],
    [
        741740,
        431373159
    ],
    [
        741730,
        433068886
    ],
    [
        741720,
        433034305
    ],
    [
        741710,
        433356664
    ],
    [
        741660,
        427000000
    ],
    [
        741650,
        425161553
    ],
    [
        741640,
        422095000
    ],
    [
        741620,
        425613890
    ],
    [
        741610,
        425790997
    ],
    [
        741600,
        427553644
    ],
    [
        741590,
        429965876
    ],
    [
        741580,
        428974154
    ],
    [
        741570,
        428015000
    ],
    [
        741550,
        429364876
    ],
    [
        741540,
        433415000
    ],
    [
        741530,
        431744442
    ],
    [
        741520,
        433415000
    ],
    [
        741510,
        430588135
    ],
    [
        741500,
        427617529
    ],
    [
        741480,
        426500000
    ],
    [
        741470,
        424930000
    ],
    [
        741460,
        426430000
    ],
    [
        741450,
        424883664
    ],
    [
        741440,
        425292500
    ],
    [
        741430,
        425972000
    ],
    [
        741420,
        421972000
    ],
    [
        741410,
        419438821
    ],
    [
        741400,
        418000000
    ],
    [
        741390,
        417284654
    ],
    [
        741380,
        417134149
    ],
    [
        741370,
        419134149
    ],
    [
        741320,
        422000000
    ],
    [
        741310,
        420293373
    ],
    [
        741300,
        417445679
    ],
    [
        741290,
        420334220
    ],
    [
        741280,
        418347122
    ],
    [
        741270,
        420265476
    ],
    [
        741260,
        417741500
    ],
    [
        741250,
        422707567
    ],
    [
        741240,
        424932552
    ],
    [
        741210,
        408000000
    ],
    [
        741190,
        404434500
    ],
    [
        741180,
        404214500
    ],
    [
        741170,
        402148503
    ],
    [
        741150,
        401280000
    ],
    [
        741140,
        405000010
    ],
    [
        741130,
        405895669
    ],
    [
        741090,
        406000000
    ],
    [
        741080,
        404061000
    ],
    [
        741070,
        401841000
    ],
    [
        741060,
        400454308
    ],
    [
        740990,
        386500000
    ],
    [
        740980,
        385686953
    ],
    [
        740970,
        385753619
    ],
    [
        740960,
        386500000
    ],
    [
        740940,
        383875500
    ],
    [
        740930,
        383397613
    ],
    [
        740920,
        384273113
    ],
    [
        740900,
        383825500
    ],
    [
        740890,
        386281368
    ],
    [
        740880,
        386450000
    ],
    [
        740870,
        386355069
    ],
    [
        740850,
        385450000
    ],
    [
        740840,
        384407130
    ],
    [
        740820,
        381892000
    ],
    [
        740810,
        385450000
    ],
    [
        740800,
        388000000
    ],
    [
        740790,
        393386997
    ],
    [
        740760,
        395598006
    ],
    [
        740750,
        398209943
    ],
    [
        740740,
        401968943
    ],
    [
        740730,
        402295221
    ],
    [
        740710,
        408497976
    ],
    [
        740690,
        410084076
    ],
    [
        740680,
        412624574
    ],
    [
        740660,
        410385000
    ],
    [
        740610,
        404000000
    ],
    [
        740600,
        400690832
    ],
    [
        740590,
        402510886
    ],
    [
        740570,
        401711220
    ],
    [
        740550,
        402222175
    ],
    [
        740540,
        400748958
    ],
    [
        740530,
        398359309
    ],
    [
        740520,
        400406500
    ],
    [
        740470,
        400000000
    ],
    [
        740450,
        398839774
    ],
    [
        740420,
        399132331
    ],
    [
        740400,
        399231220
    ],
    [
        740390,
        395297720
    ],
    [
        740380,
        395433000
    ],
    [
        740350,
        394066500
    ],
    [
        740340,
        392079585
    ],
    [
        740330,
        384894062
    ],
    [
        740320,
        384288013
    ],
    [
        740310,
        386791046
    ],
    [
        740270,
        380487000
    ],
    [
        740250,
        379000000
    ],
    [
        740240,
        378740500
    ],
    [
        740200,
        378000000
    ],
    [
        740190,
        377436331
    ],
    [
        740180,
        375642934
    ],
    [
        740170,
        375424000
    ],
    [
        740140,
        371424000
    ],
    [
        740110,
        370000000
    ],
    [
        740060,
        381379000
    ],
    [
        740040,
        382450000
    ],
    [
        740030,
        384450000
    ],
    [
        740000,
        387348000
    ],
    [
        739990,
        390916294
    ],
    [
        739980,
        393018294
    ],
    [
        739970,
        395775000
    ],
    [
        739960,
        396261687
    ],
    [
        739670,
        390830233
    ],
    [
        739650,
        390759000
    ],
    [
        739640,
        389304553
    ],
    [
        739630,
        389047331
    ],
    [
        739620,
        389075109
    ],
    [
        739610,
        388055109
    ],
    [
        739600,
        387555109
    ],
    [
        739580,
        388253998
    ],
    [
        739570,
        387615942
    ],
    [
        739560,
        386732609
    ],
    [
        739550,
        386347500
    ],
    [
        739540,
        385328364
    ],
    [
        739530,
        385443920
    ],
    [
        739510,
        385349377
    ],
    [
        739500,
        384167155
    ],
    [
        739460,
        383000000
    ],
    [
        739450,
        382195187
    ],
    [
        739440,
        380866083
    ],
    [
        739430,
        382371837
    ],
    [
        739420,
        384639998
    ],
    [
        739400,
        384471109
    ],
    [
        739390,
        384608886
    ],
    [
        739380,
        387932386
    ],
    [
        739360,
        390648732
    ],
    [
        739350,
        393732313
    ],
    [
        739340,
        393105608
    ],
    [
        739320,
        393915608
    ],
    [
        739300,
        395587331
    ],
    [
        739290,
        395419298
    ],
    [
        739270,
        394156643
    ],
    [
        739260,
        393989977
    ],
    [
        739250,
        393866037
    ],
    [
        739230,
        394932869
    ],
    [
        739210,
        395000000
    ],
    [
        739190,
        394464111
    ],
    [
        739180,
        394414111
    ],
    [
        739170,
        392047775
    ],
    [
        739160,
        389316182
    ],
    [
        739150,
        388199182
    ],
    [
        739140,
        390561654
    ],
    [
        739120,
        391227109
    ],
    [
        739100,
        389596998
    ],
    [
        739090,
        390056998
    ],
    [
        739080,
        389849053
    ],
    [
        739070,
        390176182
    ],
    [
        739050,
        389656148
    ],
    [
        739040,
        390569648
    ],
    [
        739030,
        390122201
    ],
    [
        739020,
        393000000
    ],
    [
        739010,
        398072609
    ],
    [
        738980,
        400343890
    ],
    [
        738970,
        402735804
    ],
    [
        738960,
        403334363
    ],
    [
        738950,
        402203178
    ],
    [
        738920,
        405654611
    ],
    [
        738910,
        406000000
    ],
    [
        738890,
        401201688
    ],
    [
        738880,
        398809500
    ],
    [
        738840,
        397500000
    ],
    [
        738820,
        396766797
    ],
    [
        738800,
        397411220
    ],
    [
        738790,
        398083593
    ],
    [
        738780,
        397485220
    ],
    [
        738760,
        396727000
    ],
    [
        738750,
        396172886
    ],
    [
        738730,
        397520220
    ],
    [
        738720,
        397604664
    ],
    [
        738700,
        400102942
    ],
    [
        738630,
        394000000
    ],
    [
        738610,
        398267009
    ],
    [
        738590,
        399986775
    ],
    [
        738580,
        398744220
    ],
    [
        738560,
        399632331
    ],
    [
        738540,
        398565886
    ],
    [
        738520,
        398059415
    ],
    [
        738500,
        399060816
    ],
    [
        738490,
        400411690
    ],
    [
        738470,
        396000000
    ],
    [
        738450,
        395334998
    ],
    [
        738430,
        395486800
    ],
    [
        738410,
        385735060
    ],
    [
        738400,
        387970813
    ],
    [
        738380,
        387835000
    ],
    [
        738340,
        375500000
    ],
    [
        738330,
        375069700
    ],
    [
        738300,
        374200000
    ],
    [
        738290,
        372635000
    ],
    [
        738280,
        372200000
    ],
    [
        738270,
        372870000
    ],
    [
        738230,
        373000000
    ],
    [
        738220,
        376615000
    ],
    [
        738190,
        380000000
    ],
    [
        738050,
        385000000
    ],
    [
        738010,
        382020000
    ],
    [
        737990,
        378000000
    ],
    [
        737930,
        373000000
    ],
    [
        737890,
        364740000
    ],
    [
        737870,
        364000000
    ],
    [
        737830,
        363262000
    ],
    [
        737810,
        367047000
    ],
    [
        737800,
        367653275
    ],
    [
        737780,
        367017720
    ],
    [
        737770,
        367047000
    ],
    [
        737760,
        366028490
    ],
    [
        737750,
        362094900
    ],
    [
        737730,
        361000000
    ],
    [
        737590,
        370000000
    ],
    [
        737580,
        362283000
    ],
    [
        737570,
        359502663
    ],
    [
        737550,
        360332802
    ],
    [
        737520,
        358000000
    ],
    [
        737380,
        363000000
    ],
    [
        737370,
        361670000
    ],
    [
        737360,
        362604440
    ],
    [
        737330,
        361670000
    ],
    [
        737310,
        364339000
    ],
    [
        737270,
        372000000
    ],
    [
        737230,
        375000000
    ],
    [
        737210,
        375112423
    ],
    [
        737200,
        375000000
    ],
    [
        737190,
        371352070
    ],
    [
        737180,
        370027611
    ],
    [
        737160,
        367892000
    ],
    [
        737150,
        365379076
    ],
    [
        737140,
        363919076
    ],
    [
        737130,
        363482218
    ],
    [
        737120,
        364024218
    ],
    [
        737110,
        366297996
    ],
    [
        737100,
        367311130
    ],
    [
        737090,
        362848000
    ],
    [
        737080,
        359915716
    ],
    [
        737070,
        362848000
    ],
    [
        737050,
        362691309
    ],
    [
        737040,
        362848000
    ],
    [
        737030,
        358304874
    ],
    [
        737020,
        356114297
    ],
    [
        736980,
        382020000
    ],
    [
        736930,
        384068000
    ],
    [
        736920,
        387106823
    ],
    [
        736910,
        385528440
    ],
    [
        736890,
        383850000
    ],
    [
        736880,
        387485908
    ],
    [
        736870,
        385180146
    ],
    [
        736850,
        389201402
    ],
    [
        736840,
        384131966
    ],
    [
        736800,
        396545000
    ],
    [
        736780,
        400000000
    ],
    [
        736760,
        402000000
    ],
    [
        736750,
        402757075
    ],
    [
        736720,
        407500000
    ],
    [
        736690,
        411000000
    ],
    [
        736680,
        409000000
    ],
    [
        736670,
        410723331
    ],
    [
        736660,
        410718525
    ],
    [
        736640,
        409110000
    ],
    [
        736630,
        408482735
    ],
    [
        736620,
        407450885
    ],
    [
        736610,
        409589710
    ],
    [
        736600,
        412133488
    ],
    [
        736590,
        411927000
    ],
    [
        736580,
        407851345
    ],
    [
        736570,
        410754299
    ],
    [
        736560,
        412183681
    ],
    [
        736550,
        415558004
    ],
    [
        736540,
        406470004
    ],
    [
        736520,
        409839000
    ],
    [
        736470,
        389370000
    ],
    [
        736450,
        389000000
    ],
    [
        736440,
        390493424
    ],
    [
        736420,
        391000000
    ],
    [
        736390,
        389324323
    ],
    [
        736330,
        385000000
    ],
    [
        736320,
        381232723
    ],
    [
        736310,
        375394457
    ],
    [
        736290,
        384823034
    ],
    [
        736260,
        386000000
    ],
    [
        736210,
        379000000
    ],
    [
        736180,
        377860000
    ],
    [
        736170,
        375835636
    ],
    [
        736160,
        376026747
    ],
    [
        736140,
        377135270
    ],
    [
        736120,
        373729000
    ],
    [
        736050,
        366000000
    ],
    [
        735970,
        367000000
    ],
    [
        735950,
        370490000
    ],
    [
        735940,
        370853000
    ],
    [
        735930,
        372621666
    ],
    [
        735920,
        375000000
    ],
    [
        735910,
        373261394
    ],
    [
        735900,
        373815107
    ],
    [
        735870,
        372076000
    ],
    [
        735840,
        370000000
    ],
    [
        735790,
        376496000
    ],
    [
        735700,
        374000000
    ],
    [
        735660,
        375000000
    ],
    [
        735650,
        373665000
    ],
    [
        735640,
        370725229
    ],
    [
        735630,
        373665000
    ],
    [
        735610,
        370389259
    ],
    [
        735600,
        369043584
    ],
    [
        735590,
        373082779
    ],
    [
        735580,
        374497946
    ],
    [
        735570,
        380149000
    ],
    [
        735490,
        370000000
    ],
    [
        735480,
        368460795
    ],
    [
        735460,
        370000000
    ],
    [
        735440,
        366910000
    ],
    [
        735430,
        369153257
    ],
    [
        735410,
        364000000
    ],
    [
        735370,
        350000000
    ],
    [
        735310,
        338000000
    ],
    [
        735270,
        332000000
    ],
    [
        735230,
        331682000
    ],
    [
        735210,
        332000000
    ],
    [
        735190,
        333059107
    ],
    [
        735140,
        335000000
    ],
    [
        735050,
        341000000
    ],
    [
        735040,
        338556663
    ],
    [
        735010,
        328000000
    ],
    [
        735000,
        327642289
    ],
    [
        734990,
        326809000
    ],
    [
        734980,
        327191690
    ],
    [
        734970,
        323817774
    ],
    [
        734960,
        321700000
    ],
    [
        734950,
        321507225
    ],
    [
        734940,
        320000000
    ],
    [
        734920,
        321700000
    ],
    [
        734880,
        325347000
    ],
    [
        734870,
        327799552
    ],
    [
        734830,
        327442000
    ],
    [
        734810,
        330394330
    ],
    [
        734780,
        343000000
    ],
    [
        734730,
        339000000
    ],
    [
        734660,
        337000000
    ],
    [
        734620,
        340726000
    ],
    [
        734610,
        340875534
    ],
    [
        734590,
        344000000
    ],
    [
        734540,
        343000000
    ],
    [
        734530,
        342285000
    ],
    [
        734520,
        339104663
    ],
    [
        734460,
        337000000
    ],
    [
        734450,
        333980000
    ],
    [
        734400,
        333000000
    ],
    [
        734350,
        332447000
    ],
    [
        734330,
        335000000
    ],
    [
        734290,
        335694000
    ],
    [
        734280,
        337246218
    ],
    [
        734260,
        339000000
    ],
    [
        734210,
        341959000
    ],
    [
        734200,
        341622547
    ],
    [
        734190,
        337584519
    ],
    [
        734180,
        335647423
    ],
    [
        734160,
        332992441
    ],
    [
        734150,
        336634981
    ],
    [
        734140,
        333198892
    ],
    [
        734010,
        319000000
    ],
    [
        734000,
        313720000
    ],
    [
        733990,
        314159107
    ],
    [
        733980,
        313720000
    ],
    [
        733970,
        318767512
    ],
    [
        733950,
        321855000
    ],
    [
        733900,
        313720000
    ],
    [
        733890,
        313087753
    ],
    [
        733860,
        310000000
    ],
    [
        733840,
        309000000
    ],
    [
        733790,
        306000000
    ],
    [
        733780,
        305674285
    ],
    [
        733750,
        297000000
    ],
    [
        733740,
        297048460
    ],
    [
        733730,
        298337349
    ],
    [
        733720,
        302220091
    ],
    [
        733690,
        303070000
    ],
    [
        733680,
        302505996
    ],
    [
        733670,
        303070000
    ],
    [
        733650,
        303476000
    ],
    [
        733640,
        305419077
    ],
    [
        733630,
        303749655
    ],
    [
        733590,
        308000000
    ],
    [
        733580,
        309000000
    ],
    [
        733570,
        311000000
    ],
    [
        733550,
        313086000
    ],
    [
        733520,
        314215500
    ],
    [
        733490,
        312305000
    ],
    [
        733470,
        309601218
    ],
    [
        733460,
        308253442
    ],
    [
        733450,
        305601805
    ],
    [
        733440,
        307393855
    ],
    [
        733430,
        313730321
    ],
    [
        733410,
        315000000
    ],
    [
        733380,
        312608500
    ],
    [
        733340,
        299000000
    ],
    [
        733310,
        294900000
    ],
    [
        733290,
        278578000
    ],
    [
        733280,
        275768567
    ],
    [
        733270,
        278497191
    ],
    [
        733250,
        277769791
    ],
    [
        733240,
        274220554
    ],
    [
        733190,
        286000000
    ],
    [
        733180,
        288212500
    ],
    [
        733150,
        286000000
    ],
    [
        733140,
        287678393
    ],
    [
        733130,
        287816998
    ],
    [
        733100,
        286000000
    ],
    [
        733080,
        288399849
    ],
    [
        733070,
        288936317
    ],
    [
        733060,
        285246835
    ],
    [
        733030,
        291400000
    ],
    [
        733020,
        294513702
    ],
    [
        733010,
        297719266
    ],
    [
        733000,
        299954401
    ],
    [
        732990,
        307000828
    ],
    [
        732960,
        315000000
    ],
    [
        732940,
        315519000
    ],
    [
        732930,
        314675693
    ],
    [
        732920,
        314951249
    ],
    [
        732910,
        315250109
    ],
    [
        732890,
        314578887
    ],
    [
        732870,
        320750000
    ],
    [
        732840,
        324000000
    ],
    [
        732830,
        323694500
    ],
    [
        732820,
        324000000
    ],
    [
        732770,
        330000000
    ],
    [
        732750,
        336564500
    ],
    [
        732700,
        346500000
    ],
    [
        732670,
        347459000
    ],
    [
        732630,
        345959000
    ],
    [
        732600,
        348472476
    ],
    [
        732530,
        349472476
    ],
    [
        732490,
        356083500
    ],
    [
        732460,
        356727000
    ],
    [
        732420,
        358792000
    ],
    [
        732360,
        358651000
    ],
    [
        732310,
        361498000
    ],
    [
        732290,
        356905476
    ],
    [
        732260,
        356840476
    ],
    [
        732210,
        354972476
    ],
    [
        732190,
        354472976
    ],
    [
        732160,
        350492476
    ],
    [
        732150,
        350944953
    ],
    [
        732120,
        350040000
    ],
    [
        732080,
        347642000
    ],
    [
        732030,
        343000000
    ],
    [
        732010,
        341000000
    ],
    [
        731990,
        343000000
    ],
    [
        731940,
        350000000
    ],
    [
        731900,
        352477996
    ],
    [
        731880,
        352614000
    ],
    [
        731870,
        350000000
    ],
    [
        731860,
        348281580
    ],
    [
        731850,
        349646887
    ],
    [
        731830,
        350000000
    ],
    [
        731820,
        344959829
    ],
    [
        731810,
        342699000
    ],
    [
        731800,
        345916994
    ],
    [
        731790,
        341746987
    ],
    [
        731780,
        349755552
    ],
    [
        731740,
        359000000
    ],
    [
        731720,
        361463000
    ],
    [
        731680,
        363000000
    ],
    [
        731670,
        369875702
    ],
    [
        731620,
        377000000
    ],
    [
        731600,
        384000000
    ],
    [
        731590,
        382497117
    ],
    [
        731560,
        380000000
    ],
    [
        731550,
        387971000
    ],
    [
        731530,
        395000000
    ],
    [
        731520,
        400000000
    ],
    [
        731480,
        400955000
    ],
    [
        731450,
        400000000
    ],
    [
        731420,
        398000000
    ],
    [
        731410,
        397153000
    ],
    [
        731380,
        397602000
    ],
    [
        731370,
        397419756
    ],
    [
        731350,
        397602000
    ],
    [
        731300,
        397000000
    ],
    [
        731290,
        397481661
    ],
    [
        731280,
        397000000
    ],
    [
        731260,
        401601345
    ],
    [
        731240,
        397000000
    ],
    [
        731170,
        403000000
    ],
    [
        731130,
        412000000
    ],
    [
        731120,
        412346218
    ],
    [
        731100,
        412000000
    ],
    [
        731020,
        412780000
    ],
    [
        730980,
        412450000
    ],
    [
        730950,
        412780000
    ],
    [
        730910,
        418173000
    ],
    [
        730890,
        417694000
    ],
    [
        730880,
        419370218
    ],
    [
        730850,
        417694000
    ],
    [
        730810,
        417000000
    ],
    [
        730770,
        424666000
    ],
    [
        730680,
        426000000
    ],
    [
        730540,
        429750000
    ],
    [
        730520,
        425000000
    ],
    [
        730510,
        422315733
    ],
    [
        730490,
        422000000
    ],
    [
        730460,
        423000762
    ],
    [
        730440,
        424256439
    ],
    [
        730420,
        425348452
    ],
    [
        730390,
        425000000
    ],
    [
        730370,
        424000000
    ],
    [
        730360,
        426592000
    ],
    [
        730340,
        424668108
    ],
    [
        730320,
        427189000
    ],
    [
        730280,
        426000000
    ],
    [
        730260,
        424197000
    ],
    [
        730250,
        424000000
    ],
    [
        730200,
        424197000
    ],
    [
        730180,
        425000000
    ],
    [
        730130,
        424000000
    ],
    [
        730120,
        423620217
    ],
    [
        730100,
        423437995
    ],
    [
        730090,
        423482440
    ],
    [
        730070,
        423893551
    ],
    [
        730060,
        423235000
    ],
    [
        730040,
        426000000
    ],
    [
        729990,
        425000000
    ],
    [
        729920,
        424305000
    ],
    [
        729890,
        421672676
    ],
    [
        729850,
        416000000
    ],
    [
        729780,
        414709000
    ],
    [
        729750,
        415025000
    ],
    [
        729700,
        415320000
    ],
    [
        729640,
        416281000
    ],
    [
        729630,
        417173551
    ],
    [
        729610,
        417240000
    ],
    [
        729590,
        415320000
    ],
    [
        729570,
        415000000
    ],
    [
        729560,
        415320000
    ],
    [
        729530,
        415000000
    ],
    [
        729490,
        415320000
    ],
    [
        729460,
        417000000
    ],
    [
        729430,
        415575328
    ],
    [
        729410,
        419025988
    ],
    [
        729370,
        413969266
    ],
    [
        729360,
        413000000
    ],
    [
        729350,
        409975000
    ],
    [
        729330,
        410187951
    ],
    [
        729320,
        418190000
    ],
    [
        729280,
        429000000
    ],
    [
        729250,
        435000000
    ],
    [
        729220,
        432925000
    ],
    [
        729190,
        436600000
    ],
    [
        729120,
        436689000
    ],
    [
        729100,
        437000000
    ],
    [
        729090,
        436600000
    ],
    [
        729080,
        437000000
    ],
    [
        729070,
        437002298
    ],
    [
        729050,
        437000000
    ],
    [
        729020,
        436552000
    ],
    [
        728970,
        434000000
    ],
    [
        728960,
        443472000
    ],
    [
        728920,
        446000000
    ],
    [
        728910,
        446723594
    ],
    [
        728900,
        447743534
    ],
    [
        728850,
        456000000
    ],
    [
        728820,
        453149000
    ],
    [
        728800,
        452000000
    ],
    [
        728790,
        452401106
    ],
    [
        728760,
        452000000
    ],
    [
        728650,
        456700000
    ],
    [
        728630,
        455332000
    ],
    [
        728620,
        454000000
    ],
    [
        728560,
        453000000
    ],
    [
        728420,
        450000000
    ],
    [
        728380,
        455435000
    ],
    [
        728350,
        455231000
    ],
    [
        728340,
        454245773
    ],
    [
        728330,
        454056884
    ],
    [
        728300,
        454431125
    ],
    [
        728280,
        453000000
    ],
    [
        728230,
        454686000
    ],
    [
        728210,
        455000000
    ],
    [
        728160,
        452000000
    ],
    [
        728150,
        449780000
    ],
    [
        728140,
        451652662
    ],
    [
        728110,
        451927292
    ],
    [
        728090,
        449780000
    ],
    [
        728060,
        454645000
    ],
    [
        728000,
        449780000
    ],
    [
        727990,
        448000000
    ],
    [
        727850,
        456700000
    ],
    [
        727810,
        454000000
    ],
    [
        727790,
        452859000
    ],
    [
        727720,
        454000000
    ],
    [
        727710,
        454871682
    ],
    [
        727600,
        456700000
    ],
    [
        727590,
        456268000
    ],
    [
        727580,
        456700000
    ],
    [
        727570,
        458211000
    ],
    [
        727510,
        461000000
    ],
    [
        727450,
        463282008
    ],
    [
        727440,
        460705004
    ],
    [
        727410,
        453000000
    ],
    [
        727400,
        452900000
    ],
    [
        727370,
        452885000
    ],
    [
        727360,
        432885000
    ],
    [
        727040,
        419500000
    ],
    [
        727020,
        419488842
    ],
    [
        727010,
        417957528
    ],
    [
        726870,
        419500000
    ],
    [
        726860,
        419369220
    ],
    [
        726710,
        419500000
    ],
    [
        726680,
        418701442
    ],
    [
        726580,
        412040000
    ],
    [
        726560,
        411015000
    ],
    [
        726540,
        409985500
    ],
    [
        726520,
        409010500
    ],
    [
        726490,
        409620000
    ],
    [
        726460,
        410595000
    ],
    [
        726410,
        410371500
    ],
    [
        726400,
        410726500
    ],
    [
        726380,
        413216775
    ],
    [
        726370,
        413096775
    ],
    [
        726350,
        412697109
    ],
    [
        726330,
        412876554
    ],
    [
        726310,
        411181503
    ],
    [
        726300,
        414946682
    ],
    [
        726260,
        412975000
    ],
    [
        726210,
        411823500
    ],
    [
        726140,
        410595000
    ],
    [
        726110,
        411456742
    ],
    [
        726100,
        412085000
    ],
    [
        726080,
        414935420
    ],
    [
        726060,
        414853965
    ],
    [
        726050,
        414777548
    ],
    [
        726040,
        414659825
    ],
    [
        726020,
        415299000
    ],
    [
        726000,
        414110000
    ],
    [
        725990,
        413166379
    ],
    [
        725970,
        414110000
    ],
    [
        725960,
        412340362
    ],
    [
        725950,
        412230362
    ],
    [
        725920,
        412826220
    ],
    [
        725910,
        412797940
    ],
    [
        725900,
        413000000
    ],
    [
        725890,
        413093712
    ],
    [
        725850,
        413000000
    ],
    [
        725830,
        410950000
    ],
    [
        725820,
        412090000
    ],
    [
        725800,
        410560000
    ],
    [
        725790,
        415007000
    ],
    [
        725780,
        414530000
    ],
    [
        725770,
        414610000
    ],
    [
        725760,
        414188700
    ],
    [
        725750,
        414758163
    ],
    [
        725740,
        412000000
    ],
    [
        725720,
        410560000
    ],
    [
        725700,
        412000000
    ],
    [
        725690,
        410560000
    ],
    [
        725680,
        412000000
    ],
    [
        725640,
        414350000
    ],
    [
        725630,
        417750000
    ],
    [
        725620,
        414350000
    ],
    [
        725610,
        418207329
    ],
    [
        725590,
        418624612
    ],
    [
        725580,
        419030856
    ],
    [
        725570,
        418873802
    ],
    [
        725550,
        418186469
    ],
    [
        725540,
        418108884
    ],
    [
        725520,
        414350000
    ],
    [
        725510,
        413640334
    ],
    [
        725500,
        413302403
    ],
    [
        725490,
        414350000
    ],
    [
        725460,
        409000000
    ],
    [
        725390,
        408000000
    ],
    [
        725350,
        414350000
    ],
    [
        725320,
        416000000
    ],
    [
        725280,
        415000000
    ],
    [
        725210,
        414350000
    ],
    [
        725190,
        414454000
    ],
    [
        725180,
        414679995
    ],
    [
        725130,
        414350000
    ],
    [
        725110,
        413879995
    ],
    [
        725100,
        413969106
    ],
    [
        725080,
        414350000
    ],
    [
        725060,
        413257000
    ],
    [
        725050,
        414350000
    ],
    [
        725040,
        416279188
    ],
    [
        725030,
        418749551
    ],
    [
        725010,
        418823995
    ],
    [
        725000,
        419023995
    ],
    [
        724980,
        422830110
    ],
    [
        724970,
        423388581
    ],
    [
        724900,
        423000000
    ],
    [
        724880,
        424000000
    ],
    [
        724850,
        420375791
    ],
    [
        724840,
        419951416
    ],
    [
        724830,
        417544314
    ],
    [
        724820,
        420000000
    ],
    [
        724800,
        418451204
    ],
    [
        724790,
        415911020
    ],
    [
        724750,
        416609000
    ],
    [
        724730,
        415159279
    ],
    [
        724720,
        414350000
    ],
    [
        724700,
        416233773
    ],
    [
        724640,
        413000000
    ],
    [
        724630,
        411949000
    ],
    [
        724620,
        410625869
    ],
    [
        724610,
        410340643
    ],
    [
        724570,
        410000000
    ],
    [
        724560,
        408303329
    ],
    [
        724540,
        408714985
    ],
    [
        724500,
        408000000
    ],
    [
        724430,
        411000000
    ],
    [
        724390,
        411905000
    ],
    [
        724300,
        417000000
    ],
    [
        724270,
        414306481
    ],
    [
        724260,
        418230000
    ],
    [
        724240,
        418370000
    ],
    [
        724230,
        416755662
    ],
    [
        724190,
        416000000
    ],
    [
        724180,
        418743995
    ],
    [
        724160,
        416673000
    ],
    [
        724130,
        415000000
    ],
    [
        724120,
        414719230
    ],
    [
        724110,
        415000000
    ],
    [
        724100,
        413633401
    ],
    [
        724090,
        411206450
    ],
    [
        724080,
        411295338
    ],
    [
        724070,
        411926000
    ],
    [
        724060,
        412300000
    ],
    [
        724050,
        408600000
    ],
    [
        724040,
        409170000
    ],
    [
        724030,
        416040000
    ],
    [
        724010,
        412665079
    ],
    [
        723950,
        409000000
    ],
    [
        723930,
        406432528
    ],
    [
        723910,
        406276629
    ],
    [
        723890,
        408610644
    ],
    [
        723800,
        407540000
    ],
    [
        723770,
        410686662
    ],
    [
        723750,
        411184000
    ],
    [
        723740,
        410524440
    ],
    [
        723720,
        407000000
    ],
    [
        723700,
        403295773
    ],
    [
        723690,
        404037584
    ],
    [
        723670,
        402000000
    ],
    [
        723650,
        401599899
    ],
    [
        723640,
        401655455
    ],
    [
        723630,
        398673511
    ],
    [
        723620,
        400149296
    ],
    [
        723610,
        399819329
    ],
    [
        723600,
        398916600
    ],
    [
        723580,
        399774378
    ],
    [
        723570,
        399535093
    ],
    [
        723560,
        398290000
    ],
    [
        723550,
        398747764
    ],
    [
        723540,
        400766928
    ],
    [
        723530,
        403823000
    ],
    [
        723520,
        399658090
    ],
    [
        723510,
        401009201
    ],
    [
        723480,
        398290000
    ],
    [
        723410,
        392000000
    ],
    [
        723390,
        389040000
    ],
    [
        723340,
        389000000
    ],
    [
        723320,
        387045124
    ],
    [
        723310,
        387022902
    ],
    [
        723270,
        387000000
    ],
    [
        723230,
        395650000
    ],
    [
        723210,
        396000000
    ],
    [
        723190,
        398290000
    ],
    [
        723180,
        396473143
    ],
    [
        723170,
        403090000
    ],
    [
        723160,
        401294349
    ],
    [
        723140,
        404788118
    ],
    [
        723130,
        398908884
    ],
    [
        723120,
        404510000
    ],
    [
        723110,
        401753775
    ],
    [
        723100,
        401135448
    ],
    [
        723090,
        405056218
    ],
    [
        723080,
        405000662
    ],
    [
        723010,
        410000000
    ],
    [
        722980,
        412390000
    ],
    [
        722970,
        409635342
    ],
    [
        722960,
        413885189
    ],
    [
        722950,
        415245773
    ],
    [
        722940,
        414765773
    ],
    [
        722920,
        414000000
    ],
    [
        722900,
        412596218
    ],
    [
        722880,
        409034000
    ],
    [
        722870,
        406000000
    ],
    [
        722820,
        405000000
    ],
    [
        722810,
        404121575
    ],
    [
        722790,
        403030941
    ],
    [
        722780,
        405000000
    ],
    [
        722770,
        406719335
    ],
    [
        722760,
        407059335
    ],
    [
        722740,
        407569000
    ],
    [
        722730,
        402432851
    ],
    [
        722720,
        402837964
    ],
    [
        722690,
        412000000
    ],
    [
        722680,
        414410000
    ],
    [
        722670,
        412894969
    ],
    [
        722660,
        415530000
    ],
    [
        722650,
        413040000
    ],
    [
        722640,
        412796111
    ],
    [
        722630,
        419870000
    ],
    [
        722620,
        419756884
    ],
    [
        722600,
        419636218
    ],
    [
        722590,
        419185583
    ],
    [
        722580,
        420705000
    ],
    [
        722570,
        414371809
    ],
    [
        722560,
        413040000
    ],
    [
        722510,
        420287000
    ],
    [
        722480,
        421530000
    ],
    [
        722470,
        422439167
    ],
    [
        722460,
        428195458
    ],
    [
        722450,
        433440371
    ],
    [
        722440,
        442000000
    ],
    [
        722430,
        443000000
    ],
    [
        722410,
        442750000
    ],
    [
        722390,
        440360000
    ],
    [
        722380,
        439190000
    ],
    [
        722370,
        435087233
    ],
    [
        722360,
        440090000
    ],
    [
        722350,
        437995000
    ],
    [
        722340,
        436815180
    ],
    [
        722330,
        435988513
    ],
    [
        722270,
        435030000
    ],
    [
        722250,
        438588687
    ],
    [
        722240,
        439694259
    ],
    [
        722200,
        447000000
    ],
    [
        722190,
        447819795
    ],
    [
        722180,
        447928735
    ],
    [
        722170,
        446240000
    ],
    [
        722150,
        447361973
    ],
    [
        722140,
        452077745
    ],
    [
        722130,
        450384684
    ],
    [
        722080,
        427690000
    ],
    [
        722060,
        413035000
    ],
    [
        722000,
        402000000
    ],
    [
        721990,
        398310000
    ],
    [
        721980,
        402000000
    ],
    [
        721940,
        401000000
    ],
    [
        721920,
        398310000
    ],
    [
        721870,
        397207000
    ],
    [
        721850,
        400233107
    ],
    [
        721810,
        398310000
    ],
    [
        721800,
        399422790
    ],
    [
        721790,
        398310000
    ],
    [
        721770,
        397887551
    ],
    [
        721730,
        398310000
    ],
    [
        721720,
        401000000
    ],
    [
        721700,
        401678297
    ],
    [
        721660,
        404712000
    ],
    [
        721640,
        405066000
    ],
    [
        721630,
        404061551
    ],
    [
        721600,
        405066000
    ],
    [
        721590,
        404414533
    ],
    [
        721580,
        405600000
    ],
    [
        721570,
        406900000
    ],
    [
        721550,
        404223927
    ],
    [
        721500,
        406900000
    ],
    [
        721460,
        403000000
    ],
    [
        721430,
        398434000
    ],
    [
        721410,
        398000000
    ],
    [
        721390,
        397700000
    ],
    [
        721360,
        392000000
    ],
    [
        721350,
        391493826
    ],
    [
        721330,
        388489000
    ],
    [
        721310,
        393000000
    ],
    [
        721250,
        406900000
    ],
    [
        721210,
        402770000
    ],
    [
        721180,
        404000000
    ],
    [
        721160,
        417227000
    ],
    [
        721150,
        425120000
    ],
    [
        721120,
        426000000
    ],
    [
        721110,
        428291106
    ],
    [
        721100,
        428513367
    ],
    [
        721080,
        430490000
    ],
    [
        721070,
        430000000
    ],
    [
        721060,
        428390000
    ],
    [
        721050,
        429690000
    ],
    [
        721020,
        431000000
    ],
    [
        721000,
        429690000
    ],
    [
        720990,
        429760000
    ],
    [
        720980,
        431035106
    ],
    [
        720960,
        432560000
    ],
    [
        720930,
        432000000
    ],
    [
        720920,
        429100440
    ],
    [
        720910,
        426935000
    ],
    [
        720900,
        429950000
    ],
    [
        720890,
        430871254
    ],
    [
        720870,
        434000000
    ],
    [
        720830,
        429000000
    ],
    [
        720810,
        427946268
    ],
    [
        720800,
        424200000
    ],
    [
        720790,
        423684922
    ],
    [
        720780,
        425000000
    ],
    [
        720770,
        426511106
    ],
    [
        720670,
        416028218
    ],
    [
        720650,
        418477032
    ],
    [
        720640,
        414201093
    ],
    [
        720630,
        424043995
    ],
    [
        720620,
        400000000
    ],
    [
        720580,
        397127000
    ],
    [
        720570,
        392975000
    ],
    [
        720560,
        391000000
    ],
    [
        720550,
        384410000
    ],
    [
        720540,
        388508354
    ],
    [
        720490,
        377000000
    ],
    [
        720450,
        389000000
    ],
    [
        720430,
        387397000
    ],
    [
        720410,
        384750000
    ],
    [
        720400,
        387397000
    ],
    [
        720390,
        387981000
    ],
    [
        720380,
        398899569
    ],
    [
        720330,
        393000000
    ],
    [
        720310,
        403314000
    ],
    [
        720300,
        427157000
    ],
    [
        720280,
        451000000
    ],
    [
        720270,
        474034000
    ],
    [
        720250,
        484094000
    ],
    [
        720220,
        464440000
    ],
    [
        720200,
        462000000
    ],
    [
        720190,
        462221193
    ],
    [
        720160,
        465998500
    ],
    [
        720150,
        466611000
    ],
    [
        720130,
        466621775
    ],
    [
        720120,
        466611000
    ],
    [
        720110,
        466463442
    ],
    [
        720100,
        466364330
    ],
    [
        720070,
        466000000
    ],
    [
        720060,
        465944000
    ],
    [
        720040,
        462000000
    ],
    [
        720030,
        460141500
    ],
    [
        720010,
        457054857
    ],
    [
        720000,
        460843219
    ],
    [
        719990,
        463500000
    ],
    [
        719940,
        465000000
    ],
    [
        719930,
        466000000
    ],
    [
        719910,
        455685000
    ],
    [
        719890,
        453787331
    ],
    [
        719880,
        454718895
    ],
    [
        719870,
        453443678
    ],
    [
        719860,
        450975345
    ],
    [
        719850,
        451185489
    ],
    [
        719840,
        455163500
    ],
    [
        719830,
        458767100
    ],
    [
        719820,
        456073445
    ],
    [
        719810,
        451966405
    ],
    [
        719800,
        454728357
    ],
    [
        719790,
        461201148
    ],
    [
        719740,
        463685000
    ],
    [
        719730,
        464264500
    ],
    [
        719710,
        463248282
    ],
    [
        719700,
        465696971
    ],
    [
        719690,
        468001997
    ],
    [
        719680,
        467320699
    ],
    [
        719660,
        468607040
    ],
    [
        719640,
        471293500
    ],
    [
        719620,
        474185000
    ],
    [
        719610,
        473109257
    ],
    [
        719600,
        473200368
    ],
    [
        719590,
        470862775
    ],
    [
        719580,
        471083938
    ],
    [
        719570,
        473890256
    ],
    [
        719520,
        470685000
    ],
    [
        719490,
        470296500
    ],
    [
        719380,
        446185000
    ],
    [
        719370,
        445185000
    ],
    [
        719350,
        430951500
    ],
    [
        719340,
        426378596
    ],
    [
        719330,
        425346500
    ],
    [
        719320,
        424646664
    ],
    [
        719310,
        425124442
    ],
    [
        719300,
        424059386
    ],
    [
        719290,
        429664386
    ],
    [
        719280,
        428589442
    ],
    [
        719240,
        428168000
    ],
    [
        719200,
        429605000
    ],
    [
        719180,
        430601000
    ],
    [
        719170,
        430605000
    ],
    [
        719160,
        431242664
    ],
    [
        719150,
        430605000
    ],
    [
        719140,
        431084837
    ],
    [
        719120,
        434048500
    ],
    [
        719080,
        436605000
    ],
    [
        719040,
        437397500
    ],
    [
        719030,
        437820697
    ],
    [
        719020,
        437397500
    ],
    [
        719000,
        436707500
    ],
    [
        718990,
        437207500
    ],
    [
        718970,
        438324775
    ],
    [
        718960,
        438030596
    ],
    [
        718940,
        438500000
    ],
    [
        718920,
        441000000
    ],
    [
        718900,
        441496369
    ],
    [
        718880,
        441000000
    ],
    [
        718870,
        441478028
    ],
    [
        718790,
        441777178
    ],
    [
        718770,
        441501000
    ],
    [
        718740,
        441250500
    ],
    [
        718700,
        439000000
    ],
    [
        718690,
        440117300
    ],
    [
        718670,
        439450718
    ],
    [
        718650,
        439000000
    ],
    [
        718640,
        440838775
    ],
    [
        718630,
        442827997
    ],
    [
        718600,
        441954000
    ],
    [
        718590,
        441362000
    ],
    [
        718580,
        441681000
    ],
    [
        718570,
        442000000
    ],
    [
        718540,
        443413331
    ],
    [
        718520,
        442199943
    ],
    [
        718510,
        444599108
    ],
    [
        718500,
        443898860
    ],
    [
        718490,
        444011496
    ],
    [
        718480,
        444020385
    ],
    [
        718460,
        445685000
    ],
    [
        718450,
        446924500
    ],
    [
        718440,
        446239500
    ],
    [
        718430,
        449239500
    ],
    [
        718410,
        449275630
    ],
    [
        718400,
        449684442
    ],
    [
        718380,
        445595098
    ],
    [
        718370,
        444270664
    ],
    [
        718350,
        440090873
    ],
    [
        718280,
        440000000
    ],
    [
        718270,
        438594342
    ],
    [
        718210,
        438000000
    ],
    [
        718180,
        434738495
    ],
    [
        718170,
        431639899
    ],
    [
        718160,
        428901399
    ],
    [
        718140,
        426553421
    ],
    [
        718130,
        430000000
    ],
    [
        718110,
        430287662
    ],
    [
        718100,
        430000000
    ],
    [
        718080,
        435674000
    ],
    [
        718070,
        435945664
    ],
    [
        718000,
        451950000
    ],
    [
        717990,
        454450000
    ],
    [
        717980,
        454543664
    ],
    [
        717960,
        454450000
    ],
    [
        717940,
        455676682
    ],
    [
        717930,
        456000000
    ],
    [
        717910,
        453000000
    ],
    [
        717880,
        452950000
    ],
    [
        717860,
        453000000
    ],
    [
        717850,
        457228608
    ],
    [
        717840,
        456497108
    ],
    [
        717820,
        456791500
    ],
    [
        717800,
        457056219
    ],
    [
        717780,
        455918541
    ],
    [
        717760,
        455193634
    ],
    [
        717730,
        455431738
    ],
    [
        717720,
        457184368
    ],
    [
        717700,
        457014203
    ],
    [
        717690,
        454480000
    ],
    [
        717660,
        456942202
    ],
    [
        717650,
        455394577
    ],
    [
        717640,
        455667775
    ],
    [
        717630,
        455715000
    ],
    [
        717620,
        457675761
    ],
    [
        717600,
        457708837
    ],
    [
        717590,
        458472964
    ],
    [
        717570,
        459478265
    ],
    [
        717560,
        460370061
    ],
    [
        717530,
        460530000
    ],
    [
        717480,
        458858500
    ],
    [
        717470,
        458829302
    ],
    [
        717460,
        458021482
    ],
    [
        717440,
        456777721
    ],
    [
        717420,
        456779447
    ],
    [
        717410,
        456789572
    ],
    [
        717380,
        456825644
    ],
    [
        717350,
        457030000
    ],
    [
        717310,
        455715000
    ],
    [
        717290,
        456816500
    ],
    [
        717280,
        455715000
    ],
    [
        717270,
        456816500
    ],
    [
        717250,
        457786500
    ],
    [
        717220,
        460047000
    ],
    [
        717180,
        459047000
    ],
    [
        717160,
        458000000
    ],
    [
        717150,
        455465000
    ],
    [
        717110,
        452784000
    ],
    [
        717100,
        453037775
    ],
    [
        717090,
        452450000
    ],
    [
        717080,
        456789000
    ],
    [
        717070,
        457794000
    ],
    [
        717060,
        457955715
    ],
    [
        717050,
        459574722
    ],
    [
        717040,
        460072924
    ],
    [
        717020,
        460504275
    ],
    [
        717010,
        458043000
    ],
    [
        717000,
        457183276
    ],
    [
        716970,
        454623000
    ],
    [
        716960,
        453144442
    ],
    [
        716950,
        454730000
    ],
    [
        716890,
        453945000
    ],
    [
        716860,
        454610000
    ],
    [
        716850,
        455645000
    ],
    [
        716840,
        455130000
    ],
    [
        716830,
        456150000
    ],
    [
        716810,
        456730000
    ],
    [
        716790,
        456560657
    ],
    [
        716780,
        459502335
    ],
    [
        716770,
        463617335
    ],
    [
        716760,
        462332087
    ],
    [
        716750,
        464947953
    ],
    [
        716740,
        469247439
    ],
    [
        716720,
        461000000
    ],
    [
        716710,
        459140000
    ],
    [
        716680,
        461000000
    ],
    [
        716670,
        459082599
    ],
    [
        716630,
        439000000
    ],
    [
        716600,
        422985000
    ],
    [
        716560,
        421000000
    ],
    [
        716550,
        419435500
    ],
    [
        716530,
        418509070
    ],
    [
        716510,
        416588644
    ],
    [
        716500,
        416530497
    ],
    [
        716490,
        417007164
    ],
    [
        716480,
        419421664
    ],
    [
        716470,
        418952929
    ],
    [
        716460,
        419202408
    ],
    [
        716450,
        422325226
    ],
    [
        716420,
        423194065
    ],
    [
        716410,
        422517738
    ],
    [
        716390,
        421370000
    ],
    [
        716330,
        410000000
    ],
    [
        716310,
        409929553
    ],
    [
        716270,
        410000000
    ],
    [
        716250,
        408854311
    ],
    [
        716230,
        408018756
    ],
    [
        716220,
        408095422
    ],
    [
        716210,
        408059588
    ],
    [
        716200,
        406472886
    ],
    [
        716190,
        406726109
    ],
    [
        716180,
        406622775
    ],
    [
        716150,
        405990578
    ],
    [
        716130,
        406501329
    ],
    [
        716110,
        408179553
    ],
    [
        716100,
        408107636
    ],
    [
        716090,
        406284789
    ],
    [
        716070,
        405323500
    ],
    [
        716060,
        409245000
    ],
    [
        716050,
        409735908
    ],
    [
        716020,
        405245000
    ],
    [
        716010,
        403000000
    ],
    [
        716000,
        402788032
    ],
    [
        715990,
        396231710
    ],
    [
        715980,
        394468919
    ],
    [
        715960,
        393580000
    ],
    [
        715940,
        397467000
    ],
    [
        715900,
        403000000
    ],
    [
        715870,
        404982000
    ],
    [
        715860,
        407000000
    ],
    [
        715840,
        407227997
    ],
    [
        715830,
        407000000
    ],
    [
        715820,
        407245000
    ],
    [
        715800,
        407490000
    ],
    [
        715790,
        408555442
    ],
    [
        715770,
        408093442
    ],
    [
        715760,
        407911000
    ],
    [
        715740,
        407098152
    ],
    [
        715730,
        406075918
    ],
    [
        715720,
        406699500
    ],
    [
        715700,
        406658649
    ],
    [
        715690,
        406699500
    ],
    [
        715680,
        407000000
    ],
    [
        715670,
        406792802
    ],
    [
        715660,
        404642802
    ],
    [
        715650,
        403841931
    ],
    [
        715630,
        404850000
    ],
    [
        715610,
        404694000
    ],
    [
        715570,
        402350000
    ],
    [
        715550,
        402000000
    ],
    [
        715520,
        405385500
    ],
    [
        715510,
        406880500
    ],
    [
        715500,
        408345000
    ],
    [
        715490,
        411000000
    ],
    [
        715480,
        412597565
    ],
    [
        715470,
        411013500
    ],
    [
        715460,
        412131426
    ],
    [
        715450,
        412309706
    ],
    [
        715440,
        411000000
    ],
    [
        715430,
        413224220
    ],
    [
        715400,
        415598500
    ],
    [
        715390,
        416730000
    ],
    [
        715380,
        418832500
    ],
    [
        715370,
        419086631
    ],
    [
        715360,
        421650000
    ],
    [
        715350,
        421508286
    ],
    [
        715320,
        421650000
    ],
    [
        715310,
        419460000
    ],
    [
        715300,
        421650000
    ],
    [
        715290,
        415000000
    ],
    [
        715280,
        414000000
    ],
    [
        715190,
        415000000
    ],
    [
        715170,
        411992000
    ],
    [
        715160,
        409375000
    ],
    [
        715140,
        409856640
    ],
    [
        715130,
        408205191
    ],
    [
        715110,
        408308527
    ],
    [
        715100,
        409978447
    ],
    [
        715090,
        411448447
    ],
    [
        715080,
        414000000
    ],
    [
        715070,
        413000000
    ],
    [
        715060,
        410088221
    ],
    [
        715050,
        410658221
    ],
    [
        715040,
        408500000
    ],
    [
        715030,
        407932874
    ],
    [
        715020,
        408660000
    ],
    [
        715010,
        407861553
    ],
    [
        715000,
        409584983
    ],
    [
        714990,
        410280553
    ],
    [
        714970,
        411043939
    ],
    [
        714950,
        409819122
    ],
    [
        714940,
        410358752
    ],
    [
        714930,
        410343068
    ],
    [
        714910,
        410828500
    ],
    [
        714900,
        410096738
    ],
    [
        714870,
        412612000
    ],
    [
        714860,
        411883188
    ],
    [
        714850,
        402973007
    ],
    [
        714840,
        412442268
    ],
    [
        714810,
        413064342
    ],
    [
        714800,
        413017775
    ],
    [
        714790,
        413230406
    ],
    [
        714780,
        412614560
    ],
    [
        714750,
        414500000
    ],
    [
        714730,
        413908637
    ],
    [
        714720,
        413890303
    ],
    [
        714660,
        412423500
    ],
    [
        714650,
        412211301
    ],
    [
        714580,
        408091500
    ],
    [
        714570,
        393551483
    ],
    [
        714560,
        393678000
    ],
    [
        714550,
        388816332
    ],
    [
        714510,
        369225000
    ],
    [
        714490,
        368574331
    ],
    [
        714480,
        367397553
    ],
    [
        714450,
        367225000
    ],
    [
        714440,
        366019664
    ],
    [
        714420,
        363049435
    ],
    [
        714390,
        361885000
    ],
    [
        714370,
        361919273
    ],
    [
        714350,
        361885000
    ],
    [
        714320,
        362450099
    ],
    [
        714310,
        362548849
    ],
    [
        714300,
        362531066
    ],
    [
        714290,
        361885000
    ],
    [
        714280,
        359530000
    ],
    [
        714260,
        361065553
    ],
    [
        714250,
        359703838
    ],
    [
        714240,
        362398169
    ],
    [
        714220,
        361022500
    ],
    [
        714190,
        360387500
    ],
    [
        714170,
        359839751
    ],
    [
        714160,
        361000000
    ],
    [
        714150,
        359590579
    ],
    [
        714140,
        363854000
    ],
    [
        714130,
        365845297
    ],
    [
        714110,
        364519262
    ],
    [
        714100,
        367061504
    ],
    [
        714080,
        370212500
    ],
    [
        714070,
        369405000
    ],
    [
        714040,
        370212500
    ],
    [
        714020,
        369935000
    ],
    [
        713990,
        369000000
    ],
    [
        713980,
        368449738
    ],
    [
        713970,
        364472738
    ],
    [
        713960,
        363900117
    ],
    [
        713950,
        360605847
    ],
    [
        713930,
        360673000
    ],
    [
        713920,
        361278171
    ],
    [
        713910,
        359523000
    ],
    [
        713900,
        360058878
    ],
    [
        713890,
        359397084
    ],
    [
        713880,
        360167150
    ],
    [
        713860,
        363167150
    ],
    [
        713850,
        364000000
    ],
    [
        713840,
        363925000
    ],
    [
        713830,
        363078460
    ],
    [
        713810,
        363889879
    ],
    [
        713790,
        362806500
    ],
    [
        713780,
        364550000
    ],
    [
        713760,
        365255677
    ],
    [
        713750,
        365285000
    ],
    [
        713740,
        364550000
    ],
    [
        713730,
        364738544
    ],
    [
        713720,
        364621000
    ],
    [
        713710,
        365356000
    ],
    [
        713690,
        365196000
    ],
    [
        713670,
        365000000
    ],
    [
        713660,
        364370000
    ],
    [
        713650,
        364042708
    ],
    [
        713640,
        364582303
    ],
    [
        713590,
        356260644
    ],
    [
        713580,
        355000000
    ],
    [
        713560,
        362500000
    ],
    [
        713530,
        366194500
    ],
    [
        713520,
        369307500
    ],
    [
        713490,
        374307500
    ],
    [
        713480,
        376255000
    ],
    [
        713470,
        375000000
    ],
    [
        713460,
        381790000
    ],
    [
        713450,
        380802717
    ],
    [
        713430,
        378731664
    ],
    [
        713360,
        394650000
    ],
    [
        713340,
        401164664
    ],
    [
        713320,
        399658664
    ],
    [
        713300,
        401140494
    ],
    [
        713290,
        399578877
    ],
    [
        713280,
        399131064
    ],
    [
        713270,
        400187331
    ],
    [
        713260,
        399797538
    ],
    [
        713240,
        399717261
    ],
    [
        713230,
        399849465
    ],
    [
        713220,
        401074171
    ],
    [
        713090,
        391650000
    ],
    [
        713080,
        388940000
    ],
    [
        713060,
        389263442
    ],
    [
        713050,
        388940000
    ],
    [
        713040,
        389964500
    ],
    [
        713030,
        395023090
    ],
    [
        713010,
        391150000
    ],
    [
        713000,
        388940000
    ],
    [
        712980,
        391150000
    ],
    [
        712970,
        388940000
    ],
    [
        712960,
        391150000
    ],
    [
        712950,
        389111420
    ],
    [
        712860,
        388940000
    ],
    [
        712850,
        389170149
    ],
    [
        712830,
        389220331
    ],
    [
        712820,
        388940000
    ],
    [
        712810,
        391128000
    ],
    [
        712800,
        390750000
    ],
    [
        712770,
        390025000
    ],
    [
        712760,
        390780725
    ],
    [
        712750,
        389155585
    ],
    [
        712710,
        389650000
    ],
    [
        712650,
        390000000
    ],
    [
        712640,
        390370331
    ],
    [
        712630,
        390000000
    ],
    [
        712620,
        389645000
    ],
    [
        712610,
        390975293
    ],
    [
        712600,
        390195553
    ],
    [
        712590,
        389650000
    ],
    [
        712580,
        389220000
    ],
    [
        712550,
        390425000
    ],
    [
        712530,
        390900889
    ],
    [
        712520,
        391083923
    ],
    [
        712510,
        391398425
    ],
    [
        712490,
        392580382
    ],
    [
        712460,
        392000000
    ],
    [
        712450,
        389720000
    ],
    [
        712440,
        388656081
    ],
    [
        712430,
        387391081
    ],
    [
        712420,
        388160490
    ],
    [
        712380,
        366000000
    ],
    [
        712370,
        365286000
    ],
    [
        712360,
        365480000
    ],
    [
        712350,
        363710000
    ],
    [
        712340,
        363786000
    ],
    [
        712330,
        364446771
    ],
    [
        712320,
        363912380
    ],
    [
        712310,
        363126380
    ],
    [
        712300,
        363539515
    ],
    [
        712290,
        362180000
    ],
    [
        712280,
        362270428
    ],
    [
        712270,
        362071220
    ],
    [
        712260,
        361669787
    ],
    [
        712250,
        361637787
    ],
    [
        712240,
        362390287
    ],
    [
        712230,
        364400500
    ],
    [
        712220,
        365728353
    ],
    [
        712210,
        365242207
    ],
    [
        712190,
        364615500
    ],
    [
        712120,
        367144500
    ],
    [
        712100,
        365937882
    ],
    [
        712090,
        366125619
    ],
    [
        712080,
        366024296
    ],
    [
        712070,
        365719887
    ],
    [
        712060,
        364959220
    ],
    [
        712050,
        364606177
    ],
    [
        712030,
        366715000
    ],
    [
        711980,
        366957500
    ],
    [
        711960,
        367715000
    ],
    [
        711950,
        371490000
    ],
    [
        711930,
        373447068
    ],
    [
        711920,
        374798262
    ],
    [
        711900,
        376497717
    ],
    [
        711880,
        375486014
    ],
    [
        711840,
        373000000
    ],
    [
        711820,
        372517210
    ],
    [
        711810,
        370495526
    ],
    [
        711800,
        372886797
    ],
    [
        711780,
        374125703
    ],
    [
        711770,
        373137553
    ],
    [
        711760,
        372790053
    ],
    [
        711740,
        373416667
    ],
    [
        711720,
        372448945
    ],
    [
        711700,
        372671794
    ],
    [
        711690,
        373862791
    ],
    [
        711670,
        375068331
    ],
    [
        711650,
        374560106
    ],
    [
        711630,
        374552001
    ],
    [
        711620,
        375366027
    ],
    [
        711600,
        377465518
    ],
    [
        711590,
        378819075
    ],
    [
        711570,
        378792775
    ],
    [
        711560,
        379510000
    ],
    [
        711550,
        377433366
    ],
    [
        711540,
        374983000
    ],
    [
        711510,
        374343596
    ],
    [
        711490,
        373137521
    ],
    [
        711480,
        371034021
    ],
    [
        711470,
        373052356
    ],
    [
        711460,
        373581500
    ],
    [
        711450,
        371327411
    ],
    [
        711440,
        371351500
    ],
    [
        711430,
        370237797
    ],
    [
        711420,
        365151254
    ],
    [
        711410,
        364840477
    ],
    [
        711390,
        364431553
    ],
    [
        711380,
        363288553
    ],
    [
        711370,
        363194556
    ],
    [
        711330,
        363365500
    ],
    [
        711310,
        362458624
    ],
    [
        711300,
        369925956
    ],
    [
        711260,
        373720000
    ],
    [
        711250,
        376970000
    ],
    [
        711240,
        378275484
    ],
    [
        711230,
        379490000
    ],
    [
        711210,
        378593148
    ],
    [
        711190,
        378757596
    ],
    [
        711180,
        379122033
    ],
    [
        711170,
        375095245
    ],
    [
        711160,
        377521904
    ],
    [
        711150,
        377750000
    ],
    [
        711140,
        379075000
    ],
    [
        711130,
        378875000
    ],
    [
        711120,
        378900000
    ],
    [
        711110,
        377950109
    ],
    [
        711100,
        378086815
    ],
    [
        711090,
        378785000
    ],
    [
        711080,
        376817220
    ],
    [
        711060,
        376802988
    ],
    [
        711040,
        376152056
    ],
    [
        711030,
        376510553
    ],
    [
        711020,
        378425577
    ],
    [
        711010,
        379285577
    ],
    [
        711000,
        376849685
    ],
    [
        710990,
        361997000
    ],
    [
        710950,
        361497000
    ],
    [
        710940,
        358793645
    ],
    [
        710930,
        358418331
    ],
    [
        710920,
        358615553
    ],
    [
        710910,
        358325000
    ],
    [
        710900,
        357902456
    ],
    [
        710880,
        356717391
    ],
    [
        710860,
        355134380
    ],
    [
        710850,
        356764380
    ],
    [
        710840,
        362953972
    ],
    [
        710830,
        362303468
    ],
    [
        710820,
        363623468
    ],
    [
        710810,
        361050656
    ],
    [
        710800,
        361274184
    ],
    [
        710790,
        362647034
    ],
    [
        710780,
        360516220
    ],
    [
        710770,
        359901205
    ],
    [
        710760,
        356217331
    ],
    [
        710750,
        353949464
    ],
    [
        710710,
        360405000
    ],
    [
        710700,
        358340417
    ],
    [
        710690,
        360864887
    ],
    [
        710680,
        359089368
    ],
    [
        710620,
        361405000
    ],
    [
        710590,
        358934000
    ],
    [
        710570,
        345900000
    ],
    [
        710560,
        344728444
    ],
    [
        710500,
        344570000
    ],
    [
        710490,
        343556243
    ],
    [
        710480,
        346159331
    ],
    [
        710380,
        340900000
    ],
    [
        710370,
        340682217
    ],
    [
        710350,
        340526661
    ],
    [
        710330,
        340470399
    ],
    [
        710320,
        341588887
    ],
    [
        710310,
        341900000
    ],
    [
        710270,
        340400000
    ],
    [
        710250,
        336970000
    ],
    [
        710210,
        329840000
    ],
    [
        710180,
        328448000
    ],
    [
        710140,
        326340000
    ],
    [
        710120,
        325352000
    ],
    [
        710110,
        324500000
    ],
    [
        710090,
        326860208
    ],
    [
        710070,
        326852000
    ],
    [
        710040,
        326680500
    ],
    [
        709990,
        328000000
    ],
    [
        709970,
        328352051
    ],
    [
        709930,
        328000000
    ],
    [
        709910,
        329550000
    ],
    [
        709860,
        336389500
    ],
    [
        709840,
        339200000
    ],
    [
        709830,
        338200553
    ],
    [
        709820,
        337613345
    ],
    [
        709800,
        336500000
    ],
    [
        709790,
        338131999
    ],
    [
        709780,
        336500000
    ],
    [
        709750,
        339200000
    ],
    [
        709740,
        338179000
    ],
    [
        709730,
        339800000
    ],
    [
        709720,
        338300000
    ],
    [
        709700,
        337879000
    ],
    [
        709680,
        337000000
    ],
    [
        709650,
        338000000
    ],
    [
        709630,
        338300000
    ],
    [
        709600,
        340400000
    ],
    [
        709580,
        339896569
    ],
    [
        709570,
        337201000
    ],
    [
        709560,
        334848284
    ],
    [
        709540,
        335386617
    ],
    [
        709530,
        334000000
    ],
    [
        709520,
        333619996
    ],
    [
        709500,
        333703500
    ],
    [
        709490,
        335347798
    ],
    [
        709480,
        332000000
    ],
    [
        709440,
        339000000
    ],
    [
        709420,
        339296000
    ],
    [
        709380,
        344920000
    ],
    [
        709360,
        346000000
    ],
    [
        709350,
        349360311
    ],
    [
        709340,
        353079000
    ],
    [
        709320,
        353289553
    ],
    [
        709310,
        353079000
    ],
    [
        709300,
        355000000
    ],
    [
        709290,
        355521331
    ],
    [
        709280,
        356521331
    ],
    [
        709270,
        356500000
    ],
    [
        709260,
        358282676
    ],
    [
        709240,
        359980500
    ],
    [
        709230,
        358217000
    ],
    [
        709210,
        357025495
    ],
    [
        709160,
        357000000
    ],
    [
        709130,
        353623000
    ],
    [
        709120,
        353206928
    ],
    [
        709100,
        351683374
    ],
    [
        709090,
        352328672
    ],
    [
        709040,
        356000000
    ],
    [
        709030,
        357066331
    ],
    [
        709020,
        354551396
    ],
    [
        708990,
        355839368
    ],
    [
        708980,
        355383998
    ],
    [
        708960,
        354000000
    ],
    [
        708920,
        352000000
    ],
    [
        708910,
        351569586
    ],
    [
        708900,
        351987000
    ],
    [
        708850,
        352000000
    ],
    [
        708820,
        351564331
    ],
    [
        708810,
        348555500
    ],
    [
        708790,
        348451511
    ],
    [
        708770,
        348851724
    ],
    [
        708760,
        348801724
    ],
    [
        708750,
        348496168
    ],
    [
        708740,
        349311109
    ],
    [
        708730,
        349610576
    ],
    [
        708720,
        348802784
    ],
    [
        708710,
        348786117
    ],
    [
        708690,
        358622500
    ],
    [
        708650,
        370742500
    ],
    [
        708640,
        368807850
    ],
    [
        708630,
        368606886
    ],
    [
        708620,
        362509157
    ],
    [
        708590,
        361027500
    ],
    [
        708580,
        361214734
    ],
    [
        708570,
        363163830
    ],
    [
        708530,
        370000000
    ],
    [
        708520,
        371120000
    ],
    [
        708510,
        371173344
    ],
    [
        708500,
        379605442
    ],
    [
        708480,
        378729500
    ],
    [
        708460,
        383687000
    ],
    [
        708450,
        375939978
    ],
    [
        708440,
        376325073
    ],
    [
        708430,
        377057000
    ],
    [
        708420,
        370120000
    ],
    [
        708410,
        368500000
    ],
    [
        708370,
        372620000
    ],
    [
        708320,
        373186500
    ],
    [
        708310,
        374667500
    ],
    [
        708300,
        375434650
    ],
    [
        708250,
        378000000
    ],
    [
        708200,
        382000000
    ],
    [
        708170,
        383000000
    ],
    [
        708150,
        383750000
    ],
    [
        708090,
        385700000
    ],
    [
        708080,
        378909000
    ],
    [
        707970,
        333950000
    ],
    [
        707920,
        331950000
    ],
    [
        707860,
        328101000
    ],
    [
        707820,
        323255000
    ],
    [
        707810,
        323110872
    ],
    [
        707800,
        323255000
    ],
    [
        707780,
        316859500
    ],
    [
        707740,
        316450000
    ],
    [
        707660,
        315720000
    ],
    [
        707640,
        318450000
    ],
    [
        707500,
        312415000
    ],
    [
        707450,
        309110000
    ],
    [
        707400,
        302131000
    ],
    [
        707390,
        298576406
    ],
    [
        707380,
        296030491
    ],
    [
        707370,
        288946874
    ],
    [
        707360,
        287705220
    ],
    [
        707350,
        290264776
    ],
    [
        707280,
        294000000
    ],
    [
        707230,
        293500000
    ],
    [
        707210,
        294573760
    ],
    [
        707190,
        294116508
    ],
    [
        707150,
        292500000
    ],
    [
        707140,
        294193071
    ],
    [
        707070,
        293000000
    ],
    [
        707060,
        293107720
    ],
    [
        707050,
        293329942
    ],
    [
        707040,
        293417889
    ],
    [
        707020,
        292980363
    ],
    [
        707010,
        298172569
    ],
    [
        707000,
        294590675
    ],
    [
        706970,
        308645000
    ],
    [
        706960,
        308823649
    ],
    [
        706950,
        310000000
    ],
    [
        706940,
        310277400
    ],
    [
        706930,
        310465000
    ],
    [
        706920,
        313077826
    ],
    [
        706910,
        312064000
    ],
    [
        706900,
        312759782
    ],
    [
        706890,
        312741279
    ],
    [
        706880,
        313092279
    ],
    [
        706870,
        315174502
    ],
    [
        706850,
        314000000
    ],
    [
        706840,
        313950000
    ],
    [
        706810,
        313840000
    ],
    [
        706770,
        308245000
    ],
    [
        706740,
        307871000
    ],
    [
        706720,
        305050000
    ],
    [
        706700,
        305371000
    ],
    [
        706690,
        300450000
    ],
    [
        706650,
        298000000
    ],
    [
        706640,
        297801518
    ],
    [
        706630,
        296901518
    ],
    [
        706610,
        296125500
    ],
    [
        706600,
        295661276
    ],
    [
        706590,
        295575776
    ],
    [
        706580,
        294501716
    ],
    [
        706570,
        293093619
    ],
    [
        706560,
        292633092
    ],
    [
        706550,
        297049500
    ],
    [
        706540,
        297378651
    ],
    [
        706530,
        296739500
    ],
    [
        706520,
        297283275
    ],
    [
        706510,
        297068201
    ],
    [
        706500,
        295499798
    ],
    [
        706490,
        296197220
    ],
    [
        706480,
        296277220
    ],
    [
        706460,
        296249026
    ],
    [
        706440,
        297637500
    ],
    [
        706430,
        298896403
    ],
    [
        706420,
        299098659
    ],
    [
        706410,
        297210159
    ],
    [
        706400,
        296681091
    ],
    [
        706370,
        291999000
    ],
    [
        706360,
        291798866
    ],
    [
        706340,
        289460147
    ],
    [
        706270,
        289050000
    ],
    [
        706230,
        288475000
    ],
    [
        706210,
        288000000
    ],
    [
        706200,
        286085601
    ],
    [
        706190,
        283582139
    ],
    [
        706160,
        283987500
    ],
    [
        706140,
        283000000
    ],
    [
        706100,
        283500000
    ],
    [
        706020,
        284994500
    ],
    [
        706000,
        284000000
    ],
    [
        705950,
        287872500
    ],
    [
        705940,
        289000000
    ],
    [
        705930,
        288975000
    ],
    [
        705890,
        289050000
    ],
    [
        705880,
        290223065
    ],
    [
        705870,
        291114179
    ],
    [
        705860,
        291084626
    ],
    [
        705850,
        291286691
    ],
    [
        705840,
        292174469
    ],
    [
        705830,
        292542492
    ],
    [
        705810,
        292575000
    ],
    [
        705790,
        291968000
    ],
    [
        705690,
        290068000
    ],
    [
        705680,
        291312787
    ],
    [
        705660,
        293283461
    ],
    [
        705650,
        293935824
    ],
    [
        705640,
        293590824
    ],
    [
        705620,
        292985639
    ],
    [
        705610,
        293634998
    ],
    [
        705590,
        293763500
    ],
    [
        705560,
        293655000
    ],
    [
        705540,
        292888500
    ],
    [
        705530,
        290684109
    ],
    [
        705510,
        288475000
    ],
    [
        705490,
        288397998
    ],
    [
        705420,
        288000000
    ],
    [
        705400,
        287818404
    ],
    [
        705350,
        283500000
    ],
    [
        705330,
        283179145
    ],
    [
        705280,
        282000000
    ],
    [
        705270,
        281636950
    ],
    [
        705230,
        283500000
    ],
    [
        705210,
        284000000
    ],
    [
        705160,
        283500000
    ],
    [
        705150,
        283000000
    ],
    [
        705140,
        283459289
    ],
    [
        705130,
        282959289
    ],
    [
        705120,
        279369500
    ],
    [
        705110,
        278966927
    ],
    [
        705080,
        277145000
    ],
    [
        705070,
        275020000
    ],
    [
        705060,
        275000000
    ],
    [
        705050,
        275785000
    ],
    [
        705040,
        276103840
    ],
    [
        705030,
        276494785
    ],
    [
        705020,
        275330000
    ],
    [
        705010,
        275328109
    ],
    [
        705000,
        275180300
    ],
    [
        704990,
        275198667
    ],
    [
        704980,
        276198667
    ],
    [
        704970,
        277000000
    ],
    [
        704960,
        277340000
    ],
    [
        704920,
        277000000
    ],
    [
        704890,
        271140000
    ],
    [
        704880,
        270656169
    ],
    [
        704860,
        268802915
    ],
    [
        704840,
        265505603
    ],
    [
        704830,
        268271217
    ],
    [
        704810,
        263479000
    ],
    [
        704780,
        256000000
    ],
    [
        704770,
        254340000
    ],
    [
        704760,
        256000000
    ],
    [
        704750,
        255798681
    ],
    [
        704740,
        254340000
    ],
    [
        704730,
        254427553
    ],
    [
        704720,
        254340000
    ],
    [
        704700,
        253800000
    ],
    [
        704670,
        254340000
    ],
    [
        704660,
        254474565
    ],
    [
        704640,
        254340000
    ],
    [
        704620,
        256000000
    ],
    [
        704600,
        255185000
    ],
    [
        704590,
        255000000
    ],
    [
        704580,
        254846770
    ],
    [
        704570,
        254907487
    ],
    [
        704560,
        254340000
    ],
    [
        704510,
        253800000
    ],
    [
        704490,
        254340000
    ],
    [
        704460,
        254546000
    ],
    [
        704450,
        256000000
    ],
    [
        704430,
        257364000
    ],
    [
        704420,
        258000000
    ],
    [
        704410,
        257982664
    ],
    [
        704400,
        256090000
    ],
    [
        704390,
        256665528
    ],
    [
        704360,
        255000000
    ],
    [
        704330,
        254340000
    ],
    [
        704270,
        254000000
    ],
    [
        704260,
        252840000
    ],
    [
        704210,
        261000000
    ],
    [
        704200,
        262625997
    ],
    [
        704190,
        261601000
    ],
    [
        704180,
        262179084
    ],
    [
        704170,
        262467000
    ],
    [
        704090,
        264000000
    ],
    [
        704080,
        263558000
    ],
    [
        704060,
        264000000
    ],
    [
        704030,
        264432000
    ],
    [
        704020,
        264783745
    ],
    [
        704010,
        265080000
    ],
    [
        703990,
        264000000
    ],
    [
        703970,
        264276886
    ],
    [
        703960,
        264428886
    ],
    [
        703950,
        264000000
    ],
    [
        703920,
        264919000
    ],
    [
        703900,
        266000000
    ],
    [
        703890,
        266620000
    ],
    [
        703880,
        266250000
    ],
    [
        703870,
        266178579
    ],
    [
        703860,
        266448024
    ],
    [
        703850,
        266271554
    ],
    [
        703840,
        267364500
    ],
    [
        703790,
        267907878
    ],
    [
        703770,
        268332673
    ],
    [
        703760,
        266949000
    ],
    [
        703750,
        267679000
    ],
    [
        703740,
        268010000
    ],
    [
        703730,
        267105109
    ],
    [
        703720,
        266768173
    ],
    [
        703710,
        267210000
    ],
    [
        703700,
        267311640
    ],
    [
        703690,
        267744633
    ],
    [
        703680,
        264605000
    ],
    [
        703670,
        264600000
    ],
    [
        703650,
        262535376
    ],
    [
        703640,
        263195744
    ],
    [
        703630,
        261108952
    ],
    [
        703610,
        262650000
    ],
    [
        703600,
        262283443
    ],
    [
        703590,
        262600000
    ],
    [
        703580,
        262614912
    ],
    [
        703570,
        261994912
    ],
    [
        703560,
        262794912
    ],
    [
        703550,
        264424109
    ],
    [
        703540,
        264958930
    ],
    [
        703530,
        264000000
    ],
    [
        703520,
        265370000
    ],
    [
        703510,
        263900000
    ],
    [
        703490,
        265230527
    ],
    [
        703480,
        263708762
    ],
    [
        703470,
        262415000
    ],
    [
        703460,
        262388908
    ],
    [
        703450,
        263513091
    ],
    [
        703440,
        266900000
    ],
    [
        703430,
        266775000
    ],
    [
        703410,
        255424500
    ],
    [
        703380,
        255415000
    ],
    [
        703370,
        254875504
    ],
    [
        703360,
        251894500
    ],
    [
        703320,
        248415000
    ],
    [
        703310,
        248126500
    ],
    [
        703300,
        247659030
    ],
    [
        703180,
        246415000
    ],
    [
        703160,
        245528000
    ],
    [
        703140,
        245389022
    ],
    [
        703130,
        245325091
    ],
    [
        703120,
        245322894
    ],
    [
        703110,
        245350671
    ],
    [
        703100,
        246031558
    ],
    [
        703090,
        247898373
    ],
    [
        703080,
        247115220
    ],
    [
        703070,
        243802018
    ],
    [
        703060,
        247081500
    ],
    [
        703010,
        245915000
    ],
    [
        703000,
        240050000
    ],
    [
        702920,
        239000000
    ],
    [
        702910,
        238000500
    ],
    [
        702900,
        237958442
    ],
    [
        702880,
        237207154
    ],
    [
        702860,
        237076527
    ],
    [
        702850,
        237900500
    ],
    [
        702840,
        237936000
    ],
    [
        702820,
        237808675
    ],
    [
        702810,
        237900277
    ],
    [
        702790,
        237481000
    ],
    [
        702780,
        237936000
    ],
    [
        702760,
        237776500
    ],
    [
        702720,
        237276500
    ],
    [
        702710,
        237191362
    ],
    [
        702690,
        236293000
    ],
    [
        702640,
        235793000
    ],
    [
        702620,
        234594000
    ],
    [
        702580,
        235000000
    ],
    [
        702570,
        235110000
    ],
    [
        702560,
        235000000
    ],
    [
        702550,
        235110000
    ],
    [
        702540,
        234691000
    ],
    [
        702510,
        234418035
    ],
    [
        702500,
        234191000
    ],
    [
        702490,
        234733702
    ],
    [
        702470,
        234490000
    ],
    [
        702460,
        235033332
    ],
    [
        702440,
        234333330
    ],
    [
        702430,
        236311000
    ],
    [
        702420,
        235000000
    ],
    [
        702410,
        236311000
    ],
    [
        702390,
        235056269
    ],
    [
        702350,
        239716000
    ],
    [
        702320,
        242000000
    ],
    [
        702310,
        242340000
    ],
    [
        702300,
        242000000
    ],
    [
        702290,
        242343000
    ],
    [
        702250,
        243000000
    ],
    [
        702200,
        242778000
    ],
    [
        702190,
        244153000
    ],
    [
        702180,
        242000000
    ],
    [
        702170,
        243308108
    ],
    [
        702150,
        243000000
    ],
    [
        702140,
        244153000
    ],
    [
        702130,
        243000000
    ],
    [
        702120,
        243786000
    ],
    [
        702060,
        243000000
    ],
    [
        701990,
        240150000
    ],
    [
        701970,
        241471000
    ],
    [
        701910,
        242000000
    ],
    [
        701880,
        239000000
    ],
    [
        701750,
        237000000
    ],
    [
        701720,
        236920000
    ],
    [
        701680,
        235000000
    ],
    [
        701660,
        235246000
    ],
    [
        701620,
        235000000
    ],
    [
        701590,
        234000000
    ],
    [
        701550,
        233339000
    ],
    [
        701520,
        233000000
    ],
    [
        701460,
        232000000
    ],
    [
        701450,
        231846000
    ],
    [
        701440,
        231662933
    ],
    [
        701420,
        231251822
    ],
    [
        701410,
        231502933
    ],
    [
        701390,
        231000000
    ],
    [
        701350,
        230000000
    ],
    [
        701340,
        230715000
    ],
    [
        701310,
        232642000
    ],
    [
        701300,
        233157108
    ],
    [
        701290,
        235000000
    ],
    [
        701270,
        235737000
    ],
    [
        701230,
        236920000
    ],
    [
        701210,
        237000000
    ],
    [
        701200,
        237016000
    ],
    [
        701180,
        238160000
    ],
    [
        701170,
        237543550
    ],
    [
        701140,
        239000000
    ],
    [
        701120,
        239120000
    ],
    [
        701100,
        239094179
    ],
    [
        701090,
        238670378
    ],
    [
        701080,
        238208456
    ],
    [
        701050,
        241000000
    ],
    [
        701040,
        240050000
    ],
    [
        700990,
        241000000
    ],
    [
        700980,
        242578676
    ],
    [
        700960,
        242493997
    ],
    [
        700940,
        242000000
    ],
    [
        700900,
        240900000
    ],
    [
        700850,
        236000000
    ],
    [
        700820,
        235000000
    ],
    [
        700810,
        236000000
    ],
    [
        700800,
        234664000
    ],
    [
        700770,
        236000000
    ],
    [
        700750,
        235533000
    ],
    [
        700700,
        233000000
    ],
    [
        700690,
        232325775
    ],
    [
        700680,
        233000000
    ],
    [
        700670,
        232377108
    ],
    [
        700650,
        233000000
    ],
    [
        700640,
        233129000
    ],
    [
        700630,
        233000000
    ],
    [
        700620,
        232894000
    ],
    [
        700610,
        233000000
    ],
    [
        700590,
        231150000
    ],
    [
        700570,
        230020000
    ],
    [
        700540,
        230000000
    ],
    [
        700530,
        231690000
    ],
    [
        700520,
        231269331
    ],
    [
        700500,
        229322000
    ],
    [
        700480,
        233000000
    ],
    [
        700470,
        239000000
    ],
    [
        700460,
        239777000
    ],
    [
        700450,
        239512800
    ],
    [
        700430,
        239311108
    ],
    [
        700420,
        239000000
    ],
    [
        700400,
        239927000
    ],
    [
        700380,
        240096521
    ],
    [
        700370,
        242000000
    ],
    [
        700360,
        243626634
    ],
    [
        700350,
        244000000
    ],
    [
        700330,
        243143651
    ],
    [
        700310,
        247000000
    ],
    [
        700260,
        244000000
    ],
    [
        700240,
        240475591
    ],
    [
        700230,
        239885108
    ],
    [
        700220,
        239646000
    ],
    [
        700210,
        247890000
    ],
    [
        700200,
        249612773
    ],
    [
        700180,
        249977920
    ],
    [
        700170,
        250044587
    ],
    [
        700110,
        251000000
    ],
    [
        700090,
        247890000
    ],
    [
        700050,
        234000000
    ],
    [
        700030,
        231000000
    ],
    [
        699990,
        226000000
    ],
    [
        699980,
        224000000
    ],
    [
        699970,
        225760000
    ],
    [
        699920,
        225000000
    ],
    [
        699900,
        225445600
    ],
    [
        699880,
        225496000
    ],
    [
        699860,
        224141000
    ],
    [
        699830,
        223630000
    ],
    [
        699820,
        223111997
    ],
    [
        699810,
        223000000
    ],
    [
        699780,
        220578000
    ],
    [
        699760,
        220000000
    ],
    [
        699730,
        223630000
    ],
    [
        699690,
        226000000
    ],
    [
        699680,
        225751000
    ],
    [
        699670,
        225403553
    ],
    [
        699660,
        224674664
    ],
    [
        699630,
        224642000
    ],
    [
        699620,
        224980000
    ],
    [
        699600,
        226000000
    ],
    [
        699590,
        225263997
    ],
    [
        699580,
        224980000
    ],
    [
        699560,
        226000000
    ],
    [
        699530,
        233988000
    ],
    [
        699500,
        234100000
    ],
    [
        699490,
        234641289
    ],
    [
        699480,
        235320644
    ],
    [
        699460,
        235050000
    ],
    [
        699420,
        233550000
    ],
    [
        699400,
        233000000
    ],
    [
        699390,
        234100000
    ],
    [
        699380,
        234616022
    ],
    [
        699370,
        234604910
    ],
    [
        699360,
        237363162
    ],
    [
        699330,
        239869346
    ],
    [
        699300,
        236000000
    ],
    [
        699280,
        234100000
    ],
    [
        699270,
        244991482
    ],
    [
        699260,
        247809053
    ],
    [
        699240,
        250000000
    ],
    [
        699220,
        247842219
    ],
    [
        699180,
        234100000
    ],
    [
        699130,
        239893000
    ],
    [
        699050,
        240000000
    ],
    [
        699040,
        239269997
    ],
    [
        699010,
        240000000
    ],
    [
        699000,
        240958302
    ],
    [
        698990,
        243713494
    ],
    [
        698980,
        244514000
    ],
    [
        698960,
        244574000
    ],
    [
        698930,
        239000000
    ],
    [
        698910,
        237705000
    ],
    [
        698860,
        234100000
    ],
    [
        698820,
        234000000
    ],
    [
        698810,
        233000000
    ],
    [
        698800,
        232000000
    ],
    [
        698770,
        232988000
    ],
    [
        698740,
        232709000
    ],
    [
        698730,
        231000000
    ],
    [
        698720,
        232709000
    ],
    [
        698700,
        231000000
    ],
    [
        698670,
        229961000
    ],
    [
        698660,
        228808241
    ],
    [
        698650,
        227562604
    ],
    [
        698640,
        234301000
    ],
    [
        698630,
        234869108
    ],
    [
        698620,
        235060000
    ],
    [
        698610,
        236116219
    ],
    [
        698600,
        238798000
    ],
    [
        698580,
        238779644
    ],
    [
        698570,
        238798000
    ],
    [
        698560,
        238847055
    ],
    [
        698550,
        237563819
    ],
    [
        698510,
        233000000
    ],
    [
        698500,
        232557000
    ],
    [
        698460,
        232000000
    ],
    [
        698450,
        231307000
    ],
    [
        698430,
        230000000
    ],
    [
        698410,
        230712442
    ],
    [
        698400,
        230000000
    ],
    [
        698390,
        229000000
    ],
    [
        698360,
        228676000
    ],
    [
        698340,
        228042000
    ],
    [
        698330,
        228000000
    ],
    [
        698310,
        228042000
    ],
    [
        698290,
        228000000
    ],
    [
        698240,
        229000000
    ],
    [
        698230,
        230179313
    ],
    [
        698210,
        230013108
    ],
    [
        698190,
        228000000
    ],
    [
        698160,
        222000000
    ],
    [
        698140,
        222700000
    ],
    [
        698110,
        223234000
    ],
    [
        698100,
        225501447
    ],
    [
        698090,
        224673886
    ],
    [
        698060,
        226000000
    ],
    [
        698050,
        225507553
    ],
    [
        698040,
        225007000
    ],
    [
        698000,
        225000000
    ],
    [
        697990,
        224516886
    ],
    [
        697940,
        223000000
    ],
    [
        697910,
        222700000
    ],
    [
        697890,
        219000000
    ],
    [
        697840,
        220000000
    ],
    [
        697820,
        220453108
    ],
    [
        697810,
        220486442
    ],
    [
        697740,
        222000000
    ],
    [
        697730,
        222963000
    ],
    [
        697720,
        223164876
    ],
    [
        697710,
        224000000
    ],
    [
        697700,
        223386609
    ],
    [
        697690,
        223720000
    ],
    [
        697630,
        224000000
    ],
    [
        697580,
        220000000
    ],
    [
        697540,
        222700000
    ],
    [
        697480,
        225000000
    ],
    [
        697430,
        229306000
    ],
    [
        697410,
        230878000
    ],
    [
        697400,
        232698603
    ],
    [
        697390,
        231069922
    ],
    [
        697380,
        234503330
    ],
    [
        697370,
        235597775
    ],
    [
        697340,
        231000000
    ],
    [
        697330,
        229929000
    ],
    [
        697300,
        229500000
    ],
    [
        697290,
        227935000
    ],
    [
        697280,
        229443553
    ],
    [
        697260,
        229156886
    ],
    [
        697250,
        226967984
    ],
    [
        697240,
        228966000
    ],
    [
        697230,
        228702219
    ],
    [
        697200,
        228000000
    ],
    [
        697190,
        227769790
    ],
    [
        697180,
        227344000
    ],
    [
        697130,
        223000000
    ],
    [
        697120,
        222000000
    ],
    [
        697080,
        223000000
    ],
    [
        697070,
        222000000
    ],
    [
        697060,
        220791972
    ],
    [
        697040,
        213642000
    ],
    [
        697020,
        212273409
    ],
    [
        696970,
        212183000
    ],
    [
        696950,
        212507000
    ],
    [
        696940,
        212000000
    ],
    [
        696880,
        220000000
    ],
    [
        696840,
        219000000
    ],
    [
        696820,
        219380886
    ],
    [
        696780,
        221343000
    ],
    [
        696750,
        221467000
    ],
    [
        696680,
        225000000
    ],
    [
        696670,
        224207000
    ],
    [
        696650,
        223079495
    ],
    [
        696640,
        223123940
    ],
    [
        696620,
        220887000
    ],
    [
        696590,
        220000000
    ],
    [
        696570,
        217690000
    ],
    [
        696560,
        217100058
    ],
    [
        696550,
        216451169
    ],
    [
        696540,
        216564725
    ],
    [
        696530,
        213000000
    ],
    [
        696430,
        222000000
    ],
    [
        696400,
        225000000
    ],
    [
        696370,
        225010000
    ],
    [
        696360,
        225000000
    ],
    [
        696350,
        226000000
    ],
    [
        696300,
        227000000
    ],
    [
        696270,
        228000000
    ],
    [
        696260,
        229193778
    ],
    [
        696250,
        228000000
    ],
    [
        696170,
        234000000
    ],
    [
        696160,
        234056204
    ],
    [
        696120,
        234000000
    ],
    [
        696060,
        244000000
    ],
    [
        696040,
        248443060
    ],
    [
        696020,
        247830000
    ],
    [
        696010,
        249160664
    ],
    [
        696000,
        250414000
    ],
    [
        695970,
        251000000
    ],
    [
        695940,
        246589000
    ],
    [
        695930,
        246500000
    ],
    [
        695920,
        247000000
    ],
    [
        695910,
        246510000
    ],
    [
        695850,
        246500000
    ],
    [
        695830,
        245000000
    ],
    [
        695810,
        243677775
    ],
    [
        695800,
        243864668
    ],
    [
        695790,
        244907997
    ],
    [
        695740,
        249000000
    ],
    [
        695700,
        246000000
    ],
    [
        695690,
        245000000
    ],
    [
        695670,
        239636073
    ],
    [
        695660,
        238332000
    ],
    [
        695650,
        242000000
    ],
    [
        695640,
        245000000
    ],
    [
        695630,
        245193775
    ],
    [
        695610,
        245140000
    ],
    [
        695570,
        243000000
    ],
    [
        695560,
        241983553
    ],
    [
        695550,
        242532304
    ],
    [
        695530,
        243881357
    ],
    [
        695520,
        248001000
    ],
    [
        695500,
        245341000
    ],
    [
        695460,
        238000000
    ],
    [
        695450,
        236080442
    ],
    [
        695420,
        232000000
    ],
    [
        695400,
        220193000
    ],
    [
        695360,
        218000000
    ],
    [
        695350,
        217413997
    ],
    [
        695330,
        216986664
    ],
    [
        695320,
        216361553
    ],
    [
        695300,
        218000000
    ],
    [
        695260,
        217000000
    ],
    [
        695250,
        215602361
    ],
    [
        695180,
        218000000
    ],
    [
        695160,
        218079172
    ],
    [
        695150,
        220142000
    ],
    [
        695130,
        221602220
    ],
    [
        695120,
        221095680
    ],
    [
        695090,
        220420000
    ],
    [
        695060,
        219000000
    ],
    [
        695040,
        218520000
    ],
    [
        695010,
        219000000
    ],
    [
        694960,
        217000000
    ],
    [
        694930,
        211000000
    ],
    [
        694920,
        208530000
    ],
    [
        694900,
        205372000
    ],
    [
        694850,
        205974000
    ],
    [
        694840,
        205184886
    ],
    [
        694830,
        203290000
    ],
    [
        694800,
        203000000
    ],
    [
        694790,
        202881250
    ],
    [
        694780,
        202515723
    ],
    [
        694730,
        196000000
    ],
    [
        694710,
        196400000
    ],
    [
        694670,
        197000000
    ],
    [
        694640,
        195050000
    ],
    [
        694620,
        195000000
    ],
    [
        694610,
        194637000
    ],
    [
        694550,
        194000000
    ],
    [
        694540,
        194419532
    ],
    [
        694510,
        196970000
    ],
    [
        694500,
        198000000
    ],
    [
        694490,
        198361109
    ],
    [
        694430,
        197830000
    ],
    [
        694420,
        197740205
    ],
    [
        694400,
        189037597
    ],
    [
        694390,
        190055000
    ],
    [
        694380,
        184153057
    ],
    [
        694320,
        195000000
    ],
    [
        694310,
        195561998
    ],
    [
        694300,
        199024910
    ],
    [
        694290,
        199202688
    ],
    [
        694260,
        199968886
    ],
    [
        694240,
        199598448
    ],
    [
        694230,
        199094003
    ],
    [
        694180,
        203000000
    ],
    [
        694160,
        204000000
    ],
    [
        694110,
        203485000
    ],
    [
        694080,
        203000000
    ],
    [
        694060,
        202987539
    ],
    [
        694050,
        203000000
    ],
    [
        694030,
        208275022
    ],
    [
        694020,
        209000000
    ],
    [
        693980,
        210267000
    ],
    [
        693960,
        206667000
    ],
    [
        693940,
        204000000
    ],
    [
        693930,
        203959200
    ],
    [
        693920,
        203000000
    ],
    [
        693910,
        201053000
    ],
    [
        693880,
        199000000
    ],
    [
        693870,
        198953000
    ],
    [
        693850,
        199000000
    ],
    [
        693830,
        196728000
    ],
    [
        693820,
        196550717
    ],
    [
        693790,
        196000000
    ],
    [
        693760,
        197000000
    ],
    [
        693730,
        198904000
    ],
    [
        693720,
        199552678
    ],
    [
        693670,
        201000000
    ],
    [
        693660,
        199949775
    ],
    [
        693640,
        201000000
    ],
    [
        693620,
        203000000
    ],
    [
        693590,
        204000000
    ],
    [
        693570,
        203199997
    ],
    [
        693540,
        201000000
    ],
    [
        693440,
        199000000
    ],
    [
        693430,
        198837000
    ],
    [
        693410,
        198463500
    ],
    [
        693390,
        198918500
    ],
    [
        693380,
        198657096
    ],
    [
        693370,
        198506000
    ],
    [
        693340,
        198961000
    ],
    [
        693330,
        198955000
    ],
    [
        693320,
        196955000
    ],
    [
        693310,
        196235000
    ],
    [
        693290,
        195000000
    ],
    [
        693280,
        193157000
    ],
    [
        693240,
        191657000
    ],
    [
        693230,
        192037944
    ],
    [
        693220,
        191741278
    ],
    [
        693210,
        192384611
    ],
    [
        693190,
        192514000
    ],
    [
        693160,
        193478500
    ],
    [
        693130,
        195478500
    ],
    [
        693110,
        196000000
    ],
    [
        693080,
        198209000
    ],
    [
        693060,
        200000000
    ],
    [
        693030,
        204068000
    ],
    [
        693020,
        205500000
    ],
    [
        692980,
        205619000
    ],
    [
        692960,
        204930000
    ],
    [
        692950,
        203430000
    ],
    [
        692940,
        202762998
    ],
    [
        692890,
        206457000
    ],
    [
        692880,
        206480000
    ],
    [
        692870,
        206672221
    ],
    [
        692860,
        208980000
    ],
    [
        692850,
        210431327
    ],
    [
        692840,
        211500000
    ],
    [
        692810,
        210666500
    ],
    [
        692800,
        209650003
    ],
    [
        692790,
        209530003
    ],
    [
        692780,
        209463003
    ],
    [
        692770,
        209929968
    ],
    [
        692760,
        209912190
    ],
    [
        692750,
        209500721
    ],
    [
        692740,
        209562943
    ],
    [
        692730,
        210352997
    ],
    [
        692720,
        210305140
    ],
    [
        692710,
        208266000
    ],
    [
        692700,
        209072665
    ],
    [
        692690,
        207821000
    ],
    [
        692680,
        209552317
    ],
    [
        692670,
        210671347
    ],
    [
        692660,
        210382347
    ],
    [
        692650,
        209437450
    ],
    [
        692610,
        207000000
    ],
    [
        692600,
        210839887
    ],
    [
        692590,
        211008588
    ],
    [
        692580,
        210983341
    ],
    [
        692570,
        215980776
    ],
    [
        692560,
        217002776
    ],
    [
        692550,
        214644819
    ],
    [
        692510,
        215669087
    ],
    [
        692500,
        215524235
    ],
    [
        692470,
        211000000
    ],
    [
        692460,
        209824500
    ],
    [
        692450,
        208324500
    ],
    [
        692440,
        207507554
    ],
    [
        692430,
        207059507
    ],
    [
        692420,
        206200826
    ],
    [
        692410,
        207002500
    ],
    [
        692400,
        207000000
    ],
    [
        692390,
        206057315
    ],
    [
        692380,
        205456887
    ],
    [
        692360,
        203623308
    ],
    [
        692340,
        203541500
    ],
    [
        692330,
        201706500
    ],
    [
        692320,
        201823498
    ],
    [
        692310,
        203281998
    ],
    [
        692290,
        204440000
    ],
    [
        692280,
        206821052
    ],
    [
        692270,
        205775332
    ],
    [
        692260,
        207804000
    ],
    [
        692240,
        207305000
    ],
    [
        692230,
        207823083
    ],
    [
        692190,
        208000000
    ],
    [
        692180,
        207741849
    ],
    [
        692140,
        208000000
    ],
    [
        692100,
        206240000
    ],
    [
        692090,
        206680000
    ],
    [
        692080,
        207787978
    ],
    [
        692070,
        207658334
    ],
    [
        692060,
        206804911
    ],
    [
        692050,
        205519016
    ],
    [
        692000,
        205152304
    ],
    [
        691990,
        206811205
    ],
    [
        691980,
        196280000
    ],
    [
        691960,
        193766137
    ],
    [
        691950,
        193375934
    ],
    [
        691920,
        195280000
    ],
    [
        691860,
        193639000
    ],
    [
        691850,
        194211807
    ],
    [
        691830,
        194703497
    ],
    [
        691820,
        195727000
    ],
    [
        691800,
        195047239
    ],
    [
        691790,
        194557201
    ],
    [
        691780,
        195694919
    ],
    [
        691710,
        185780000
    ],
    [
        691700,
        185330554
    ],
    [
        691690,
        185347221
    ],
    [
        691680,
        185829861
    ],
    [
        691640,
        186280000
    ],
    [
        691610,
        185780000
    ],
    [
        691580,
        183269000
    ],
    [
        691570,
        182612757
    ],
    [
        691560,
        183262418
    ],
    [
        691550,
        183516862
    ],
    [
        691530,
        183450195
    ],
    [
        691520,
        183503789
    ],
    [
        691500,
        183272613
    ],
    [
        691490,
        183330391
    ],
    [
        691480,
        183321063
    ],
    [
        691470,
        183265508
    ],
    [
        691460,
        183378887
    ],
    [
        691430,
        183145887
    ],
    [
        691420,
        183160332
    ],
    [
        691410,
        182416000
    ],
    [
        691400,
        182388702
    ],
    [
        691390,
        182136000
    ],
    [
        691380,
        182040240
    ],
    [
        691360,
        179100931
    ],
    [
        691350,
        180159665
    ],
    [
        691290,
        178205221
    ],
    [
        691280,
        177989809
    ],
    [
        691260,
        178161235
    ],
    [
        691250,
        177717109
    ],
    [
        691240,
        176995000
    ],
    [
        691210,
        175995000
    ],
    [
        691190,
        174642000
    ],
    [
        691180,
        174563776
    ],
    [
        691170,
        174508221
    ],
    [
        691160,
        174131776
    ],
    [
        691140,
        174310000
    ],
    [
        691100,
        173000000
    ],
    [
        691090,
        172654688
    ],
    [
        691070,
        170351776
    ],
    [
        691060,
        170481331
    ],
    [
        691050,
        170000000
    ],
    [
        691030,
        168801000
    ],
    [
        691020,
        168031664
    ],
    [
        691010,
        168801000
    ],
    [
        691000,
        169355456
    ],
    [
        690990,
        168000000
    ],
    [
        690950,
        174027000
    ],
    [
        690930,
        175000000
    ],
    [
        690920,
        174000000
    ],
    [
        690910,
        174294674
    ],
    [
        690890,
        175143563
    ],
    [
        690870,
        175336000
    ],
    [
        690840,
        174000000
    ],
    [
        690820,
        173511109
    ],
    [
        690810,
        172790000
    ],
    [
        690740,
        174000000
    ],
    [
        690690,
        173000000
    ],
    [
        690680,
        173180000
    ],
    [
        690670,
        173254176
    ],
    [
        690640,
        173180000
    ],
    [
        690610,
        174000000
    ],
    [
        690560,
        174033000
    ],
    [
        690540,
        175538776
    ],
    [
        690500,
        175000000
    ],
    [
        690450,
        174597000
    ],
    [
        690430,
        175000000
    ],
    [
        690410,
        174985553
    ],
    [
        690390,
        174896664
    ],
    [
        690370,
        173698000
    ],
    [
        690350,
        174065000
    ],
    [
        690280,
        171000000
    ],
    [
        690260,
        170790000
    ],
    [
        690190,
        171766000
    ],
    [
        690170,
        174000000
    ],
    [
        690160,
        176520000
    ],
    [
        690110,
        176874000
    ],
    [
        690090,
        177000000
    ],
    [
        690080,
        178235553
    ],
    [
        690070,
        178268887
    ],
    [
        690060,
        177992578
    ],
    [
        690010,
        177090000
    ],
    [
        690000,
        180224664
    ],
    [
        689980,
        180213553
    ],
    [
        689950,
        180144442
    ],
    [
        689940,
        180076753
    ],
    [
        689920,
        178603775
    ],
    [
        689900,
        178423331
    ],
    [
        689880,
        177246599
    ],
    [
        689860,
        177344442
    ],
    [
        689850,
        177195553
    ],
    [
        689840,
        177262220
    ],
    [
        689810,
        177301284
    ],
    [
        689770,
        178150887
    ],
    [
        689750,
        178166442
    ],
    [
        689740,
        178155553
    ],
    [
        689730,
        177859997
    ],
    [
        689720,
        178970000
    ],
    [
        689700,
        178990000
    ],
    [
        689690,
        178000000
    ],
    [
        689670,
        177563000
    ],
    [
        689580,
        177090000
    ],
    [
        689550,
        177890000
    ],
    [
        689540,
        177960000
    ],
    [
        689520,
        172670572
    ],
    [
        689500,
        172128570
    ],
    [
        689460,
        174990000
    ],
    [
        689450,
        177799249
    ],
    [
        689430,
        178057109
    ],
    [
        689420,
        176340000
    ],
    [
        689400,
        174625109
    ],
    [
        689390,
        175324220
    ],
    [
        689370,
        174680000
    ],
    [
        689360,
        171933730
    ],
    [
        689340,
        171878174
    ],
    [
        689330,
        175124159
    ],
    [
        689280,
        177000000
    ],
    [
        689270,
        175461020
    ],
    [
        689220,
        177000000
    ],
    [
        689210,
        175550000
    ],
    [
        689180,
        175385776
    ],
    [
        689150,
        174604100
    ],
    [
        689100,
        173852000
    ],
    [
        689090,
        170190650
    ],
    [
        689070,
        170983984
    ],
    [
        689050,
        171061762
    ],
    [
        688990,
        175000000
    ],
    [
        688980,
        175081177
    ],
    [
        688960,
        172868887
    ],
    [
        688940,
        175236853
    ],
    [
        688930,
        171109651
    ],
    [
        688920,
        166266831
    ],
    [
        688910,
        172575331
    ],
    [
        688890,
        172653109
    ],
    [
        688870,
        172855331
    ],
    [
        688860,
        176647776
    ],
    [
        688850,
        178561775
    ],
    [
        688840,
        178374636
    ],
    [
        688830,
        176548711
    ],
    [
        688820,
        172515553
    ],
    [
        688800,
        177727400
    ],
    [
        688790,
        175626761
    ],
    [
        688770,
        176148520
    ],
    [
        688760,
        176115186
    ],
    [
        688730,
        172163000
    ],
    [
        688720,
        167242702
    ],
    [
        688700,
        170706539
    ],
    [
        688680,
        173061331
    ],
    [
        688660,
        171592442
    ],
    [
        688630,
        171138000
    ],
    [
        688610,
        171000000
    ],
    [
        688590,
        169939998
    ],
    [
        688580,
        169951109
    ],
    [
        688540,
        169731553
    ],
    [
        688530,
        169447109
    ],
    [
        688520,
        170000000
    ],
    [
        688500,
        161000000
    ],
    [
        688490,
        159780000
    ],
    [
        688450,
        161000000
    ],
    [
        688440,
        163000000
    ],
    [
        688430,
        160850922
    ],
    [
        688410,
        163000000
    ],
    [
        688400,
        162281776
    ],
    [
        688390,
        163000000
    ],
    [
        688340,
        162056000
    ],
    [
        688320,
        160740000
    ],
    [
        688300,
        160703597
    ],
    [
        688280,
        160599152
    ],
    [
        688270,
        160488041
    ],
    [
        688240,
        160721375
    ],
    [
        688170,
        162000000
    ],
    [
        688080,
        163500000
    ],
    [
        688030,
        165000000
    ],
    [
        687990,
        166000000
    ],
    [
        687970,
        165678000
    ],
    [
        687950,
        163551331
    ],
    [
        687940,
        165176035
    ],
    [
        687930,
        165678000
    ],
    [
        687920,
        166000000
    ],
    [
        687910,
        166700000
    ],
    [
        687890,
        166000000
    ],
    [
        687880,
        165160000
    ],
    [
        687870,
        164797055
    ],
    [
        687850,
        166000000
    ],
    [
        687840,
        165864527
    ],
    [
        687830,
        165910000
    ],
    [
        687820,
        161130000
    ],
    [
        687810,
        162770000
    ],
    [
        687800,
        165910000
    ],
    [
        687780,
        165970000
    ],
    [
        687760,
        164980000
    ],
    [
        687740,
        162356123
    ],
    [
        687720,
        160611553
    ],
    [
        687710,
        159000000
    ],
    [
        687690,
        159347000
    ],
    [
        687680,
        157750250
    ],
    [
        687670,
        157178067
    ],
    [
        687640,
        157000000
    ],
    [
        687630,
        155565226
    ],
    [
        687620,
        153884500
    ],
    [
        687610,
        154502000
    ],
    [
        687600,
        154357000
    ],
    [
        687580,
        157000000
    ],
    [
        687530,
        155022442
    ],
    [
        687520,
        154574972
    ],
    [
        687480,
        154000000
    ],
    [
        687460,
        152815705
    ],
    [
        687440,
        152693483
    ],
    [
        687430,
        156803492
    ],
    [
        687420,
        150896157
    ],
    [
        687390,
        150200000
    ],
    [
        687280,
        148000000
    ],
    [
        687270,
        146435973
    ],
    [
        687210,
        146372000
    ],
    [
        687180,
        147000000
    ],
    [
        687110,
        149000000
    ],
    [
        687070,
        150200000
    ],
    [
        687040,
        148826000
    ],
    [
        686920,
        148000000
    ],
    [
        686900,
        146274000
    ],
    [
        686880,
        146000000
    ],
    [
        686870,
        146200000
    ],
    [
        686860,
        146274000
    ],
    [
        686840,
        147000000
    ],
    [
        686830,
        146013000
    ],
    [
        686790,
        146000000
    ],
    [
        686690,
        144000000
    ],
    [
        686670,
        141741483
    ],
    [
        686660,
        143464830
    ],
    [
        686650,
        144070000
    ],
    [
        686640,
        149000000
    ],
    [
        686630,
        147000000
    ],
    [
        686620,
        149000000
    ],
    [
        686550,
        150000000
    ],
    [
        686530,
        151540000
    ],
    [
        686520,
        152115006
    ],
    [
        686500,
        152837228
    ],
    [
        686490,
        157420000
    ],
    [
        686480,
        152668153
    ],
    [
        686470,
        155699746
    ],
    [
        686460,
        157450000
    ],
    [
        686440,
        156970857
    ],
    [
        686420,
        156448635
    ],
    [
        686410,
        156410533
    ],
    [
        686400,
        157620000
    ],
    [
        686370,
        157693000
    ],
    [
        686330,
        156000000
    ],
    [
        686310,
        154910000
    ],
    [
        686290,
        153967000
    ],
    [
        686280,
        154106220
    ],
    [
        686270,
        154390000
    ],
    [
        686260,
        153967000
    ],
    [
        686230,
        153244000
    ],
    [
        686210,
        154000000
    ],
    [
        686200,
        153288941
    ],
    [
        686140,
        157620000
    ],
    [
        686130,
        156140000
    ],
    [
        686110,
        155000000
    ],
    [
        686070,
        157166000
    ],
    [
        686060,
        158000000
    ],
    [
        686050,
        158555000
    ],
    [
        686010,
        157620000
    ],
    [
        685980,
        155624789
    ],
    [
        685970,
        154191000
    ],
    [
        685950,
        156470000
    ],
    [
        685910,
        156859000
    ],
    [
        685900,
        157430887
    ],
    [
        685880,
        156919062
    ],
    [
        685870,
        156859000
    ],
    [
        685850,
        156930000
    ],
    [
        685840,
        156000000
    ],
    [
        685830,
        156444531
    ],
    [
        685820,
        156294048
    ],
    [
        685790,
        156000000
    ],
    [
        685780,
        156327584
    ],
    [
        685760,
        157129000
    ],
    [
        685740,
        157151109
    ],
    [
        685710,
        157620000
    ],
    [
        685660,
        161355000
    ],
    [
        685630,
        165010000
    ],
    [
        685600,
        168990000
    ],
    [
        685580,
        168677000
    ],
    [
        685570,
        166890000
    ],
    [
        685540,
        166000000
    ],
    [
        685430,
        165010000
    ],
    [
        685420,
        167061262
    ],
    [
        685400,
        167679305
    ],
    [
        685360,
        171000000
    ],
    [
        685320,
        172552000
    ],
    [
        685250,
        173446000
    ],
    [
        685240,
        173529366
    ],
    [
        685180,
        173820000
    ],
    [
        685160,
        172913811
    ],
    [
        685150,
        172000000
    ],
    [
        685140,
        170049331
    ],
    [
        685120,
        170800442
    ],
    [
        685100,
        171847109
    ],
    [
        685090,
        171630000
    ],
    [
        685080,
        170759721
    ],
    [
        685060,
        170915276
    ],
    [
        685050,
        172000000
    ],
    [
        685040,
        171580442
    ],
    [
        685030,
        170795000
    ],
    [
        685020,
        171150000
    ],
    [
        685010,
        169548176
    ],
    [
        684950,
        170000000
    ],
    [
        684910,
        170603000
    ],
    [
        684860,
        171480000
    ],
    [
        684840,
        173020074
    ],
    [
        684830,
        173747000
    ],
    [
        684820,
        173170000
    ],
    [
        684810,
        172513564
    ],
    [
        684740,
        172000000
    ],
    [
        684730,
        168680000
    ],
    [
        684720,
        171933331
    ],
    [
        684710,
        170000000
    ],
    [
        684700,
        169090000
    ],
    [
        684690,
        169262442
    ],
    [
        684680,
        167211568
    ],
    [
        684670,
        167222679
    ],
    [
        684640,
        166000000
    ],
    [
        684580,
        165000000
    ],
    [
        684560,
        166423058
    ],
    [
        684550,
        166365776
    ],
    [
        684530,
        166284831
    ],
    [
        684520,
        166438347
    ],
    [
        684430,
        166344000
    ],
    [
        684400,
        168000000
    ],
    [
        684350,
        166000000
    ],
    [
        684340,
        168148776
    ],
    [
        684290,
        169990000
    ],
    [
        684270,
        171100000
    ],
    [
        684200,
        172000000
    ],
    [
        684170,
        172090000
    ],
    [
        684160,
        172129109
    ],
    [
        684130,
        172090000
    ],
    [
        684120,
        172219363
    ],
    [
        684110,
        172119363
    ],
    [
        684100,
        172052696
    ],
    [
        684080,
        171110000
    ],
    [
        684060,
        172079363
    ],
    [
        684050,
        172390474
    ],
    [
        684030,
        175114706
    ],
    [
        684020,
        176408039
    ],
    [
        684000,
        176025817
    ],
    [
        683930,
        171110000
    ],
    [
        683870,
        176850000
    ],
    [
        683860,
        176858220
    ],
    [
        683850,
        176904887
    ],
    [
        683820,
        176850000
    ],
    [
        683790,
        180000000
    ],
    [
        683760,
        183020000
    ],
    [
        683750,
        184435998
    ],
    [
        683740,
        183500000
    ],
    [
        683720,
        183020000
    ],
    [
        683710,
        182330000
    ],
    [
        683700,
        179212442
    ],
    [
        683640,
        183760000
    ],
    [
        683620,
        183000000
    ],
    [
        683610,
        179900913
    ],
    [
        683590,
        181814659
    ],
    [
        683580,
        173689314
    ],
    [
        683570,
        178262887
    ],
    [
        683560,
        178229553
    ],
    [
        683550,
        179660466
    ],
    [
        683540,
        181276873
    ],
    [
        683530,
        178101609
    ],
    [
        683490,
        186000000
    ],
    [
        683450,
        183000000
    ],
    [
        683390,
        181960000
    ],
    [
        683360,
        182000000
    ],
    [
        683350,
        185025000
    ],
    [
        683340,
        181837305
    ],
    [
        683330,
        180647489
    ],
    [
        683320,
        184280000
    ],
    [
        683310,
        184735000
    ],
    [
        683300,
        185357955
    ],
    [
        683290,
        186240000
    ],
    [
        683280,
        187625999
    ],
    [
        683270,
        187745999
    ],
    [
        683260,
        188100887
    ],
    [
        683250,
        188110887
    ],
    [
        683240,
        187546776
    ],
    [
        683230,
        186368984
    ],
    [
        683220,
        178446260
    ],
    [
        683210,
        180612926
    ],
    [
        683200,
        181985701
    ],
    [
        683190,
        182597263
    ],
    [
        683180,
        180717507
    ],
    [
        683170,
        179284249
    ],
    [
        683160,
        180763743
    ],
    [
        683150,
        181708743
    ],
    [
        683140,
        183159123
    ],
    [
        683130,
        186334678
    ],
    [
        683120,
        187124678
    ],
    [
        683110,
        187612000
    ],
    [
        683100,
        186224000
    ],
    [
        683030,
        177400000
    ],
    [
        683020,
        177682384
    ],
    [
        682950,
        175000000
    ],
    [
        682940,
        173530951
    ],
    [
        682930,
        175000000
    ],
    [
        682920,
        173986628
    ],
    [
        682910,
        175000000
    ],
    [
        682900,
        172959998
    ],
    [
        682870,
        172931105
    ],
    [
        682840,
        171100000
    ],
    [
        682820,
        172562220
    ],
    [
        682810,
        172462220
    ],
    [
        682790,
        172662220
    ],
    [
        682780,
        172084442
    ],
    [
        682760,
        171917776
    ],
    [
        682740,
        171751109
    ],
    [
        682720,
        171973331
    ],
    [
        682710,
        171328887
    ],
    [
        682540,
        171100000
    ],
    [
        682510,
        171000000
    ],
    [
        682460,
        169075000
    ],
    [
        682380,
        170000000
    ],
    [
        682340,
        170652000
    ],
    [
        682320,
        170610000
    ],
    [
        682260,
        170000000
    ],
    [
        682180,
        168000000
    ],
    [
        682140,
        169201000
    ],
    [
        682080,
        170677000
    ],
    [
        682050,
        171000000
    ],
    [
        681920,
        171100000
    ],
    [
        681880,
        170344000
    ],
    [
        681870,
        167272000
    ],
    [
        681850,
        168199500
    ],
    [
        681840,
        167811443
    ],
    [
        681820,
        167801099
    ],
    [
        681810,
        168312513
    ],
    [
        681800,
        168415846
    ],
    [
        681790,
        169680000
    ],
    [
        681780,
        170324813
    ],
    [
        681770,
        169587499
    ],
    [
        681750,
        170033500
    ],
    [
        681740,
        170141500
    ],
    [
        681730,
        170625096
    ],
    [
        681690,
        170141500
    ],
    [
        681680,
        170913000
    ],
    [
        681670,
        169473000
    ],
    [
        681640,
        167590000
    ],
    [
        681630,
        168897488
    ],
    [
        681620,
        169529909
    ],
    [
        681610,
        167958694
    ],
    [
        681600,
        168813274
    ],
    [
        681590,
        168262221
    ],
    [
        681570,
        168223617
    ],
    [
        681550,
        167295000
    ],
    [
        681530,
        167570137
    ],
    [
        681520,
        168095693
    ],
    [
        681490,
        169000000
    ],
    [
        681480,
        168652221
    ],
    [
        681460,
        169007221
    ],
    [
        681440,
        169252195
    ],
    [
        681430,
        169175879
    ],
    [
        681420,
        172518562
    ],
    [
        681410,
        172136340
    ],
    [
        681400,
        170170888
    ],
    [
        681390,
        168927657
    ],
    [
        681350,
        168974805
    ],
    [
        681340,
        168552549
    ],
    [
        681330,
        169447731
    ],
    [
        681310,
        169621443
    ],
    [
        681300,
        170507526
    ],
    [
        681260,
        169300676
    ],
    [
        681250,
        168869943
    ],
    [
        681230,
        169141054
    ],
    [
        681220,
        169091054
    ],
    [
        681210,
        168500000
    ],
    [
        681150,
        168079675
    ],
    [
        681140,
        168076342
    ],
    [
        681130,
        167042888
    ],
    [
        681120,
        167253738
    ],
    [
        681110,
        168374332
    ],
    [
        681100,
        168119223
    ],
    [
        681090,
        165826466
    ],
    [
        681070,
        165826888
    ],
    [
        681060,
        166128283
    ],
    [
        681040,
        166125917
    ],
    [
        681030,
        165065417
    ],
    [
        681010,
        165000000
    ],
    [
        681000,
        164614221
    ],
    [
        680990,
        164579776
    ],
    [
        680980,
        164301999
    ],
    [
        680970,
        165000000
    ],
    [
        680890,
        167000000
    ],
    [
        680860,
        167552958
    ],
    [
        680850,
        167540736
    ],
    [
        680840,
        167719625
    ],
    [
        680830,
        168270609
    ],
    [
        680810,
        167815002
    ],
    [
        680800,
        167581668
    ],
    [
        680790,
        167958335
    ],
    [
        680780,
        167485150
    ],
    [
        680770,
        168585179
    ],
    [
        680750,
        168851817
    ],
    [
        680740,
        167272138
    ],
    [
        680710,
        167256292
    ],
    [
        680690,
        167451845
    ],
    [
        680670,
        167414888
    ],
    [
        680650,
        167500000
    ],
    [
        680630,
        167722919
    ],
    [
        680620,
        166907789
    ],
    [
        680600,
        167167431
    ],
    [
        680590,
        167291602
    ],
    [
        680580,
        166418888
    ],
    [
        680560,
        166173787
    ],
    [
        680550,
        164890478
    ],
    [
        680540,
        165034376
    ],
    [
        680530,
        165892600
    ],
    [
        680520,
        164060818
    ],
    [
        680500,
        162720150
    ],
    [
        680490,
        162933305
    ],
    [
        680480,
        163440000
    ],
    [
        680470,
        163737212
    ],
    [
        680460,
        165117476
    ],
    [
        680440,
        165161920
    ],
    [
        680420,
        165180162
    ],
    [
        680410,
        163194101
    ],
    [
        680400,
        161020000
    ],
    [
        680360,
        163000000
    ],
    [
        680280,
        159662000
    ],
    [
        680240,
        160000000
    ],
    [
        680180,
        157000000
    ],
    [
        680130,
        152000000
    ],
    [
        680120,
        150895554
    ],
    [
        680080,
        150240000
    ],
    [
        680060,
        151120000
    ],
    [
        680040,
        151535500
    ],
    [
        680000,
        150655500
    ],
    [
        679920,
        150494000
    ],
    [
        679900,
        149620000
    ],
    [
        679830,
        148120000
    ],
    [
        679780,
        147901000
    ],
    [
        679710,
        148512500
    ],
    [
        679690,
        147120000
    ],
    [
        679640,
        146713500
    ],
    [
        679620,
        148093499
    ],
    [
        679580,
        148724500
    ],
    [
        679570,
        148616388
    ],
    [
        679560,
        148539665
    ],
    [
        679540,
        148499665
    ],
    [
        679510,
        147895000
    ],
    [
        679480,
        148861000
    ],
    [
        679470,
        151432164
    ],
    [
        679460,
        151412164
    ],
    [
        679450,
        151447719
    ],
    [
        679440,
        153410000
    ],
    [
        679420,
        154410000
    ],
    [
        679380,
        153410000
    ],
    [
        679370,
        153393500
    ],
    [
        679310,
        153787000
    ],
    [
        679290,
        153820000
    ],
    [
        679250,
        154307000
    ],
    [
        679230,
        153820000
    ],
    [
        679170,
        154990000
    ],
    [
        679130,
        154000000
    ],
    [
        679110,
        154990000
    ],
    [
        679100,
        155000000
    ],
    [
        679090,
        154990000
    ],
    [
        679080,
        155710665
    ],
    [
        679060,
        154990000
    ],
    [
        679040,
        157400000
    ],
    [
        678970,
        157410000
    ],
    [
        678960,
        157459998
    ],
    [
        678940,
        157539998
    ],
    [
        678780,
        157400000
    ],
    [
        678770,
        159892881
    ],
    [
        678760,
        160007933
    ],
    [
        678750,
        160815832
    ],
    [
        678730,
        161024276
    ],
    [
        678720,
        160835388
    ],
    [
        678710,
        161791259
    ],
    [
        678700,
        162950834
    ],
    [
        678680,
        162594443
    ],
    [
        678660,
        162307776
    ],
    [
        678650,
        161528305
    ],
    [
        678640,
        161472750
    ],
    [
        678630,
        161493750
    ],
    [
        678610,
        160817386
    ],
    [
        678600,
        155006943
    ],
    [
        678580,
        155434469
    ],
    [
        678570,
        156368469
    ],
    [
        678560,
        157669958
    ],
    [
        678550,
        157867443
    ],
    [
        678540,
        158878110
    ],
    [
        678520,
        159278110
    ],
    [
        678480,
        158137748
    ],
    [
        678450,
        159148443
    ],
    [
        678440,
        159208443
    ],
    [
        678430,
        158623999
    ],
    [
        678420,
        158662888
    ],
    [
        678410,
        160090999
    ],
    [
        678400,
        159699654
    ],
    [
        678390,
        159715477
    ],
    [
        678380,
        158772443
    ],
    [
        678370,
        158422443
    ],
    [
        678340,
        158461507
    ],
    [
        678330,
        158197221
    ],
    [
        678300,
        156342480
    ],
    [
        678290,
        157416699
    ],
    [
        678270,
        159601696
    ],
    [
        678260,
        158060554
    ],
    [
        678240,
        158953919
    ],
    [
        678230,
        158314999
    ],
    [
        678220,
        159233792
    ],
    [
        678190,
        159723189
    ],
    [
        678180,
        158565893
    ],
    [
        678160,
        157060443
    ],
    [
        678140,
        156540443
    ],
    [
        678130,
        153667643
    ],
    [
        678120,
        153491052
    ],
    [
        678100,
        155148110
    ],
    [
        678090,
        155143110
    ],
    [
        678080,
        150665332
    ],
    [
        678070,
        149838384
    ],
    [
        678050,
        150884888
    ],
    [
        678030,
        151703092
    ],
    [
        678020,
        150533235
    ],
    [
        678000,
        149417777
    ],
    [
        677990,
        149939112
    ],
    [
        677980,
        151119163
    ],
    [
        677960,
        151061962
    ],
    [
        677890,
        145965614
    ],
    [
        677880,
        145143081
    ],
    [
        677860,
        145093081
    ],
    [
        677850,
        145048636
    ],
    [
        677830,
        145004192
    ],
    [
        677820,
        145043329
    ],
    [
        677730,
        145000000
    ],
    [
        677720,
        144188797
    ],
    [
        677700,
        143177777
    ],
    [
        677690,
        143605554
    ],
    [
        677680,
        143113665
    ],
    [
        677650,
        143102554
    ],
    [
        677640,
        143000000
    ],
    [
        677630,
        143069221
    ],
    [
        677610,
        142949221
    ],
    [
        677600,
        141904777
    ],
    [
        677580,
        141849221
    ],
    [
        677570,
        142000000
    ],
    [
        677560,
        141813665
    ],
    [
        677550,
        141935888
    ],
    [
        677540,
        142334239
    ],
    [
        677510,
        142384239
    ],
    [
        677500,
        142328554
    ],
    [
        677470,
        142095221
    ],
    [
        677460,
        142084110
    ],
    [
        677430,
        142356332
    ],
    [
        677400,
        140630443
    ],
    [
        677380,
        141268887
    ],
    [
        677370,
        141230665
    ],
    [
        677360,
        141640000
    ],
    [
        677350,
        141235109
    ],
    [
        677330,
        140216665
    ],
    [
        677310,
        142000000
    ],
    [
        677300,
        137680665
    ],
    [
        677290,
        137580665
    ],
    [
        677270,
        137785109
    ],
    [
        677260,
        138173998
    ],
    [
        677250,
        137936220
    ],
    [
        677240,
        139332292
    ],
    [
        677220,
        140505554
    ],
    [
        677210,
        140661109
    ],
    [
        677190,
        141600000
    ],
    [
        677170,
        143949980
    ],
    [
        677150,
        144038869
    ],
    [
        677130,
        142156517
    ],
    [
        677120,
        140622887
    ],
    [
        677100,
        139859159
    ],
    [
        677090,
        140499998
    ],
    [
        677070,
        142305109
    ],
    [
        677040,
        142282887
    ],
    [
        677030,
        143316047
    ],
    [
        677010,
        143753825
    ],
    [
        676980,
        145000000
    ],
    [
        676960,
        141481559
    ],
    [
        676950,
        142687055
    ],
    [
        676940,
        140229554
    ],
    [
        676910,
        139839998
    ],
    [
        676890,
        139101598
    ],
    [
        676880,
        138593776
    ],
    [
        676870,
        137807554
    ],
    [
        676860,
        137774220
    ],
    [
        676850,
        139573331
    ],
    [
        676840,
        136451776
    ],
    [
        676820,
        136551776
    ],
    [
        676810,
        136362887
    ],
    [
        676800,
        138141981
    ],
    [
        676790,
        138130870
    ],
    [
        676760,
        137241981
    ],
    [
        676750,
        137375315
    ],
    [
        676740,
        138032949
    ],
    [
        676730,
        140575627
    ],
    [
        676720,
        140653405
    ],
    [
        676710,
        137267904
    ],
    [
        676700,
        137310480
    ],
    [
        676690,
        138502665
    ],
    [
        676680,
        138176887
    ],
    [
        676670,
        138132443
    ],
    [
        676660,
        136528044
    ],
    [
        676640,
        135840000
    ],
    [
        676620,
        136709554
    ],
    [
        676600,
        137280000
    ],
    [
        676590,
        137505109
    ],
    [
        676580,
        139257508
    ],
    [
        676560,
        138846397
    ],
    [
        676540,
        139099998
    ],
    [
        676450,
        137500000
    ],
    [
        676440,
        141580887
    ],
    [
        676430,
        140153206
    ],
    [
        676410,
        139897651
    ],
    [
        676400,
        139886540
    ],
    [
        676390,
        140686540
    ],
    [
        676380,
        138177776
    ],
    [
        676350,
        138455616
    ],
    [
        676330,
        138451243
    ],
    [
        676320,
        137977909
    ],
    [
        676300,
        137742354
    ],
    [
        676280,
        138846665
    ],
    [
        676260,
        138072309
    ],
    [
        676230,
        138050086
    ],
    [
        676220,
        137741197
    ],
    [
        675980,
        135500000
    ],
    [
        675970,
        136114430
    ],
    [
        675840,
        135500000
    ],
    [
        675780,
        136200000
    ],
    [
        675770,
        137261554
    ],
    [
        675750,
        137205998
    ],
    [
        675740,
        137099331
    ],
    [
        675720,
        137110443
    ],
    [
        675700,
        136999331
    ],
    [
        675680,
        137730588
    ],
    [
        675670,
        136200000
    ],
    [
        675630,
        136376987
    ],
    [
        675620,
        137280000
    ],
    [
        675610,
        136878493
    ],
    [
        675600,
        136925685
    ],
    [
        675590,
        136942352
    ],
    [
        675580,
        137153463
    ],
    [
        675570,
        136613463
    ],
    [
        675560,
        135766602
    ],
    [
        675540,
        135748824
    ],
    [
        675520,
        137920784
    ],
    [
        675510,
        137954117
    ],
    [
        675500,
        136679117
    ],
    [
        675430,
        135355000
    ],
    [
        675410,
        135897979
    ],
    [
        675400,
        135443693
    ],
    [
        675380,
        135477027
    ],
    [
        675360,
        135454804
    ],
    [
        675350,
        135396828
    ],
    [
        675210,
        135355000
    ],
    [
        675190,
        135603265
    ],
    [
        675180,
        135514377
    ],
    [
        675160,
        135429932
    ],
    [
        675140,
        135396599
    ],
    [
        675130,
        135407710
    ],
    [
        675080,
        135355000
    ],
    [
        675010,
        134755000
    ],
    [
        674970,
        135305000
    ],
    [
        674910,
        134540000
    ],
    [
        674880,
        135355000
    ],
    [
        674870,
        135820085
    ],
    [
        674830,
        137100000
    ],
    [
        674820,
        137184529
    ],
    [
        674770,
        138000000
    ],
    [
        674760,
        137254529
    ],
    [
        674740,
        137100000
    ],
    [
        674700,
        139475000
    ],
    [
        674660,
        140000000
    ],
    [
        674630,
        139751665
    ],
    [
        674620,
        138441665
    ],
    [
        674610,
        137536443
    ],
    [
        674590,
        137497554
    ],
    [
        674570,
        137610000
    ],
    [
        674560,
        137439999
    ],
    [
        674540,
        137234443
    ],
    [
        674520,
        136710000
    ],
    [
        674510,
        136417999
    ],
    [
        674490,
        136316888
    ],
    [
        674470,
        136339110
    ],
    [
        674460,
        136085000
    ],
    [
        674450,
        135977999
    ],
    [
        674430,
        135477999
    ],
    [
        674400,
        135125790
    ],
    [
        674390,
        135710790
    ],
    [
        674380,
        136085000
    ],
    [
        674370,
        135750000
    ],
    [
        674360,
        135418484
    ],
    [
        674350,
        135940585
    ],
    [
        674340,
        136004500
    ],
    [
        674330,
        135654221
    ],
    [
        674320,
        135315888
    ],
    [
        674310,
        135000000
    ],
    [
        674300,
        134630548
    ],
    [
        674290,
        134625548
    ],
    [
        674280,
        134515000
    ],
    [
        674270,
        134505000
    ],
    [
        674250,
        135016500
    ],
    [
        674240,
        134917000
    ],
    [
        674230,
        134867000
    ],
    [
        674220,
        134705000
    ],
    [
        674180,
        135162000
    ],
    [
        674160,
        134624999
    ],
    [
        674150,
        134870165
    ],
    [
        674100,
        134114999
    ],
    [
        674090,
        134131665
    ],
    [
        674080,
        134134999
    ],
    [
        674070,
        134214443
    ],
    [
        674060,
        134209443
    ],
    [
        674050,
        133499443
    ],
    [
        674040,
        133582777
    ],
    [
        673980,
        132980000
    ],
    [
        673970,
        132965000
    ],
    [
        673900,
        133256000
    ],
    [
        673880,
        133480000
    ],
    [
        673870,
        133579965
    ],
    [
        673860,
        133775520
    ],
    [
        673840,
        133549329
    ],
    [
        673830,
        133515996
    ],
    [
        673820,
        133449329
    ],
    [
        673790,
        133456665
    ],
    [
        673660,
        132980000
    ],
    [
        673650,
        132613332
    ],
    [
        673640,
        132579999
    ],
    [
        673620,
        132674443
    ],
    [
        673590,
        132250000
    ],
    [
        673580,
        130560000
    ],
    [
        673560,
        131163332
    ],
    [
        673550,
        131250000
    ],
    [
        673520,
        130953777
    ],
    [
        673510,
        130205794
    ],
    [
        673500,
        130194683
    ],
    [
        673480,
        130750000
    ],
    [
        673400,
        130891500
    ],
    [
        673380,
        131497000
    ],
    [
        673310,
        132250000
    ],
    [
        673260,
        131595000
    ],
    [
        673180,
        131250000
    ],
    [
        673160,
        130632000
    ],
    [
        673150,
        130618815
    ],
    [
        673140,
        129636593
    ],
    [
        673130,
        131227093
    ],
    [
        673120,
        130994871
    ],
    [
        673110,
        130872649
    ],
    [
        673100,
        132000000
    ],
    [
        673030,
        132250000
    ],
    [
        673010,
        131950332
    ],
    [
        673000,
        132000000
    ],
    [
        672990,
        132165496
    ],
    [
        672980,
        132250000
    ],
    [
        672970,
        132826607
    ],
    [
        672960,
        132837718
    ],
    [
        672930,
        132798150
    ],
    [
        672920,
        132762373
    ],
    [
        672910,
        132562000
    ],
    [
        672870,
        131900000
    ],
    [
        672860,
        131290000
    ],
    [
        672840,
        131300000
    ],
    [
        672820,
        130628777
    ],
    [
        672800,
        130825443
    ],
    [
        672780,
        130795054
    ],
    [
        672730,
        131650000
    ],
    [
        672710,
        132000000
    ],
    [
        672700,
        132685000
    ],
    [
        672680,
        132935000
    ],
    [
        672670,
        132750000
    ],
    [
        672660,
        132694249
    ],
    [
        672640,
        132635500
    ],
    [
        672620,
        132885500
    ],
    [
        672610,
        132936443
    ],
    [
        672600,
        132869776
    ],
    [
        672590,
        132771000
    ],
    [
        672570,
        132712000
    ],
    [
        672560,
        132500000
    ],
    [
        672530,
        132000000
    ],
    [
        672520,
        132712000
    ],
    [
        672510,
        133000000
    ],
    [
        672500,
        132562500
    ],
    [
        672470,
        131562500
    ],
    [
        672450,
        130740500
    ],
    [
        672390,
        129000000
    ],
    [
        672370,
        132083332
    ],
    [
        672360,
        132509701
    ],
    [
        672350,
        135080000
    ],
    [
        672340,
        135110863
    ],
    [
        672330,
        134738762
    ],
    [
        672320,
        136887110
    ],
    [
        672310,
        136785999
    ],
    [
        672300,
        136372612
    ],
    [
        672290,
        135372612
    ],
    [
        672280,
        135992750
    ],
    [
        672260,
        135158777
    ],
    [
        672250,
        134404665
    ],
    [
        672240,
        134532443
    ],
    [
        672220,
        134737000
    ],
    [
        672200,
        133827110
    ],
    [
        672180,
        133215666
    ],
    [
        672170,
        133260110
    ],
    [
        672160,
        133060110
    ],
    [
        672140,
        133920000
    ],
    [
        672110,
        134500000
    ],
    [
        672100,
        135057332
    ],
    [
        672090,
        135007332
    ],
    [
        672070,
        135118443
    ],
    [
        672060,
        135000000
    ],
    [
        672050,
        134858443
    ],
    [
        672000,
        134000000
    ],
    [
        671980,
        134500000
    ],
    [
        671930,
        134000000
    ],
    [
        671910,
        133283000
    ],
    [
        671860,
        132783000
    ],
    [
        671790,
        132531500
    ],
    [
        671770,
        132500000
    ],
    [
        671720,
        129823000
    ],
    [
        671700,
        129725000
    ],
    [
        671650,
        128725000
    ],
    [
        671640,
        128463000
    ],
    [
        671610,
        127963000
    ],
    [
        671530,
        127186000
    ],
    [
        671510,
        127045500
    ],
    [
        671460,
        127545500
    ],
    [
        671370,
        128000000
    ],
    [
        671320,
        125754500
    ],
    [
        671150,
        125000000
    ],
    [
        671130,
        124746000
    ],
    [
        671110,
        124500000
    ],
    [
        671060,
        124093000
    ],
    [
        671040,
        123308000
    ],
    [
        670990,
        126000000
    ],
    [
        670980,
        127298000
    ],
    [
        670960,
        128596000
    ],
    [
        670850,
        130000000
    ],
    [
        670840,
        130463666
    ],
    [
        670820,
        130000000
    ],
    [
        670780,
        131886000
    ],
    [
        670750,
        131520000
    ],
    [
        670700,
        132000000
    ],
    [
        670690,
        132170000
    ],
    [
        670680,
        133703433
    ],
    [
        670660,
        134400000
    ],
    [
        670620,
        136000000
    ],
    [
        670590,
        135000000
    ],
    [
        670580,
        134400000
    ],
    [
        670530,
        134000000
    ],
    [
        670480,
        132149000
    ],
    [
        670470,
        131000000
    ],
    [
        670410,
        130000000
    ],
    [
        670260,
        132000000
    ],
    [
        670250,
        132518217
    ],
    [
        670240,
        132629328
    ],
    [
        670230,
        133929328
    ],
    [
        670220,
        133575995
    ],
    [
        670180,
        139470000
    ],
    [
        670170,
        139765554
    ],
    [
        670150,
        140077777
    ],
    [
        670140,
        140325277
    ],
    [
        670130,
        140303054
    ],
    [
        670110,
        140247500
    ],
    [
        670100,
        140694911
    ],
    [
        670090,
        140477962
    ],
    [
        670060,
        140312407
    ],
    [
        670050,
        140517500
    ],
    [
        670030,
        140378832
    ],
    [
        670010,
        143805000
    ],
    [
        670000,
        144473077
    ],
    [
        669990,
        144528632
    ],
    [
        669970,
        144397000
    ],
    [
        669960,
        145414072
    ],
    [
        669950,
        143000000
    ],
    [
        669930,
        142884000
    ],
    [
        669920,
        142921000
    ],
    [
        669910,
        143000000
    ],
    [
        669900,
        142948822
    ],
    [
        669880,
        142530000
    ],
    [
        669870,
        142000000
    ],
    [
        669860,
        142530000
    ],
    [
        669780,
        142000000
    ],
    [
        669730,
        141700000
    ],
    [
        669710,
        142000000
    ],
    [
        669700,
        144000000
    ],
    [
        669690,
        144500000
    ],
    [
        669680,
        144835403
    ],
    [
        669670,
        145053692
    ],
    [
        669660,
        145414692
    ],
    [
        669640,
        144630150
    ],
    [
        669610,
        143593816
    ],
    [
        669600,
        142821066
    ],
    [
        669580,
        142381844
    ],
    [
        669550,
        142000000
    ],
    [
        669530,
        142198000
    ],
    [
        669490,
        142396000
    ],
    [
        669460,
        142892000
    ],
    [
        669400,
        145000000
    ],
    [
        669390,
        147000000
    ],
    [
        669320,
        148563000
    ],
    [
        669310,
        147000000
    ],
    [
        669270,
        148000000
    ],
    [
        669240,
        152507000
    ],
    [
        669200,
        153000000
    ],
    [
        669190,
        153530000
    ],
    [
        669150,
        154220000
    ],
    [
        668970,
        155000000
    ],
    [
        668940,
        154301000
    ],
    [
        668900,
        153530000
    ],
    [
        668890,
        152966418
    ],
    [
        668830,
        152441000
    ],
    [
        668810,
        152700000
    ],
    [
        668740,
        154000000
    ],
    [
        668720,
        154265000
    ],
    [
        668710,
        154651859
    ],
    [
        668700,
        154827414
    ],
    [
        668690,
        154622414
    ],
    [
        668680,
        154795000
    ],
    [
        668670,
        154060000
    ],
    [
        668610,
        153765000
    ],
    [
        668590,
        154265000
    ],
    [
        668570,
        153530000
    ],
    [
        668560,
        153556442
    ],
    [
        668550,
        153700887
    ],
    [
        668540,
        154058665
    ],
    [
        668520,
        153530000
    ],
    [
        668480,
        154070000
    ],
    [
        668450,
        154000000
    ],
    [
        668430,
        153960000
    ],
    [
        668420,
        154000000
    ],
    [
        668380,
        153110000
    ],
    [
        668370,
        155000000
    ],
    [
        668350,
        154560000
    ],
    [
        668340,
        154377354
    ],
    [
        668330,
        155634886
    ],
    [
        668320,
        155533355
    ],
    [
        668310,
        156000000
    ],
    [
        668300,
        157053000
    ],
    [
        668290,
        155670000
    ],
    [
        668200,
        155000000
    ],
    [
        668170,
        153196000
    ],
    [
        668030,
        152000000
    ],
    [
        668020,
        154004721
    ],
    [
        668010,
        153587002
    ],
    [
        668000,
        154331610
    ],
    [
        667990,
        154587277
    ],
    [
        667970,
        153530777
    ],
    [
        667960,
        153038033
    ],
    [
        667940,
        152621063
    ],
    [
        667930,
        152468427
    ],
    [
        667920,
        153244427
    ],
    [
        667910,
        153629982
    ],
    [
        667900,
        153328251
    ],
    [
        667890,
        152828251
    ],
    [
        667880,
        152408251
    ],
    [
        667850,
        153000000
    ],
    [
        667830,
        152792500
    ],
    [
        667820,
        152000000
    ],
    [
        667790,
        148000000
    ],
    [
        667770,
        147734625
    ],
    [
        667750,
        147663040
    ],
    [
        667730,
        147444290
    ],
    [
        667710,
        148291266
    ],
    [
        667690,
        148264458
    ],
    [
        667680,
        148853500
    ],
    [
        667650,
        148000000
    ],
    [
        667610,
        147251500
    ],
    [
        667600,
        147114443
    ],
    [
        667580,
        146822000
    ],
    [
        667560,
        146729578
    ],
    [
        667540,
        146794110
    ],
    [
        667530,
        146564443
    ],
    [
        667520,
        145654938
    ],
    [
        667460,
        144500000
    ],
    [
        667440,
        144336999
    ],
    [
        667430,
        144500000
    ],
    [
        667400,
        144120332
    ],
    [
        667390,
        144500000
    ],
    [
        667380,
        144000000
    ],
    [
        667350,
        143500000
    ],
    [
        667330,
        142530391
    ],
    [
        667320,
        143063724
    ],
    [
        667310,
        142993443
    ],
    [
        667290,
        144011500
    ],
    [
        667240,
        144217500
    ],
    [
        667200,
        144161000
    ],
    [
        667170,
        144000000
    ],
    [
        667150,
        142755520
    ],
    [
        667130,
        142345500
    ],
    [
        667110,
        142043490
    ],
    [
        667100,
        141719500
    ],
    [
        667080,
        142071832
    ],
    [
        667070,
        143000000
    ],
    [
        667060,
        142125000
    ],
    [
        667030,
        142936221
    ],
    [
        667020,
        141930830
    ],
    [
        667010,
        141896988
    ],
    [
        667000,
        142021888
    ],
    [
        666980,
        142739000
    ],
    [
        666970,
        141880888
    ],
    [
        666960,
        141281888
    ],
    [
        666950,
        141232999
    ],
    [
        666940,
        141212999
    ],
    [
        666920,
        141000000
    ],
    [
        666910,
        140660221
    ],
    [
        666890,
        140538554
    ],
    [
        666880,
        140700000
    ],
    [
        666870,
        140649665
    ],
    [
        666840,
        140265500
    ],
    [
        666830,
        140065500
    ],
    [
        666800,
        140000000
    ],
    [
        666770,
        141597000
    ],
    [
        666760,
        141674110
    ],
    [
        666740,
        143000000
    ],
    [
        666730,
        143166665
    ],
    [
        666720,
        142711665
    ],
    [
        666710,
        143466665
    ],
    [
        666690,
        143176665
    ],
    [
        666680,
        143422221
    ],
    [
        666660,
        142523927
    ],
    [
        666650,
        143245744
    ],
    [
        666640,
        142035000
    ],
    [
        666630,
        142101332
    ],
    [
        666610,
        142771332
    ],
    [
        666600,
        143180221
    ],
    [
        666590,
        143235777
    ],
    [
        666470,
        140418500
    ],
    [
        666460,
        140029073
    ],
    [
        666450,
        140006851
    ],
    [
        666440,
        139294081
    ],
    [
        666430,
        139716581
    ],
    [
        666420,
        139572500
    ],
    [
        666410,
        140091234
    ],
    [
        666400,
        142235000
    ],
    [
        666390,
        142240000
    ],
    [
        666380,
        142245000
    ],
    [
        666370,
        142610000
    ],
    [
        666360,
        141450941
    ],
    [
        666340,
        141351687
    ],
    [
        666320,
        140976000
    ],
    [
        666280,
        139476000
    ],
    [
        666270,
        138850158
    ],
    [
        666260,
        139374158
    ],
    [
        666250,
        139689713
    ],
    [
        666200,
        139000000
    ],
    [
        666180,
        138891888
    ],
    [
        666160,
        140870777
    ],
    [
        666140,
        140960777
    ],
    [
        666130,
        141220000
    ],
    [
        666120,
        141724500
    ],
    [
        666110,
        141657872
    ],
    [
        666100,
        141224500
    ],
    [
        666060,
        141000000
    ],
    [
        666030,
        139748990
    ],
    [
        665980,
        138000000
    ],
    [
        665950,
        137264000
    ],
    [
        665940,
        136082500
    ],
    [
        665930,
        135332500
    ],
    [
        665910,
        135000000
    ],
    [
        665890,
        130416500
    ],
    [
        665870,
        130271888
    ],
    [
        665850,
        130000000
    ],
    [
        665810,
        131887000
    ],
    [
        665780,
        131963500
    ],
    [
        665740,
        131000000
    ],
    [
        665710,
        130934500
    ],
    [
        665700,
        130610671
    ],
    [
        665670,
        131193172
    ],
    [
        665660,
        131060949
    ],
    [
        665650,
        131718000
    ],
    [
        665640,
        134268000
    ],
    [
        665590,
        135720000
    ],
    [
        665580,
        136299999
    ],
    [
        665570,
        136351110
    ],
    [
        665550,
        136811000
    ],
    [
        665540,
        137521000
    ],
    [
        665530,
        137960000
    ],
    [
        665520,
        137639648
    ],
    [
        665510,
        137960000
    ],
    [
        665500,
        138370000
    ],
    [
        665490,
        139015000
    ],
    [
        665470,
        139603892
    ],
    [
        665450,
        139722781
    ],
    [
        665440,
        139515000
    ],
    [
        665420,
        139204221
    ],
    [
        665400,
        139979888
    ],
    [
        665380,
        139254000
    ],
    [
        665360,
        140515000
    ],
    [
        665350,
        141000000
    ],
    [
        665340,
        142353554
    ],
    [
        665330,
        143084500
    ],
    [
        665320,
        143000000
    ],
    [
        665310,
        142971033
    ],
    [
        665300,
        143000000
    ],
    [
        665290,
        142696999
    ],
    [
        665270,
        142395443
    ],
    [
        665260,
        143009500
    ],
    [
        665250,
        142610000
    ],
    [
        665240,
        142585000
    ],
    [
        665230,
        141715000
    ],
    [
        665220,
        142803554
    ],
    [
        665210,
        142228500
    ],
    [
        665200,
        141363767
    ],
    [
        665190,
        141347101
    ],
    [
        665180,
        141507101
    ],
    [
        665170,
        141050019
    ],
    [
        665160,
        142667348
    ],
    [
        665150,
        142193332
    ],
    [
        665130,
        138535000
    ],
    [
        665120,
        140073965
    ],
    [
        665110,
        138860000
    ],
    [
        665100,
        138505000
    ],
    [
        665090,
        138603221
    ],
    [
        665080,
        139218650
    ],
    [
        665060,
        141390000
    ],
    [
        665020,
        144000000
    ],
    [
        665010,
        144319000
    ],
    [
        665000,
        143259316
    ],
    [
        664990,
        144300433
    ],
    [
        664980,
        144794000
    ],
    [
        664970,
        144649000
    ],
    [
        664960,
        144809000
    ],
    [
        664950,
        145572192
    ],
    [
        664940,
        141931297
    ],
    [
        664910,
        146869000
    ],
    [
        664890,
        147870000
    ],
    [
        664710,
        146000000
    ],
    [
        664690,
        143794165
    ],
    [
        664680,
        143728610
    ],
    [
        664670,
        143177500
    ],
    [
        664640,
        143230500
    ],
    [
        664600,
        144000000
    ],
    [
        664570,
        145136500
    ],
    [
        664540,
        146136500
    ],
    [
        664510,
        146000000
    ],
    [
        664500,
        143121000
    ],
    [
        664480,
        143152665
    ],
    [
        664420,
        146000000
    ],
    [
        664410,
        149781999
    ],
    [
        664390,
        149938888
    ],
    [
        664250,
        148000000
    ],
    [
        664230,
        149459000
    ],
    [
        664210,
        149905500
    ],
    [
        664200,
        150000000
    ],
    [
        664180,
        149905500
    ],
    [
        664170,
        149292500
    ],
    [
        664160,
        150000000
    ],
    [
        664150,
        149292500
    ],
    [
        664130,
        148000000
    ],
    [
        664120,
        147818110
    ],
    [
        664110,
        148000000
    ],
    [
        664090,
        146948054
    ],
    [
        664040,
        146941500
    ],
    [
        664010,
        147465000
    ],
    [
        664000,
        147984500
    ],
    [
        663980,
        148019500
    ],
    [
        663970,
        148360401
    ],
    [
        663960,
        149848500
    ],
    [
        663950,
        150153500
    ],
    [
        663940,
        151420277
    ],
    [
        663930,
        152198500
    ],
    [
        663900,
        152460000
    ],
    [
        663890,
        152910000
    ],
    [
        663880,
        152520000
    ],
    [
        663870,
        151585554
    ],
    [
        663860,
        150205000
    ],
    [
        663850,
        150147759
    ],
    [
        663820,
        150000000
    ],
    [
        663810,
        149315000
    ],
    [
        663780,
        148071000
    ],
    [
        663770,
        148000000
    ],
    [
        663760,
        146777117
    ],
    [
        663750,
        146771561
    ],
    [
        663740,
        147486561
    ],
    [
        663730,
        147145332
    ],
    [
        663710,
        146551000
    ],
    [
        663690,
        148000000
    ],
    [
        663680,
        148211870
    ],
    [
        663650,
        157551500
    ],
    [
        663640,
        157931500
    ],
    [
        663630,
        157938741
    ],
    [
        663620,
        156845145
    ],
    [
        663610,
        156431500
    ],
    [
        663590,
        154025000
    ],
    [
        663580,
        153235777
    ],
    [
        663570,
        153660777
    ],
    [
        663560,
        153639665
    ],
    [
        663510,
        154054209
    ],
    [
        663500,
        153551747
    ],
    [
        663490,
        153103494
    ],
    [
        663430,
        151000000
    ],
    [
        663410,
        154000000
    ],
    [
        663400,
        153484443
    ],
    [
        663390,
        153076833
    ],
    [
        663370,
        153411278
    ],
    [
        663360,
        153416833
    ],
    [
        663350,
        153194611
    ],
    [
        663320,
        150604000
    ],
    [
        663310,
        148419124
    ],
    [
        663300,
        144085124
    ],
    [
        663290,
        144536888
    ],
    [
        663220,
        143770000
    ],
    [
        663180,
        141270000
    ],
    [
        663120,
        140515000
    ],
    [
        663110,
        139713726
    ],
    [
        663100,
        139745000
    ],
    [
        663050,
        139000000
    ],
    [
        663040,
        139858332
    ],
    [
        663020,
        140053888
    ],
    [
        663010,
        140329000
    ],
    [
        662990,
        139975000
    ],
    [
        662980,
        139719554
    ],
    [
        662910,
        139000000
    ],
    [
        662880,
        140739500
    ],
    [
        662870,
        140868811
    ],
    [
        662860,
        140389311
    ],
    [
        662850,
        140468200
    ],
    [
        662800,
        140260000
    ],
    [
        662780,
        141174880
    ],
    [
        662770,
        141303713
    ],
    [
        662760,
        141111491
    ],
    [
        662750,
        140685991
    ],
    [
        662740,
        141625332
    ],
    [
        662700,
        140865000
    ],
    [
        662680,
        141645000
    ],
    [
        662660,
        142460000
    ],
    [
        662590,
        142829413
    ],
    [
        662570,
        143974500
    ],
    [
        662560,
        144110000
    ],
    [
        662510,
        144025000
    ],
    [
        662500,
        143624306
    ],
    [
        662480,
        143513000
    ],
    [
        662460,
        142145000
    ],
    [
        662440,
        142000000
    ],
    [
        662430,
        141920000
    ],
    [
        662420,
        142238500
    ],
    [
        662410,
        141919633
    ],
    [
        662390,
        142015457
    ],
    [
        662360,
        142000000
    ],
    [
        662350,
        141386665
    ],
    [
        662340,
        141500000
    ],
    [
        662330,
        141864836
    ],
    [
        662320,
        142850000
    ],
    [
        662260,
        142360000
    ],
    [
        662250,
        142849500
    ],
    [
        662240,
        142669500
    ],
    [
        662230,
        141761195
    ],
    [
        662220,
        142344500
    ],
    [
        662210,
        141825358
    ],
    [
        662190,
        142513665
    ],
    [
        662180,
        142497000
    ],
    [
        662140,
        143597000
    ],
    [
        662130,
        144850000
    ],
    [
        662120,
        145501259
    ],
    [
        662110,
        145000000
    ],
    [
        662100,
        144857625
    ],
    [
        662090,
        144987625
    ],
    [
        662080,
        144745000
    ],
    [
        662070,
        144765293
    ],
    [
        662060,
        144623793
    ],
    [
        662050,
        144546015
    ],
    [
        662040,
        141745000
    ],
    [
        662000,
        139500000
    ],
    [
        661990,
        139321500
    ],
    [
        661980,
        139155584
    ],
    [
        661970,
        139000000
    ],
    [
        661960,
        138284376
    ],
    [
        661950,
        138328821
    ],
    [
        661930,
        138601017
    ],
    [
        661910,
        136989332
    ],
    [
        661890,
        137017110
    ],
    [
        661870,
        137050443
    ],
    [
        661860,
        137078665
    ],
    [
        661840,
        137190000
    ],
    [
        661790,
        138000000
    ],
    [
        661770,
        137544517
    ],
    [
        661740,
        138852367
    ],
    [
        661720,
        139000000
    ],
    [
        661710,
        137000000
    ],
    [
        661690,
        136631109
    ],
    [
        661670,
        136742220
    ],
    [
        661660,
        136402000
    ],
    [
        661650,
        135808887
    ],
    [
        661630,
        135000000
    ],
    [
        661600,
        134778457
    ],
    [
        661590,
        134411791
    ],
    [
        661580,
        134522902
    ],
    [
        661500,
        134000000
    ],
    [
        661430,
        133000000
    ],
    [
        661380,
        133756000
    ],
    [
        661360,
        133188665
    ],
    [
        661350,
        133000000
    ],
    [
        661340,
        132983803
    ],
    [
        661320,
        132800000
    ],
    [
        661310,
        133000000
    ],
    [
        661290,
        133047896
    ],
    [
        661250,
        133855000
    ],
    [
        661220,
        134000000
    ],
    [
        661150,
        133000000
    ],
    [
        661080,
        135000000
    ],
    [
        660970,
        132860000
    ],
    [
        660930,
        133094000
    ],
    [
        660880,
        134000000
    ],
    [
        660860,
        133160671
    ],
    [
        660840,
        133060000
    ],
    [
        660830,
        132894443
    ],
    [
        660800,
        132070000
    ],
    [
        660790,
        131698014
    ],
    [
        660780,
        132200000
    ],
    [
        660770,
        132386903
    ],
    [
        660760,
        133000000
    ],
    [
        660750,
        132707800
    ],
    [
        660740,
        132449000
    ],
    [
        660720,
        132990000
    ],
    [
        660710,
        132719500
    ],
    [
        660700,
        132724500
    ],
    [
        660690,
        132735000
    ],
    [
        660680,
        132994554
    ],
    [
        660670,
        132520110
    ],
    [
        660660,
        132185110
    ],
    [
        660650,
        132421777
    ],
    [
        660640,
        132776777
    ],
    [
        660630,
        132513443
    ],
    [
        660620,
        132013443
    ],
    [
        660610,
        132018443
    ],
    [
        660600,
        133020756
    ],
    [
        660590,
        132354645
    ],
    [
        660550,
        132500000
    ],
    [
        660530,
        132846500
    ],
    [
        660520,
        132716264
    ],
    [
        660510,
        132799598
    ],
    [
        660500,
        132726264
    ],
    [
        660480,
        133295153
    ],
    [
        660470,
        133167332
    ],
    [
        660460,
        133057332
    ],
    [
        660450,
        133645000
    ],
    [
        660440,
        134222670
    ],
    [
        660390,
        133694666
    ],
    [
        660370,
        132786000
    ],
    [
        660360,
        132517554
    ],
    [
        660340,
        132400000
    ],
    [
        660330,
        132509222
    ],
    [
        660310,
        132514722
    ],
    [
        660290,
        132405500
    ],
    [
        660280,
        132573000
    ],
    [
        660240,
        133393000
    ],
    [
        660210,
        133676000
    ],
    [
        660190,
        133000000
    ],
    [
        660180,
        133174670
    ],
    [
        660170,
        133000000
    ],
    [
        660150,
        132732561
    ],
    [
        660130,
        131145894
    ],
    [
        660120,
        131203022
    ],
    [
        660100,
        131500000
    ],
    [
        660090,
        131914133
    ],
    [
        660080,
        131919688
    ],
    [
        660060,
        133809000
    ],
    [
        660050,
        134972888
    ],
    [
        660030,
        135010000
    ],
    [
        660020,
        136588443
    ],
    [
        660010,
        137623443
    ],
    [
        659940,
        134045000
    ],
    [
        659900,
        137045000
    ],
    [
        659890,
        139398221
    ],
    [
        659840,
        140000000
    ],
    [
        659830,
        138603471
    ],
    [
        659820,
        140000000
    ],
    [
        659810,
        137045000
    ],
    [
        659800,
        136807197
    ],
    [
        659790,
        135345483
    ],
    [
        659780,
        136964554
    ],
    [
        659760,
        137014554
    ],
    [
        659740,
        136900110
    ],
    [
        659730,
        136943888
    ],
    [
        659710,
        136838665
    ],
    [
        659690,
        136571665
    ],
    [
        659610,
        134929500
    ],
    [
        659590,
        135441500
    ],
    [
        659530,
        134045000
    ],
    [
        659520,
        133430000
    ],
    [
        659510,
        133234096
    ],
    [
        659500,
        132000000
    ],
    [
        659490,
        132185332
    ],
    [
        659470,
        132000000
    ],
    [
        659460,
        131889777
    ],
    [
        659450,
        131362363
    ],
    [
        659440,
        131000000
    ],
    [
        659430,
        131442965
    ],
    [
        659400,
        131815000
    ],
    [
        659390,
        131718332
    ],
    [
        659360,
        131685000
    ],
    [
        659340,
        130783332
    ],
    [
        659330,
        131771666
    ],
    [
        659320,
        131710554
    ],
    [
        659310,
        130270000
    ],
    [
        659300,
        130186110
    ],
    [
        659280,
        131074999
    ],
    [
        659270,
        131015000
    ],
    [
        659210,
        132315000
    ],
    [
        659190,
        132330000
    ],
    [
        659180,
        131590443
    ],
    [
        659170,
        132650000
    ],
    [
        659160,
        133533895
    ],
    [
        659140,
        133190000
    ],
    [
        659100,
        132000000
    ],
    [
        659090,
        131435000
    ],
    [
        659080,
        130911687
    ],
    [
        659070,
        130652093
    ],
    [
        659050,
        131146894
    ],
    [
        659040,
        131247554
    ],
    [
        659030,
        130600000
    ],
    [
        659020,
        132968552
    ],
    [
        659000,
        132891000
    ],
    [
        658990,
        130000000
    ],
    [
        658950,
        129960000
    ],
    [
        658940,
        130000000
    ],
    [
        658910,
        129960000
    ],
    [
        658890,
        130000000
    ],
    [
        658870,
        129960000
    ],
    [
        658810,
        129910000
    ],
    [
        658790,
        128605000
    ],
    [
        658710,
        128000000
    ],
    [
        658700,
        128018000
    ],
    [
        658680,
        128000000
    ],
    [
        658670,
        128018000
    ],
    [
        658600,
        127416000
    ],
    [
        658550,
        129000000
    ],
    [
        658540,
        127318445
    ],
    [
        658520,
        127878443
    ],
    [
        658470,
        127020000
    ],
    [
        658460,
        128000000
    ],
    [
        658450,
        128015776
    ],
    [
        658430,
        129870000
    ],
    [
        658420,
        129424000
    ],
    [
        658400,
        129870000
    ],
    [
        658380,
        130407000
    ],
    [
        658320,
        130000000
    ],
    [
        658280,
        130957000
    ],
    [
        658260,
        130065000
    ],
    [
        658230,
        130000000
    ],
    [
        658220,
        129870000
    ],
    [
        658120,
        129000000
    ],
    [
        658110,
        128535332
    ],
    [
        658090,
        128924887
    ],
    [
        658070,
        129000000
    ],
    [
        658060,
        129318220
    ],
    [
        658050,
        129753000
    ],
    [
        657860,
        130000000
    ],
    [
        657790,
        132000000
    ],
    [
        657780,
        132802000
    ],
    [
        657770,
        132132887
    ],
    [
        657760,
        132792499
    ],
    [
        657730,
        133401000
    ],
    [
        657710,
        133650500
    ],
    [
        657690,
        133736000
    ],
    [
        657670,
        133000000
    ],
    [
        657650,
        133025249
    ],
    [
        657620,
        133000000
    ],
    [
        657570,
        132956500
    ],
    [
        657550,
        133000000
    ],
    [
        657480,
        133950000
    ],
    [
        657450,
        134473777
    ],
    [
        657430,
        134369332
    ],
    [
        657420,
        134293777
    ],
    [
        657410,
        134500000
    ],
    [
        657400,
        134000000
    ],
    [
        657370,
        133950000
    ],
    [
        657350,
        133594110
    ],
    [
        657330,
        133460777
    ],
    [
        657310,
        133438554
    ],
    [
        657300,
        133404110
    ],
    [
        657270,
        133950000
    ],
    [
        657250,
        132548554
    ],
    [
        657240,
        132565221
    ],
    [
        657230,
        132494110
    ],
    [
        657210,
        132596500
    ],
    [
        657190,
        133030610
    ],
    [
        657180,
        132687070
    ],
    [
        657170,
        132759293
    ],
    [
        657160,
        132596500
    ],
    [
        657140,
        132658500
    ],
    [
        657100,
        133608500
    ],
    [
        657090,
        133950000
    ],
    [
        657070,
        133969221
    ],
    [
        657050,
        134746277
    ],
    [
        657030,
        135371500
    ],
    [
        657010,
        136557155
    ],
    [
        656990,
        136464933
    ],
    [
        656980,
        136483822
    ],
    [
        656970,
        136590489
    ],
    [
        656950,
        136518267
    ],
    [
        656930,
        136513822
    ],
    [
        656910,
        136752680
    ],
    [
        656890,
        136674902
    ],
    [
        656880,
        137039897
    ],
    [
        656860,
        135578000
    ],
    [
        656810,
        135000000
    ],
    [
        656800,
        134408332
    ],
    [
        656790,
        134460554
    ],
    [
        656750,
        133450000
    ],
    [
        656730,
        133029221
    ],
    [
        656670,
        133950000
    ],
    [
        656620,
        133919500
    ],
    [
        656610,
        133595110
    ],
    [
        656600,
        133622888
    ],
    [
        656590,
        133689554
    ],
    [
        656550,
        133548000
    ],
    [
        656540,
        134716289
    ],
    [
        656470,
        135060000
    ],
    [
        656430,
        135772810
    ],
    [
        656380,
        136000000
    ],
    [
        656370,
        136172887
    ],
    [
        656340,
        136217331
    ],
    [
        656330,
        136272000
    ],
    [
        656310,
        135540000
    ],
    [
        656290,
        135903109
    ],
    [
        656260,
        136000000
    ],
    [
        656250,
        135844000
    ],
    [
        656230,
        135618140
    ],
    [
        656180,
        135540000
    ],
    [
        656140,
        136260500
    ],
    [
        656120,
        136781331
    ],
    [
        656110,
        136785776
    ],
    [
        656090,
        137738121
    ],
    [
        656070,
        138904887
    ],
    [
        656050,
        138231554
    ],
    [
        655980,
        138404887
    ],
    [
        655970,
        138746321
    ],
    [
        655960,
        139118443
    ],
    [
        655950,
        139335700
    ],
    [
        655940,
        139491256
    ],
    [
        655920,
        139249034
    ],
    [
        655910,
        139995700
    ],
    [
        655900,
        139895700
    ],
    [
        655720,
        140000000
    ],
    [
        655700,
        139990528
    ],
    [
        655640,
        140000000
    ],
    [
        655620,
        139912751
    ],
    [
        655580,
        139921639
    ],
    [
        655560,
        139968306
    ],
    [
        655540,
        140012751
    ],
    [
        655520,
        140074973
    ],
    [
        655510,
        137674443
    ],
    [
        655490,
        137618887
    ],
    [
        655470,
        137585554
    ],
    [
        655460,
        137485554
    ],
    [
        655440,
        140392181
    ],
    [
        655430,
        140413315
    ],
    [
        655390,
        140000000
    ],
    [
        655340,
        133576000
    ],
    [
        655330,
        133046665
    ],
    [
        655320,
        133102066
    ],
    [
        655300,
        133000000
    ],
    [
        655290,
        133015486
    ],
    [
        655230,
        133000000
    ],
    [
        655210,
        132809636
    ],
    [
        655200,
        132947414
    ],
    [
        655170,
        132585192
    ],
    [
        655150,
        132774081
    ],
    [
        655090,
        131000000
    ],
    [
        655050,
        130785000
    ],
    [
        655040,
        130190000
    ],
    [
        655020,
        129900000
    ],
    [
        655000,
        128980000
    ],
    [
        654990,
        129181776
    ],
    [
        654980,
        129900000
    ],
    [
        654940,
        129000000
    ],
    [
        654870,
        128616000
    ],
    [
        654860,
        128684443
    ],
    [
        654850,
        128517776
    ],
    [
        654800,
        129095000
    ],
    [
        654710,
        129000000
    ],
    [
        654700,
        129042665
    ],
    [
        654640,
        129900000
    ],
    [
        654620,
        129920000
    ],
    [
        654610,
        129910000
    ],
    [
        654590,
        129920000
    ],
    [
        654570,
        130700000
    ],
    [
        654560,
        130321221
    ],
    [
        654550,
        130670999
    ],
    [
        654510,
        131188777
    ],
    [
        654480,
        131056554
    ],
    [
        654470,
        130925443
    ],
    [
        654460,
        130897666
    ],
    [
        654390,
        130000000
    ],
    [
        654370,
        128915000
    ],
    [
        654350,
        130574527
    ],
    [
        654330,
        130557861
    ],
    [
        654320,
        130535638
    ],
    [
        654300,
        130816416
    ],
    [
        654280,
        130860861
    ],
    [
        654270,
        130821972
    ],
    [
        654260,
        130794194
    ],
    [
        654250,
        130889879
    ],
    [
        654240,
        131636879
    ],
    [
        654230,
        131650411
    ],
    [
        654190,
        131314485
    ],
    [
        654170,
        132301654
    ],
    [
        654160,
        132379432
    ],
    [
        654150,
        132212765
    ],
    [
        654130,
        131061500
    ],
    [
        654100,
        129376500
    ],
    [
        654080,
        129630000
    ],
    [
        654070,
        130037888
    ],
    [
        654060,
        130111221
    ],
    [
        654040,
        129797153
    ],
    [
        654030,
        128696500
    ],
    [
        654020,
        128388214
    ],
    [
        653980,
        128000000
    ],
    [
        653960,
        127828500
    ],
    [
        653950,
        127328500
    ],
    [
        653940,
        127177888
    ],
    [
        653930,
        127242332
    ],
    [
        653920,
        127000000
    ],
    [
        653910,
        126996777
    ],
    [
        653900,
        127041221
    ],
    [
        653890,
        127052332
    ],
    [
        653880,
        127175000
    ],
    [
        653870,
        127359252
    ],
    [
        653860,
        127463142
    ],
    [
        653850,
        127288142
    ],
    [
        653830,
        126500000
    ],
    [
        653810,
        124660000
    ],
    [
        653770,
        126000000
    ],
    [
        653760,
        125495000
    ],
    [
        653740,
        124155000
    ],
    [
        653690,
        126519000
    ],
    [
        653650,
        127000000
    ],
    [
        653620,
        127074000
    ],
    [
        653600,
        126859000
    ],
    [
        653590,
        126359000
    ],
    [
        653580,
        126005000
    ],
    [
        653570,
        126359000
    ],
    [
        653550,
        126000000
    ],
    [
        653540,
        125250000
    ],
    [
        653530,
        126201000
    ],
    [
        653520,
        125250000
    ],
    [
        653470,
        125176500
    ],
    [
        653450,
        125275000
    ],
    [
        653420,
        124775000
    ],
    [
        653400,
        123750000
    ],
    [
        653380,
        124000000
    ],
    [
        653360,
        124857500
    ],
    [
        653320,
        125000000
    ],
    [
        653290,
        125704000
    ],
    [
        653280,
        125608332
    ],
    [
        653250,
        125084000
    ],
    [
        653240,
        126084000
    ],
    [
        653230,
        126228000
    ],
    [
        653220,
        125728000
    ],
    [
        653180,
        126000000
    ],
    [
        653160,
        126183221
    ],
    [
        653150,
        126305443
    ],
    [
        653120,
        126035277
    ],
    [
        653060,
        127000000
    ],
    [
        653050,
        126820999
    ],
    [
        653040,
        126854332
    ],
    [
        652910,
        127000000
    ],
    [
        652900,
        127251000
    ],
    [
        652860,
        129500000
    ],
    [
        652830,
        129650000
    ],
    [
        652790,
        129150000
    ],
    [
        652740,
        130295000
    ],
    [
        652730,
        129000000
    ],
    [
        652720,
        129142318
    ],
    [
        652710,
        129157874
    ],
    [
        652700,
        129000000
    ],
    [
        652680,
        128000000
    ],
    [
        652670,
        128258985
    ],
    [
        652580,
        128000000
    ],
    [
        652570,
        128326762
    ],
    [
        652560,
        128376762
    ],
    [
        652540,
        128382318
    ],
    [
        652530,
        128310096
    ],
    [
        652500,
        128775000
    ],
    [
        652490,
        129000000
    ],
    [
        652480,
        128805554
    ],
    [
        652470,
        128596054
    ],
    [
        652460,
        128756054
    ],
    [
        652390,
        128275000
    ],
    [
        652370,
        128275666
    ],
    [
        652360,
        128000666
    ],
    [
        652330,
        128000000
    ],
    [
        652250,
        128810000
    ],
    [
        652210,
        129176500
    ],
    [
        652180,
        128996000
    ],
    [
        651980,
        128130000
    ],
    [
        651970,
        129000000
    ],
    [
        651960,
        130256665
    ],
    [
        651910,
        130300000
    ],
    [
        651900,
        130000000
    ],
    [
        651890,
        130300000
    ],
    [
        651870,
        129000000
    ],
    [
        651860,
        128568738
    ],
    [
        651850,
        128640000
    ],
    [
        651810,
        128078000
    ],
    [
        651800,
        127070000
    ],
    [
        651770,
        126553000
    ],
    [
        651760,
        126276500
    ],
    [
        651720,
        126000000
    ],
    [
        651660,
        128000000
    ],
    [
        651610,
        128580000
    ],
    [
        651590,
        128606000
    ],
    [
        651560,
        129000000
    ],
    [
        651550,
        128606000
    ],
    [
        651480,
        129000000
    ],
    [
        651450,
        130844000
    ],
    [
        651440,
        130746000
    ],
    [
        651410,
        130000000
    ],
    [
        651390,
        129398966
    ],
    [
        651380,
        129396744
    ],
    [
        651300,
        129250000
    ],
    [
        651130,
        131000000
    ],
    [
        651020,
        132000000
    ],
    [
        651010,
        132010000
    ],
    [
        651000,
        132465554
    ],
    [
        650980,
        136650000
    ],
    [
        650940,
        137000000
    ],
    [
        650930,
        137013998
    ],
    [
        650860,
        138000000
    ],
    [
        650820,
        139000000
    ],
    [
        650810,
        139800000
    ],
    [
        650790,
        140000000
    ],
    [
        650780,
        139375554
    ],
    [
        650740,
        139800000
    ],
    [
        650720,
        139000000
    ],
    [
        650660,
        139800000
    ],
    [
        650650,
        139580976
    ],
    [
        650590,
        143000000
    ],
    [
        650550,
        142344000
    ],
    [
        650510,
        142000000
    ],
    [
        650490,
        143000000
    ],
    [
        650470,
        142937520
    ],
    [
        650450,
        142902443
    ],
    [
        650380,
        143000000
    ],
    [
        650360,
        143014000
    ],
    [
        650350,
        143890000
    ],
    [
        650330,
        143000000
    ],
    [
        650320,
        142479776
    ],
    [
        650310,
        141599707
    ],
    [
        650300,
        142284887
    ],
    [
        650270,
        141259000
    ],
    [
        650220,
        140000000
    ],
    [
        650210,
        140910992
    ],
    [
        650200,
        141789109
    ],
    [
        650190,
        141866887
    ],
    [
        650180,
        141544665
    ],
    [
        650170,
        141611331
    ],
    [
        650160,
        140800000
    ],
    [
        650130,
        141000000
    ],
    [
        650120,
        139782000
    ],
    [
        650110,
        139737790
    ],
    [
        650080,
        139782000
    ],
    [
        650070,
        139533346
    ],
    [
        650050,
        139895998
    ],
    [
        650010,
        143974000
    ],
    [
        649900,
        144390000
    ],
    [
        649890,
        143511920
    ],
    [
        649880,
        143545253
    ],
    [
        649870,
        143000000
    ],
    [
        649850,
        142548000
    ],
    [
        649780,
        141339000
    ],
    [
        649770,
        143382000
    ],
    [
        649740,
        141000000
    ],
    [
        649720,
        138069000
    ],
    [
        649690,
        136000000
    ],
    [
        649640,
        135645000
    ],
    [
        649610,
        135486220
    ],
    [
        649600,
        135463998
    ],
    [
        649590,
        135552887
    ],
    [
        649570,
        135852887
    ],
    [
        649530,
        136500000
    ],
    [
        649520,
        135544443
    ],
    [
        649510,
        135466665
    ],
    [
        649470,
        134830000
    ],
    [
        649450,
        135269000
    ],
    [
        649430,
        136000000
    ],
    [
        649390,
        136500000
    ],
    [
        649370,
        137000000
    ],
    [
        649360,
        136500000
    ],
    [
        649350,
        136649554
    ],
    [
        649340,
        136500000
    ],
    [
        649330,
        134758820
    ],
    [
        649320,
        134780121
    ],
    [
        649270,
        135000000
    ],
    [
        649210,
        133000000
    ],
    [
        649190,
        136607000
    ],
    [
        649170,
        137562443
    ],
    [
        649160,
        137565554
    ],
    [
        649140,
        138310000
    ],
    [
        649110,
        138000000
    ],
    [
        649100,
        138310000
    ],
    [
        649090,
        139000000
    ],
    [
        649080,
        138903656
    ],
    [
        649070,
        138968887
    ],
    [
        649050,
        139321554
    ],
    [
        649030,
        139000000
    ],
    [
        649020,
        139339000
    ],
    [
        648990,
        139839000
    ],
    [
        648970,
        140000000
    ],
    [
        648930,
        142500000
    ],
    [
        648920,
        142258772
    ],
    [
        648880,
        142000000
    ],
    [
        648870,
        141472000
    ],
    [
        648850,
        141082443
    ],
    [
        648840,
        141601443
    ],
    [
        648830,
        141113888
    ],
    [
        648820,
        141216110
    ],
    [
        648810,
        140000000
    ],
    [
        648800,
        139811888
    ],
    [
        648780,
        139511000
    ],
    [
        648760,
        140000000
    ],
    [
        648750,
        140715500
    ],
    [
        648730,
        142571943
    ],
    [
        648710,
        144000000
    ],
    [
        648700,
        145691999
    ],
    [
        648690,
        145619777
    ],
    [
        648680,
        145925332
    ],
    [
        648670,
        145078172
    ],
    [
        648660,
        144957061
    ],
    [
        648610,
        142000000
    ],
    [
        648600,
        142930166
    ],
    [
        648580,
        144455388
    ],
    [
        648570,
        145405865
    ],
    [
        648550,
        146000000
    ],
    [
        648530,
        147611443
    ],
    [
        648490,
        147320331
    ],
    [
        648480,
        145865427
    ],
    [
        648470,
        148237000
    ],
    [
        648460,
        149906770
    ],
    [
        648450,
        150184362
    ],
    [
        648440,
        150406681
    ],
    [
        648430,
        151666968
    ],
    [
        648420,
        153673064
    ],
    [
        648410,
        151491000
    ],
    [
        648370,
        151000000
    ],
    [
        648360,
        150301000
    ],
    [
        648340,
        148516220
    ],
    [
        648330,
        148665109
    ],
    [
        648320,
        148249554
    ],
    [
        648310,
        149359504
    ],
    [
        648300,
        151452000
    ],
    [
        648260,
        149000000
    ],
    [
        648250,
        143199000
    ],
    [
        648210,
        142000000
    ],
    [
        648200,
        141245554
    ],
    [
        648180,
        141141109
    ],
    [
        648170,
        140691109
    ],
    [
        648160,
        140799157
    ],
    [
        648130,
        141178000
    ],
    [
        648090,
        140000000
    ],
    [
        648080,
        139000000
    ],
    [
        648070,
        138000000
    ],
    [
        648060,
        138085000
    ],
    [
        648050,
        138000000
    ],
    [
        647970,
        139000000
    ],
    [
        647940,
        139917000
    ],
    [
        647920,
        139018584
    ],
    [
        647910,
        139129695
    ],
    [
        647900,
        139000000
    ],
    [
        647880,
        138955331
    ],
    [
        647870,
        139000000
    ],
    [
        647850,
        138000000
    ],
    [
        647800,
        139000000
    ],
    [
        647760,
        138000000
    ],
    [
        647750,
        137329000
    ],
    [
        647740,
        135000000
    ],
    [
        647730,
        136151554
    ],
    [
        647720,
        136628193
    ],
    [
        647710,
        137329000
    ],
    [
        647640,
        135000000
    ],
    [
        647590,
        133000000
    ],
    [
        647540,
        132000000
    ],
    [
        647510,
        129000000
    ],
    [
        647490,
        129200000
    ],
    [
        647440,
        131000000
    ],
    [
        647400,
        131171000
    ],
    [
        647390,
        131075189
    ],
    [
        647360,
        129200000
    ],
    [
        647350,
        128401000
    ],
    [
        647240,
        128000000
    ],
    [
        647210,
        129000000
    ],
    [
        647200,
        129182220
    ],
    [
        647190,
        129200000
    ],
    [
        647150,
        130000000
    ],
    [
        647140,
        129246443
    ],
    [
        647130,
        129200000
    ],
    [
        647120,
        129000000
    ],
    [
        647100,
        128473000
    ],
    [
        647060,
        128261000
    ],
    [
        647030,
        127350000
    ],
    [
        646990,
        127000000
    ],
    [
        646960,
        128000000
    ],
    [
        646940,
        127598000
    ],
    [
        646910,
        127000000
    ],
    [
        646870,
        126611000
    ],
    [
        646860,
        126944797
    ],
    [
        646850,
        126955908
    ],
    [
        646840,
        126782954
    ],
    [
        646830,
        126805000
    ],
    [
        646820,
        126624065
    ],
    [
        646810,
        126648509
    ],
    [
        646800,
        126805000
    ],
    [
        646790,
        127223509
    ],
    [
        646750,
        127629500
    ],
    [
        646740,
        128351081
    ],
    [
        646730,
        127731081
    ],
    [
        646700,
        127359500
    ],
    [
        646690,
        127192192
    ],
    [
        646680,
        126870500
    ],
    [
        646650,
        126715500
    ],
    [
        646630,
        126847000
    ],
    [
        646620,
        127166466
    ],
    [
        646600,
        127605600
    ],
    [
        646580,
        131000000
    ],
    [
        646560,
        133256496
    ],
    [
        646540,
        133409331
    ],
    [
        646530,
        133990644
    ],
    [
        646480,
        133000000
    ],
    [
        646440,
        135000000
    ],
    [
        646430,
        134436443
    ],
    [
        646410,
        134403109
    ],
    [
        646400,
        134525331
    ],
    [
        646380,
        136000000
    ],
    [
        646370,
        137995000
    ],
    [
        646300,
        138000000
    ],
    [
        646270,
        137504000
    ],
    [
        646230,
        137000000
    ],
    [
        646220,
        136035463
    ],
    [
        646120,
        135000000
    ],
    [
        646070,
        134548000
    ],
    [
        646060,
        133891554
    ],
    [
        646040,
        133635699
    ],
    [
        646010,
        132000000
    ],
    [
        645960,
        134000000
    ],
    [
        645950,
        134056887
    ],
    [
        645940,
        134067998
    ],
    [
        645930,
        134179109
    ],
    [
        645920,
        134152443
    ],
    [
        645900,
        135800000
    ],
    [
        645890,
        136429009
    ],
    [
        645870,
        138340000
    ],
    [
        645820,
        138000000
    ],
    [
        645810,
        138340000
    ],
    [
        645790,
        138642843
    ],
    [
        645770,
        138340000
    ],
    [
        645740,
        137000000
    ],
    [
        645700,
        136113000
    ],
    [
        645660,
        137000000
    ],
    [
        645620,
        136269000
    ],
    [
        645610,
        134182000
    ],
    [
        645590,
        134000000
    ],
    [
        645580,
        134115109
    ],
    [
        645570,
        134000000
    ],
    [
        645560,
        134350000
    ],
    [
        645550,
        133995000
    ],
    [
        645510,
        136000000
    ],
    [
        645490,
        137000000
    ],
    [
        645480,
        136954561
    ],
    [
        645470,
        137000000
    ],
    [
        645420,
        137376000
    ],
    [
        645400,
        137000000
    ],
    [
        645360,
        136000000
    ],
    [
        645350,
        135342665
    ],
    [
        645340,
        135658847
    ],
    [
        645330,
        135800000
    ],
    [
        645310,
        136000000
    ],
    [
        645300,
        137000000
    ],
    [
        645290,
        137490000
    ],
    [
        645280,
        137000000
    ],
    [
        645260,
        139902286
    ],
    [
        645250,
        140922286
    ],
    [
        645240,
        140811175
    ],
    [
        645220,
        141000000
    ],
    [
        645210,
        139042000
    ],
    [
        645150,
        134000000
    ],
    [
        645140,
        135376887
    ],
    [
        645070,
        136000000
    ],
    [
        645050,
        132231000
    ],
    [
        645020,
        130000000
    ],
    [
        645000,
        129261332
    ],
    [
        644980,
        128955229
    ],
    [
        644960,
        129000000
    ],
    [
        644940,
        127931000
    ],
    [
        644910,
        127000000
    ],
    [
        644900,
        126127998
    ],
    [
        644890,
        124990000
    ],
    [
        644870,
        123750000
    ],
    [
        644860,
        123873776
    ],
    [
        644850,
        124233776
    ],
    [
        644810,
        123750000
    ],
    [
        644780,
        123000000
    ],
    [
        644770,
        122607102
    ],
    [
        644760,
        122584880
    ],
    [
        644740,
        123000000
    ],
    [
        644700,
        124000000
    ],
    [
        644640,
        123233000
    ],
    [
        644630,
        124000000
    ],
    [
        644610,
        126000000
    ],
    [
        644590,
        125169148
    ],
    [
        644560,
        124426926
    ],
    [
        644540,
        123181000
    ],
    [
        644530,
        123643554
    ],
    [
        644510,
        124000000
    ],
    [
        644490,
        124512000
    ],
    [
        644480,
        124154887
    ],
    [
        644460,
        122000000
    ],
    [
        644450,
        122610000
    ],
    [
        644430,
        119844000
    ],
    [
        644420,
        126460000
    ],
    [
        644410,
        127000000
    ],
    [
        644390,
        128058000
    ],
    [
        644380,
        129630000
    ],
    [
        644360,
        131000000
    ],
    [
        644320,
        133377000
    ],
    [
        644310,
        132566000
    ],
    [
        644300,
        133020138
    ],
    [
        644260,
        133660471
    ],
    [
        644250,
        133828220
    ],
    [
        644240,
        134000000
    ],
    [
        644230,
        133814887
    ],
    [
        644220,
        133951776
    ],
    [
        644200,
        134451000
    ],
    [
        644190,
        135000000
    ],
    [
        644170,
        135315000
    ],
    [
        644160,
        135625221
    ],
    [
        644090,
        136263554
    ],
    [
        644080,
        136119110
    ],
    [
        644070,
        137635110
    ],
    [
        644060,
        137292160
    ],
    [
        644050,
        136611443
    ],
    [
        644040,
        137000000
    ],
    [
        644020,
        137436332
    ],
    [
        644010,
        138212832
    ],
    [
        644000,
        138285277
    ],
    [
        643990,
        138509401
    ],
    [
        643950,
        140765000
    ],
    [
        643940,
        137105221
    ],
    [
        643900,
        137000000
    ],
    [
        643870,
        144000000
    ],
    [
        643850,
        145110000
    ],
    [
        643840,
        146000000
    ],
    [
        643820,
        146925000
    ],
    [
        643800,
        146360665
    ],
    [
        643790,
        146477332
    ],
    [
        643760,
        147153500
    ],
    [
        643730,
        147000000
    ],
    [
        643700,
        144660500
    ],
    [
        643690,
        144050500
    ],
    [
        643670,
        144000721
    ],
    [
        643660,
        144141832
    ],
    [
        643650,
        145610000
    ],
    [
        643640,
        146000000
    ],
    [
        643610,
        147201388
    ],
    [
        643590,
        147045832
    ],
    [
        643580,
        146531500
    ],
    [
        643560,
        149455000
    ],
    [
        643550,
        150842396
    ],
    [
        643530,
        149792000
    ],
    [
        643500,
        149560000
    ],
    [
        643490,
        149000000
    ],
    [
        643470,
        148645000
    ],
    [
        643460,
        149000000
    ],
    [
        643450,
        149502332
    ],
    [
        643440,
        149237888
    ],
    [
        643430,
        149163221
    ],
    [
        643420,
        149326777
    ],
    [
        643390,
        149138000
    ],
    [
        643380,
        150012554
    ],
    [
        643370,
        151432554
    ],
    [
        643360,
        151861443
    ],
    [
        643350,
        153225000
    ],
    [
        643340,
        154000000
    ],
    [
        643320,
        156475000
    ],
    [
        643310,
        156496211
    ],
    [
        643300,
        156744125
    ],
    [
        643290,
        156219125
    ],
    [
        643280,
        155955000
    ],
    [
        643270,
        154544332
    ],
    [
        643260,
        154256554
    ],
    [
        643250,
        154281332
    ],
    [
        643240,
        154172000
    ],
    [
        643230,
        154512000
    ],
    [
        643200,
        155500000
    ],
    [
        643180,
        155622500
    ],
    [
        643150,
        156580000
    ],
    [
        643130,
        157000000
    ],
    [
        643110,
        158884500
    ],
    [
        643100,
        159484500
    ],
    [
        643090,
        159499500
    ],
    [
        643080,
        159618999
    ],
    [
        643070,
        159640000
    ],
    [
        643040,
        161155000
    ],
    [
        643030,
        161230000
    ],
    [
        643020,
        161945500
    ],
    [
        643010,
        162270358
    ],
    [
        643000,
        162595500
    ],
    [
        642980,
        163000000
    ],
    [
        642970,
        164066110
    ],
    [
        642960,
        162223302
    ],
    [
        642950,
        166035000
    ],
    [
        642940,
        166689776
    ],
    [
        642930,
        166100265
    ],
    [
        642920,
        166228042
    ],
    [
        642910,
        165621888
    ],
    [
        642890,
        165633565
    ],
    [
        642880,
        165427902
    ],
    [
        642870,
        163220000
    ],
    [
        642860,
        163225000
    ],
    [
        642840,
        169000000
    ],
    [
        642830,
        168408691
    ],
    [
        642820,
        167470357
    ],
    [
        642800,
        166015000
    ],
    [
        642790,
        165861305
    ],
    [
        642770,
        163528500
    ],
    [
        642740,
        163013500
    ],
    [
        642730,
        163233000
    ],
    [
        642720,
        165158226
    ],
    [
        642710,
        162579110
    ],
    [
        642700,
        163263000
    ],
    [
        642690,
        163603000
    ],
    [
        642680,
        162198000
    ],
    [
        642640,
        158530000
    ],
    [
        642620,
        157500000
    ],
    [
        642610,
        159841332
    ],
    [
        642580,
        159942332
    ],
    [
        642480,
        160030000
    ],
    [
        642450,
        159018000
    ],
    [
        642440,
        159030000
    ],
    [
        642430,
        158314554
    ],
    [
        642400,
        159125500
    ],
    [
        642390,
        159365000
    ],
    [
        642380,
        159943066
    ],
    [
        642370,
        162444566
    ],
    [
        642360,
        164661500
    ],
    [
        642350,
        166651500
    ],
    [
        642340,
        167746870
    ],
    [
        642330,
        167644257
    ],
    [
        642300,
        155495000
    ],
    [
        642280,
        154391000
    ],
    [
        642270,
        154113059
    ],
    [
        642260,
        153952888
    ],
    [
        642250,
        154556122
    ],
    [
        642240,
        151016622
    ],
    [
        642230,
        150615510
    ],
    [
        642220,
        150839277
    ],
    [
        642210,
        146120000
    ],
    [
        642190,
        145000000
    ],
    [
        642150,
        144150000
    ],
    [
        642130,
        144680248
    ],
    [
        642120,
        145000000
    ],
    [
        642090,
        142635000
    ],
    [
        642060,
        142000000
    ],
    [
        642050,
        142019999
    ],
    [
        642000,
        142135000
    ],
    [
        641990,
        142000000
    ],
    [
        641970,
        141802500
    ],
    [
        641940,
        142000000
    ],
    [
        641930,
        142239888
    ],
    [
        641900,
        142173221
    ],
    [
        641890,
        142160999
    ],
    [
        641870,
        142155999
    ],
    [
        641830,
        142000000
    ],
    [
        641810,
        141727000
    ],
    [
        641740,
        140875000
    ],
    [
        641690,
        141475000
    ],
    [
        641660,
        141225000
    ],
    [
        641600,
        141136000
    ],
    [
        641580,
        140623000
    ],
    [
        641560,
        140248000
    ],
    [
        641490,
        139118625
    ],
    [
        641460,
        139350000
    ],
    [
        641430,
        139196500
    ],
    [
        641410,
        138850000
    ],
    [
        641380,
        136850000
    ],
    [
        641360,
        137511000
    ],
    [
        641350,
        139011000
    ],
    [
        641320,
        139250000
    ],
    [
        641310,
        140030500
    ],
    [
        641300,
        140405500
    ],
    [
        641290,
        141004970
    ],
    [
        641280,
        141010526
    ],
    [
        641270,
        141021637
    ],
    [
        641260,
        141272692
    ],
    [
        641250,
        140995500
    ],
    [
        641230,
        140750000
    ],
    [
        641210,
        140525000
    ],
    [
        641190,
        140375000
    ],
    [
        641180,
        139718000
    ],
    [
        641170,
        140370000
    ],
    [
        641160,
        140843303
    ],
    [
        641150,
        141093248
    ],
    [
        641140,
        140945500
    ],
    [
        641120,
        141155470
    ],
    [
        641110,
        141418859
    ],
    [
        641090,
        141283000
    ],
    [
        641080,
        141933000
    ],
    [
        641070,
        140476693
    ],
    [
        641050,
        140450000
    ],
    [
        641030,
        141310000
    ],
    [
        641020,
        141385000
    ],
    [
        641010,
        141571000
    ],
    [
        641000,
        141496000
    ],
    [
        640980,
        141586000
    ],
    [
        640970,
        141996000
    ],
    [
        640960,
        142000000
    ],
    [
        640950,
        141500000
    ],
    [
        640920,
        142064500
    ],
    [
        640910,
        142247500
    ],
    [
        640900,
        142236999
    ],
    [
        640870,
        142000000
    ],
    [
        640850,
        141836999
    ],
    [
        640840,
        141463000
    ],
    [
        640830,
        141637574
    ],
    [
        640820,
        141163000
    ],
    [
        640810,
        140662079
    ],
    [
        640800,
        140559857
    ],
    [
        640790,
        140532500
    ],
    [
        640770,
        140667635
    ],
    [
        640760,
        140532500
    ],
    [
        640750,
        141550000
    ],
    [
        640730,
        143100000
    ],
    [
        640710,
        144670000
    ],
    [
        640700,
        144000000
    ],
    [
        640690,
        145000000
    ],
    [
        640680,
        143780000
    ],
    [
        640590,
        143988000
    ],
    [
        640570,
        143717299
    ],
    [
        640560,
        143583965
    ],
    [
        640530,
        143661743
    ],
    [
        640510,
        144433776
    ],
    [
        640500,
        145249149
    ],
    [
        640490,
        145081000
    ],
    [
        640390,
        143000000
    ],
    [
        640340,
        141900000
    ],
    [
        640280,
        141600000
    ],
    [
        640270,
        143387296
    ],
    [
        640260,
        143353963
    ],
    [
        640250,
        143216185
    ],
    [
        640240,
        143327296
    ],
    [
        640230,
        143585074
    ],
    [
        640180,
        142700000
    ],
    [
        640160,
        143707296
    ],
    [
        640150,
        143896185
    ],
    [
        640140,
        143647000
    ],
    [
        640130,
        142646806
    ],
    [
        640100,
        143000000
    ],
    [
        640080,
        142459000
    ],
    [
        640000,
        142000000
    ],
    [
        639990,
        141375776
    ],
    [
        639960,
        141263000
    ],
    [
        639940,
        141095333
    ],
    [
        639920,
        141190888
    ],
    [
        639910,
        141059777
    ],
    [
        639890,
        141156665
    ],
    [
        639880,
        141078887
    ],
    [
        639870,
        140885554
    ],
    [
        639850,
        140836000
    ],
    [
        639820,
        141000000
    ],
    [
        639800,
        141038887
    ],
    [
        639780,
        141177000
    ],
    [
        639760,
        141042000
    ],
    [
        639730,
        141169998
    ],
    [
        639710,
        142000000
    ],
    [
        639660,
        141000000
    ],
    [
        639610,
        142510000
    ],
    [
        639600,
        141800000
    ],
    [
        639590,
        141000000
    ],
    [
        639580,
        141800000
    ],
    [
        639570,
        142000000
    ],
    [
        639470,
        142510000
    ],
    [
        639460,
        142440000
    ],
    [
        639410,
        141950000
    ],
    [
        639380,
        142180000
    ],
    [
        639360,
        142255000
    ],
    [
        639350,
        142897327
    ],
    [
        639330,
        143073888
    ],
    [
        639320,
        143449054
    ],
    [
        639310,
        143559054
    ],
    [
        639290,
        143469054
    ],
    [
        639280,
        143403721
    ],
    [
        639260,
        143682422
    ],
    [
        639250,
        143836144
    ],
    [
        639230,
        143744721
    ],
    [
        639220,
        143466623
    ],
    [
        639210,
        143568846
    ],
    [
        639200,
        143068846
    ],
    [
        639170,
        143500000
    ],
    [
        639160,
        143010854
    ],
    [
        639150,
        143021709
    ],
    [
        639140,
        142708376
    ],
    [
        639120,
        143636000
    ],
    [
        639100,
        144226220
    ],
    [
        639000,
        144380000
    ],
    [
        638950,
        144000000
    ],
    [
        638900,
        143700000
    ],
    [
        638880,
        143900000
    ],
    [
        638870,
        143260443
    ],
    [
        638850,
        142916000
    ],
    [
        638810,
        142700000
    ],
    [
        638450,
        144380000
    ],
    [
        638430,
        144245369
    ],
    [
        638420,
        144380000
    ],
    [
        638410,
        141715891
    ],
    [
        638380,
        141700000
    ],
    [
        638360,
        143500000
    ],
    [
        638350,
        141700000
    ],
    [
        638330,
        141650000
    ],
    [
        638250,
        141700000
    ],
    [
        638240,
        141768554
    ],
    [
        638220,
        140825000
    ],
    [
        638210,
        141000000
    ],
    [
        638200,
        140944500
    ],
    [
        638190,
        140754498
    ],
    [
        638170,
        141086889
    ],
    [
        638160,
        141462039
    ],
    [
        638140,
        141359332
    ],
    [
        638130,
        141554888
    ],
    [
        638120,
        142325000
    ],
    [
        638090,
        142165000
    ],
    [
        638080,
        142081221
    ],
    [
        638070,
        141756221
    ],
    [
        638060,
        141876403
    ],
    [
        638050,
        142211403
    ],
    [
        638040,
        141297000
    ],
    [
        638020,
        139500000
    ],
    [
        637990,
        137700000
    ],
    [
        637950,
        137520000
    ],
    [
        637930,
        137700000
    ],
    [
        637910,
        138060817
    ],
    [
        637900,
        137792442
    ],
    [
        637890,
        139255775
    ],
    [
        637880,
        139289108
    ],
    [
        637860,
        139401331
    ],
    [
        637850,
        139019108
    ],
    [
        637840,
        138796886
    ],
    [
        637830,
        138525999
    ],
    [
        637820,
        138698221
    ],
    [
        637810,
        138028221
    ],
    [
        637800,
        138005999
    ],
    [
        637780,
        138033777
    ],
    [
        637770,
        137300000
    ],
    [
        637760,
        137218221
    ],
    [
        637750,
        137177110
    ],
    [
        637740,
        136109332
    ],
    [
        637710,
        136250000
    ],
    [
        637690,
        135595000
    ],
    [
        637680,
        135682554
    ],
    [
        637670,
        136115000
    ],
    [
        637650,
        136275000
    ],
    [
        637640,
        135689221
    ],
    [
        637630,
        136432500
    ],
    [
        637610,
        136460000
    ],
    [
        637570,
        136660000
    ],
    [
        637560,
        135775888
    ],
    [
        637550,
        135675000
    ],
    [
        637540,
        136160000
    ],
    [
        637530,
        136015000
    ],
    [
        637510,
        136320000
    ],
    [
        637500,
        136732443
    ],
    [
        637490,
        137200443
    ],
    [
        637480,
        136500000
    ],
    [
        637460,
        137294000
    ],
    [
        637450,
        135250000
    ],
    [
        637430,
        134352554
    ],
    [
        637390,
        132350000
    ],
    [
        637380,
        132252500
    ],
    [
        637370,
        131995000
    ],
    [
        637360,
        130751666
    ],
    [
        637350,
        130380000
    ],
    [
        637340,
        130447221
    ],
    [
        637310,
        130025000
    ],
    [
        637300,
        130383221
    ],
    [
        637280,
        130394332
    ],
    [
        637270,
        130410999
    ],
    [
        637260,
        130253010
    ],
    [
        637250,
        130172500
    ],
    [
        637240,
        129725000
    ],
    [
        637210,
        129847500
    ],
    [
        637190,
        129169443
    ],
    [
        637170,
        129163888
    ],
    [
        637160,
        128851691
    ],
    [
        637150,
        129132777
    ],
    [
        637140,
        128468332
    ],
    [
        637130,
        128501666
    ],
    [
        637120,
        128484999
    ],
    [
        637090,
        128155000
    ],
    [
        637080,
        128700000
    ],
    [
        637060,
        129252777
    ],
    [
        637050,
        129208332
    ],
    [
        637030,
        129150000
    ],
    [
        637020,
        129108332
    ],
    [
        637010,
        129247500
    ],
    [
        637000,
        129350000
    ],
    [
        636990,
        129334221
    ],
    [
        636980,
        129323110
    ],
    [
        636970,
        129297500
    ],
    [
        636960,
        129097500
    ],
    [
        636950,
        128897221
    ],
    [
        636930,
        129095000
    ],
    [
        636920,
        129045000
    ],
    [
        636910,
        128430000
    ],
    [
        636900,
        128487298
    ],
    [
        636880,
        128962000
    ],
    [
        636850,
        129162000
    ],
    [
        636830,
        130166666
    ],
    [
        636810,
        130500000
    ],
    [
        636770,
        129700000
    ],
    [
        636740,
        129050000
    ],
    [
        636700,
        128265000
    ],
    [
        636690,
        128755000
    ],
    [
        636680,
        129602999
    ],
    [
        636650,
        130268500
    ],
    [
        636640,
        130357777
    ],
    [
        636630,
        130301110
    ],
    [
        636620,
        130306666
    ],
    [
        636610,
        130834110
    ],
    [
        636600,
        129981110
    ],
    [
        636570,
        130067777
    ],
    [
        636560,
        131949000
    ],
    [
        636550,
        130917776
    ],
    [
        636540,
        130577776
    ],
    [
        636500,
        130436665
    ],
    [
        636490,
        130400000
    ],
    [
        636480,
        130136689
    ],
    [
        636470,
        130000000
    ],
    [
        636320,
        130532000
    ],
    [
        636310,
        130888668
    ],
    [
        636300,
        131000000
    ],
    [
        636290,
        131726002
    ],
    [
        636280,
        131992669
    ],
    [
        636270,
        132037114
    ],
    [
        636260,
        132078604
    ],
    [
        636230,
        130158000
    ],
    [
        636190,
        128700000
    ],
    [
        636170,
        128510000
    ],
    [
        636160,
        128320250
    ],
    [
        636150,
        128132000
    ],
    [
        636130,
        128343998
    ],
    [
        636100,
        128510000
    ],
    [
        636090,
        128702220
    ],
    [
        636080,
        128813332
    ],
    [
        636050,
        128902220
    ],
    [
        636040,
        128913332
    ],
    [
        636020,
        128846665
    ],
    [
        635980,
        128510000
    ],
    [
        635970,
        128857776
    ],
    [
        635960,
        128902220
    ],
    [
        635950,
        128900000
    ],
    [
        635920,
        128888887
    ],
    [
        635890,
        128900000
    ],
    [
        635860,
        128000000
    ],
    [
        635820,
        127550000
    ],
    [
        635790,
        127400000
    ],
    [
        635760,
        128350264
    ],
    [
        635740,
        128430000
    ],
    [
        635720,
        129019998
    ],
    [
        635710,
        129002220
    ],
    [
        635670,
        130214000
    ],
    [
        635660,
        130298887
    ],
    [
        635650,
        130603000
    ],
    [
        635630,
        130700000
    ],
    [
        635610,
        131000000
    ],
    [
        635590,
        130603000
    ],
    [
        635560,
        130334991
    ],
    [
        635530,
        129000000
    ],
    [
        635450,
        129190000
    ],
    [
        635440,
        129631972
    ],
    [
        635420,
        129720860
    ],
    [
        635340,
        130000000
    ],
    [
        635330,
        129746665
    ],
    [
        635310,
        129727000
    ],
    [
        635280,
        129110000
    ],
    [
        635260,
        128619338
    ],
    [
        635240,
        129000000
    ],
    [
        635200,
        128950000
    ],
    [
        635180,
        129170000
    ],
    [
        635170,
        128940000
    ],
    [
        635160,
        129740000
    ],
    [
        635150,
        130694500
    ],
    [
        635110,
        130330000
    ],
    [
        635080,
        129530000
    ],
    [
        635070,
        129260000
    ],
    [
        635060,
        129090888
    ],
    [
        635050,
        128975000
    ],
    [
        635030,
        128845000
    ],
    [
        635020,
        128674999
    ],
    [
        635000,
        128227699
    ],
    [
        634990,
        127326110
    ],
    [
        634970,
        125496500
    ],
    [
        634950,
        124900000
    ],
    [
        634930,
        124585000
    ],
    [
        634890,
        124185000
    ],
    [
        634880,
        124557461
    ],
    [
        634870,
        125008461
    ],
    [
        634860,
        125019572
    ],
    [
        634830,
        126186000
    ],
    [
        634790,
        127550000
    ],
    [
        634780,
        128440000
    ],
    [
        634740,
        129090000
    ],
    [
        634720,
        128941494
    ],
    [
        634710,
        128885938
    ],
    [
        634700,
        128913716
    ],
    [
        634690,
        128703716
    ],
    [
        634680,
        128832605
    ],
    [
        634610,
        129680000
    ],
    [
        634570,
        128940000
    ],
    [
        634550,
        129109271
    ],
    [
        634540,
        129075938
    ],
    [
        634480,
        129780000
    ],
    [
        634470,
        129675938
    ],
    [
        634460,
        129175938
    ],
    [
        634440,
        129041494
    ],
    [
        634430,
        129147049
    ],
    [
        634410,
        129002835
    ],
    [
        634400,
        129002820
    ],
    [
        634380,
        128665000
    ],
    [
        634340,
        128480554
    ],
    [
        634330,
        128225000
    ],
    [
        634310,
        128312000
    ],
    [
        634290,
        128121500
    ],
    [
        634270,
        128497999
    ],
    [
        634250,
        128514666
    ],
    [
        634230,
        128489110
    ],
    [
        634220,
        128480221
    ],
    [
        634200,
        128152221
    ],
    [
        634190,
        127823332
    ],
    [
        634180,
        127659000
    ],
    [
        634160,
        127948438
    ],
    [
        634150,
        128262216
    ],
    [
        634140,
        128369500
    ],
    [
        634120,
        128408388
    ],
    [
        634080,
        130475000
    ],
    [
        634010,
        130789000
    ],
    [
        633990,
        130800500
    ],
    [
        633950,
        130975000
    ],
    [
        633940,
        131056666
    ],
    [
        633930,
        131069500
    ],
    [
        633920,
        131220610
    ],
    [
        633900,
        131142832
    ],
    [
        633890,
        131157277
    ],
    [
        633880,
        131970514
    ],
    [
        633860,
        132033847
    ],
    [
        633850,
        131755514
    ],
    [
        633840,
        131722181
    ],
    [
        633830,
        131402181
    ],
    [
        633820,
        131263000
    ],
    [
        633810,
        131645181
    ],
    [
        633800,
        131243000
    ],
    [
        633750,
        131000000
    ],
    [
        633730,
        130975000
    ],
    [
        633660,
        130850000
    ],
    [
        633640,
        130412000
    ],
    [
        633580,
        130000000
    ],
    [
        633570,
        129725554
    ],
    [
        633550,
        129809998
    ],
    [
        633530,
        129854443
    ],
    [
        633520,
        129837776
    ],
    [
        633510,
        129961109
    ],
    [
        633490,
        129698887
    ],
    [
        633470,
        129883960
    ],
    [
        633460,
        129442443
    ],
    [
        633410,
        129000000
    ],
    [
        633400,
        129529109
    ],
    [
        633390,
        129120000
    ],
    [
        633380,
        129541998
    ],
    [
        633340,
        128700000
    ],
    [
        633280,
        128200000
    ],
    [
        633240,
        128040000
    ],
    [
        633210,
        127547000
    ],
    [
        633170,
        128000000
    ],
    [
        633150,
        128040000
    ],
    [
        633140,
        128000000
    ],
    [
        633090,
        127700000
    ],
    [
        633050,
        127450000
    ],
    [
        633000,
        127197000
    ],
    [
        632980,
        127140000
    ],
    [
        632960,
        127450000
    ],
    [
        632900,
        127140000
    ],
    [
        632850,
        127450000
    ],
    [
        632840,
        127408000
    ],
    [
        632800,
        127000000
    ],
    [
        632750,
        126502000
    ],
    [
        632720,
        126000000
    ],
    [
        632710,
        125604887
    ],
    [
        632670,
        125600443
    ],
    [
        632640,
        125718848
    ],
    [
        632620,
        125729959
    ],
    [
        632590,
        125100990
    ],
    [
        632580,
        125134323
    ],
    [
        632480,
        125000000
    ],
    [
        632450,
        124079519
    ],
    [
        632440,
        124037297
    ],
    [
        632420,
        124000000
    ],
    [
        632380,
        123683307
    ],
    [
        632360,
        124139554
    ],
    [
        632350,
        124128443
    ],
    [
        632330,
        123528000
    ],
    [
        632300,
        123348621
    ],
    [
        632270,
        123300000
    ],
    [
        632240,
        123514220
    ],
    [
        632230,
        123765175
    ],
    [
        632220,
        123467175
    ],
    [
        632210,
        123765175
    ],
    [
        632200,
        123561221
    ],
    [
        632160,
        123402000
    ],
    [
        632140,
        123535888
    ],
    [
        632120,
        123664777
    ],
    [
        632090,
        123904777
    ],
    [
        632080,
        124396500
    ],
    [
        632060,
        124505054
    ],
    [
        632050,
        124548388
    ],
    [
        632030,
        124593943
    ],
    [
        632020,
        124197443
    ],
    [
        632010,
        123642500
    ],
    [
        631980,
        123292500
    ],
    [
        631970,
        123163221
    ],
    [
        631950,
        123088500
    ],
    [
        631930,
        123438500
    ],
    [
        631910,
        124200000
    ],
    [
        631900,
        124671600
    ],
    [
        631890,
        124786500
    ],
    [
        631880,
        125086500
    ],
    [
        631850,
        125231500
    ],
    [
        631830,
        125145000
    ],
    [
        631790,
        125295000
    ],
    [
        631680,
        126700000
    ],
    [
        631650,
        126618787
    ],
    [
        631620,
        126150000
    ],
    [
        631600,
        126038604
    ],
    [
        631570,
        125979715
    ],
    [
        631560,
        126040827
    ],
    [
        631530,
        126024160
    ],
    [
        631510,
        126071938
    ],
    [
        631470,
        125659214
    ],
    [
        631450,
        125600325
    ],
    [
        631350,
        125295000
    ],
    [
        631340,
        125195000
    ],
    [
        631330,
        125093332
    ],
    [
        631280,
        124960000
    ],
    [
        631260,
        124026332
    ],
    [
        631220,
        124091888
    ],
    [
        631210,
        124200000
    ],
    [
        631200,
        124318110
    ],
    [
        631180,
        124279221
    ],
    [
        631160,
        124100000
    ],
    [
        631150,
        124501443
    ],
    [
        631120,
        124425888
    ],
    [
        631090,
        125045888
    ],
    [
        631030,
        125000000
    ],
    [
        631000,
        125311128
    ],
    [
        630970,
        125277794
    ],
    [
        630950,
        125100000
    ],
    [
        630930,
        124522110
    ],
    [
        630890,
        124386332
    ],
    [
        630880,
        124740926
    ],
    [
        630870,
        124848926
    ],
    [
        630860,
        124900000
    ],
    [
        630850,
        125100000
    ],
    [
        630810,
        125143726
    ],
    [
        630800,
        125390000
    ],
    [
        630780,
        125345000
    ],
    [
        630770,
        124565500
    ],
    [
        630760,
        124563054
    ],
    [
        630740,
        124401000
    ],
    [
        630710,
        123270000
    ],
    [
        630700,
        122920000
    ],
    [
        630680,
        122619770
    ],
    [
        630670,
        122540000
    ],
    [
        630650,
        122304000
    ],
    [
        630600,
        121000000
    ],
    [
        630580,
        120680000
    ],
    [
        630570,
        120817554
    ],
    [
        630560,
        121328665
    ],
    [
        630520,
        122000000
    ],
    [
        630380,
        120020000
    ],
    [
        630360,
        120810000
    ],
    [
        630290,
        120767000
    ],
    [
        630280,
        120828977
    ],
    [
        630240,
        120840088
    ],
    [
        630230,
        120910000
    ],
    [
        630210,
        120731000
    ],
    [
        630170,
        120213332
    ],
    [
        630150,
        120283332
    ],
    [
        630140,
        120153332
    ],
    [
        630130,
        119510000
    ],
    [
        630100,
        119465000
    ],
    [
        630080,
        119250000
    ],
    [
        630040,
        118300000
    ],
    [
        630020,
        118135500
    ],
    [
        630000,
        117670500
    ],
    [
        629980,
        117682885
    ],
    [
        629960,
        117407885
    ],
    [
        629950,
        117749441
    ],
    [
        629930,
        117410500
    ],
    [
        629910,
        117421000
    ],
    [
        629880,
        117400000
    ],
    [
        629840,
        117320000
    ],
    [
        629810,
        117667000
    ],
    [
        629790,
        117873438
    ],
    [
        629750,
        118000000
    ],
    [
        629740,
        118102327
    ],
    [
        629710,
        118000000
    ],
    [
        629700,
        118300000
    ],
    [
        629640,
        118596000
    ],
    [
        629630,
        118870000
    ],
    [
        629620,
        118874000
    ],
    [
        629610,
        119000000
    ],
    [
        629550,
        119100000
    ],
    [
        629540,
        119474226
    ],
    [
        629520,
        119407559
    ],
    [
        629500,
        119247000
    ],
    [
        629460,
        119700000
    ],
    [
        629450,
        120000000
    ],
    [
        629430,
        120636221
    ],
    [
        629420,
        120740000
    ],
    [
        629400,
        120162000
    ],
    [
        629370,
        119980000
    ],
    [
        629340,
        119050000
    ],
    [
        629320,
        119000000
    ],
    [
        629300,
        118582322
    ],
    [
        629270,
        118342322
    ],
    [
        629240,
        118380100
    ],
    [
        629230,
        118435655
    ],
    [
        629220,
        118547827
    ],
    [
        629210,
        118156827
    ],
    [
        629190,
        117958939
    ],
    [
        629170,
        117889000
    ],
    [
        629160,
        118123383
    ],
    [
        629130,
        118996000
    ],
    [
        629120,
        118753605
    ],
    [
        629100,
        118764999
    ],
    [
        629090,
        118197499
    ],
    [
        629080,
        118049668
    ],
    [
        629060,
        118238337
    ],
    [
        629040,
        117900000
    ],
    [
        629030,
        119800000
    ],
    [
        629010,
        120000000
    ],
    [
        629000,
        120150273
    ],
    [
        628980,
        120842000
    ],
    [
        628950,
        120214000
    ],
    [
        628920,
        121000000
    ],
    [
        628890,
        121160000
    ],
    [
        628880,
        121509000
    ],
    [
        628850,
        121334500
    ],
    [
        628830,
        121580000
    ],
    [
        628770,
        121080000
    ],
    [
        628720,
        121324500
    ],
    [
        628700,
        121430000
    ],
    [
        628630,
        121080000
    ],
    [
        628570,
        120980000
    ],
    [
        628560,
        120580000
    ],
    [
        628530,
        120521294
    ],
    [
        628510,
        120517500
    ],
    [
        628500,
        120699072
    ],
    [
        628460,
        120717500
    ],
    [
        628440,
        120534000
    ],
    [
        628400,
        119834000
    ],
    [
        628370,
        119910410
    ],
    [
        628350,
        119500000
    ],
    [
        628160,
        118940000
    ],
    [
        628120,
        118390000
    ],
    [
        628090,
        117146500
    ],
    [
        628070,
        116981894
    ],
    [
        628030,
        117246000
    ],
    [
        628000,
        117381500
    ],
    [
        627990,
        117139117
    ],
    [
        627970,
        117233561
    ],
    [
        627960,
        117313500
    ],
    [
        627950,
        117368500
    ],
    [
        627920,
        117390443
    ],
    [
        627900,
        116951110
    ],
    [
        627890,
        116954000
    ],
    [
        627850,
        116754000
    ],
    [
        627830,
        116950000
    ],
    [
        627810,
        117231554
    ],
    [
        627790,
        116793626
    ],
    [
        627770,
        116523626
    ],
    [
        627760,
        116821404
    ],
    [
        627750,
        116782515
    ],
    [
        627730,
        117300000
    ],
    [
        627700,
        117031500
    ],
    [
        627660,
        117431500
    ],
    [
        627640,
        117850000
    ],
    [
        627620,
        118038592
    ],
    [
        627600,
        118263500
    ],
    [
        627590,
        118464888
    ],
    [
        627580,
        118459888
    ],
    [
        627570,
        119271966
    ],
    [
        627540,
        119421966
    ],
    [
        627530,
        119188666
    ],
    [
        627500,
        119046166
    ],
    [
        627470,
        118319332
    ],
    [
        627460,
        118330443
    ],
    [
        627440,
        117805443
    ],
    [
        627400,
        117547000
    ],
    [
        627390,
        117636359
    ],
    [
        627360,
        117395000
    ],
    [
        627350,
        117320000
    ],
    [
        627300,
        117445000
    ],
    [
        627240,
        117150000
    ],
    [
        627230,
        117611000
    ],
    [
        627200,
        117836000
    ],
    [
        627190,
        117990888
    ],
    [
        627180,
        118148000
    ],
    [
        627170,
        118211110
    ],
    [
        627140,
        118648000
    ],
    [
        627100,
        119155221
    ],
    [
        627080,
        119428721
    ],
    [
        627070,
        117899871
    ],
    [
        627060,
        118132094
    ],
    [
        627010,
        120150000
    ],
    [
        626980,
        120740000
    ],
    [
        626940,
        120950000
    ],
    [
        626870,
        121150000
    ],
    [
        626860,
        121100000
    ],
    [
        626820,
        121137006
    ],
    [
        626810,
        121100000
    ],
    [
        626780,
        120790000
    ],
    [
        626770,
        121250000
    ],
    [
        626730,
        120863332
    ],
    [
        626720,
        121250000
    ],
    [
        626670,
        121650000
    ],
    [
        626650,
        121676510
    ],
    [
        626640,
        122600000
    ],
    [
        626600,
        122610468
    ],
    [
        626580,
        122754110
    ],
    [
        626540,
        125640500
    ],
    [
        626530,
        125990500
    ],
    [
        626520,
        126009221
    ],
    [
        626510,
        126109221
    ],
    [
        626500,
        126600000
    ],
    [
        626420,
        126713337
    ],
    [
        626400,
        127000000
    ],
    [
        626370,
        127572554
    ],
    [
        626350,
        127639221
    ],
    [
        626340,
        126900000
    ],
    [
        626330,
        126789569
    ],
    [
        626320,
        126900000
    ],
    [
        626310,
        126779138
    ],
    [
        626300,
        126500000
    ],
    [
        626290,
        126498892
    ],
    [
        626280,
        126000000
    ],
    [
        626230,
        126500000
    ],
    [
        626220,
        126712443
    ],
    [
        626170,
        128000000
    ],
    [
        626110,
        128027554
    ],
    [
        626090,
        128000000
    ],
    [
        626080,
        127300000
    ],
    [
        626030,
        127299554
    ],
    [
        626020,
        127182554
    ],
    [
        626010,
        127032554
    ],
    [
        625990,
        126450000
    ],
    [
        625980,
        126636112
    ],
    [
        625970,
        126775000
    ],
    [
        625910,
        128900000
    ],
    [
        625900,
        129400000
    ],
    [
        625850,
        129850000
    ],
    [
        625740,
        129800000
    ],
    [
        625680,
        130500000
    ],
    [
        625620,
        131400000
    ],
    [
        625610,
        130211864
    ],
    [
        625590,
        130100753
    ],
    [
        625500,
        130000000
    ],
    [
        625430,
        131000000
    ],
    [
        625390,
        132500000
    ],
    [
        625370,
        132600000
    ],
    [
        625320,
        134400000
    ],
    [
        625180,
        135604000
    ],
    [
        625120,
        135900000
    ],
    [
        625090,
        136169306
    ],
    [
        625000,
        136250000
    ],
    [
        624960,
        136169306
    ],
    [
        624930,
        135990000
    ],
    [
        624870,
        136169306
    ],
    [
        624820,
        135990000
    ],
    [
        624780,
        136700000
    ],
    [
        624740,
        136450000
    ],
    [
        624670,
        136700000
    ],
    [
        624560,
        135350000
    ],
    [
        624500,
        134000000
    ],
    [
        624190,
        133890000
    ],
    [
        624150,
        133520000
    ],
    [
        624080,
        132380000
    ],
    [
        623880,
        133890000
    ],
    [
        623820,
        133590000
    ],
    [
        623800,
        133740000
    ],
    [
        623750,
        133480000
    ],
    [
        623690,
        133165000
    ],
    [
        623610,
        133260000
    ],
    [
        623520,
        133000000
    ],
    [
        623470,
        132250000
    ],
    [
        623420,
        133900000
    ],
    [
        623400,
        134000000
    ],
    [
        623330,
        133900000
    ],
    [
        623110,
        133000000
    ],
    [
        623040,
        134200000
    ],
    [
        622880,
        134000000
    ],
    [
        622830,
        134200000
    ],
    [
        622810,
        134687000
    ],
    [
        622760,
        134693500
    ],
    [
        622690,
        134687000
    ],
    [
        622620,
        135100000
    ],
    [
        622470,
        134687000
    ],
    [
        622400,
        135000000
    ],
    [
        622330,
        140000000
    ],
    [
        622260,
        140500000
    ],
    [
        622190,
        141000000
    ],
    [
        622110,
        140000000
    ],
    [
        622060,
        140700000
    ],
    [
        621880,
        142000000
    ],
    [
        621850,
        141000000
    ],
    [
        621780,
        140000000
    ],
    [
        621770,
        139000000
    ],
    [
        621660,
        140170000
    ],
    [
        621550,
        141000000
    ],
    [
        621510,
        142000000
    ],
    [
        621480,
        144000000
    ],
    [
        621450,
        145130000
    ],
    [
        621400,
        145200000
    ],
    [
        621330,
        145100000
    ],
    [
        621260,
        144400000
    ],
    [
        621190,
        145150000
    ],
    [
        617830,
        156855000
    ],
    [
        617440,
        155610000
    ],
    [
        617380,
        155000000
    ],
    [
        617290,
        155610000
    ],
    [
        617280,
        153000000
    ],
    [
        617170,
        153658000
    ],
    [
        617100,
        153000000
    ],
    [
        616900,
        153658000
    ],
    [
        616850,
        154433000
    ],
    [
        616740,
        155098000
    ],
    [
        616670,
        153658000
    ],
    [
        616570,
        153615000
    ],
    [
        616500,
        153000000
    ],
    [
        616430,
        153040000
    ],
    [
        616360,
        153000000
    ],
    [
        616290,
        152000000
    ],
    [
        616220,
        151700000
    ],
    [
        616150,
        149850000
    ],
    [
        616080,
        150750000
    ],
    [
        615810,
        151890000
    ],
    [
        615740,
        151850000
    ],
    [
        615670,
        152508000
    ],
    [
        615640,
        149950000
    ],
    [
        615600,
        149906000
    ],
    [
        615530,
        148850000
    ],
    [
        615390,
        149912000
    ],
    [
        615360,
        149100000
    ],
    [
        615260,
        148640000
    ],
    [
        615190,
        148940000
    ],
    [
        615150,
        148500000
    ],
    [
        615100,
        146200000
    ],
    [
        615090,
        146100000
    ],
    [
        615050,
        145625000
    ],
    [
        614990,
        145475000
    ],
    [
        614980,
        145625000
    ],
    [
        612640,
        139900000
    ],
    [
        612610,
        138900000
    ],
    [
        612540,
        138400000
    ],
    [
        612450,
        137800000
    ],
    [
        612390,
        138800000
    ],
    [
        612340,
        140650000
    ],
    [
        612280,
        139050000
    ],
    [
        612220,
        139600000
    ],
    [
        612170,
        141150000
    ],
    [
        611980,
        141771280
    ],
    [
        611750,
        141900000
    ],
    [
        611740,
        142000000
    ],
    [
        611730,
        142400000
    ],
    [
        611690,
        142700000
    ],
    [
        611600,
        142450000
    ],
    [
        611520,
        142385640
    ],
    [
        611490,
        143000000
    ],
    [
        611410,
        145000000
    ],
    [
        611150,
        145490000
    ],
    [
        611070,
        145000000
    ],
    [
        611000,
        143500000
    ],
    [
        610960,
        145000000
    ],
    [
        610940,
        143000000
    ],
    [
        610870,
        142900000
    ],
    [
        610800,
        143000000
    ],
    [
        610750,
        141771280
    ],
    [
        610700,
        142200000
    ],
    [
        610670,
        142000000
    ],
    [
        610550,
        142950000
    ],
    [
        610540,
        143000000
    ],
    [
        610470,
        142950000
    ],
    [
        610450,
        143000000
    ],
    [
        610440,
        143700000
    ],
    [
        610380,
        144350000
    ],
    [
        610330,
        145000000
    ],
    [
        610320,
        144500000
    ],
    [
        610260,
        144400000
    ],
    [
        610240,
        143460000
    ],
    [
        610170,
        144500000
    ],
    [
        604380,
        124330000
    ],
    [
        604310,
        125750000
    ],
    [
        604280,
        128100000
    ],
    [
        604240,
        129500000
    ],
    [
        604170,
        129400000
    ],
    [
        604140,
        127900000
    ],
    [
        603910,
        136175000
    ],
    [
        603840,
        135675000
    ],
    [
        603770,
        134425000
    ],
    [
        603700,
        133575000
    ],
    [
        603640,
        134175000
    ],
    [
        603570,
        134075000
    ],
    [
        603540,
        132675000
    ],
    [
        603480,
        146350000
    ],
    [
        603460,
        148000000
    ],
    [
        603420,
        150100000
    ],
    [
        603380,
        151100000
    ],
    [
        603310,
        151888887
    ],
    [
        603250,
        155000000
    ],
    [
        603150,
        154000000
    ],
    [
        603080,
        156000000
    ],
    [
        603040,
        155920000
    ],
    [
        602990,
        156020000
    ],
    [
        602980,
        156450000
    ],
    [
        602920,
        157000000
    ],
    [
        602870,
        156300000
    ],
    [
        602810,
        155900000
    ],
    [
        602750,
        153000000
    ],
    [
        602690,
        156300000
    ],
    [
        602580,
        155000000
    ],
    [
        602520,
        156000000
    ],
    [
        602460,
        155100000
    ],
    [
        602390,
        154800000
    ],
    [
        602320,
        153600000
    ],
    [
        602250,
        153000000
    ],
    [
        602190,
        152000000
    ],
    [
        602160,
        153485109
    ],
    [
        602110,
        153000000
    ],
    [
        602040,
        160000000
    ],
    [
        601970,
        162000000
    ],
    [
        601960,
        161546887
    ],
    [
        601900,
        162000000
    ],
    [
        601870,
        162861353
    ],
    [
        601840,
        162900000
    ],
    [
        601760,
        161700000
    ],
    [
        601690,
        161500000
    ],
    [
        601640,
        164700000
    ],
    [
        601630,
        164468665
    ],
    [
        601600,
        163875331
    ],
    [
        601560,
        165920000
    ],
    [
        601520,
        165250000
    ],
    [
        601510,
        163502266
    ],
    [
        601500,
        165250000
    ],
    [
        601490,
        164812400
    ],
    [
        601450,
        164696665
    ],
    [
        601420,
        164398888
    ],
    [
        601410,
        163550000
    ],
    [
        601400,
        162816625
    ],
    [
        601390,
        162250000
    ],
    [
        601380,
        161500000
    ],
    [
        601350,
        162250000
    ],
    [
        601300,
        161885000
    ],
    [
        601290,
        162257248
    ],
    [
        601270,
        161442248
    ],
    [
        601250,
        161766665
    ],
    [
        601220,
        160785000
    ],
    [
        601210,
        159902446
    ],
    [
        601200,
        159751335
    ],
    [
        601170,
        158432671
    ],
    [
        601160,
        158312671
    ],
    [
        601150,
        162000000
    ],
    [
        601090,
        169920000
    ],
    [
        601030,
        170070000
    ],
    [
        600960,
        171920000
    ],
    [
        600930,
        173420000
    ],
    [
        600910,
        173740823
    ],
    [
        600890,
        173420000
    ],
    [
        600880,
        172995666
    ],
    [
        600850,
        172035882
    ],
    [
        600840,
        171765885
    ],
    [
        600820,
        171420000
    ],
    [
        600790,
        171041576
    ],
    [
        600770,
        170963799
    ],
    [
        600750,
        170920000
    ],
    [
        600680,
        175920000
    ],
    [
        600650,
        175995665
    ],
    [
        600610,
        176196888
    ],
    [
        600600,
        175266999
    ],
    [
        600580,
        175262554
    ],
    [
        600550,
        175275888
    ],
    [
        600530,
        175920000
    ],
    [
        600500,
        176504232
    ],
    [
        600490,
        175920000
    ],
    [
        600460,
        177920000
    ],
    [
        600430,
        177974887
    ],
    [
        600420,
        178000000
    ],
    [
        600400,
        177920000
    ],
    [
        600360,
        177520000
    ],
    [
        600300,
        178000000
    ],
    [
        600290,
        178050000
    ],
    [
        600230,
        178200000
    ],
    [
        600210,
        178050000
    ],
    [
        600180,
        178200000
    ],
    [
        600160,
        177920000
    ],
    [
        600150,
        177755443
    ],
    [
        600120,
        177822110
    ],
    [
        600080,
        177811554
    ],
    [
        600070,
        177792590
    ],
    [
        600030,
        176039999
    ],
    [
        600020,
        175800000
    ],
    [
        600010,
        176717773
    ],
    [
        600000,
        177570000
    ],
    [
        599980,
        176715624
    ],
    [
        599960,
        177300000
    ],
    [
        599910,
        177840000
    ],
    [
        599890,
        175000000
    ],
    [
        599880,
        174300000
    ],
    [
        599850,
        171400000
    ],
    [
        599800,
        172600000
    ],
    [
        599740,
        172900000
    ],
    [
        599690,
        174820000
    ],
    [
        598930,
        169200000
    ],
    [
        598880,
        167300000
    ],
    [
        598830,
        169400000
    ],
    [
        598780,
        169600000
    ],
    [
        598720,
        169700000
    ],
    [
        598670,
        170850000
    ],
    [
        598620,
        164415000
    ],
    [
        598520,
        162915000
    ],
    [
        598470,
        161715000
    ],
    [
        598420,
        160015000
    ],
    [
        598370,
        161615000
    ],
    [
        598360,
        163215000
    ],
    [
        598300,
        164415000
    ],
    [
        598240,
        162415000
    ],
    [
        598210,
        162915000
    ],
    [
        598160,
        163765000
    ],
    [
        598110,
        164465000
    ],
    [
        598060,
        167950000
    ],
    [
        598010,
        167400000
    ],
    [
        597960,
        169300000
    ],
    [
        597930,
        164415000
    ],
    [
        597910,
        164635000
    ],
    [
        597850,
        176500000
    ],
    [
        597800,
        181100000
    ],
    [
        597750,
        177050000
    ],
    [
        597700,
        178250000
    ],
    [
        597670,
        177500000
    ],
    [
        597650,
        179750000
    ],
    [
        597550,
        181310000
    ],
    [
        597520,
        181100000
    ],
    [
        597480,
        180500000
    ],
    [
        597230,
        172000000
    ],
    [
        596950,
        171739000
    ],
    [
        596900,
        170660000
    ],
    [
        596850,
        170110000
    ],
    [
        596790,
        170160000
    ],
    [
        596780,
        171399000
    ],
    [
        596750,
        171320000
    ],
    [
        596640,
        171478000
    ],
    [
        596550,
        171320000
    ],
    [
        596540,
        171000000
    ],
    [
        596510,
        168700000
    ],
    [
        596450,
        169000000
    ],
    [
        596440,
        170996000
    ],
    [
        596340,
        171320000
    ],
    [
        596320,
        172000000
    ],
    [
        596300,
        171320000
    ],
    [
        596290,
        169650000
    ],
    [
        596240,
        168400000
    ],
    [
        596220,
        169650000
    ],
    [
        596190,
        168000000
    ],
    [
        596140,
        167612031
    ],
    [
        596120,
        168000000
    ],
    [
        596040,
        169650000
    ],
    [
        595980,
        166000000
    ],
    [
        595930,
        166800000
    ],
    [
        595880,
        163000000
    ],
    [
        595680,
        162000000
    ],
    [
        595640,
        163200000
    ],
    [
        595580,
        167612031
    ],
    [
        595560,
        168020000
    ],
    [
        595520,
        168000000
    ],
    [
        595470,
        165910000
    ],
    [
        595440,
        165000000
    ],
    [
        595430,
        165102220
    ],
    [
        595420,
        165910000
    ],
    [
        595410,
        165968887
    ],
    [
        595390,
        165929776
    ],
    [
        595370,
        165910000
    ],
    [
        595320,
        161300000
    ],
    [
        595310,
        160858442
    ],
    [
        595280,
        160496416
    ],
    [
        595270,
        160400000
    ],
    [
        595250,
        169150000
    ],
    [
        595220,
        169650000
    ],
    [
        595210,
        167800000
    ],
    [
        595170,
        165910000
    ],
    [
        595140,
        163435462
    ],
    [
        595130,
        163943728
    ],
    [
        595110,
        165910000
    ],
    [
        595100,
        165000000
    ],
    [
        595070,
        161540000
    ],
    [
        595060,
        158000000
    ],
    [
        595000,
        157300000
    ],
    [
        594970,
        159000000
    ],
    [
        594960,
        158000000
    ],
    [
        594940,
        156000000
    ],
    [
        594930,
        154656665
    ],
    [
        594910,
        155005554
    ],
    [
        594800,
        148000000
    ],
    [
        594560,
        147415000
    ],
    [
        594510,
        146915000
    ],
    [
        594490,
        145658000
    ],
    [
        594470,
        145752531
    ],
    [
        594460,
        146323000
    ],
    [
        594440,
        146615000
    ],
    [
        594420,
        146108000
    ],
    [
        594390,
        145908000
    ],
    [
        594370,
        146250000
    ],
    [
        594320,
        146665000
    ],
    [
        594290,
        147065000
    ],
    [
        594260,
        147286546
    ],
    [
        594250,
        147357546
    ],
    [
        594240,
        147394665
    ],
    [
        594210,
        147521000
    ],
    [
        594200,
        146915000
    ],
    [
        594180,
        146715000
    ],
    [
        594160,
        146915000
    ],
    [
        594080,
        147650000
    ],
    [
        594060,
        147302110
    ],
    [
        594040,
        147165000
    ],
    [
        594030,
        147500000
    ],
    [
        593990,
        146830000
    ],
    [
        593960,
        146900000
    ],
    [
        593950,
        148000000
    ],
    [
        593930,
        147796190
    ],
    [
        593910,
        137800000
    ],
    [
        593870,
        136000000
    ],
    [
        593860,
        137200000
    ],
    [
        593840,
        137800000
    ],
    [
        593810,
        138000000
    ],
    [
        593770,
        137200000
    ],
    [
        593760,
        136186318
    ],
    [
        593750,
        135368943
    ],
    [
        593740,
        134525500
    ],
    [
        593710,
        133000000
    ],
    [
        593670,
        133100000
    ],
    [
        593650,
        133390443
    ],
    [
        593620,
        134269109
    ],
    [
        593600,
        134100000
    ],
    [
        593590,
        135619998
    ],
    [
        593570,
        135755554
    ],
    [
        593550,
        136051000
    ],
    [
        593500,
        137600000
    ],
    [
        593470,
        136456220
    ],
    [
        593460,
        136656220
    ],
    [
        593450,
        136289554
    ],
    [
        593420,
        136400000
    ],
    [
        593400,
        137800000
    ],
    [
        593350,
        137000000
    ],
    [
        593300,
        137800000
    ],
    [
        593280,
        135334684
    ],
    [
        593260,
        135239128
    ],
    [
        593240,
        134900000
    ],
    [
        593230,
        138000000
    ],
    [
        593190,
        141450000
    ],
    [
        593150,
        140300000
    ],
    [
        593140,
        140299147
    ],
    [
        593130,
        140300000
    ],
    [
        592970,
        138000000
    ],
    [
        592890,
        137800000
    ],
    [
        592830,
        137721000
    ],
    [
        592810,
        137800000
    ],
    [
        592800,
        137860500
    ],
    [
        592740,
        136060500
    ],
    [
        592730,
        134800000
    ],
    [
        592720,
        134700000
    ],
    [
        592710,
        134407888
    ],
    [
        592700,
        133936777
    ],
    [
        592680,
        133473554
    ],
    [
        592670,
        134215634
    ],
    [
        592650,
        134400000
    ],
    [
        592630,
        134500000
    ],
    [
        592620,
        134786999
    ],
    [
        592600,
        134612554
    ],
    [
        592590,
        133764554
    ],
    [
        592580,
        132650000
    ],
    [
        592540,
        132300000
    ],
    [
        592520,
        132491332
    ],
    [
        592170,
        124000000
    ],
    [
        591780,
        123500000
    ],
    [
        591490,
        123000000
    ],
    [
        591420,
        121805000
    ],
    [
        591370,
        120605000
    ],
    [
        589120,
        115450000
    ],
    [
        589060,
        111100000
    ],
    [
        589030,
        109100000
    ],
    [
        589010,
        107800000
    ],
    [
        588960,
        107300000
    ],
    [
        588920,
        106953500
    ],
    [
        588910,
        109900000
    ],
    [
        588860,
        111700000
    ],
    [
        588810,
        110400000
    ],
    [
        588760,
        111000000
    ],
    [
        588710,
        110400000
    ],
    [
        588660,
        111400000
    ],
    [
        588560,
        109400000
    ],
    [
        588510,
        111050000
    ],
    [
        588460,
        111900000
    ],
    [
        588410,
        112400000
    ],
    [
        588310,
        111900000
    ],
    [
        588260,
        113180000
    ],
    [
        588110,
        112900000
    ],
    [
        588060,
        113180000
    ],
    [
        588010,
        112900000
    ],
    [
        587950,
        113000000
    ],
    [
        587920,
        112750000
    ],
    [
        587900,
        112355000
    ],
    [
        587850,
        112255000
    ],
    [
        587830,
        112355000
    ],
    [
        587810,
        109140000
    ],
    [
        587660,
        107490000
    ],
    [
        587210,
        105300000
    ],
    [
        587150,
        105010000
    ],
    [
        587060,
        105300000
    ],
    [
        587030,
        103015000
    ],
    [
        586970,
        103225000
    ],
    [
        586910,
        102725000
    ],
    [
        586790,
        103425000
    ],
    [
        586660,
        102725000
    ],
    [
        586530,
        101725000
    ],
    [
        586470,
        101225000
    ],
    [
        586410,
        100725000
    ],
    [
        586350,
        100775000
    ],
    [
        586290,
        100000000
    ],
    [
        586230,
        100200000
    ],
    [
        586210,
        102400000
    ],
    [
        586180,
        104750000
    ],
    [
        586120,
        105150000
    ],
    [
        586060,
        106600000
    ],
    [
        586000,
        106718500
    ],
    [
        585940,
        106400000
    ],
    [
        585810,
        106968500
    ],
    [
        585750,
        106868500
    ],
    [
        585690,
        106918500
    ],
    [
        585570,
        106968500
    ],
    [
        585560,
        107168500
    ],
    [
        583550,
        112805000
    ],
    [
        583470,
        111805000
    ],
    [
        583420,
        111500000
    ],
    [
        583390,
        111050000
    ],
    [
        583370,
        110155000
    ],
    [
        583270,
        108855000
    ],
    [
        583210,
        108550000
    ],
    [
        583200,
        108855000
    ],
    [
        582450,
        108355000
    ],
    [
        582390,
        108100000
    ],
    [
        582380,
        108355000
    ],
    [
        582260,
        107450000
    ],
    [
        582140,
        107200000
    ],
    [
        582130,
        107580000
    ],
    [
        582070,
        107450000
    ],
    [
        582010,
        108000000
    ],
    [
        581950,
        108580000
    ],
    [
        581910,
        107300000
    ],
    [
        581880,
        107275000
    ],
    [
        581830,
        107075000
    ],
    [
        581790,
        106800000
    ],
    [
        581740,
        107000000
    ],
    [
        581580,
        116010000
    ],
    [
        581520,
        116800000
    ],
    [
        581460,
        117900000
    ],
    [
        581220,
        116010000
    ],
    [
        581150,
        117600000
    ],
    [
        581090,
        117100000
    ],
    [
        581060,
        116010000
    ],
    [
        581020,
        116000000
    ],
    [
        580980,
        115100000
    ],
    [
        580960,
        115260000
    ],
    [
        580900,
        117600000
    ],
    [
        580830,
        117280000
    ],
    [
        580770,
        119000000
    ],
    [
        580710,
        119900000
    ],
    [
        580650,
        120000000
    ],
    [
        580580,
        118200000
    ],
    [
        580510,
        121100000
    ],
    [
        580440,
        119000000
    ],
    [
        580390,
        117280000
    ],
    [
        580330,
        117000000
    ],
    [
        580320,
        117280000
    ],
    [
        580290,
        118140000
    ],
    [
        578040,
        101071700
    ],
    [
        577550,
        99174400
    ],
    [
        577510,
        98368000
    ],
    [
        577480,
        97089100
    ],
    [
        577440,
        96960000
    ],
    [
        577320,
        96900000
    ],
    [
        577260,
        96700000
    ],
    [
        577250,
        93308000
    ],
    [
        577240,
        93158000
    ],
    [
        577220,
        89916000
    ],
    [
        576520,
        87708000
    ],
    [
        576250,
        89418000
    ],
    [
        576190,
        88888800
    ],
    [
        576150,
        89342850
    ],
    [
        575850,
        85835000
    ],
    [
        575830,
        85500000
    ],
    [
        575730,
        80780000
    ],
    [
        575660,
        78107000
    ],
    [
        575030,
        75610681
    ],
    [
        574770,
        75007181
    ],
    [
        574700,
        72900181
    ],
    [
        574690,
        72686000
    ],
    [
        574490,
        72743000
    ],
    [
        574440,
        72188650
    ],
    [
        574420,
        72277300
    ],
    [
        574360,
        72800000
    ],
    [
        574350,
        72421600
    ],
    [
        574330,
        71810800
    ],
    [
        574300,
        70353400
    ],
    [
        574280,
        70272350
    ],
    [
        574240,
        71068950
    ],
    [
        574230,
        70834650
    ],
    [
        574190,
        69737500
    ],
    [
        574170,
        69608871
    ],
    [
        574150,
        69574771
    ],
    [
        572780,
        72371550
    ],
    [
        572770,
        72705850
    ],
    [
        572660,
        74961000
    ],
    [
        572590,
        75365250
    ],
    [
        572580,
        74355910
    ],
    [
        572540,
        74267021
    ],
    [
        572530,
        74506233
    ],
    [
        572520,
        74237433
    ],
    [
        572500,
        74299290
    ],
    [
        572480,
        73812292
    ],
    [
        572470,
        73784514
    ],
    [
        572460,
        74834514
    ],
    [
        572440,
        75418400
    ],
    [
        572400,
        75433923
    ],
    [
        572370,
        74837651
    ],
    [
        572340,
        74848762
    ],
    [
        572310,
        75102573
    ],
    [
        572290,
        75058129
    ],
    [
        572270,
        75008650
    ],
    [
        572210,
        75951000
    ],
    [
        572190,
        75147110
    ],
    [
        572140,
        74978500
    ],
    [
        572130,
        74226927
    ],
    [
        572110,
        74182482
    ],
    [
        572090,
        74243593
    ],
    [
        572080,
        74354704
    ],
    [
        572050,
        74506654
    ],
    [
        572030,
        74305543
    ],
    [
        572020,
        74277766
    ],
    [
        571980,
        73992416
    ],
    [
        571960,
        73916982
    ],
    [
        571930,
        74717806
    ],
    [
        571910,
        74682250
    ],
    [
        571900,
        74925584
    ],
    [
        571850,
        75303650
    ],
    [
        571840,
        75519982
    ],
    [
        571830,
        76457750
    ],
    [
        571820,
        76571208
    ],
    [
        571800,
        76491777
    ],
    [
        571770,
        76525110
    ],
    [
        571750,
        76493841
    ],
    [
        571730,
        76573963
    ],
    [
        571720,
        76553963
    ],
    [
        571710,
        77212413
    ],
    [
        571680,
        77269080
    ],
    [
        571660,
        78258450
    ],
    [
        571630,
        79405177
    ],
    [
        571600,
        79519050
    ],
    [
        571590,
        79589555
    ],
    [
        571570,
        79567332
    ],
    [
        571540,
        79583999
    ],
    [
        571520,
        79863434
    ],
    [
        571480,
        79900000
    ],
    [
        571440,
        80005400
    ],
    [
        571420,
        79748499
    ],
    [
        571410,
        79635950
    ],
    [
        571370,
        79611732
    ],
    [
        571360,
        79510621
    ],
    [
        571340,
        78056400
    ],
    [
        570570,
        80982666
    ],
    [
        570560,
        80921555
    ],
    [
        570520,
        81491450
    ],
    [
        570500,
        81583005
    ],
    [
        570490,
        81491450
    ],
    [
        570430,
        81508450
    ],
    [
        570420,
        81192016
    ],
    [
        570390,
        81209805
    ],
    [
        570360,
        81211516
    ],
    [
        570350,
        81920000
    ],
    [
        570320,
        81979444
    ],
    [
        570300,
        82183600
    ],
    [
        570260,
        81399250
    ],
    [
        570250,
        81211604
    ],
    [
        570240,
        80673826
    ],
    [
        570210,
        80140100
    ],
    [
        570180,
        79639766
    ],
    [
        570170,
        79379666
    ],
    [
        570150,
        79344016
    ],
    [
        570110,
        79199350
    ],
    [
        570090,
        79613300
    ],
    [
        570060,
        79969744
    ],
    [
        570050,
        80114077
    ],
    [
        570020,
        79622527
    ],
    [
        570000,
        79546465
    ],
    [
        569990,
        79481082
    ],
    [
        569970,
        79429332
    ],
    [
        567390,
        83267450
    ],
    [
        567260,
        83875600
    ],
    [
        567190,
        83773600
    ],
    [
        567170,
        83930000
    ],
    [
        567130,
        84000000
    ],
    [
        567060,
        84292200
    ],
    [
        566930,
        84591700
    ],
    [
        566870,
        84000000
    ],
    [
        566860,
        83840000
    ],
    [
        566770,
        84000000
    ],
    [
        566670,
        84295850
    ],
    [
        566600,
        84395850
    ],
    [
        566480,
        84578350
    ],
    [
        566410,
        86588700
    ],
    [
        566340,
        86033500
    ],
    [
        566020,
        85810000
    ],
    [
        565950,
        86060000
    ],
    [
        565870,
        85810000
    ],
    [
        565810,
        86081500
    ],
    [
        565760,
        86300000
    ],
    [
        565730,
        86670000
    ],
    [
        565670,
        87855550
    ],
    [
        565610,
        88809900
    ],
    [
        565590,
        88091550
    ],
    [
        565540,
        89236550
    ],
    [
        565470,
        89781650
    ],
    [
        565420,
        90345000
    ],
    [
        565410,
        90090000
    ],
    [
        565310,
        90561000
    ],
    [
        565230,
        91166000
    ],
    [
        565220,
        91377300
    ],
    [
        565180,
        91384600
    ],
    [
        565150,
        91729600
    ],
    [
        565120,
        92145000
    ],
    [
        565110,
        93070000
    ],
    [
        565030,
        93436000
    ],
    [
        564930,
        94006000
    ],
    [
        564650,
        94980000
    ],
    [
        564520,
        97045600
    ],
    [
        564280,
        97353000
    ],
    [
        564250,
        97584600
    ],
    [
        564200,
        96689600
    ],
    [
        564180,
        96419600
    ],
    [
        564170,
        97584600
    ],
    [
        564140,
        98115000
    ],
    [
        564100,
        98200000
    ],
    [
        564070,
        98115000
    ],
    [
        564040,
        98645200
    ],
    [
        564030,
        98580000
    ],
    [
        563980,
        99130000
    ],
    [
        563960,
        99300000
    ],
    [
        563900,
        98200000
    ],
    [
        563880,
        98070000
    ],
    [
        563830,
        97524400
    ],
    [
        563770,
        101000000
    ],
    [
        563760,
        101170000
    ],
    [
        563730,
        101655000
    ],
    [
        563690,
        101370000
    ],
    [
        563650,
        101340000
    ],
    [
        563630,
        101670000
    ],
    [
        563620,
        102175000
    ],
    [
        563570,
        102675000
    ],
    [
        563550,
        102450000
    ],
    [
        563480,
        102000000
    ],
    [
        563440,
        104565000
    ],
    [
        562850,
        106130000
    ],
    [
        562780,
        106670000
    ],
    [
        562620,
        107350000
    ],
    [
        562570,
        107700000
    ],
    [
        562500,
        107400000
    ],
    [
        562460,
        108900000
    ],
    [
        562430,
        107750000
    ],
    [
        562410,
        107875000
    ],
    [
        562360,
        108495000
    ],
    [
        562310,
        107175000
    ],
    [
        562290,
        107350000
    ],
    [
        562260,
        108000000
    ],
    [
        562240,
        107900000
    ],
    [
        562190,
        108000000
    ],
    [
        562130,
        109000000
    ],
    [
        562120,
        109145000
    ],
    [
        562090,
        108995000
    ],
    [
        562050,
        109145000
    ],
    [
        562040,
        109545000
    ],
    [
        561990,
        109295000
    ],
    [
        561940,
        109950000
    ],
    [
        561920,
        109805000
    ],
    [
        561880,
        110105000
    ],
    [
        561870,
        110510000
    ],
    [
        561850,
        109250000
    ],
    [
        561810,
        107750000
    ],
    [
        561780,
        107500000
    ],
    [
        561730,
        107750000
    ],
    [
        561710,
        107600000
    ],
    [
        561670,
        107750000
    ],
    [
        561650,
        107735000
    ],
    [
        561630,
        107485000
    ],
    [
        561580,
        107650000
    ],
    [
        561530,
        106200000
    ],
    [
        561510,
        106000000
    ],
    [
        561440,
        106200000
    ],
    [
        561380,
        105500000
    ],
    [
        561330,
        106200000
    ],
    [
        561310,
        106550000
    ],
    [
        561240,
        107000000
    ],
    [
        561170,
        106200000
    ],
    [
        561120,
        107330000
    ],
    [
        561110,
        106890000
    ],
    [
        561060,
        107390000
    ],
    [
        561030,
        107295000
    ],
    [
        560960,
        106845000
    ],
    [
        560910,
        106200000
    ],
    [
        560890,
        106735000
    ],
    [
        560860,
        107085000
    ],
    [
        560820,
        106570000
    ],
    [
        560730,
        105960000
    ],
    [
        560680,
        105260000
    ],
    [
        560660,
        105000000
    ],
    [
        560590,
        104900000
    ],
    [
        560520,
        105960000
    ],
    [
        560420,
        104900000
    ],
    [
        560400,
        105480000
    ],
    [
        560380,
        106880000
    ],
    [
        560330,
        107900000
    ],
    [
        560320,
        104570000
    ],
    [
        560270,
        105390000
    ],
    [
        560220,
        105470000
    ],
    [
        560170,
        106325000
    ],
    [
        560120,
        106710000
    ],
    [
        560050,
        106500000
    ],
    [
        559990,
        107000000
    ],
    [
        559770,
        104500000
    ],
    [
        559750,
        104895000
    ],
    [
        559700,
        105400000
    ],
    [
        559590,
        103630000
    ],
    [
        559570,
        104950000
    ],
    [
        559500,
        104900000
    ],
    [
        559440,
        104000000
    ],
    [
        559430,
        103910000
    ],
    [
        559390,
        103500000
    ],
    [
        559330,
        103125000
    ],
    [
        559310,
        102985000
    ],
    [
        559240,
        102450000
    ],
    [
        559210,
        101150000
    ],
    [
        559190,
        100700000
    ],
    [
        559110,
        100300000
    ],
    [
        559070,
        100200000
    ],
    [
        559050,
        100600000
    ],
    [
        558980,
        100100000
    ],
    [
        558960,
        100013400
    ],
    [
        558910,
        100113400
    ],
    [
        558900,
        100700000
    ],
    [
        558850,
        101000000
    ],
    [
        558840,
        100550000
    ],
    [
        558770,
        100800000
    ],
    [
        558760,
        100850000
    ],
    [
        558720,
        100495000
    ],
    [
        558660,
        100795000
    ],
    [
        558650,
        100810000
    ],
    [
        558610,
        101160000
    ],
    [
        558590,
        101500000
    ],
    [
        558580,
        102215000
    ],
    [
        558510,
        101700000
    ],
    [
        558440,
        101050000
    ],
    [
        558400,
        100700000
    ],
    [
        558370,
        100705000
    ],
    [
        558300,
        102715000
    ],
    [
        558230,
        102465000
    ],
    [
        558160,
        102565000
    ],
    [
        558090,
        102715000
    ],
    [
        558080,
        103215000
    ],
    [
        558040,
        103355000
    ],
    [
        558030,
        104090000
    ],
    [
        558000,
        104340000
    ],
    [
        557990,
        104720000
    ],
    [
        557960,
        104470000
    ],
    [
        557920,
        104215000
    ],
    [
        557870,
        102950000
    ],
    [
        557830,
        102800000
    ],
    [
        557800,
        103130000
    ],
    [
        557730,
        104500000
    ],
    [
        557670,
        104295000
    ],
    [
        557620,
        105060000
    ],
    [
        557590,
        105000000
    ],
    [
        557570,
        104195000
    ],
    [
        557520,
        104190000
    ],
    [
        557470,
        103700000
    ],
    [
        557430,
        103995000
    ],
    [
        557410,
        104290000
    ],
    [
        557390,
        105200000
    ],
    [
        557310,
        105400000
    ],
    [
        557260,
        105075000
    ],
    [
        557230,
        104985000
    ],
    [
        557210,
        104785000
    ],
    [
        557170,
        105200000
    ],
    [
        557110,
        105300000
    ],
    [
        557100,
        105000000
    ],
    [
        557030,
        103950000
    ],
    [
        556960,
        104950000
    ],
    [
        556890,
        104900000
    ],
    [
        556820,
        104350000
    ],
    [
        556800,
        104250000
    ],
    [
        556760,
        103550000
    ],
    [
        556750,
        104050000
    ],
    [
        556690,
        103630000
    ],
    [
        556680,
        105000000
    ],
    [
        556610,
        104250000
    ],
    [
        556430,
        105200000
    ],
    [
        556380,
        104500000
    ],
    [
        556370,
        105025000
    ],
    [
        556330,
        105075000
    ],
    [
        556310,
        103685000
    ],
    [
        556270,
        104180000
    ],
    [
        556170,
        103370000
    ],
    [
        556160,
        103685000
    ],
    [
        556120,
        104125000
    ],
    [
        556080,
        104750000
    ],
    [
        556050,
        104225000
    ],
    [
        555980,
        103850000
    ],
    [
        555910,
        103350000
    ],
    [
        555840,
        103850000
    ],
    [
        555810,
        104130000
    ],
    [
        555770,
        104705000
    ],
    [
        555710,
        104350000
    ],
    [
        555660,
        103350000
    ],
    [
        555640,
        103500000
    ],
    [
        555440,
        111200000
    ],
    [
        555380,
        111370000
    ],
    [
        555360,
        111640000
    ],
    [
        555310,
        111040000
    ],
    [
        555300,
        111000000
    ],
    [
        555240,
        111800000
    ],
    [
        555170,
        111300000
    ],
    [
        555030,
        111000000
    ],
    [
        555000,
        111100000
    ],
    [
        554800,
        112000000
    ],
    [
        554760,
        112200000
    ],
    [
        554700,
        112790000
    ],
    [
        554690,
        112330000
    ],
    [
        554620,
        112000000
    ],
    [
        554590,
        111790000
    ],
    [
        554550,
        111100000
    ],
    [
        554510,
        112330000
    ],
    [
        554490,
        112400000
    ],
    [
        554480,
        113000000
    ],
    [
        554440,
        113410000
    ],
    [
        554420,
        113415000
    ],
    [
        554390,
        113250000
    ],
    [
        554340,
        113050000
    ],
    [
        554290,
        113960000
    ],
    [
        554270,
        114920000
    ],
    [
        554140,
        113000000
    ],
    [
        554080,
        113825000
    ],
    [
        554010,
        113550000
    ],
    [
        553940,
        113450000
    ],
    [
        553830,
        113500000
    ],
    [
        553800,
        114000000
    ],
    [
        553780,
        113450000
    ],
    [
        553750,
        113335000
    ],
    [
        553730,
        113670000
    ],
    [
        553670,
        113850000
    ],
    [
        553540,
        111500000
    ],
    [
        553520,
        111390000
    ],
    [
        553470,
        112400000
    ],
    [
        553420,
        111000000
    ],
    [
        553400,
        110930000
    ],
    [
        553370,
        110500000
    ],
    [
        553330,
        110000000
    ],
    [
        553320,
        109840000
    ],
    [
        553270,
        109600000
    ],
    [
        553220,
        110000000
    ],
    [
        553140,
        110500000
    ],
    [
        553030,
        110830000
    ],
    [
        552970,
        111300000
    ],
    [
        552960,
        111000000
    ],
    [
        552920,
        111400000
    ],
    [
        552910,
        112800000
    ],
    [
        552870,
        113400000
    ],
    [
        552840,
        113565000
    ],
    [
        552810,
        113435000
    ],
    [
        552800,
        112935000
    ],
    [
        552770,
        112950000
    ],
    [
        552760,
        112900000
    ],
    [
        552720,
        113000000
    ],
    [
        552710,
        113400000
    ],
    [
        552660,
        114000000
    ],
    [
        552620,
        113500000
    ],
    [
        552610,
        113275000
    ],
    [
        552600,
        113050000
    ],
    [
        552580,
        111725000
    ],
    [
        552570,
        111950000
    ],
    [
        552550,
        111750000
    ],
    [
        552510,
        111000000
    ],
    [
        552470,
        110850000
    ],
    [
        552460,
        111100000
    ],
    [
        552430,
        109550000
    ],
    [
        552410,
        109235000
    ],
    [
        552380,
        108600000
    ],
    [
        552360,
        109000000
    ],
    [
        552350,
        109500000
    ],
    [
        552240,
        110310000
    ],
    [
        552160,
        110000000
    ],
    [
        552090,
        110310000
    ],
    [
        552020,
        110900000
    ],
    [
        551950,
        110310000
    ],
    [
        551890,
        110900000
    ],
    [
        551740,
        110310000
    ],
    [
        551690,
        109920000
    ],
    [
        551610,
        109500000
    ],
    [
        551550,
        109600000
    ],
    [
        551490,
        107540000
    ],
    [
        551420,
        108800000
    ],
    [
        551290,
        107540000
    ],
    [
        551250,
        107270000
    ],
    [
        551240,
        107285000
    ],
    [
        551230,
        107385000
    ],
    [
        551190,
        107505000
    ],
    [
        551160,
        107405000
    ],
    [
        551140,
        107135000
    ],
    [
        551090,
        107275000
    ],
    [
        551080,
        108060000
    ],
    [
        551070,
        108180000
    ],
    [
        551050,
        108300000
    ],
    [
        551020,
        110310000
    ],
    [
        550900,
        110900000
    ],
    [
        550820,
        111000000
    ],
    [
        550780,
        111300000
    ],
    [
        550760,
        114800000
    ],
    [
        549790,
        118300000
    ],
    [
        549690,
        119000000
    ],
    [
        549650,
        119360000
    ],
    [
        549640,
        119305000
    ],
    [
        549580,
        119000000
    ],
    [
        549570,
        120000000
    ],
    [
        549550,
        119990000
    ],
    [
        549460,
        119000000
    ],
    [
        549450,
        118940000
    ],
    [
        549430,
        119000000
    ],
    [
        549420,
        119050000
    ],
    [
        549370,
        119000000
    ],
    [
        549350,
        118800000
    ],
    [
        549340,
        119300000
    ],
    [
        549320,
        119005000
    ],
    [
        549270,
        119500000
    ],
    [
        549260,
        119040000
    ],
    [
        549230,
        119100000
    ],
    [
        549220,
        118975000
    ],
    [
        549170,
        119050000
    ],
    [
        549160,
        118975000
    ],
    [
        549120,
        118900000
    ],
    [
        549070,
        119000000
    ],
    [
        549020,
        119250000
    ],
    [
        548970,
        118500000
    ],
    [
        548920,
        119550000
    ],
    [
        548820,
        120000000
    ],
    [
        548810,
        121050000
    ],
    [
        548770,
        121150000
    ],
    [
        548760,
        121050000
    ],
    [
        548730,
        120685000
    ],
    [
        548710,
        121100000
    ],
    [
        548700,
        122170000
    ],
    [
        548690,
        122710000
    ],
    [
        548540,
        122420000
    ],
    [
        548510,
        121200000
    ],
    [
        548310,
        121000000
    ],
    [
        548300,
        120950000
    ],
    [
        548250,
        120000000
    ],
    [
        548220,
        119750000
    ],
    [
        547330,
        116765000
    ],
    [
        547280,
        116465000
    ],
    [
        547230,
        116530000
    ],
    [
        547200,
        117265000
    ],
    [
        547160,
        117850000
    ],
    [
        547120,
        117340000
    ],
    [
        547100,
        118090000
    ],
    [
        546920,
        119150000
    ],
    [
        546870,
        119500000
    ],
    [
        546850,
        120565000
    ],
    [
        546830,
        120900000
    ],
    [
        546780,
        118700000
    ],
    [
        546740,
        119250000
    ],
    [
        546720,
        119460000
    ],
    [
        546680,
        119900000
    ],
    [
        546630,
        119200000
    ],
    [
        546590,
        120000000
    ],
    [
        546580,
        120100000
    ],
    [
        546560,
        120570000
    ],
    [
        546530,
        120280000
    ],
    [
        546450,
        119000000
    ],
    [
        546430,
        118180000
    ],
    [
        546380,
        117400000
    ],
    [
        546330,
        116000000
    ],
    [
        546290,
        115000000
    ],
    [
        546280,
        116660000
    ],
    [
        546250,
        117000000
    ],
    [
        546220,
        117390000
    ],
    [
        546180,
        118000000
    ],
    [
        546140,
        118180000
    ],
    [
        546120,
        116600000
    ],
    [
        546100,
        116150000
    ],
    [
        546090,
        117000000
    ],
    [
        546070,
        117180000
    ],
    [
        545980,
        118000000
    ],
    [
        545970,
        118680000
    ],
    [
        545910,
        118000000
    ],
    [
        545870,
        119000000
    ],
    [
        545850,
        121300000
    ],
    [
        545840,
        121400000
    ],
    [
        545800,
        121620000
    ],
    [
        545760,
        121650000
    ],
    [
        545740,
        121440000
    ],
    [
        545720,
        121720000
    ],
    [
        545710,
        121280000
    ],
    [
        545670,
        121560000
    ],
    [
        545610,
        122000000
    ],
    [
        545560,
        123450000
    ],
    [
        545490,
        127950000
    ],
    [
        545460,
        128520000
    ],
    [
        545410,
        129350000
    ],
    [
        545370,
        129000000
    ],
    [
        545360,
        130195000
    ],
    [
        545310,
        131195000
    ],
    [
        545300,
        130195000
    ],
    [
        545290,
        129615000
    ],
    [
        545280,
        128800000
    ],
    [
        545260,
        129615000
    ],
    [
        545200,
        130595000
    ],
    [
        545180,
        130745000
    ],
    [
        545150,
        131095000
    ],
    [
        545140,
        131325000
    ],
    [
        545100,
        131295000
    ],
    [
        545090,
        131345000
    ],
    [
        545050,
        131750000
    ],
    [
        545000,
        132200000
    ],
    [
        544950,
        132450000
    ],
    [
        544910,
        132705000
    ],
    [
        544900,
        133000000
    ],
    [
        544870,
        134290000
    ],
    [
        544850,
        134800000
    ],
    [
        544840,
        133900000
    ],
    [
        544790,
        133600000
    ],
    [
        544740,
        133000000
    ],
    [
        544690,
        133100000
    ],
    [
        544680,
        133900000
    ],
    [
        544640,
        133400000
    ],
    [
        544600,
        134300000
    ],
    [
        544590,
        133800000
    ],
    [
        544560,
        133450000
    ],
    [
        544540,
        133000000
    ],
    [
        544530,
        133200000
    ],
    [
        544490,
        134440000
    ],
    [
        544480,
        134600000
    ],
    [
        544460,
        134440000
    ],
    [
        544450,
        133080000
    ],
    [
        544330,
        133000000
    ],
    [
        544300,
        132520000
    ],
    [
        544280,
        132400000
    ],
    [
        544250,
        133000000
    ],
    [
        544080,
        133080000
    ],
    [
        544070,
        133000000
    ],
    [
        543990,
        132280000
    ],
    [
        543950,
        132150000
    ],
    [
        543930,
        132600000
    ],
    [
        543880,
        133000000
    ],
    [
        543830,
        132000000
    ],
    [
        543790,
        133000000
    ],
    [
        543770,
        131100000
    ],
    [
        543660,
        130000000
    ],
    [
        543580,
        128680000
    ],
    [
        543540,
        129890000
    ],
    [
        543430,
        130000000
    ],
    [
        543390,
        130490000
    ],
    [
        543380,
        130560000
    ],
    [
        543350,
        131000000
    ],
    [
        543330,
        131200000
    ],
    [
        543310,
        131950000
    ],
    [
        543280,
        131800000
    ],
    [
        543230,
        131950000
    ],
    [
        543170,
        131000000
    ],
    [
        543120,
        130300000
    ],
    [
        543080,
        133050000
    ],
    [
        543040,
        133970000
    ],
    [
        542930,
        132850000
    ],
    [
        542870,
        132800000
    ],
    [
        542820,
        132000000
    ],
    [
        542810,
        132610000
    ],
    [
        542700,
        131950000
    ],
    [
        542660,
        132720000
    ],
    [
        542620,
        132960000
    ],
    [
        542580,
        134000000
    ],
    [
        542570,
        132710000
    ],
    [
        542540,
        132500000
    ],
    [
        542520,
        133400000
    ],
    [
        542470,
        131800000
    ],
    [
        542440,
        131000000
    ],
    [
        542320,
        130000000
    ],
    [
        542270,
        130500000
    ],
    [
        542220,
        131450000
    ],
    [
        542170,
        134000000
    ],
    [
        542120,
        131750000
    ],
    [
        542110,
        132400000
    ],
    [
        542100,
        133415000
    ],
    [
        542070,
        135915000
    ],
    [
        542030,
        136750000
    ],
    [
        542020,
        136550000
    ],
    [
        541990,
        136500000
    ],
    [
        541950,
        137225000
    ],
    [
        541920,
        136500000
    ],
    [
        541870,
        135550000
    ],
    [
        541810,
        135400000
    ],
    [
        541720,
        136500000
    ],
    [
        541660,
        137950000
    ],
    [
        541650,
        137020000
    ],
    [
        541610,
        136700000
    ],
    [
        541560,
        137000000
    ],
    [
        541530,
        136990000
    ],
    [
        541420,
        137700000
    ],
    [
        541410,
        137495000
    ],
    [
        541360,
        138150000
    ],
    [
        541340,
        138300000
    ],
    [
        541310,
        138340000
    ],
    [
        541290,
        138440000
    ],
    [
        541280,
        138930000
    ],
    [
        541270,
        138510000
    ],
    [
        541210,
        138400000
    ],
    [
        541190,
        138050000
    ],
    [
        541160,
        137850000
    ],
    [
        541110,
        138400000
    ],
    [
        541070,
        138520000
    ],
    [
        541040,
        137760000
    ],
    [
        541030,
        137470000
    ],
    [
        541000,
        137880000
    ],
    [
        540960,
        137455000
    ],
    [
        540950,
        136100000
    ],
    [
        540900,
        134400000
    ],
    [
        539800,
        143000000
    ],
    [
        539780,
        142650000
    ],
    [
        539770,
        143000000
    ],
    [
        539720,
        142500000
    ],
    [
        539670,
        143000000
    ],
    [
        539650,
        143500000
    ],
    [
        539580,
        144780000
    ],
    [
        539530,
        145560000
    ],
    [
        539510,
        144800000
    ],
    [
        539490,
        144110000
    ],
    [
        539460,
        145870000
    ],
    [
        539410,
        140400000
    ],
    [
        539360,
        141000000
    ],
    [
        539340,
        140000000
    ],
    [
        539300,
        141020000
    ],
    [
        539260,
        141500000
    ],
    [
        539220,
        141580000
    ],
    [
        539150,
        139000000
    ],
    [
        539140,
        138560000
    ],
    [
        539100,
        138000000
    ],
    [
        539000,
        140000000
    ],
    [
        538950,
        145000000
    ],
    [
        538920,
        146000000
    ],
    [
        538900,
        145500000
    ],
    [
        538850,
        147000000
    ],
    [
        538800,
        149200000
    ],
    [
        538740,
        148000000
    ],
    [
        538590,
        150000000
    ],
    [
        538570,
        148120000
    ],
    [
        538550,
        149000000
    ],
    [
        538410,
        138000000
    ],
    [
        538380,
        137500000
    ],
    [
        538330,
        136500000
    ],
    [
        538240,
        135000000
    ],
    [
        537990,
        133615000
    ],
    [
        537970,
        133115000
    ],
    [
        537940,
        132710000
    ],
    [
        537890,
        131915000
    ],
    [
        537840,
        131400000
    ],
    [
        537820,
        131450000
    ],
    [
        537790,
        131000000
    ],
    [
        537780,
        130500000
    ],
    [
        537750,
        129950000
    ],
    [
        537740,
        129600000
    ],
    [
        537690,
        128250000
    ],
    [
        537640,
        127630000
    ],
    [
        537560,
        128000000
    ],
    [
        537550,
        129500000
    ],
    [
        537510,
        130000000
    ],
    [
        537480,
        129820000
    ],
    [
        537440,
        129640000
    ],
    [
        537360,
        131000000
    ],
    [
        537330,
        131400000
    ],
    [
        537270,
        132000000
    ],
    [
        537220,
        131480000
    ],
    [
        537180,
        131900000
    ],
    [
        537140,
        131800000
    ],
    [
        537090,
        131850000
    ],
    [
        537080,
        131400000
    ],
    [
        537030,
        129985000
    ],
    [
        536960,
        130735000
    ],
    [
        536950,
        129835000
    ],
    [
        536780,
        129670000
    ],
    [
        536760,
        129500000
    ],
    [
        536720,
        129140000
    ],
    [
        536670,
        128900000
    ],
    [
        536650,
        129500000
    ],
    [
        536590,
        129600000
    ],
    [
        536470,
        129670000
    ],
    [
        536400,
        129500000
    ],
    [
        536350,
        129400000
    ],
    [
        536290,
        129500000
    ],
    [
        536220,
        129670000
    ],
    [
        536010,
        128000000
    ],
    [
        535990,
        127600000
    ],
    [
        535690,
        117250000
    ],
    [
        535670,
        116350000
    ],
    [
        535620,
        113900000
    ],
    [
        535560,
        113500000
    ],
    [
        535500,
        113900000
    ],
    [
        535480,
        112000000
    ],
    [
        535390,
        112000000
    ],
    [
        535380,
        111540000
    ],
    [
        535320,
        111800000
    ],
    [
        535300,
        112000000
    ],
    [
        535250,
        113900000
    ],
    [
        535190,
        113000000
    ],
    [
        535130,
        113600000
    ],
    [
        535070,
        113500000
    ],
    [
        534950,
        113400000
    ],
    [
        534930,
        113780000
    ],
    [
        534870,
        114490000
    ],
    [
        534830,
        118640000
    ],
    [
        534820,
        119500000
    ],
    [
        534780,
        119590000
    ],
    [
        534760,
        120100000
    ],
    [
        534700,
        121000000
    ],
    [
        534650,
        119700000
    ],
    [
        534360,
        112000000
    ],
    [
        534270,
        111245000
    ],
    [
        534260,
        110660000
    ],
    [
        534230,
        110490000
    ],
    [
        534200,
        109000000
    ],
    [
        534190,
        108050000
    ],
    [
        534090,
        106270000
    ],
    [
        534080,
        106000000
    ],
    [
        534050,
        104780000
    ],
    [
        534020,
        104340000
    ],
    [
        533890,
        106270000
    ],
    [
        533860,
        105700000
    ],
    [
        533830,
        106270000
    ],
    [
        533810,
        106290000
    ],
    [
        533720,
        108050000
    ],
    [
        533670,
        105390000
    ],
    [
        533640,
        105660000
    ],
    [
        533620,
        104000000
    ],
    [
        533570,
        103700000
    ],
    [
        533530,
        105000000
    ],
    [
        533520,
        103240000
    ],
    [
        533480,
        99590000
    ],
    [
        533450,
        99390000
    ],
    [
        533430,
        99000000
    ],
    [
        533390,
        98912500
    ],
    [
        533350,
        99080000
    ],
    [
        533330,
        99590000
    ],
    [
        533260,
        100800000
    ],
    [
        533200,
        100900000
    ],
    [
        533170,
        99410000
    ],
    [
        533140,
        100400000
    ],
    [
        533110,
        100290000
    ],
    [
        533070,
        104000000
    ],
    [
        533010,
        104740000
    ],
    [
        533000,
        104000000
    ],
    [
        532970,
        104360000
    ],
    [
        532950,
        104740000
    ],
    [
        532910,
        106270000
    ],
    [
        532880,
        106800000
    ],
    [
        532860,
        107850000
    ],
    [
        532800,
        109000000
    ],
    [
        532770,
        110000000
    ],
    [
        532760,
        110140000
    ],
    [
        532750,
        112000000
    ],
    [
        532730,
        112500000
    ],
    [
        532630,
        113000000
    ],
    [
        532570,
        113400000
    ],
    [
        532560,
        116000000
    ],
    [
        532530,
        119800000
    ],
    [
        532500,
        120855000
    ],
    [
        532480,
        121300000
    ],
    [
        532430,
        121795000
    ],
    [
        532410,
        121450000
    ],
    [
        532190,
        123600000
    ],
    [
        532180,
        125600000
    ],
    [
        532070,
        126000000
    ],
    [
        532060,
        126630000
    ],
    [
        532010,
        126620000
    ],
    [
        531940,
        126000000
    ],
    [
        531920,
        125140000
    ],
    [
        531880,
        124260000
    ],
    [
        531810,
        125000000
    ],
    [
        531800,
        125140000
    ],
    [
        531730,
        126000000
    ],
    [
        531450,
        125140000
    ],
    [
        531400,
        126000000
    ],
    [
        531390,
        126800000
    ],
    [
        531330,
        127000000
    ],
    [
        531270,
        128050000
    ],
    [
        531240,
        127540000
    ],
    [
        531210,
        128290000
    ],
    [
        531180,
        127040000
    ],
    [
        531140,
        126250000
    ],
    [
        531020,
        126000000
    ],
    [
        530950,
        126150000
    ],
    [
        530920,
        127350000
    ],
    [
        530890,
        127700000
    ],
    [
        530840,
        129320000
    ],
    [
        530830,
        128800000
    ],
    [
        530780,
        131000000
    ],
    [
        530760,
        131900000
    ],
    [
        530750,
        133160000
    ],
    [
        530720,
        133200000
    ],
    [
        530650,
        134520000
    ],
    [
        530640,
        136410000
    ],
    [
        530610,
        136210000
    ],
    [
        530580,
        136600000
    ],
    [
        530560,
        138175000
    ],
    [
        530510,
        138850000
    ],
    [
        530470,
        136600000
    ],
    [
        530460,
        137200000
    ],
    [
        528430,
        152630000
    ],
    [
        528400,
        153230000
    ],
    [
        528380,
        153915000
    ],
    [
        528340,
        154065000
    ],
    [
        528310,
        153955000
    ],
    [
        528260,
        152900000
    ],
    [
        528250,
        152935000
    ],
    [
        528210,
        153050000
    ],
    [
        528200,
        153055000
    ],
    [
        528160,
        153505000
    ],
    [
        528130,
        153665000
    ],
    [
        528110,
        153915000
    ],
    [
        528070,
        154600000
    ],
    [
        528020,
        157000000
    ],
    [
        528010,
        156950000
    ],
    [
        527940,
        156100000
    ],
    [
        527920,
        156450000
    ],
    [
        527880,
        156500000
    ],
    [
        527830,
        156710000
    ],
    [
        527810,
        156680000
    ],
    [
        527780,
        156015000
    ],
    [
        527750,
        155485000
    ],
    [
        527690,
        154750000
    ],
    [
        527660,
        157220000
    ],
    [
        527640,
        155355000
    ],
    [
        527630,
        154100000
    ],
    [
        527590,
        153970000
    ],
    [
        527570,
        153410000
    ],
    [
        527500,
        153120000
    ],
    [
        527440,
        151620000
    ],
    [
        527330,
        151970000
    ],
    [
        527310,
        151410000
    ],
    [
        527260,
        150660000
    ],
    [
        527250,
        149535000
    ],
    [
        527190,
        149285000
    ],
    [
        527180,
        150050000
    ],
    [
        527160,
        149285000
    ],
    [
        527120,
        150790000
    ],
    [
        527060,
        150820000
    ],
    [
        527020,
        150900000
    ],
    [
        527000,
        150950000
    ],
    [
        526980,
        149120000
    ],
    [
        526930,
        149050000
    ],
    [
        526880,
        149130000
    ],
    [
        526870,
        149145000
    ],
    [
        526810,
        148645000
    ],
    [
        526760,
        150750000
    ],
    [
        526740,
        151500000
    ],
    [
        526690,
        150730000
    ],
    [
        526590,
        150670000
    ],
    [
        526500,
        150650000
    ],
    [
        526490,
        149300000
    ],
    [
        526420,
        149800000
    ],
    [
        526360,
        151400000
    ],
    [
        526300,
        150000000
    ],
    [
        526180,
        148990000
    ],
    [
        526050,
        152000000
    ],
    [
        525990,
        152300000
    ],
    [
        525980,
        152000000
    ],
    [
        525890,
        153680000
    ],
    [
        525860,
        152830000
    ],
    [
        525840,
        154200000
    ],
    [
        525730,
        155000000
    ],
    [
        525670,
        154000000
    ],
    [
        525610,
        155000000
    ],
    [
        525540,
        154000000
    ],
    [
        525500,
        154270000
    ],
    [
        525480,
        153000000
    ],
    [
        525420,
        150830000
    ],
    [
        525400,
        150900000
    ],
    [
        525360,
        152000000
    ],
    [
        525320,
        160000000
    ],
    [
        525270,
        160940000
    ],
    [
        525250,
        160240000
    ],
    [
        525230,
        158925000
    ],
    [
        525220,
        159165000
    ],
    [
        525170,
        160425000
    ],
    [
        525110,
        161425000
    ],
    [
        525100,
        160925000
    ],
    [
        524830,
        157850000
    ],
    [
        524420,
        157000000
    ],
    [
        524290,
        156000000
    ],
    [
        524250,
        156600000
    ],
    [
        524230,
        155750000
    ],
    [
        524180,
        155700000
    ],
    [
        524160,
        155350000
    ],
    [
        523970,
        155000000
    ],
    [
        523960,
        156000000
    ],
    [
        523920,
        155000000
    ],
    [
        523720,
        154730000
    ],
    [
        523650,
        154530000
    ],
    [
        523590,
        154330000
    ],
    [
        523460,
        154530000
    ],
    [
        523400,
        154230000
    ],
    [
        523210,
        154530000
    ],
    [
        523150,
        155230000
    ],
    [
        523090,
        154730000
    ],
    [
        522920,
        158080000
    ],
    [
        522710,
        160000000
    ],
    [
        522670,
        154460000
    ],
    [
        522650,
        153800000
    ],
    [
        522590,
        154000000
    ],
    [
        522520,
        153550000
    ],
    [
        522460,
        152300000
    ],
    [
        522450,
        153250000
    ],
    [
        522410,
        154250000
    ],
    [
        522390,
        154500000
    ],
    [
        522330,
        154100000
    ],
    [
        522300,
        161500000
    ],
    [
        522260,
        161700000
    ],
    [
        522200,
        161000000
    ],
    [
        522110,
        162000000
    ],
    [
        522070,
        162150000
    ],
    [
        522010,
        165100000
    ],
    [
        521950,
        164500000
    ],
    [
        521880,
        164650000
    ],
    [
        521820,
        165850000
    ],
    [
        521760,
        166700000
    ],
    [
        521700,
        164350000
    ],
    [
        521640,
        162750000
    ],
    [
        521570,
        162050000
    ],
    [
        521550,
        160755000
    ],
    [
        521520,
        161000000
    ],
    [
        521460,
        160510000
    ],
    [
        521410,
        166000000
    ],
    [
        521350,
        169640000
    ],
    [
        521290,
        166000000
    ],
    [
        521230,
        177000000
    ],
    [
        521100,
        179000000
    ],
    [
        520980,
        175370000
    ],
    [
        520970,
        174450000
    ],
    [
        520920,
        174000000
    ],
    [
        520840,
        176000000
    ],
    [
        520810,
        176385000
    ],
    [
        520770,
        173095000
    ],
    [
        518000,
        184579500
    ],
    [
        517960,
        184690000
    ],
    [
        517890,
        184469000
    ],
    [
        517830,
        186000000
    ],
    [
        517760,
        186970000
    ],
    [
        517750,
        188625000
    ],
    [
        517690,
        189250000
    ],
    [
        516600,
        198570000
    ],
    [
        516540,
        201000000
    ],
    [
        516470,
        200000000
    ],
    [
        516460,
        204720000
    ],
    [
        516390,
        206440000
    ],
    [
        516260,
        206500000
    ],
    [
        516210,
        206000000
    ],
    [
        516150,
        205000000
    ],
    [
        516080,
        207250000
    ],
    [
        516060,
        203000000
    ],
    [
        516020,
        207000000
    ],
    [
        515900,
        214000000
    ],
    [
        515890,
        214500000
    ],
    [
        515820,
        213700000
    ],
    [
        515760,
        213500000
    ],
    [
        515690,
        214000000
    ],
    [
        515630,
        215000000
    ],
    [
        515560,
        218000000
    ],
    [
        515540,
        217085000
    ],
    [
        515510,
        215500000
    ],
    [
        515500,
        216000000
    ],
    [
        515490,
        215000000
    ],
    [
        515430,
        218340000
    ],
    [
        515380,
        209000000
    ],
    [
        515370,
        212680000
    ],
    [
        515310,
        219000000
    ],
    [
        515240,
        220250000
    ],
    [
        515180,
        228000000
    ],
    [
        515160,
        211260000
    ],
    [
        515120,
        211010000
    ],
    [
        515110,
        212880000
    ],
    [
        515070,
        213365000
    ],
    [
        515050,
        211875000
    ],
    [
        515010,
        210190000
    ],
    [
        515000,
        211550000
    ],
    [
        514990,
        212360000
    ],
    [
        514930,
        228465000
    ],
    [
        514860,
        229860000
    ],
    [
        514810,
        220140000
    ],
    [
        514800,
        225000000
    ],
    [
        514780,
        238000000
    ],
    [
        514770,
        241280000
    ],
    [
        514760,
        243780000
    ],
    [
        514740,
        242530000
    ],
    [
        514690,
        248640000
    ],
    [
        514640,
        252640000
    ],
    [
        514360,
        241280000
    ],
    [
        514290,
        239640000
    ],
    [
        514260,
        238000000
    ],
    [
        514080,
        210500000
    ],
    [
        513970,
        182000000
    ],
    [
        513760,
        181000000
    ],
    [
        513560,
        180000000
    ],
    [
        513500,
        181000000
    ],
    [
        513460,
        180000000
    ],
    [
        513270,
        181000000
    ],
    [
        513240,
        177000000
    ],
    [
        513200,
        181000000
    ],
    [
        513170,
        178050000
    ],
    [
        513110,
        176135000
    ],
    [
        512890,
        174470000
    ],
    [
        511660,
        171470000
    ],
    [
        511460,
        168000000
    ],
    [
        511390,
        167500000
    ],
    [
        511330,
        167000000
    ],
    [
        511260,
        166500000
    ],
    [
        510590,
        169480000
    ],
    [
        510530,
        171980000
    ],
    [
        510460,
        174005000
    ],
    [
        510390,
        174035000
    ],
    [
        510330,
        172480000
    ],
    [
        510320,
        173865000
    ],
    [
        510260,
        174865000
    ],
    [
        510230,
        176365000
    ],
    [
        510140,
        176770000
    ],
    [
        510130,
        176630000
    ],
    [
        510110,
        176090000
    ],
    [
        510060,
        174960000
    ],
    [
        509990,
        174855000
    ],
    [
        509970,
        174915000
    ],
    [
        509930,
        174415000
    ],
    [
        509860,
        174330000
    ],
    [
        509800,
        173460000
    ],
    [
        509730,
        173000000
    ],
    [
        509670,
        178000000
    ],
    [
        509480,
        177500000
    ],
    [
        509420,
        171500000
    ],
    [
        509350,
        173655000
    ],
    [
        509280,
        173515000
    ],
    [
        509220,
        173615000
    ],
    [
        509150,
        173425000
    ],
    [
        509090,
        172000000
    ],
    [
        509060,
        171500000
    ],
    [
        505290,
        175635000
    ],
    [
        505230,
        175355000
    ],
    [
        503190,
        143085000
    ],
    [
        503120,
        155300000
    ],
    [
        502980,
        150085000
    ],
    [
        502910,
        149585000
    ],
    [
        502840,
        153585000
    ],
    [
        502770,
        152085000
    ],
    [
        502700,
        154085000
    ],
    [
        502630,
        153585000
    ],
    [
        502580,
        157695000
    ],
    [
        502510,
        157810000
    ],
    [
        502350,
        165940000
    ],
    [
        502340,
        168870000
    ],
    [
        502310,
        169350000
    ],
    [
        502240,
        171505000
    ],
    [
        502180,
        172375000
    ],
    [
        502160,
        159085000
    ],
    [
        502100,
        163715000
    ],
    [
        502030,
        153880000
    ],
    [
        501960,
        153665000
    ],
    [
        501900,
        152170000
    ],
    [
        501890,
        144495000
    ],
    [
        501820,
        144775000
    ],
    [
        501760,
        144180000
    ],
    [
        501690,
        150910000
    ],
    [
        501570,
        137410000
    ],
    [
        501550,
        145755000
    ],
    [
        501480,
        147365000
    ],
    [
        501410,
        139280000
    ],
    [
        501400,
        155410000
    ],
    [
        500460,
        132930000
    ],
    [
        500400,
        132810000
    ],
    [
        500390,
        134430000
    ],
    [
        500280,
        132860000
    ],
    [
        499780,
        132430000
    ],
    [
        499710,
        131495000
    ],
    [
        499640,
        131185000
    ],
    [
        499570,
        132000000
    ],
    [
        499400,
        132430000
    ],
    [
        499370,
        132000000
    ],
    [
        499360,
        131905000
    ],
    [
        499300,
        130280000
    ],
    [
        499230,
        130235000
    ],
    [
        499100,
        126905000
    ],
    [
        499090,
        125340000
    ],
    [
        499020,
        127840000
    ],
    [
        498880,
        128840000
    ],
    [
        496910,
        127870000
    ],
    [
        496840,
        127930000
    ],
    [
        496770,
        127620000
    ],
    [
        496700,
        128145000
    ],
    [
        496550,
        127920000
    ],
    [
        496510,
        127990000
    ],
    [
        496480,
        130390000
    ],
    [
        496410,
        130320000
    ],
    [
        496340,
        129320000
    ],
    [
        496270,
        129820000
    ],
    [
        496190,
        130820000
    ],
    [
        496130,
        130360000
    ],
    [
        496060,
        131410000
    ],
    [
        495920,
        130820000
    ],
    [
        495850,
        131320000
    ],
    [
        495770,
        131650000
    ],
    [
        495690,
        131930000
    ],
    [
        495620,
        131490000
    ],
    [
        495540,
        131565000
    ],
    [
        495470,
        133060000
    ],
    [
        495400,
        132850000
    ],
    [
        495390,
        130955000
    ],
    [
        495250,
        133870000
    ],
    [
        495180,
        134545000
    ],
    [
        495110,
        134285000
    ],
    [
        495040,
        134425000
    ],
    [
        494960,
        134255000
    ],
    [
        494890,
        134350000
    ],
    [
        494810,
        134340000
    ],
    [
        494740,
        128990000
    ],
    [
        494660,
        128925000
    ],
    [
        494590,
        130420000
    ],
    [
        494520,
        129175000
    ],
    [
        494440,
        125735000
    ],
    [
        494370,
        126465000
    ],
    [
        494290,
        124320000
    ],
    [
        494220,
        124860000
    ],
    [
        494140,
        125350000
    ],
    [
        494060,
        123025000
    ],
    [
        493990,
        120815000
    ],
    [
        493920,
        121315000
    ],
    [
        491930,
        134000000
    ],
    [
        491850,
        134410000
    ],
    [
        491770,
        134000000
    ],
    [
        491700,
        133480000
    ],
    [
        491600,
        134500000
    ],
    [
        490200,
        124000000
    ],
    [
        490080,
        123500000
    ],
    [
        485340,
        125000000
    ],
    [
        485160,
        133000000
    ],
    [
        485140,
        135635000
    ],
    [
        485070,
        143885000
    ],
    [
        484970,
        135635000
    ],
    [
        484780,
        138270000
    ],
    [
        484640,
        145000000
    ],
    [
        484590,
        142000000
    ],
    [
        484520,
        142090000
    ],
    [
        484460,
        142060000
    ],
    [
        484400,
        141290000
    ],
    [
        484330,
        141000000
    ],
    [
        484260,
        141300000
    ],
    [
        484250,
        141000000
    ],
    [
        484190,
        138270000
    ],
    [
        484120,
        139300000
    ],
    [
        484060,
        140000000
    ],
    [
        483940,
        138270000
    ],
    [
        483870,
        145000000
    ],
    [
        483810,
        149000000
    ],
    [
        483780,
        147000000
    ],
    [
        483770,
        148110000
    ],
    [
        483760,
        147000000
    ],
    [
        483750,
        148110000
    ],
    [
        483680,
        153500000
    ],
    [
        483610,
        150000000
    ],
    [
        483570,
        156000000
    ],
    [
        481770,
        160605000
    ],
    [
        481610,
        162605000
    ],
    [
        481540,
        164105000
    ],
    [
        481400,
        167605000
    ],
    [
        481250,
        162605000
    ],
    [
        481110,
        163105000
    ],
    [
        481040,
        163605000
    ],
    [
        480970,
        164105000
    ],
    [
        480900,
        165935000
    ],
    [
        480850,
        165990000
    ],
    [
        480790,
        166105000
    ],
    [
        480730,
        166730000
    ],
    [
        480670,
        164105000
    ],
    [
        480550,
        165105000
    ],
    [
        480540,
        166605000
    ],
    [
        480500,
        166345000
    ],
    [
        480380,
        169740000
    ],
    [
        480260,
        169480000
    ],
    [
        480120,
        164740000
    ],
    [
        480060,
        164080000
    ],
    [
        480000,
        164180000
    ],
    [
        479950,
        164010000
    ],
    [
        479880,
        162000000
    ],
    [
        479820,
        164740000
    ],
    [
        479790,
        162000000
    ],
    [
        479770,
        161065000
    ],
    [
        479700,
        161390000
    ],
    [
        479630,
        161005000
    ],
    [
        479550,
        161010000
    ],
    [
        479490,
        164355000
    ],
    [
        479430,
        164170000
    ],
    [
        479340,
        163925000
    ],
    [
        479200,
        163500000
    ],
    [
        479080,
        163925000
    ],
    [
        478980,
        166790000
    ],
    [
        478920,
        165040000
    ],
    [
        478780,
        167845000
    ],
    [
        478750,
        168085000
    ],
    [
        478640,
        169590000
    ],
    [
        478530,
        170000000
    ],
    [
        477900,
        169590000
    ],
    [
        477810,
        170000000
    ],
    [
        477770,
        168000000
    ],
    [
        477640,
        170000000
    ],
    [
        477620,
        164770000
    ],
    [
        477590,
        166065000
    ],
    [
        477560,
        166680000
    ],
    [
        477410,
        167680000
    ],
    [
        477390,
        169500000
    ],
    [
        477300,
        170000000
    ],
    [
        477260,
        169000000
    ],
    [
        477220,
        170000000
    ],
    [
        477180,
        168000000
    ],
    [
        477110,
        167360000
    ],
    [
        476710,
        168000000
    ],
    [
        476580,
        167360000
    ],
    [
        476430,
        168000000
    ],
    [
        476370,
        167360000
    ],
    [
        476270,
        168000000
    ],
    [
        476260,
        169000000
    ],
    [
        476200,
        170000000
    ],
    [
        476140,
        167360000
    ],
    [
        476130,
        168000000
    ],
    [
        476070,
        168875000
    ],
    [
        475960,
        170000000
    ],
    [
        473070,
        166705000
    ],
    [
        472910,
        179350000
    ],
    [
        472850,
        177850000
    ],
    [
        472620,
        172850000
    ],
    [
        472560,
        166200000
    ],
    [
        472490,
        169375000
    ],
    [
        472410,
        169390000
    ],
    [
        472290,
        172000000
    ],
    [
        472240,
        167205000
    ],
    [
        472180,
        167110000
    ],
    [
        472120,
        172850000
    ],
    [
        472060,
        169500000
    ],
    [
        472000,
        166245000
    ],
    [
        471950,
        166500000
    ],
    [
        471900,
        166125000
    ],
    [
        471780,
        166500000
    ],
    [
        471570,
        167000000
    ],
    [
        471540,
        169630000
    ],
    [
        471530,
        168315000
    ],
    [
        471480,
        167000000
    ],
    [
        471470,
        172500000
    ],
    [
        471460,
        174000000
    ],
    [
        471430,
        175000000
    ],
    [
        471380,
        173455000
    ],
    [
        471340,
        174000000
    ],
    [
        471170,
        176650000
    ],
    [
        471120,
        172475000
    ],
    [
        470980,
        175000000
    ],
    [
        470920,
        174500000
    ],
    [
        470740,
        174000000
    ],
    [
        470720,
        172000000
    ],
    [
        470680,
        171750000
    ],
    [
        470670,
        172375000
    ],
    [
        470620,
        172000000
    ],
    [
        470600,
        172500000
    ],
    [
        470560,
        173000000
    ],
    [
        470520,
        172000000
    ],
    [
        470510,
        171500000
    ],
    [
        470500,
        173000000
    ],
    [
        470470,
        172500000
    ],
    [
        470390,
        175495000
    ],
    [
        470380,
        174630000
    ],
    [
        470330,
        173000000
    ],
    [
        470310,
        178850000
    ],
    [
        470080,
        174990000
    ],
    [
        470020,
        174350000
    ],
    [
        469910,
        174990000
    ],
    [
        469850,
        169380000
    ],
    [
        469800,
        169910000
    ],
    [
        469750,
        169900000
    ],
    [
        469540,
        174990000
    ],
    [
        469520,
        169995000
    ],
    [
        469500,
        166500000
    ],
    [
        469430,
        165000000
    ],
    [
        469360,
        162500000
    ],
    [
        469340,
        157500000
    ],
    [
        469310,
        157000000
    ],
    [
        469230,
        158000000
    ],
    [
        469180,
        155000000
    ],
    [
        469170,
        154000000
    ],
    [
        469120,
        149005000
    ],
    [
        469090,
        149720000
    ],
    [
        468890,
        151500000
    ],
    [
        468840,
        151675000
    ],
    [
        468790,
        151575000
    ],
    [
        468680,
        151500000
    ],
    [
        468620,
        151770000
    ],
    [
        468570,
        151500000
    ],
    [
        468510,
        151740000
    ],
    [
        468450,
        151795000
    ],
    [
        468400,
        151500000
    ],
    [
        468350,
        152545000
    ],
    [
        468320,
        151500000
    ],
    [
        468300,
        149845000
    ],
    [
        468260,
        149000000
    ],
    [
        468210,
        148000000
    ],
    [
        468060,
        154400000
    ],
    [
        468000,
        155000000
    ],
    [
        467980,
        156000000
    ],
    [
        467940,
        155520000
    ],
    [
        467910,
        155840000
    ],
    [
        467900,
        155090000
    ],
    [
        467880,
        155590000
    ],
    [
        467830,
        154190000
    ],
    [
        467780,
        154105000
    ],
    [
        467740,
        154500000
    ],
    [
        467690,
        154000000
    ],
    [
        467640,
        155905000
    ],
    [
        467590,
        156250000
    ],
    [
        467540,
        154500000
    ],
    [
        467250,
        156250000
    ],
    [
        467220,
        154750000
    ],
    [
        467180,
        154860000
    ],
    [
        467140,
        152365000
    ],
    [
        467100,
        154500000
    ],
    [
        467090,
        155000000
    ],
    [
        467020,
        156500000
    ],
    [
        466900,
        153000000
    ],
    [
        466890,
        160000000
    ],
    [
        466880,
        161450000
    ],
    [
        466850,
        162950000
    ],
    [
        466810,
        160000000
    ],
    [
        466790,
        156500000
    ],
    [
        466740,
        158000000
    ],
    [
        466680,
        161490000
    ],
    [
        466630,
        161500000
    ],
    [
        466620,
        163500000
    ],
    [
        466580,
        163000000
    ],
    [
        466540,
        160420000
    ],
    [
        466450,
        163000000
    ],
    [
        466420,
        161650000
    ],
    [
        466370,
        161560000
    ],
    [
        466330,
        161660000
    ],
    [
        466290,
        162000000
    ],
    [
        466240,
        161275000
    ],
    [
        466190,
        155980000
    ],
    [
        466150,
        151590000
    ],
    [
        466130,
        151595000
    ],
    [
        466110,
        151555000
    ],
    [
        466090,
        162500000
    ],
    [
        466070,
        154135000
    ],
    [
        466040,
        154400000
    ],
    [
        466010,
        151880000
    ],
    [
        465980,
        151320000
    ],
    [
        465960,
        151505000
    ],
    [
        465810,
        152500000
    ],
    [
        465760,
        152000000
    ],
    [
        465720,
        150500000
    ],
    [
        465610,
        150000000
    ],
    [
        465560,
        149975000
    ],
    [
        465480,
        145205000
    ],
    [
        465440,
        149905000
    ],
    [
        465400,
        149845000
    ],
    [
        465370,
        149810000
    ],
    [
        465360,
        150000000
    ],
    [
        465330,
        149200000
    ],
    [
        465150,
        150000000
    ],
    [
        465120,
        155000000
    ],
    [
        465080,
        148410000
    ],
    [
        465010,
        149000000
    ],
    [
        464960,
        155000000
    ],
    [
        464930,
        149000000
    ],
    [
        464910,
        151000000
    ],
    [
        464880,
        152000000
    ],
    [
        464850,
        149000000
    ],
    [
        464840,
        150500000
    ],
    [
        464830,
        150205000
    ],
    [
        464790,
        152000000
    ],
    [
        464740,
        152930000
    ],
    [
        464690,
        153000000
    ],
    [
        464630,
        153100000
    ],
    [
        464460,
        152000000
    ],
    [
        464410,
        156000000
    ],
    [
        464370,
        158020000
    ],
    [
        464350,
        161000000
    ],
    [
        464320,
        161500000
    ],
    [
        464270,
        162000000
    ],
    [
        464220,
        160175000
    ],
    [
        464170,
        159605000
    ],
    [
        464130,
        152725000
    ],
    [
        464100,
        152650000
    ],
    [
        464090,
        153000000
    ],
    [
        464050,
        152050000
    ],
    [
        464030,
        152000000
    ],
    [
        464020,
        154600000
    ],
    [
        463980,
        163500000
    ],
    [
        463860,
        160100000
    ],
    [
        463830,
        164000000
    ],
    [
        463770,
        166000000
    ],
    [
        463650,
        168540000
    ],
    [
        463600,
        169000000
    ],
    [
        463550,
        165520000
    ],
    [
        463510,
        168470000
    ],
    [
        463460,
        165550000
    ],
    [
        463420,
        167720000
    ],
    [
        463370,
        169000000
    ],
    [
        463320,
        167360000
    ],
    [
        463260,
        158200000
    ],
    [
        463170,
        160470000
    ],
    [
        463130,
        158200000
    ],
    [
        463090,
        158750000
    ],
    [
        463030,
        158200000
    ],
    [
        463010,
        163555000
    ],
    [
        462950,
        164325000
    ],
    [
        462900,
        166120000
    ],
    [
        462840,
        167000000
    ],
    [
        462830,
        168600000
    ],
    [
        462780,
        166600000
    ],
    [
        462770,
        165410000
    ],
    [
        462560,
        160970000
    ],
    [
        462510,
        159950000
    ],
    [
        462460,
        169470000
    ],
    [
        462440,
        171470000
    ],
    [
        462170,
        159000000
    ],
    [
        462130,
        157000000
    ],
    [
        462030,
        159000000
    ],
    [
        461990,
        158000000
    ],
    [
        461960,
        157000000
    ],
    [
        461860,
        160000000
    ],
    [
        461850,
        164000000
    ],
    [
        461800,
        163500000
    ],
    [
        461750,
        164000000
    ],
    [
        461660,
        164100000
    ],
    [
        461630,
        163500000
    ],
    [
        461610,
        161800000
    ],
    [
        461560,
        161000000
    ],
    [
        461550,
        161800000
    ],
    [
        461520,
        163600000
    ],
    [
        461470,
        160000000
    ],
    [
        461430,
        159600000
    ],
    [
        461410,
        166000000
    ],
    [
        461380,
        168200000
    ],
    [
        461340,
        167000000
    ],
    [
        461300,
        166000000
    ],
    [
        461250,
        165100000
    ],
    [
        461210,
        165190000
    ],
    [
        461150,
        165140000
    ],
    [
        461110,
        166340000
    ],
    [
        461100,
        165600000
    ],
    [
        461040,
        165740000
    ],
    [
        461010,
        168200000
    ],
    [
        460970,
        165740000
    ],
    [
        460940,
        168200000
    ],
    [
        460920,
        166000000
    ],
    [
        460890,
        168200000
    ],
    [
        460860,
        172380000
    ],
    [
        460850,
        173690000
    ],
    [
        460810,
        177330000
    ],
    [
        460770,
        174090000
    ],
    [
        460750,
        175040000
    ],
    [
        460720,
        178415000
    ],
    [
        460700,
        177915000
    ],
    [
        460650,
        178290000
    ],
    [
        460610,
        178000000
    ],
    [
        460600,
        178015000
    ],
    [
        460570,
        176975000
    ],
    [
        460560,
        178000000
    ],
    [
        460510,
        183500000
    ],
    [
        460500,
        192285000
    ],
    [
        460460,
        193570000
    ],
    [
        460400,
        195000000
    ],
    [
        460290,
        189000000
    ],
    [
        460260,
        187970000
    ],
    [
        460170,
        193000000
    ],
    [
        460120,
        188000000
    ],
    [
        460070,
        188830000
    ],
    [
        459980,
        182000000
    ],
    [
        459970,
        184000000
    ],
    [
        459880,
        185000000
    ],
    [
        459820,
        184000000
    ],
    [
        459760,
        191000000
    ],
    [
        459740,
        189840000
    ],
    [
        459710,
        185920000
    ],
    [
        459680,
        179000000
    ],
    [
        459650,
        183000000
    ],
    [
        459610,
        188000000
    ],
    [
        459600,
        185570000
    ],
    [
        459540,
        191950000
    ],
    [
        459490,
        178070000
    ],
    [
        459440,
        199495000
    ],
    [
        459400,
        190935000
    ],
    [
        459390,
        198000000
    ],
    [
        459380,
        192500000
    ],
    [
        459370,
        189000000
    ],
    [
        459320,
        182100000
    ],
    [
        459270,
        165470000
    ],
    [
        459200,
        173600000
    ],
    [
        456930,
        171500000
    ],
    [
        456850,
        168500000
    ],
    [
        456790,
        168000000
    ],
    [
        456500,
        163500000
    ],
    [
        456470,
        160000000
    ],
    [
        456420,
        159900000
    ],
    [
        456400,
        161750000
    ],
    [
        456360,
        159950000
    ],
    [
        456320,
        161000000
    ],
    [
        456310,
        161390000
    ],
    [
        456240,
        161115000
    ],
    [
        456230,
        161000000
    ],
    [
        456140,
        160000000
    ],
    [
        456120,
        159900000
    ],
    [
        456080,
        159880000
    ],
    [
        456040,
        147740000
    ],
    [
        456010,
        151000000
    ],
    [
        455990,
        150500000
    ],
    [
        455960,
        150000000
    ],
    [
        455900,
        136900000
    ],
    [
        455890,
        123800000
    ],
    [
        455600,
        124065000
    ],
    [
        455440,
        122185000
    ],
    [
        455410,
        124330000
    ],
    [
        455400,
        124065000
    ],
    [
        455390,
        123035000
    ],
    [
        455140,
        122185000
    ],
    [
        455130,
        121135000
    ],
    [
        455100,
        122635000
    ],
    [
        455040,
        124065000
    ],
    [
        455020,
        123035000
    ],
    [
        454990,
        122900000
    ],
    [
        454980,
        115935000
    ],
    [
        454940,
        115435000
    ],
    [
        454830,
        109935000
    ],
    [
        454820,
        109870000
    ],
    [
        454510,
        90000000
    ],
    [
        454440,
        86933000
    ],
    [
        454220,
        81933000
    ],
    [
        454160,
        80055000
    ],
    [
        454100,
        79930000
    ],
    [
        454030,
        81933000
    ],
    [
        454010,
        79851600
    ],
    [
        453980,
        79701600
    ],
    [
        453930,
        79851600
    ],
    [
        453870,
        79846600
    ],
    [
        453860,
        79696600
    ],
    [
        453830,
        77345000
    ],
    [
        453740,
        72125000
    ],
    [
        453710,
        69600100
    ],
    [
        453700,
        69250000
    ],
    [
        453670,
        68875100
    ],
    [
        453200,
        67800000
    ],
    [
        453160,
        67598700
    ],
    [
        453140,
        67299350
    ],
    [
        453080,
        67245000
    ],
    [
        453050,
        67014150
    ],
    [
        452970,
        66800000
    ],
    [
        452930,
        65329900
    ],
    [
        452890,
        65434250
    ],
    [
        452850,
        65355000
    ],
    [
        452810,
        65290000
    ],
    [
        452800,
        65391300
    ],
    [
        452750,
        65395000
    ],
    [
        452690,
        65000000
    ],
    [
        452660,
        64923200
    ],
    [
        450460,
        62450000
    ],
    [
        450430,
        61775200
    ],
    [
        450380,
        60947350
    ],
    [
        450350,
        60831700
    ],
    [
        450290,
        60838200
    ],
    [
        450280,
        60865950
    ],
    [
        450220,
        60930950
    ],
    [
        450180,
        60677500
    ],
    [
        450170,
        60490950
    ],
    [
        450130,
        60518100
    ],
    [
        450090,
        60000000
    ],
    [
        450040,
        62249500
    ],
    [
        450010,
        61969400
    ],
    [
        449990,
        61801300
    ],
    [
        449940,
        62483900
    ],
    [
        449920,
        61409800
    ],
    [
        449860,
        61265700
    ],
    [
        449840,
        61707000
    ],
    [
        449770,
        62900000
    ],
    [
        449740,
        63750000
    ],
    [
        449710,
        61930000
    ],
    [
        449690,
        61877200
    ],
    [
        449680,
        60938600
    ],
    [
        449620,
        60000000
    ],
    [
        449610,
        60650000
    ],
    [
        449550,
        60819050
    ],
    [
        449490,
        60400750
    ],
    [
        449430,
        60119250
    ],
    [
        449370,
        60171200
    ],
    [
        449310,
        60457650
    ],
    [
        449300,
        60442650
    ],
    [
        449260,
        60313200
    ],
    [
        449200,
        60487750
    ],
    [
        449140,
        60135100
    ],
    [
        449120,
        60099550
    ],
    [
        449080,
        61099550
    ],
    [
        448940,
        62910000
    ],
    [
        448870,
        62000000
    ],
    [
        448860,
        61930000
    ],
    [
        448810,
        62910000
    ],
    [
        448760,
        61000000
    ],
    [
        448750,
        60797400
    ],
    [
        448690,
        60514800
    ],
    [
        448570,
        62000000
    ],
    [
        448510,
        59850000
    ],
    [
        448440,
        59990000
    ],
    [
        448390,
        60440000
    ],
    [
        448300,
        62000000
    ],
    [
        448240,
        60341550
    ],
    [
        448180,
        60900000
    ],
    [
        448120,
        60266050
    ],
    [
        448060,
        58710900
    ],
    [
        448010,
        58675000
    ],
    [
        447990,
        58587600
    ],
    [
        447960,
        58638250
    ],
    [
        447910,
        59007550
    ],
    [
        447890,
        60392550
    ],
    [
        447850,
        56751600
    ],
    [
        447800,
        55858800
    ],
    [
        447750,
        55739900
    ],
    [
        447690,
        58713200
    ],
    [
        447630,
        58435000
    ],
    [
        447580,
        58580000
    ],
    [
        447570,
        56150000
    ],
    [
        447520,
        57485000
    ],
    [
        447460,
        58200000
    ],
    [
        447410,
        57185000
    ],
    [
        447350,
        59197400
    ],
    [
        447290,
        56782950
    ],
    [
        447230,
        56920000
    ],
    [
        447150,
        61400000
    ],
    [
        447130,
        57209700
    ],
    [
        447050,
        61400000
    ],
    [
        446940,
        57209700
    ],
    [
        446880,
        56448300
    ],
    [
        446820,
        57209700
    ],
    [
        446780,
        55210000
    ],
    [
        446720,
        55000000
    ],
    [
        446670,
        55600000
    ],
    [
        446400,
        57209700
    ],
    [
        446340,
        55320000
    ],
    [
        446280,
        55000000
    ],
    [
        446220,
        55180000
    ],
    [
        446210,
        57209700
    ],
    [
        446050,
        57300000
    ],
    [
        445930,
        57209700
    ],
    [
        445920,
        55000000
    ],
    [
        445900,
        54655000
    ],
    [
        445870,
        54310000
    ],
    [
        445810,
        52750000
    ],
    [
        445690,
        55070000
    ],
    [
        445650,
        55005000
    ],
    [
        445590,
        55020000
    ],
    [
        445530,
        53970000
    ],
    [
        445490,
        53755000
    ],
    [
        445440,
        53655000
    ],
    [
        445400,
        53620000
    ],
    [
        445340,
        53550000
    ],
    [
        445290,
        57154850
    ],
    [
        445230,
        56934850
    ],
    [
        445190,
        55497550
    ],
    [
        445150,
        53835000
    ],
    [
        445100,
        53985000
    ],
    [
        445040,
        53525000
    ],
    [
        444970,
        54485000
    ],
    [
        444940,
        54465000
    ],
    [
        444870,
        54495000
    ],
    [
        444810,
        54370000
    ],
    [
        444680,
        56054850
    ],
    [
        444630,
        56414850
    ],
    [
        443230,
        49655850
    ],
    [
        443220,
        48410000
    ],
    [
        443170,
        47990000
    ],
    [
        443110,
        47971400
    ],
    [
        443040,
        48420000
    ],
    [
        442980,
        47665000
    ],
    [
        442920,
        47645000
    ],
    [
        442850,
        47590000
    ],
    [
        442800,
        47645000
    ],
    [
        442750,
        47191200
    ],
    [
        442690,
        47935000
    ],
    [
        442630,
        48880350
    ],
    [
        442570,
        48420000
    ],
    [
        442510,
        48170000
    ],
    [
        442450,
        47945000
    ],
    [
        442390,
        48010000
    ],
    [
        442330,
        48005000
    ],
    [
        442280,
        47942050
    ],
    [
        441860,
        48883450
    ],
    [
        440620,
        47995000
    ],
    [
        440610,
        48000000
    ],
    [
        440550,
        48590000
    ],
    [
        440510,
        48600000
    ],
    [
        440490,
        48980000
    ],
    [
        440470,
        51000000
    ],
    [
        440440,
        51500000
    ],
    [
        439380,
        52000000
    ],
    [
        439340,
        55000000
    ],
    [
        439310,
        53500000
    ],
    [
        439260,
        56558100
    ],
    [
        439210,
        56714050
    ],
    [
        439170,
        52235000
    ],
    [
        439140,
        58551300
    ],
    [
        439110,
        52848150
    ],
    [
        439090,
        48658200
    ],
    [
        438970,
        44030000
    ],
    [
        438940,
        44849600
    ],
    [
        438880,
        42765000
    ],
    [
        438690,
        44451200
    ],
    [
        438640,
        44390000
    ],
    [
        438630,
        44435000
    ],
    [
        438570,
        44434500
    ],
    [
        438400,
        44451200
    ],
    [
        438360,
        41902650
    ],
    [
        438340,
        42225300
    ],
    [
        438280,
        41863000
    ],
    [
        438220,
        42111300
    ],
    [
        438160,
        44850900
    ],
    [
        438100,
        45000000
    ],
    [
        438060,
        44030000
    ],
    [
        438020,
        44872400
    ],
    [
        437980,
        42973600
    ],
    [
        437950,
        44700000
    ],
    [
        437920,
        44613900
    ],
    [
        437910,
        44601200
    ],
    [
        437860,
        44600000
    ],
    [
        437800,
        45040000
    ],
    [
        437750,
        44600200
    ],
    [
        437740,
        45380000
    ],
    [
        437620,
        44690000
    ],
    [
        437540,
        43750000
    ],
    [
        437100,
        43500000
    ],
    [
        437040,
        42960000
    ],
    [
        437020,
        42592000
    ],
    [
        436860,
        42141000
    ],
    [
        436820,
        42776000
    ],
    [
        436800,
        42141000
    ],
    [
        436740,
        41597750
    ],
    [
        436700,
        41677550
    ],
    [
        436690,
        41542600
    ],
    [
        436630,
        41555050
    ],
    [
        436570,
        41570000
    ],
    [
        436510,
        41540500
    ],
    [
        436500,
        41536100
    ],
    [
        436460,
        41671050
    ],
    [
        436400,
        41612450
    ],
    [
        436340,
        41895100
    ],
    [
        436280,
        41610000
    ],
    [
        436220,
        41804800
    ],
    [
        436180,
        41778150
    ],
    [
        436150,
        41720000
    ],
    [
        436090,
        41600450
    ],
    [
        435960,
        41720000
    ],
    [
        435890,
        41673350
    ],
    [
        435830,
        41667750
    ],
    [
        435770,
        41705750
    ],
    [
        435700,
        41720000
    ],
    [
        435640,
        41535800
    ],
    [
        435580,
        41650750
    ],
    [
        435550,
        41720000
    ],
    [
        435520,
        41760600
    ],
    [
        435450,
        41775550
    ],
    [
        435390,
        41681950
    ],
    [
        435360,
        41780000
    ],
    [
        435170,
        41750000
    ],
    [
        435010,
        41720000
    ],
    [
        435000,
        41460000
    ],
    [
        434950,
        41470000
    ],
    [
        434930,
        41510000
    ],
    [
        434920,
        41280000
    ],
    [
        434890,
        41658800
    ],
    [
        434840,
        41109000
    ],
    [
        434830,
        41688000
    ],
    [
        434770,
        41530500
    ],
    [
        434700,
        41617800
    ],
    [
        434640,
        43440000
    ],
    [
        434580,
        40410000
    ],
    [
        433930,
        40400000
    ],
    [
        433800,
        43000000
    ],
    [
        433670,
        40400000
    ],
    [
        433660,
        40329400
    ],
    [
        433640,
        40264700
    ],
    [
        433610,
        41064700
    ],
    [
        433600,
        42038050
    ],
    [
        433570,
        41800000
    ],
    [
        433520,
        41041700
    ],
    [
        433510,
        40649800
    ],
    [
        433380,
        41800000
    ],
    [
        433220,
        42150000
    ],
    [
        433150,
        42404400
    ],
    [
        432970,
        42150000
    ],
    [
        432900,
        42837700
    ],
    [
        432830,
        43777900
    ],
    [
        432770,
        43424800
    ],
    [
        432740,
        43500000
    ],
    [
        432710,
        43308450
    ],
    [
        432690,
        43097350
    ],
    [
        430600,
        39465000
    ],
    [
        430550,
        39325000
    ],
    [
        430480,
        38935000
    ],
    [
        430420,
        38062400
    ],
    [
        430350,
        38151950
    ],
    [
        430290,
        37984800
    ],
    [
        430220,
        38037750
    ],
    [
        430150,
        38003800
    ],
    [
        430090,
        37958300
    ],
    [
        430020,
        38006100
    ],
    [
        429960,
        37973950
    ],
    [
        429900,
        38110900
    ],
    [
        429840,
        37812200
    ],
    [
        429780,
        38800000
    ],
    [
        429720,
        38730000
    ],
    [
        429650,
        38677550
    ],
    [
        429590,
        38475000
    ],
    [
        429560,
        38495000
    ],
    [
        429550,
        38340000
    ],
    [
        429540,
        38650000
    ],
    [
        429520,
        38824900
    ],
    [
        429370,
        39700000
    ],
    [
        429330,
        39750000
    ],
    [
        429260,
        39832250
    ],
    [
        429200,
        39644200
    ],
    [
        429150,
        39645550
    ],
    [
        429130,
        39500000
    ],
    [
        429100,
        39800000
    ],
    [
        429030,
        37500000
    ],
    [
        428420,
        37850000
    ],
    [
        428380,
        36836850
    ],
    [
        428370,
        36270000
    ],
    [
        428310,
        37240000
    ],
    [
        428140,
        37400000
    ],
    [
        428110,
        37486400
    ],
    [
        428080,
        37493200
    ],
    [
        428020,
        37519550
    ],
    [
        427960,
        39014650
    ],
    [
        427920,
        39506850
    ],
    [
        427860,
        39556950
    ],
    [
        427750,
        37850000
    ],
    [
        427640,
        39100000
    ],
    [
        427500,
        39500000
    ],
    [
        427310,
        40225000
    ],
    [
        427250,
        40255850
    ],
    [
        427180,
        40321650
    ],
    [
        427120,
        40225000
    ],
    [
        427060,
        40252950
    ],
    [
        426990,
        40317950
    ],
    [
        426910,
        40225000
    ],
    [
        426690,
        40000000
    ],
    [
        426470,
        40450000
    ],
    [
        426450,
        40580000
    ],
    [
        426400,
        40500000
    ],
    [
        426360,
        40300000
    ],
    [
        426350,
        40158300
    ],
    [
        426320,
        40130800
    ],
    [
        426300,
        39508300
    ],
    [
        426280,
        39622500
    ],
    [
        426230,
        37099300
    ],
    [
        426220,
        38139550
    ],
    [
        426210,
        38220000
    ],
    [
        426160,
        37690000
    ],
    [
        426050,
        39000000
    ],
    [
        425970,
        38875000
    ],
    [
        425900,
        37575550
    ],
    [
        425840,
        37610000
    ],
    [
        425770,
        38007650
    ],
    [
        425700,
        37930100
    ],
    [
        425660,
        38077700
    ],
    [
        425590,
        38047950
    ],
    [
        425530,
        38008250
    ],
    [
        425480,
        38124750
    ],
    [
        425310,
        37500000
    ],
    [
        425280,
        36825000
    ],
    [
        425250,
        35875000
    ],
    [
        425220,
        35600000
    ],
    [
        425160,
        35620000
    ],
    [
        425030,
        35600000
    ],
    [
        424940,
        36150000
    ],
    [
        424880,
        35600000
    ],
    [
        424820,
        35530000
    ],
    [
        424790,
        35600000
    ],
    [
        424770,
        35875000
    ],
    [
        424740,
        36150000
    ],
    [
        424600,
        38000000
    ],
    [
        424560,
        39350000
    ],
    [
        423690,
        39525000
    ],
    [
        423630,
        40154800
    ],
    [
        423450,
        39700000
    ],
    [
        423330,
        40620050
    ],
    [
        417800,
        42395000
    ],
    [
        417610,
        41790000
    ],
    [
        417310,
        40500000
    ],
    [
        417290,
        40440000
    ],
    [
        417270,
        39379800
    ],
    [
        416630,
        39100000
    ],
    [
        416350,
        39050000
    ],
    [
        416320,
        39189900
    ],
    [
        416160,
        39720000
    ],
    [
        416100,
        40020000
    ],
    [
        414440,
        39410000
    ],
    [
        414300,
        40500000
    ],
    [
        413860,
        40780000
    ],
    [
        413560,
        41000000
    ],
    [
        413420,
        40500000
    ],
    [
        413360,
        39820000
    ],
    [
        413190,
        40160000
    ],
    [
        413150,
        41065000
    ],
    [
        413100,
        41630000
    ],
    [
        412990,
        41743000
    ],
    [
        410150,
        46450000
    ],
    [
        408970,
        46500000
    ],
    [
        408810,
        47000000
    ],
    [
        407200,
        47500000
    ],
    [
        406970,
        47750000
    ],
    [
        406060,
        47630000
    ],
    [
        406010,
        47310950
    ],
    [
        405970,
        47560950
    ],
    [
        405670,
        47500000
    ],
    [
        404580,
        46450000
    ],
    [
        404570,
        45468950
    ],
    [
        404390,
        45400000
    ],
    [
        399920,
        48663150
    ],
    [
        399690,
        47794400
    ],
    [
        399340,
        49905000
    ],
    [
        399080,
        49500000
    ],
    [
        398910,
        49610000
    ],
    [
        398850,
        49500000
    ],
    [
        398720,
        49720000
    ],
    [
        398610,
        49500000
    ],
    [
        398450,
        48240000
    ],
    [
        398430,
        48870000
    ],
    [
        397730,
        48240000
    ],
    [
        397540,
        49000000
    ],
    [
        397440,
        48240000
    ],
    [
        397330,
        45376500
    ],
    [
        397140,
        45686500
    ],
    [
        396950,
        47830000
    ],
    [
        396920,
        52900000
    ],
    [
        396380,
        45960000
    ],
    [
        396340,
        46440000
    ],
    [
        396330,
        46490000
    ],
    [
        396210,
        46200000
    ],
    [
        396200,
        56105100
    ],
    [
        396040,
        56802550
    ],
    [
        396030,
        56105100
    ],
    [
        395950,
        52552550
    ],
    [
        395910,
        56105100
    ],
    [
        395710,
        51805800
    ],
    [
        395420,
        51420000
    ],
    [
        395360,
        49606100
    ],
    [
        394730,
        49352200
    ],
    [
        394710,
        49176100
    ],
    [
        394640,
        48952250
    ],
    [
        394540,
        49000000
    ],
    [
        394220,
        49873350
    ],
    [
        394200,
        49886700
    ],
    [
        393980,
        49938350
    ],
    [
        393950,
        49995000
    ],
    [
        393250,
        50000000
    ],
    [
        393240,
        49010000
    ],
    [
        393080,
        48020000
    ],
    [
        393000,
        47510000
    ],
    [
        392820,
        47695000
    ],
    [
        392800,
        46628500
    ],
    [
        392670,
        46569250
    ],
    [
        389360,
        48443450
    ],
    [
        389280,
        48920000
    ],
    [
        389260,
        48940000
    ],
    [
        389010,
        49149500
    ],
    [
        388890,
        49359000
    ],
    [
        388420,
        49800000
    ],
    [
        388150,
        49845000
    ],
    [
        387970,
        49500000
    ],
    [
        386930,
        47930000
    ],
    [
        386920,
        43550000
    ],
    [
        386800,
        43275000
    ],
    [
        386790,
        43000000
    ],
    [
        386610,
        43500000
    ],
    [
        386340,
        43018500
    ],
    [
        386280,
        43050000
    ],
    [
        386270,
        43100000
    ],
    [
        385560,
        43050000
    ],
    [
        385390,
        43100000
    ],
    [
        385380,
        44470000
    ],
    [
        385340,
        43610000
    ],
    [
        385220,
        44940000
    ],
    [
        385170,
        42280000
    ],
    [
        385010,
        42040700
    ],
    [
        384990,
        42280000
    ],
    [
        384980,
        44940000
    ],
    [
        384860,
        45020000
    ],
    [
        384490,
        45120000
    ],
    [
        384450,
        45140000
    ],
    [
        384110,
        45755000
    ],
    [
        384010,
        44931450
    ],
    [
        384000,
        44722900
    ],
    [
        383990,
        45546450
    ],
    [
        383860,
        46435000
    ],
    [
        383720,
        46640700
    ],
    [
        383630,
        46435000
    ],
    [
        383620,
        46156300
    ],
    [
        382450,
        42259900
    ],
    [
        382390,
        42465000
    ],
    [
        382280,
        39810000
    ],
    [
        382150,
        38020000
    ],
    [
        381700,
        38620000
    ],
    [
        380850,
        46000000
    ],
    [
        380830,
        45740000
    ],
    [
        380790,
        45620000
    ],
    [
        380770,
        45272500
    ],
    [
        380690,
        44850000
    ],
    [
        380630,
        44485000
    ],
    [
        380040,
        44800000
    ],
    [
        379990,
        44485000
    ],
    [
        379700,
        44800000
    ],
    [
        379690,
        44900000
    ],
    [
        379520,
        44850000
    ],
    [
        379450,
        44800000
    ],
    [
        379440,
        42800000
    ],
    [
        379420,
        38340000
    ],
    [
        378270,
        35740000
    ],
    [
        378260,
        35870000
    ],
    [
        378150,
        35740000
    ],
    [
        378100,
        35680000
    ],
    [
        378050,
        35500000
    ],
    [
        378000,
        30120000
    ],
    [
        377950,
        30240000
    ],
    [
        377510,
        30000000
    ],
    [
        377290,
        30240000
    ],
    [
        377250,
        31000000
    ],
    [
        377040,
        31450000
    ],
    [
        377010,
        31850000
    ],
    [
        376890,
        31900000
    ],
    [
        376830,
        31965000
    ],
    [
        376470,
        33145000
    ],
    [
        376410,
        32945000
    ],
    [
        376110,
        33695000
    ],
    [
        375970,
        34390000
    ],
    [
        375920,
        34500000
    ],
    [
        375900,
        34445000
    ],
    [
        375880,
        34070000
    ],
    [
        375850,
        33750000
    ],
    [
        375820,
        32160000
    ],
    [
        375750,
        32080000
    ],
    [
        375520,
        32160000
    ],
    [
        374800,
        35000000
    ],
    [
        374790,
        35050000
    ],
    [
        374780,
        35605000
    ],
    [
        374770,
        32635000
    ],
    [
        374610,
        30170000
    ],
    [
        374590,
        30200000
    ],
    [
        374570,
        30250000
    ],
    [
        374530,
        30225000
    ],
    [
        374470,
        36625000
    ],
    [
        374460,
        43500000
    ],
    [
        374440,
        44900000
    ],
    [
        374430,
        44825000
    ],
    [
        374420,
        43500000
    ],
    [
        371110,
        30616400
    ],
    [
        370660,
        30000000
    ],
    [
        370650,
        29975000
    ],
    [
        370620,
        29565000
    ],
    [
        370580,
        29145000
    ],
    [
        370510,
        29427500
    ],
    [
        370500,
        29837500
    ],
    [
        369680,
        30000000
    ],
    [
        369630,
        30250000
    ],
    [
        369590,
        30750000
    ],
    [
        369450,
        31000000
    ],
    [
        369380,
        31150000
    ],
    [
        369370,
        30180000
    ],
    [
        369270,
        30090000
    ],
    [
        369260,
        29000000
    ],
    [
        369190,
        27840000
    ],
    [
        368560,
        27680000
    ],
    [
        368550,
        27620000
    ],
    [
        368470,
        27590000
    ],
    [
        368420,
        27570000
    ],
    [
        368360,
        27560000
    ],
    [
        368350,
        27500000
    ],
    [
        368340,
        27560000
    ],
    [
        368210,
        27500000
    ],
    [
        368160,
        27190000
    ],
    [
        368100,
        27189000
    ],
    [
        368020,
        26650000
    ],
    [
        368010,
        26800000
    ],
    [
        367210,
        27050000
    ],
    [
        366760,
        26800000
    ],
    [
        366700,
        26795000
    ],
    [
        366690,
        26790000
    ],
    [
        366670,
        26950000
    ],
    [
        366660,
        27364900
    ],
    [
        366650,
        27425000
    ],
    [
        366350,
        27721000
    ]
]
},{}],127:[function(require,module,exports){
const data = require('./prices.json')

const latestBlock = data[0][0]
const oldestBlock = data[data.length - 1][0]

const getPrice = (block) => {
    console.log("getPrice " + block)
    if (block < oldestBlock || block > latestBlock) {
        throw new RangeError("block not in prices.json")
    }

    const match = data.find(([_block, _price]) => _block < block)
    return match[1] / 100000000.0
}

module.exports = getPrice
},{"./prices.json":126}],128:[function(require,module,exports){
const moment = require('moment-timezone')
const { Client, Network } = require('@helium/http')
const client = new Client(Network.production, {options: {retry: 20}})

const firstOracle = moment({ year: 2020, month: 5, day: 10 })
let warnedFirstOracle = false

const getPrice = require('./prices')

const addressTaxes = async (address, year, progress, warning) => {
  try {
    // See if this is hotspot address
    await client.hotspots.get(address)
    return await hotspotTaxes(address, year, progress, warning)
  } catch (e) {
    try {
      // See if this is validator address
      await client.validators.get(address)
      return await hotspotTaxes(address, year, progress, warning, undefined, true)
    } catch (e) {
      try {
        // See if this is account address
        const account = await client.accounts.get(address)
        const { hotspots } = await account.hotspots.fetchList()
        const { validators } = await account.validators.fetchList()

        const withLocation = hotspots.filter(({ lat }) => lat)
        if (hotspots.length !== withLocation.length) {
          warning('no-location', "At least one hotspot has no location and will be omitted from results")
        }
        const hotspotRows = await Promise.all(withLocation.map(({ address }) => hotspotTaxes(address, year, progress, warning)))
        const validatorRows = await Promise.all(validators.map(({ address }) => hotspotTaxes(address, year, progress, warning, undefined, true)))
        const rows = hotspotRows.flat()
        rows.push(...validatorRows.flat())
        return rows
      } catch (e) {
        if (e.response) {
          warning(`address-${e.response.status}`, "Couldn't find address, use (e.g. a1b2c3d4e5f6..) and not name (e.g. three-funny-words)")
        }
        throw (e)
      }
    }
  }
}

const hotspotTaxes = async (address, year, progress, warning, rows = [], isValidator) => {
  console.log("taxes", address, year)
  const hotspot = isValidator
      ? await client.validators.get(address)
      : await client.hotspots.get(address)

  if (!isValidator) {
    const { lat, lng } = hotspot
    const tzFetch = await fetch(`https://enz4qribbjb5c4.m.pipedream.net?lat=${lat}&lng=${lng}`)
    const tz = await tzFetch.text()
    moment.tz.setDefault(tz);
    console.log("tz", tz)
  }

  const minTime = year === "All" ? moment(0) : moment({ year })
  const maxTime = year === "All" ? moment() : moment({ year }).endOf('year')

  const getRow = async (data) => {
    const { account, amount: { floatBalance: hnt, type: { ticker } }, block, gateway: hotspot, hash, timestamp } = data
    if (ticker !== "HNT") throw "can't handle " + ticker

    const time = moment(timestamp)

    let row = {}
    try {
      const price = getPrice(block);
      const usd = hnt * price;
      row = { time: time.format(), usd, hnt, price, account, block, hotspot, hash }
    } catch (e) {
      if (e instanceof RangeError) {
        warning("no_oracle",`Some rows will not have a USD value because oracle price isn't cached`);
        row = { time: time.format(), usd: '', hnt, price: '', account, block, hotspot, hash }
      } else {
          console.log(e)
          throw e
      }
    }

    progress({ address, hnt: row.hnt, usd: row.usd === '' ? 0 : row.usd, isValidator })

    console.log(row)
    return row
  }

  const params = { minTime: minTime.toDate(), maxTime: maxTime.toDate() }
  const rewards = hotspot.rewards.list(params)
  let page = await rewards

  const getRandomInt = (min, max) => {
      min = Math.ceil(min);
      max = Math.floor(max);
      return Math.floor(Math.random() * (max - min + 1)) + min;
  }

  console.log("Start")
  const newRows = await Promise.all(page.data.map(getRow))
  rows.push(...newRows)

  console.log("more")
  let n = 0
  while (page.hasMore) {
    console.log("page " + n++)
    page = await page.nextPage()
    const newRows = await Promise.all(page.data.map(getRow))

    rows.push(...newRows)
  }

  return rows

}

module.exports = addressTaxes

},{"./prices":127,"@helium/http":21,"moment-timezone":108}]},{},[1]);
